bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  x  =  Integer.parseInt(prev);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  Integer.parseInt(prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  Integer.parseInt(prev);	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
2	[BUG]  [BUGGY]  Integer  x  =  Integer.valueOf(prev);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  Integer.valueOf(prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  Integer.valueOf(prev);	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
3	[BUG]  [BUGGY]  Integer  x  =  Integer.valueOf(getLastChar());  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  Integer.valueOf(getLastChar());  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  Integer.valueOf(getLastChar());	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
4	[BUG]  [BUGGY]  if(x  ==  prev)  {  If(x  ==  (int)x)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  If(x  ==  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  If(x  ==  (int)x)  {	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
5	[BUG]  [BUGGY]  Integer  x  =  Integer.toString(prev);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  Integer.toString(prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  Integer.toString(prev);	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
6	[BUG]  [BUGGY]  if(x  <  0)  {  If(x  ==  ';')  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  If(x  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  If(x  ==  ';')  {	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
7	[BUG]  [BUGGY]  If(x  ==  (int)x)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  If(x  ==  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	If(x  ==  (int)x)  {	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
8	[BUG]  [BUGGY]  Integer  x  =  Integer.parseInt(getLastChar());  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  Integer.parseInt(getLastChar());  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  Integer.parseInt(getLastChar());	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
9	[BUG]  [BUGGY]  Long  mantissa  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  Math.pow(10,  prev);	  Long    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	252	None	replace
10	[BUG]  [BUGGY]  Integer  mantissa  =  Math.pow(10,  x);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  mantissa  =  Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  mantissa  =  Math.pow(10,  x);	  Long    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	252	None	replace
11	[BUG]  [BUGGY]  Long  mantissa  =  Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  Math.pow(10,  x  +  1);	  Long    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	252	None	replace
12	[BUG]  [BUGGY]  String  mantissa  =  Math.pow(10,  x);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  mantissa  =  Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  mantissa  =  Math.pow(10,  x);	  Long    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	252	None	replace
13	[BUG]  [BUGGY]  LONG  mantissa  =  Math.pow(10,  x);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  LONG  mantissa  =  Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	LONG  mantissa  =  Math.pow(10,  x);	  Long    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	252	None	replace
14	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE)  {	  if(x    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
15	[BUG]  [BUGGY]  if(x  <=  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  if(x    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
16	[BUG]  [BUGGY]  if(x  >  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  if(x    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
17	[BUG]  [BUGGY]  if(x  >  Long.MIN_VALUE  ||  prev  <  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MIN_VALUE  ||  prev  <  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MIN_VALUE  ||  prev  <  Long.MAX_VALUE)  {	  if(x    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
18	[BUG]  [BUGGY]  if(x  >  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {	  if(x    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
19	[BUG]  [BUGGY]  if(prev  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
20	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
21	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
22	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
23	[BUG]  [BUGGY]  if(prev  ==  '-')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {	  if(x    ==    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	133	None	replace
24	[BUG]  [BUGGY]  if(x  >  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(x    >    prev)    {    	non-compiled	[CE]  ';'  expected	125	None	replace
25	[BUG]  [BUGGY]  if(x  >  prev  ||  isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev  ||  isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev  ||  isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(x    >    prev)    {    	non-compiled	[CE]  ';'  expected	125	None	replace
26	[BUG]  [BUGGY]  if(x  >  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {	  if(x    >    prev)    {    	non-compiled	[CE]  ';'  expected	125	None	replace
27	[BUG]  [BUGGY]  long  value  =  getFirstChar();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getFirstChar();	  int    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	341	None	replace
28	[BUG]  [BUGGY]  char  value  =  getFirstChar();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  getFirstChar();	  int    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	341	None	replace
29	[BUG]  [BUGGY]  int  value  =  getLowerCase();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLowerCase();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLowerCase();	  int    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	341	None	replace
30	[BUG]  [BUGGY]  int  value  =  getFirstChar()  -  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getFirstChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstChar()  -  1;	  int    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	341	None	replace
31	[BUG]  [BUGGY]  int  value  =  getEndChar();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getEndChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getEndChar();	  int    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	341	None	replace
32	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '+')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '+')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-'  ||  prev  ==  '+')  {	  if(x    ==    (int)x)    {    if(x!=    (int)x)    {    	non-compiled	[CE]  ';'  expected	255	None	replace
33	[BUG]  [BUGGY]  if(prev  ==  '.')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {	  if(x    ==    (int)x)    {    if(x!=    (int)x)    {    	non-compiled	[CE]  ';'  expected	255	None	replace
34	[BUG]  [BUGGY]  if(x  <  '0'  ||  x  >  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  '0'  ||  x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  '0'  ||  x  >  prev)  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
35	[BUG]  [BUGGY]  if(x  <=  '0'  ||  x  ==  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  '0'  ||  x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0'  ||  x  ==  prev)  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
36	[BUG]  [BUGGY]  if(x  <=  '0'  ||  x  >=  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  '0'  ||  x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0'  ||  x  >=  prev)  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
37	[BUG]  [BUGGY]  if(x  <=  '0'  ||  x  <  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  '0'  ||  x  <  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0'  ||  x  <  prev)  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
38	[BUG]  [BUGGY]  if(x  >=  '0'  ||  x  >  prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  '0'  ||  x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  '0'  ||  x  >  prev)  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
39	[BUG]  [BUGGY]  if(x  ==  '0'  ||  x  >  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  '0'  ||  x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  '0'  ||  x  >  prev)  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
40	[BUG]  [BUGGY]  if(x  <=  '0'  ||  x!=  prev)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  '0'  ||  x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0'  ||  x!=  prev)  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
41	[BUG]  [BUGGY]  if(x  <=  '0'  ||  prev  >  '9')  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  '0'  ||  prev  >  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0'  ||  prev  >  '9')  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
42	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  prev);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-');    	non-compiled	[CE]  ';'  expected	320	None	replace
43	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-');  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-');    	non-compiled	[CE]  ';'  expected	320	None	replace
44	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('-');  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('-');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('-');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-');    	non-compiled	[CE]  ';'  expected	320	None	replace
45	[BUG]  [BUGGY]  char  x  =  getLastChar().lastIndexOf('-');  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().lastIndexOf('-');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().lastIndexOf('-');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-');    	non-compiled	[CE]  ';'  expected	320	None	replace
46	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('-',  prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('-',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('-',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-');    	non-compiled	[CE]  ';'  expected	320	None	replace
47	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-')+  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-')+  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-')+  1;	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-');    	non-compiled	[CE]  ';'  expected	320	None	replace
48	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('-');  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('-');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('-');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-');    	non-compiled	[CE]  ';'  expected	320	None	replace
49	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('-');  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('-');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('-');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-');    	non-compiled	[CE]  ';'  expected	320	None	replace
50	[BUG]  [BUGGY]  double  x  =  getLastChar()  /  2;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  /  2;	  double    x    =    getLastChar()    *    2;    	non-compiled	[CE]  ';'  expected	172	None	replace
51	[BUG]  [BUGGY]  double  x  =  getLastChar()  *  2  +  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar()  *  2  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  *  2  +  1;	  double    x    =    getLastChar()    *    2;    	non-compiled	[CE]  ';'  expected	172	None	replace
52	[BUG]  [BUGGY]  double  x  =  getFirstChar()  *  2;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getFirstChar()  *  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getFirstChar()  *  2;	  double    x    =    getLastChar()    *    2;    	non-compiled	[CE]  ';'  expected	172	None	replace
53	[BUG]  [BUGGY]  double  x  =  getLastChar()  *  4;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar()  *  4;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  *  4;	  double    x    =    getLastChar()    *    2;    	non-compiled	[CE]  ';'  expected	172	None	replace
54	[BUG]  [BUGGY]  double  x  =  getLastChar()  +  2;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar()  +  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  +  2;	  double    x    =    getLastChar()    *    2;    	non-compiled	[CE]  ';'  expected	172	None	replace
55	[BUG]  [BUGGY]  if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  Double.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  Double.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  Double.NEGATIVE_INFINITY)  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
56	[BUG]  [BUGGY]  if(x  ==  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  Double.POSITIVE_INFINITY)  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
57	[BUG]  [BUGGY]  if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  Double.POSITIVE_INFINITY)  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
58	[BUG]  [BUGGY]  if(x  ==  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  x)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  x)  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
59	[BUG]  [BUGGY]  if(prev  ==  x  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  ||  prev  ==  Double.POSITIVE_INFINITY)  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
60	[BUG]  [BUGGY]  if(x  ==  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Preconditions.NEGATIVE_INFINITY)  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
61	[BUG]  [BUGGY]  if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  Long.MAX_VALUE)  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
62	[BUG]  [BUGGY]  if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  Long.MIN_VALUE)  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
63	[BUG]  [BUGGY]  String  value  =(String)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =(String)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =(String)Math.pow(10,  x);	  char    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	17	None	replace
64	[BUG]  [BUGGY]  Integer  value  =(Integer)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =(Integer)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =(Integer)Math.pow(10,  x);	  char    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	17	None	replace
65	[BUG]  [BUGGY]  Char  value  =(char)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Char  value  =(char)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Char  value  =(char)Math.pow(10,  x);	  char    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	17	None	replace
66	[BUG]  [BUGGY]  Character  value  =(Character)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  value  =(Character)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  value  =(Character)Math.pow(10,  x);	  char    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	17	None	replace
67	[BUG]  [BUGGY]  Character  value  =(char)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  value  =(char)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  value  =(char)Math.pow(10,  x);	  char    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	17	None	replace
68	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  ')')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  ')')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  ')')  {	  if(x!=    (long)x)    {    if(x    [Delete]    (long)x)    {    	non-compiled	[CE]  ';'  expected	270	None	replace
69	[BUG]  [BUGGY]  if(prev  ==  ')')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  ')')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  ')')  {	  if(x!=    (long)x)    {    if(x    [Delete]    (long)x)    {    	non-compiled	[CE]  ';'  expected	270	None	replace
70	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >=  ')')  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >=  ')')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >=  ')')  {	  if(x!=    (long)x)    {    if(x    [Delete]    (long)x)    {    	non-compiled	[CE]  ';'  expected	270	None	replace
71	[BUG]  [BUGGY]  x  =  getLastChar().doubleValue()  +  1;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().doubleValue()  +  1;	  x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	112	None	replace
72	[BUG]  [BUGGY]  x  =  getFirstChar().doubleValue();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar().doubleValue();	  x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	112	None	replace
73	[BUG]  [BUGGY]  this.x  =  getLastChar().doubleValue();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  this.x  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	this.x  =  getLastChar().doubleValue();	  x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	112	None	replace
74	[BUG]  [BUGGY]  float  mantissa  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  mantissa  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  mantissa  =  Math.pow(10,  prev);	  float    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	250	None	replace
75	[BUG]  [BUGGY]  String  prev  =  getLastChar();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  prev  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  ';'  expected	26	None	replace
76	[BUG]  [BUGGY]  Character  prev  =  getLastChar();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  prev  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  ';'  expected	26	None	replace
77	[BUG]  [BUGGY]  BigInteger  prev  =  getLastChar();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  BigInteger  prev  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigInteger  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  ';'  expected	26	None	replace
78	[BUG]  [BUGGY]  Integer  prev  =  getLastChar();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  prev  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  ';'  expected	26	None	replace
79	[BUG]  [BUGGY]  Boolean  prev  =  getLastChar();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Boolean  prev  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Boolean  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  ';'  expected	26	None	replace
80	[BUG]  [BUGGY]  Number  prev  =  getLastChar();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  prev  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  ';'  expected	26	None	replace
81	[BUG]  [BUGGY]  Char  prev  =  getLastChar();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Char  prev  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Char  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  ';'  expected	26	None	replace
82	[BUG]  [BUGGY]  String  prev  =  getLastCHAR();  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  prev  =  getLastCHAR();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  prev  =  getLastCHAR();	  char    prev    =    getLastChar();    	non-compiled	[CE]  ';'  expected	26	None	replace
83	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  prev  +  1);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(double)Math.pow(10,  prev  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  prev  +  1);	  int    value    =(int)Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	191	None	replace
84	[BUG]  [BUGGY]  char  value  =(char)Math.pow(10,  prev  +  1);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(char)Math.pow(10,  prev  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(char)Math.pow(10,  prev  +  1);	  int    value    =(int)Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	191	None	replace
85	[BUG]  [BUGGY]  long  value  =(long)Math.pow(10,  prev  +  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =(long)Math.pow(10,  prev  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(long)Math.pow(10,  prev  +  1);	  int    value    =(int)Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	191	None	replace
86	[BUG]  [BUGGY]  char  value  =(int)Math.pow(10,  prev  +  1);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(int)Math.pow(10,  prev  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(int)Math.pow(10,  prev  +  1);	  int    value    =(int)Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	191	None	replace
87	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  prev  /  10  +  1);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  prev  /  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  prev  /  10  +  1);	  int    value    =(int)Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	191	None	replace
88	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  prev  /  1);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  prev  /  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  prev  /  1);	  int    value    =(int)Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	191	None	replace
89	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  prev  *  1);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  prev  *  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  prev  *  1);	  int    value    =(int)Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	191	None	replace
90	[BUG]  [BUGGY]  x  =  getLastChar().substring(0,  prev).charAt(0);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().substring(0,  prev).charAt(0);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().substring(0,  prev).charAt(0);	  x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	313	None	replace
91	[BUG]  [BUGGY]  x  =  getFirstChar().charAt(0);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar().charAt(0);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar().charAt(0);	  x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	313	None	replace
92	[BUG]  [BUGGY]  x  =  getLastChar().substring(0,  prev.length()  -  1);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().substring(0,  prev.length()  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().substring(0,  prev.length()  -  1);	  x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	313	None	replace
93	[BUG]  [BUGGY]  x  =  getLastChar().substring(0,  prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().substring(0,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().substring(0,  prev);	  x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	313	None	replace
94	[BUG]  [BUGGY]  x  =  getLastChar().charAt(x  +  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().charAt(x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(x  +  1);	  x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	313	None	replace
95	[BUG]  [BUGGY]  x  =  getLastChar().substring(x.length()  -  1);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().substring(x.length()  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().substring(x.length()  -  1);	  x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	313	None	replace
96	[BUG]  [BUGGY]  x  =  getLastChar().charAt(prev);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().charAt(prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(prev);	  x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	313	None	replace
97	[BUG]  [BUGGY]  if(x  <=  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0  ||  prev  ==  '-')  {	  if(x    <=    0)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
98	[BUG]  [BUGGY]  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  0)  {	  if(x    <=    0)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
99	[BUG]  [BUGGY]  if(x  <=  0  ||  prev  >=  '-')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0  ||  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0  ||  prev  >=  '-')  {	  if(x    <=    0)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
100	[BUG]  [BUGGY]  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  0)  {	  if(x    <=    0)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
101	[BUG]  [BUGGY]  if(x  <=  0  ||  prev  ==  '.')  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0  ||  prev  ==  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0  ||  prev  ==  '.')  {	  if(x    <=    0)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
102	[BUG]  [BUGGY]  if(prev  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
103	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
104	[BUG]  [BUGGY]  if(x  >  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
105	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
106	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE  ||  prev  >=  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
107	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  -  10);	  int    mantissa    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	237	None	replace
108	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  prev  -  10);	  int    mantissa    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	237	None	replace
109	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  prev  -  10);	  int    mantissa    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	237	None	replace
110	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  /  10);  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  /  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  /  10);	  int    mantissa    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	237	None	replace
111	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  *  10);  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  *  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  *  10);	  int    mantissa    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	237	None	replace
112	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  prev  -  10);	  int    mantissa    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	237	None	replace
113	[BUG]  [BUGGY]  short  mantissa  =  Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  short  mantissa  =  Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	short  mantissa  =  Math.pow(10,  prev  -  10);	  int    mantissa    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	237	None	replace
114	[BUG]  [BUGGY]  long  value  =  Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  Math.pow(10,  prev  -  1);	  long    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	181	None	replace
115	[BUG]  [BUGGY]  long  value  =  Math.pow(10,  prev  +  1);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  Math.pow(10,  prev  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  Math.pow(10,  prev  +  1);	  long    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	181	None	replace
116	[BUG]  [BUGGY]  Integer  value  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  Math.pow(10,  prev);	  long    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	181	None	replace
117	[BUG]  [BUGGY]  long  value  =  Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  Math.pow(10,  prev  -  10);	  long    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	181	None	replace
118	[BUG]  [BUGGY]  byte  value  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  byte  value  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	byte  value  =  Math.pow(10,  prev);	  long    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	181	None	replace
119	[BUG]  [BUGGY]  String  mantissa  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  mantissa  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  mantissa  =  Math.pow(10,  prev);	  char    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	234	None	replace
120	[BUG]  [BUGGY]  Char  mantissa  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Char  mantissa  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Char  mantissa  =  Math.pow(10,  prev);	  char    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	234	None	replace
121	[BUG]  [BUGGY]  Integer  mantissa  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  mantissa  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  mantissa  =  Math.pow(10,  prev);	  char    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	234	None	replace
122	[BUG]  [BUGGY]  Character  mantissa  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  mantissa  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  mantissa  =  Math.pow(10,  prev);	  char    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	234	None	replace
123	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  prev);	  char    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	234	None	replace
124	[BUG]  [BUGGY]  Long  value  =  getLastLongValue();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  getLastLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  getLastLongValue();	  Long    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	276	None	replace
125	[BUG]  [BUGGY]  Long  value  =  getLastLongChar();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  getLastLongChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  getLastLongChar();	  Long    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	276	None	replace
126	[BUG]  [BUGGY]  Long  value  =  getLastChar().doubleValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  getLastChar().doubleValue();	  Long    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	276	None	replace
127	[BUG]  [BUGGY]  char  value  =  Math.pow(10,  prev).doubleValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  Math.pow(10,  prev).doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  Math.pow(10,  prev).doubleValue();	  int    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	185	None	replace
128	[BUG]  [BUGGY]  long  value  =  Math.pow(10,  prev).doubleValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  Math.pow(10,  prev).doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  Math.pow(10,  prev).doubleValue();	  int    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	185	None	replace
129	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev).doubleValue()  +  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev).doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev).doubleValue()  +  1;	  int    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	185	None	replace
130	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev).doubleValue()  /  10;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev).doubleValue()  /  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev).doubleValue()  /  10;	  int    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	185	None	replace
131	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev),  x.doubleValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev),  x.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev),  x.doubleValue();	  int    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	185	None	replace
132	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev).doubleValue()  -  1;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev).doubleValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev).doubleValue()  -  1;	  int    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	185	None	replace
133	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  x).doubleValue();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  x).doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  x).doubleValue();	  int    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	185	None	replace
134	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  'n')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  'n')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  'n')  {	  if(x    ==    (double)x)    {    if(x    {    (double)x)    {    	non-compiled	[CE]  ';'  expected	98	None	replace
135	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  ':')  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  ':')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  ':')  {	  if(x    ==    (double)x)    {    if(x    {    (double)x)    {    	non-compiled	[CE]  ';'  expected	98	None	replace
136	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '+')  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '+')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '+')  {	  if(x    ==    (double)x)    {    if(x    {    (double)x)    {    	non-compiled	[CE]  ';'  expected	98	None	replace
137	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'n')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'n')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n'  ||  prev  ==  'n')  {	  if(x    ==    (int)x)    {    if(x    >=    (int)x)    {    	non-compiled	[CE]  ';'  expected	254	None	replace
138	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  't')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  't')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n'  ||  prev  ==  't')  {	  if(x    ==    (int)x)    {    if(x    >=    (int)x)    {    	non-compiled	[CE]  ';'  expected	254	None	replace
139	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n'  ||  prev  ==  'r')  {	  if(x    ==    (int)x)    {    if(x    >=    (int)x)    {    	non-compiled	[CE]  ';'  expected	254	None	replace
140	[BUG]  [BUGGY]  if(x  <  (int)x)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (int)x)  {	  if(x    <    (double)x)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
141	[BUG]  [BUGGY]  if(x  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Double.POSITIVE_INFINITY)  {	  if(x    <    (double)x)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
142	[BUG]  [BUGGY]  if(exp  <  (double)x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(exp  <  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(exp  <  (double)x)  {	  if(x    <    (double)x)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
143	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
144	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('n');  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('n');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('n');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
145	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  1);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  1);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n',  1);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
146	[BUG]  [BUGGY]  char  x  =  getLastChar().lastIndexOf('n');  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().lastIndexOf('n');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().lastIndexOf('n');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
147	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('n',  prev);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('n',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('n',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
148	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('n');  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('n');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('n');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
149	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n');  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
150	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  10);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  10);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n',  10);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
151	[BUG]  [BUGGY]  int  x  =  getLastChar().length  -  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().length  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().length  -  1;	  int    x    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	264	None	replace
152	[BUG]  [BUGGY]  double  x  =  getLastChar().length;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().length;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().length;	  int    x    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	264	None	replace
153	[BUG]  [BUGGY]  char  x  =  getLastChar().length;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().length;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().length;	  int    x    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	264	None	replace
154	[BUG]  [BUGGY]  int  x  =  getFirstChar().length;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().length;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().length;	  int    x    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	264	None	replace
155	[BUG]  [BUGGY]  int  x  =  getLastChar().length  -  2;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().length  -  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().length  -  2;	  int    x    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	264	None	replace
156	[BUG]  [BUGGY]  long  x  =  getLastChar().length;  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().length;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().length;	  int    x    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	264	None	replace
157	[BUG]  [BUGGY]  int  x  =  getLastChar().length  +  1;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().length  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().length  +  1;	  int    x    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	264	None	replace
158	[BUG]  [BUGGY]  Integer  x  =  getLastChar().length;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().length;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().length;	  int    x    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	264	None	replace
159	[BUG]  [BUGGY]  if((  long)x  <=  prev)  {  if((  long)x  <=  prev)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  prev)  {  if((  long)x  <=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    <=    prev)    {    if((  long)x  <=  prev)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
160	[BUG]  [BUGGY]  if((  long)x  <=  prev)  {  If((  long)x  <=  prev)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  prev)  {  If((  long)x  <=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    <=    prev)    {    If((  long)x  <=  prev)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
161	[BUG]  [BUGGY]  if((  long)x  <=  prev)  {  if((  long)x  >=  =  prev)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  prev)  {  if((  long)x  >=  =  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    <=    prev)    {    if((  long)x  >=  =  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
162	[BUG]  [BUGGY]  if((  long)x  <=  prev)  {  if((  Long)x  <=  prev)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  prev)  {  if((  Long)x  <=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    <=    prev)    {    if((  Long)x  <=  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
163	[BUG]  [BUGGY]  if((  long)x  <=  prev)  {  if((  int)x  <=  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  prev)  {  if((  int)x  <=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    <=    prev)    {    if((  int)x  <=  prev)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
164	[BUG]  [BUGGY]  if((  long)x  <=  prev)  {  if((  short)x  <=  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  prev)  {  if((  short)x  <=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    <=    prev)    {    if((  short)x  <=  prev)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
165	[BUG]  [BUGGY]  if((  long)x  <=  prev)  {  if((  long)x  <=  Prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  prev)  {  if((  long)x  <=  Prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    <=    prev)    {    if((  long)x  <=  Prev)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
166	[BUG]  [BUGGY]  if((  long)x  <=  prev)  {  if((  long)x  <=  prev)  ==  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  prev)  {  if((  long)x  <=  prev)  ==  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    <=    prev)    {    if((  long)x  <=  prev)  ==	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
167	[BUG]  [BUGGY]  (int)x  =  getLastChar();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  (int)x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	(int)x  =  getLastChar();	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
168	[BUG]  [BUGGY]  (long)x  =  getLastChar();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  (long)x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	(long)x  =  getLastChar();	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
169	[BUG]  [BUGGY]  int  x  =  getLastChar();  (int)x  =  getLastChar();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  (int)x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  (int)x  =  getLastChar();	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
170	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  (long)x  =  getLastChar();  }	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
171	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
172	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  (long)x  =  getLastChar();  }	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
173	[BUG]  [BUGGY]  int  x  =  getLastChar();  (long)x  =  getLastChar();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  (long)x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  (long)x  =  getLastChar();	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
174	[BUG]  [BUGGY]  long  value  =  getLastChar().doubleValue()  +  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar().doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar().doubleValue()  +  1;	  long    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	196	None	replace
175	[BUG]  [BUGGY]  long  value  =  getLastChar(),  prev.doubleValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar(),  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar(),  prev.doubleValue();	  long    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	196	None	replace
176	[BUG]  [BUGGY]  long  value  =  getLastChar().doubleValue()  -  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar().doubleValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar().doubleValue()  -  1;	  long    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	196	None	replace
177	[BUG]  [BUGGY]  long  value  =  getFirstChar().doubleValue();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getFirstChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getFirstChar().doubleValue();	  long    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	196	None	replace
178	[BUG]  [BUGGY]  long  value  =  getLastChar().doubleValue()  /  10;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar().doubleValue()  /  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar().doubleValue()  /  10;	  long    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	196	None	replace
179	[BUG]  [BUGGY]  long  value  =  getLastChar().longValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar().longValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar().longValue();	  long    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	196	None	replace
180	[BUG]  [BUGGY]  long  value  =  getLastChar().doubleValue()  /  100.0;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar().doubleValue()  /  100.0;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar().doubleValue()  /  100.0;	  long    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	196	None	replace
181	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  ==  Long.MAX_VALUE))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  ==  Long.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  ==  Long.MAX_VALUE))  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	240	None	replace
182	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  ==  Integer.MIN_VALUE))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  ==  Integer.MIN_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  ==  Integer.MIN_VALUE))  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	240	None	replace
183	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  ==  Integer.MAX_VALUE))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  ==  Integer.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  ==  Integer.MAX_VALUE))  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	240	None	replace
184	[BUG]  [BUGGY]  If(x  ==  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  If(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	If(x  ==  prev)  {	  if(x    ==    prev)    {    If(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
185	[BUG]  [BUGGY]  Iterator  <  String>  it  =  prev.iterator();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Iterator  <  String>  it  =  prev.iterator();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Iterator  <  String>  it  =  prev.iterator();	  if(x    ==    prev)    {    If(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
186	[BUG]  [BUGGY]  Integer  x  =  prev.doubleValue();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  prev.doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  prev.doubleValue();	  if(x    ==    prev)    {    If(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
187	[BUG]  [BUGGY]  Iterator  <  String>  it  =  prev.iterator().next();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Iterator  <  String>  it  =  prev.iterator().next();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Iterator  <  String>  it  =  prev.iterator().next();	  if(x    ==    prev)    {    If(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
188	[BUG]  [BUGGY]  Integer  x  =  getFirstChild().doubleValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getFirstChild().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getFirstChild().doubleValue();	  if(x    ==    prev)    {    If(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
189	[BUG]  [BUGGY]  Integer  x  =  getFirstChar();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getFirstChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getFirstChar();	  if(x    ==    prev)    {    If(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
190	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  ||  prev  ==  '-')  {	  if(x    ==    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	359	None	replace
191	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  ||  prev  ==  '-')  {	  if(x    ==    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	359	None	replace
192	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  ||  prev  ==  '-')  {	  if(x    ==    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	359	None	replace
193	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  &&  prev  ==  '-')  {	  if(x    ==    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	359	None	replace
194	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  ||  prev  ==  '-')  {	  if(x    ==    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	359	None	replace
195	[BUG]  [BUGGY]  if(x  >  Long.MIN_VALUE  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MIN_VALUE  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MIN_VALUE  &&  prev  ==  '-')  {	  if(x    ==    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	359	None	replace
196	[BUG]  [BUGGY]  if(prev  ==  Long.MIN_VALUE  &&  x  ==  '-')  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  Long.MIN_VALUE  &&  x  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  Long.MIN_VALUE  &&  x  ==  '-')  {	  if(x    ==    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	359	None	replace
197	[BUG]  [BUGGY]  if(prev  >=  x)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  x)  {	  if(x    ==    prev)    {    if(x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
198	[BUG]  [BUGGY]  if(prev!=  x)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  x)  {	  if(x    ==    prev)    {    if(x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
199	[BUG]  [BUGGY]  double  mantissa  =  getMeanOp().doubleValue();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getMeanOp().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getMeanOp().doubleValue();	  int    mantissa    =    getMeanOp().doubleValue();    	non-compiled	[CE]  ';'  expected	79	None	replace
200	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp(),  prev.doubleValue();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp(),  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp(),  prev.doubleValue();	  int    mantissa    =    getMeanOp().doubleValue();    	non-compiled	[CE]  ';'  expected	79	None	replace
201	[BUG]  [BUGGY]  long  mantissa  =  getMeanOp().doubleValue();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getMeanOp().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getMeanOp().doubleValue();	  int    mantissa    =    getMeanOp().doubleValue();    	non-compiled	[CE]  ';'  expected	79	None	replace
202	[BUG]  [BUGGY]  char  mantissa  =  getMeanOp().doubleValue();  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  getMeanOp().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  getMeanOp().doubleValue();	  int    mantissa    =    getMeanOp().doubleValue();    	non-compiled	[CE]  ';'  expected	79	None	replace
203	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp().doubleValue()  +  1;  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp().doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp().doubleValue()  +  1;	  int    mantissa    =    getMeanOp().doubleValue();    	non-compiled	[CE]  ';'  expected	79	None	replace
204	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp().doubleValue()  -  1;  [CE]  ';'  expected  [FE]                                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp().doubleValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp().doubleValue()  -  1;	  int    mantissa    =    getMeanOp().doubleValue();    	non-compiled	[CE]  ';'  expected	79	None	replace
205	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp()  /.doubleValue();  [CE]  illegal  start  of  expression  [FE]                                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp()  /.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp()  /.doubleValue();	  int    mantissa    =    getMeanOp().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
206	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp().doubleValue()  /  2;  [CE]  ';'  expected  [FE]                                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp().doubleValue()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp().doubleValue()  /  2;	  int    mantissa    =    getMeanOp().doubleValue();    	non-compiled	[CE]  ';'  expected	79	None	replace
207	[BUG]  [BUGGY]  if(prev  >=  ')')  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  ')')  {  [BUGGY]    prev)  {  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  ')')  {	  if(x    ==    prev)    {    if(x    	non-compiled	[CE]  ';'  expected	55	None	replace
208	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  -  2);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  -  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  -  2);	  double    value    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	66	None	replace
209	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  *  1);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  *  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  *  1);	  double    value    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	66	None	replace
210	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  -  1  +  1);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  -  1  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  -  1  +  1);	  double    value    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	66	None	replace
211	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  /  1);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  /  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  /  1);	  double    value    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	66	None	replace
212	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  *  10);  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  *  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  *  10);	  double    value    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	66	None	replace
213	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  -  3);  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  -  3);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  -  3);	  double    value    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	66	None	replace
214	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  -  1);	  int    mantissa    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	155	None	replace
215	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  prev  -  1);	  int    mantissa    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	155	None	replace
216	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  prev  -  1);	  int    mantissa    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	155	None	replace
217	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  -  2);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  -  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  -  2);	  int    mantissa    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	155	None	replace
218	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  prev  -  1);	  int    mantissa    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	155	None	replace
219	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  *  1);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  *  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  *  1);	  int    mantissa    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	155	None	replace
220	[BUG]  [BUGGY]  if(x  >=  prev)  {  If(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  If(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  If(x  ==  (long)x)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
221	[BUG]  [BUGGY]  if(x!=  prev)  {  If(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev)  {  If(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev)  {  If(x  ==  (long)x)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
222	[BUG]  [BUGGY]  if(x  >=  prev)  {  If(x!=  (long)x)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  If(x!=  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  If(x!=  (long)x)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
223	[BUG]  [BUGGY]  if(x  ==  prev)  {  If(x!=  (long)x)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  If(x!=  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  If(x!=  (long)x)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
224	[BUG]  [BUGGY]  if(x  >=  0)  {  If(x  ==  ';')  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  0)  {  If(x  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  0)  {  If(x  ==  ';')  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
225	[BUG]  [BUGGY]  if(x  >=  0)  {  If(x  ==  0)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  0)  {  If(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  0)  {  If(x  ==  0)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
226	[BUG]  [BUGGY]  String  value  =  prev  ==  null?  getLastChar().toCharArray()  :  x;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =  prev  ==  null?  getLastChar().toCharArray()  :  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  prev  ==  null?  getLastChar().toCharArray()  :  x;	  char    value    =    prev    ==    null?    getLastChar().toCharArray()    :    x;    	non-compiled	[CE]  ';'  expected	367	None	replace
227	[BUG]  [BUGGY]  char  value  =  prev  ==  null?  getLastChar().getLength()  :  x;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  prev  ==  null?  getLastChar().getLength()  :  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev  ==  null?  getLastChar().getLength()  :  x;	  char    value    =    prev    ==    null?    getLastChar().toCharArray()    :    x;    	non-compiled	[CE]  ';'  expected	367	None	replace
228	[BUG]  [BUGGY]  Char  value  =  prev  ==  null?  getLastChar().toCharArray()  :  x;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Char  value  =  prev  ==  null?  getLastChar().toCharArray()  :  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Char  value  =  prev  ==  null?  getLastChar().toCharArray()  :  x;	  char    value    =    prev    ==    null?    getLastChar().toCharArray()    :    x;    	non-compiled	[CE]  ';'  expected	367	None	replace
229	[BUG]  [BUGGY]  if(x  <=  Long.MIN_VALUE  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MIN_VALUE  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MIN_VALUE  &&  prev  ==  '-')  {	  if(x    >=    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	280	None	replace
230	[BUG]  [BUGGY]  n  =  getLastChar();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  n  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	n  =  getLastChar();	          x    =    getLastChar();    Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	87	None	replace
231	[BUG]  [BUGGY]  Number  x  =  getLastChar();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  x  =  getLastChar();	          x    =    getLastChar();    Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	87	None	replace
232	[BUG]  [BUGGY]  Double  x  =  getLastChar();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  x  =  getLastChar();	          x    =    getLastChar();    Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	87	None	replace
233	[BUG]  [BUGGY]  if(x  >=  prev)  {  If(x  >=  (long)x)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  If(x  >=  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  If(x  >=  (long)x)  {	  if(x    >=    (long)x)    {    If(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	148	None	replace
234	[BUG]  [BUGGY]  if(x  >=  0)  {  If(x  >=  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  0)  {  If(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  0)  {  If(x  >=  0)  {	  if(x    >=    (long)x)    {    If(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	148	None	replace
235	[BUG]  [BUGGY]  if(x  <  0)  {  If(x  >=  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  If(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  If(x  >=  0)  {	  if(x    >=    (long)x)    {    If(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	148	None	replace
236	[BUG]  [BUGGY]  if(x  >=  0)  {  If(x  >=  ';')  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  0)  {  If(x  >=  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  0)  {  If(x  >=  ';')  {	  if(x    >=    (long)x)    {    If(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	148	None	replace
237	[BUG]  [BUGGY]  if(x  >  0)  {  If(x  >=  0)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  If(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  If(x  >=  0)  {	  if(x    >=    (long)x)    {    If(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	148	None	replace
238	[BUG]  [BUGGY]  if((  double)x  >  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  double)x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  double)x  >  prev)  {	  if((    double)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	360	None	replace
239	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.MAX_VALUE))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.MAX_VALUE))  {	  if((    double)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	360	None	replace
240	[BUG]  [BUGGY]  if((  double)x  <=  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  double)x  <=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  double)x  <=  prev)  {	  if((    double)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	360	None	replace
241	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  >=  Double.POSITIVE_INFINITY))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  >=  Double.POSITIVE_INFINITY))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  >=  Double.POSITIVE_INFINITY))  {	  if((    double)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	360	None	replace
242	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.MIN_VALUE))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.MIN_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.MIN_VALUE))  {	  if((    double)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	360	None	replace
243	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.MAX_VALUE))  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.MAX_VALUE))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
244	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.MIN_VALUE))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.MIN_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.MIN_VALUE))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
245	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  <  0  &&  prev  ==  '-'))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  <  0  &&  prev  ==  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  <  0  &&  prev  ==  '-'))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
246	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  >=  Double.MIN_VALUE  &&  prev!=  '-'))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  >=  Double.MIN_VALUE  &&  prev!=  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  >=  Double.MIN_VALUE  &&  prev!=  '-'))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
247	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
248	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  <  0  &&  prev!=  '-'))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  <  0  &&  prev!=  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  <  0  &&  prev!=  '-'))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
249	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
250	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
251	[BUG]  [BUGGY]  long  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
252	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
253	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  >=  prev)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  >=  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
254	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0  ||  prev  ==  '-')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
255	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  Long.MIN_VALUE)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
256	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0  ||  prev  ==  '-')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
257	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
258	[BUG]  [BUGGY]  If(x  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  If(x  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	If(x  ==  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    If(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	61	None	replace
259	[BUG]  [BUGGY]  Integer  x  =  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  Integer.MAX_VALUE;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  Integer.MAX_VALUE;	  if(x    ==    Long.MIN_VALUE)    {    If(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	61	None	replace
260	[BUG]  [BUGGY]  Integer  x  =  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  Integer.MIN_VALUE;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  Integer.MIN_VALUE;	  if(x    ==    Long.MIN_VALUE)    {    If(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	61	None	replace
261	[BUG]  [BUGGY]  Integer  x  =  Integer.toHexString(prev);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  Integer.toHexString(prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  Integer.toHexString(prev);	  if(x    ==    Long.MIN_VALUE)    {    If(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	61	None	replace
262	[BUG]  [BUGGY]  Integer  x  =  Long.MIN_VALUE;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  Long.MIN_VALUE;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  Long.MIN_VALUE;	  if(x    ==    Long.MIN_VALUE)    {    If(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	61	None	replace
263	[BUG]  [BUGGY]  if((  int)x  <=  prev)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  <=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  int)x  <=  prev)  {	  if((    long)x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
264	[BUG]  [BUGGY]  if((  long)x  <=  x)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  <=  x)  {	  if((    long)x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
265	[BUG]  [BUGGY]  if((  long)x  <=  127)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  127)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  <=  127)  {	  if((    long)x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
266	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue();  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
267	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  <  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue();  if(x  <  0  ||  prev  ==  '-')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
268	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  <  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue();  if(x  <  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
269	[BUG]  [BUGGY]  long  x  =  getLastChar().computeLongValue();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().computeLongValue();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().computeLongValue();  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
270	[BUG]  [BUGGY]  double  x  =  getLastChar().computeLongValue();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().computeLongValue();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().computeLongValue();  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
271	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  >=  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue();  if(x  >=  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
272	[BUG]  [BUGGY]  double  x  =  getLastChar().computeLongValue();  if(x  <  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().computeLongValue();  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().computeLongValue();  if(x  <  0  ||  prev  ==  '-')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
273	[BUG]  [BUGGY]  long  x  =  getLastChar().computeLongValue();  if(x  <  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().computeLongValue();  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().computeLongValue();  if(x  <  0  ||  prev  ==  '-')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
274	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x!=  prev)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue();  if(x!=  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
275	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  Double.POSITIVE_INFINITY)  {	  if(x    <    0    ||    prev    >    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	331	None	replace
276	[BUG]  [BUGGY]  if(prev  <  0  ||  prev  >  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0  ||  prev  >  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0  ||  prev  >  Double.POSITIVE_INFINITY)  {	  if(x    <    0    ||    prev    >    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	331	None	replace
277	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >=  Double.POSITIVE_INFINITY)  {	  if(x    <    0    ||    prev    >    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	331	None	replace
278	[BUG]  [BUGGY]  if(x  <  0  ||  prev!=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev!=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev!=  Double.POSITIVE_INFINITY)  {	  if(x    <    0    ||    prev    >    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	331	None	replace
279	[BUG]  [BUGGY]  if(x  >  Double.POSITIVE_INFINITY  ||  prev  >  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Double.POSITIVE_INFINITY  ||  prev  >  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Double.POSITIVE_INFINITY  ||  prev  >  Double.POSITIVE_INFINITY)  {	  if(x    <    0    ||    prev    >    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	331	None	replace
280	[BUG]  [BUGGY]  if(x  <=  0  ||  prev  >  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0  ||  prev  >  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0  ||  prev  >  Double.POSITIVE_INFINITY)  {	  if(x    <    0    ||    prev    >    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	331	None	replace
281	[BUG]  [BUGGY]  if(value  <  0  ||  prev  >  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(value  <  0  ||  prev  >  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(value  <  0  ||  prev  >  Double.POSITIVE_INFINITY)  {	  if(x    <    0    ||    prev    >    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	331	None	replace
282	[BUG]  [BUGGY]  if(exp  <  0  ||  prev  >  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(exp  <  0  ||  prev  >  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(exp  <  0  ||  prev  >  Double.POSITIVE_INFINITY)  {	  if(x    <    0    ||    prev    >    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	331	None	replace
283	[BUG]  [BUGGY]  double  value  =  getLastChar()  &  0xff;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  &  0xff;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  &  0xff;	  int    value    =    getLastChar()    &    0xff;    	non-compiled	[CE]  ';'  expected	25	None	replace
284	[BUG]  [BUGGY]  long  value  =  getLastChar()  &  0xff;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar()  &  0xff;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar()  &  0xff;	  int    value    =    getLastChar()    &    0xff;    	non-compiled	[CE]  ';'  expected	25	None	replace
285	[BUG]  [BUGGY]  char  value  =  getLastChar()  &  0xff;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  getLastChar()  &  0xff;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  getLastChar()  &  0xff;	  int    value    =    getLastChar()    &    0xff;    	non-compiled	[CE]  ';'  expected	25	None	replace
286	[BUG]  [BUGGY]  int  value  =  getLastChar()  /  0xff;  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar()  /  0xff;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  /  0xff;	  int    value    =    getLastChar()    &    0xff;    	non-compiled	[CE]  ';'  expected	25	None	replace
287	[BUG]  [BUGGY]  int  value  =  getLastChar()  -  0xff;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar()  -  0xff;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  -  0xff;	  int    value    =    getLastChar()    &    0xff;    	non-compiled	[CE]  ';'  expected	25	None	replace
288	[BUG]  [BUGGY]  int  value  =  getLastChar()  *  0xff;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar()  *  0xff;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  *  0xff;	  int    value    =    getLastChar()    &    0xff;    	non-compiled	[CE]  ';'  expected	25	None	replace
289	[BUG]  [BUGGY]  int  value  =  getLastChar()  +  0xff;  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar()  +  0xff;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  +  0xff;	  int    value    =    getLastChar()    &    0xff;    	non-compiled	[CE]  ';'  expected	25	None	replace
290	[BUG]  [BUGGY]  if(x  <  Preconditions.INCRDECR_VALUE  ||  prev  >  Preconditions.INCRDECR_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Preconditions.INCRDECR_VALUE  ||  prev  >  Preconditions.INCRDECR_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Preconditions.INCRDECR_VALUE  ||  prev  >  Preconditions.INCRDECR_VALUE)  {	  if(x    <=    Preconditions.INCRDECR_VALUE)    {    	non-compiled	[CE]  ';'  expected	371	None	replace
291	[BUG]  [BUGGY]  if(x  ==  Preconditions.INCRDECR_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Preconditions.INCRDECR_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Preconditions.INCRDECR_VALUE)  {	  if(x    <=    Preconditions.INCRDECR_VALUE)    {    	non-compiled	[CE]  ';'  expected	371	None	replace
292	[BUG]  [BUGGY]  if(x  >=  Preconditions.INCRDECR_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Preconditions.INCRDECR_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Preconditions.INCRDECR_VALUE)  {	  if(x    <=    Preconditions.INCRDECR_VALUE)    {    	non-compiled	[CE]  ';'  expected	371	None	replace
293	[BUG]  [BUGGY]  if(x!=  Preconditions.INCRDECR_VALUE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Preconditions.INCRDECR_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Preconditions.INCRDECR_VALUE)  {	  if(x    <=    Preconditions.INCRDECR_VALUE)    {    	non-compiled	[CE]  ';'  expected	371	None	replace
294	[BUG]  [BUGGY]  if(x  <  Preconditions.INCRDECR_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Preconditions.INCRDECR_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Preconditions.INCRDECR_VALUE)  {	  if(x    <=    Preconditions.INCRDECR_VALUE)    {    	non-compiled	[CE]  ';'  expected	371	None	replace
295	[BUG]  [BUGGY]  if(x  <  Preconditions.INCRDECR_VALUE  ||  prev  >=  Preconditions.INCRDECR_VALUE)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Preconditions.INCRDECR_VALUE  ||  prev  >=  Preconditions.INCRDECR_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Preconditions.INCRDECR_VALUE  ||  prev  >=  Preconditions.INCRDECR_VALUE)  {	  if(x    <=    Preconditions.INCRDECR_VALUE)    {    	non-compiled	[CE]  ';'  expected	371	None	replace
296	[BUG]  [BUGGY]  if(x  <=  Preconditions.INCRDECR_VALUE  ||  prev  >  Preconditions.INCRDECR_VALUE)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.INCRDECR_VALUE  ||  prev  >  Preconditions.INCRDECR_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.INCRDECR_VALUE  ||  prev  >  Preconditions.INCRDECR_VALUE)  {	  if(x    <=    Preconditions.INCRDECR_VALUE)    {    	non-compiled	[CE]  ';'  expected	371	None	replace
297	[BUG]  [BUGGY]  if(x  <  Preconditions.INCRDECR_VALUE  ||  prev  >  Preconditions.INCRDECR_NUMBER)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Preconditions.INCRDECR_VALUE  ||  prev  >  Preconditions.INCRDECR_NUMBER)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Preconditions.INCRDECR_VALUE  ||  prev  >  Preconditions.INCRDECR_NUMBER)  {	  if(x    <=    Preconditions.INCRDECR_VALUE)    {    	non-compiled	[CE]  ';'  expected	371	None	replace
298	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  double  x  =  getLastChar();  }	          x    =    getLastChar();    Double    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	308	None	replace
299	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }	          x    =    getLastChar();    Double    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	308	None	replace
300	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  double  x  =  getLastChar();  }	          x    =    getLastChar();    Double    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	308	None	replace
301	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    Double    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	308	None	replace
302	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }	          x    =    getLastChar();    Double    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	308	None	replace
303	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    Double    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	308	None	replace
304	[BUG]  [BUGGY]  double  value  =  getLastChar()  /  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  /  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  /  1;	  double    value    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	129	None	replace
305	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  >=  Long.MAX_VALUE))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  >=  Long.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  >=  Long.MAX_VALUE))  {	  if((    long)x!=    prev)    {    if((    long)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	210	None	replace
306	[BUG]  [BUGGY]  if((  x  >=  prev)||(x!=  Long.MAX_VALUE))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x!=  Long.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x!=  Long.MAX_VALUE))  {	  if((    long)x!=    prev)    {    if((    long)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	210	None	replace
307	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
308	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
309	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
310	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >>  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >>  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  >>  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
311	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x!=  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x!=  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x!=  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
312	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  [Delete]  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  [Delete]  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  [Delete]  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ')'  expected	36	None	add
313	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  If(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  If(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    If(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
314	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  [BUGGY]  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  [BUGGY]  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  [BUGGY]  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ')'  expected	36	None	add
315	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  /  10  +  1);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  /  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  /  10  +  1);	  double    value    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	65	None	replace
316	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  +  1  -  10);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  +  1  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  +  1  -  10);	  double    value    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	65	None	replace
317	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  +  3);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  +  3);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  +  3);	  double    value    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	65	None	replace
318	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  +  1  -  x);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  +  1  -  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  +  1  -  x);	  double    value    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	65	None	replace
319	[BUG]  [BUGGY]  if(x  ==  prev)  {  If(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  If(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  If(x  ==  (double)x)  {	  if(x    ==    (double)x)    {    If(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
320	[BUG]  [BUGGY]  if(x  >=  prev)  {  If(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  If(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  If(x  ==  (double)x)  {	  if(x    ==    (double)x)    {    If(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
321	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  If(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  If(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '-')  {  If(x  ==  (double)x)  {	  if(x    ==    (double)x)    {    If(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
322	[BUG]  [BUGGY]  if(x  <  0)  {  If(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  If(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  If(x  ==  (double)x)  {	  if(x    ==    (double)x)    {    If(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
323	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '.')  {  If(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '.')  {  If(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '.')  {  If(x  ==  (double)x)  {	  if(x    ==    (double)x)    {    If(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
324	[BUG]  [BUGGY]  If(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  If(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	If(x  ==  (double)x)  {	  if(x    ==    (double)x)    {    If(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
325	[BUG]  [BUGGY]  double  x  =  getLastChar();  x  =  getFirstChar();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar();  x  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar();  x  =  getFirstChar();	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
326	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
327	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
328	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
329	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getFirstChar();  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getFirstChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getFirstChar();  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
330	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
331	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
332	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(double)Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  prev  -  10);	  int    value    =(int)Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	194	None	replace
333	[BUG]  [BUGGY]  long  value  =(long)Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =(long)Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(long)Math.pow(10,  prev  -  10);	  int    value    =(int)Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	194	None	replace
334	[BUG]  [BUGGY]  char  value  =(char)Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(char)Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(char)Math.pow(10,  prev  -  10);	  int    value    =(int)Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	194	None	replace
335	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  prev  *  10);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  prev  *  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  prev  *  10);	  int    value    =(int)Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	194	None	replace
336	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  prev  /  10);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  prev  /  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  prev  /  10);	  int    value    =(int)Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	194	None	replace
337	[BUG]  [BUGGY]  char  value  =(int)Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(int)Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(int)Math.pow(10,  prev  -  10);	  int    value    =(int)Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	194	None	replace
338	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  prev  -  10  +  1);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  prev  -  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  prev  -  10  +  1);	  int    value    =(int)Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	194	None	replace
339	[BUG]  [BUGGY]  if(prev  ==  '-')  {  if(x  >=  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  if(x  >=  0)  {	  if(x    ==    (double)x)    {    if(x    >=    (double)x)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
340	[BUG]  [BUGGY]  Integer  value  =  getFirstEmptyChar();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstEmptyChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstEmptyChar();	  Integer    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	229	None	replace
341	[BUG]  [BUGGY]  Integer  value  =  getFirstChar()  -  1;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChar()  -  1;	  Integer    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	229	None	replace
342	[BUG]  [BUGGY]  Integer  value  =  getPreviousChar();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getPreviousChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getPreviousChar();	  Integer    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	229	None	replace
343	[BUG]  [BUGGY]  Integer  value  =  getLongValue();  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLongValue();	  Integer    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	229	None	replace
344	[BUG]  [BUGGY]  Integer  value  =  getEndChar();  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getEndChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getEndChar();	  Integer    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	229	None	replace
345	[BUG]  [BUGGY]  Integer  value  =  getFirstChild();  [CE]  ';'  expected  [FE]                                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstChild();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChild();	  Integer    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	229	None	replace
346	[BUG]  [BUGGY]  Integer  value  =  getNumber();  [CE]  ';'  expected  [FE]                                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getNumber();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getNumber();	  Integer    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	229	None	replace
347	[BUG]  [BUGGY]  if(x  >  prev)  {  if  ((  long)x  >=  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev)  {  if  ((  long)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev)  {  if  ((  long)x  >=  prev)  {	  if    ((    long)x    >=    prev)    {    if    ((    long)x    [PATCH]    prev)    {    	non-compiled	[CE]  ';'  expected	364	None	replace
348	[BUG]  [BUGGY]  if(x  >  prev)  {  if  ((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev)  {  if  ((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev)  {  if  ((  long)x  ==  prev)  {	  if    ((    long)x    >=    prev)    {    if    ((    long)x    [PATCH]    prev)    {    	non-compiled	[CE]  ';'  expected	364	None	replace
349	[BUG]  [BUGGY]  if(x  <=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    if(x    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	335	None	replace
350	[BUG]  [BUGGY]  if(x  <=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    if(x    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	335	None	replace
351	[BUG]  [BUGGY]  if(x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    if(x    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	335	None	replace
352	[BUG]  [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  int  x  =  getLastChar();  }	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	329	None	replace
353	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (long)x)  {  int  x  =  getLastChar();  }	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	329	None	replace
354	[BUG]  [BUGGY]  if(x  ==  (int)x)  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  (int)x)  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (int)x)  {  int  x  =  getLastChar();  }	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	329	None	replace
355	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '-')  {  int  x  =  getLastChar();  }	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	329	None	replace
356	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  ';')  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  ';')  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  ';')  {  int  x  =  getLastChar();  }	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	329	None	replace
357	[BUG]  [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
358	[BUG]  [BUGGY]  if(x  ==  (double)value)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  (double)value)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (double)value)  {	  if(value    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
359	[BUG]  [BUGGY]  if(value  ==  (long)x)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(value  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(value  ==  (long)x)  {	  if(value    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
360	[BUG]  [BUGGY]  if(exp  ==  (double)x)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(exp  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(exp  ==  (double)x)  {	  if(value    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
361	[BUG]  [BUGGY]  if(value  <=  (double)x)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(value  <=  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(value  <=  (double)x)  {	  if(value    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
362	[BUG]  [BUGGY]  if(x!=  (double)value)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  (double)value)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  (double)value)  {	  if(value    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
363	[BUG]  [BUGGY]  if(value!=  (double)x)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(value!=  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(value!=  (double)x)  {	  if(value    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
364	[BUG]  [BUGGY]  if(value  >=  (double)x)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(value  >=  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(value  >=  (double)x)  {	  if(value    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
365	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  *  10);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  *  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  *  10);	  double    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	232	None	replace
366	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  /  10);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  /  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  /  10);	  double    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	232	None	replace
367	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev)-  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev)-  1;	  double    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	232	None	replace
368	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev)/  10;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev)/  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev)/  10;	  double    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	232	None	replace
369	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  2);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  +  2);	  double    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	232	None	replace
370	[BUG]  [BUGGY]  if(x  ==  Prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Prev)  {	  if(x    ==    prev)    {    if(x    ==    Prev)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
371	[BUG]  [BUGGY]  if(x  <=  Prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Prev)  {	  if(x    ==    prev)    {    if(x    ==    Prev)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
372	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  /  1);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  /  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  /  1);	  int    mantissa    =    Math.pow(10,    prev    /    1);    	non-compiled	[CE]  ';'  expected	153	None	replace
373	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  prev  /  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  prev  /  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  prev  /  1);	  int    mantissa    =    Math.pow(10,    prev    /    1);    	non-compiled	[CE]  ';'  expected	153	None	replace
374	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  prev  /  1);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  Math.pow(10,  prev  /  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  prev  /  1);	  int    mantissa    =    Math.pow(10,    prev    /    1);    	non-compiled	[CE]  ';'  expected	153	None	replace
375	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  /  2);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  /  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  /  2);	  int    mantissa    =    Math.pow(10,    prev    /    1);    	non-compiled	[CE]  ';'  expected	153	None	replace
376	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  /  1);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  /  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  prev  /  1);	  int    mantissa    =    Math.pow(10,    prev    /    1);    	non-compiled	[CE]  ';'  expected	153	None	replace
377	[BUG]  [BUGGY]  short  mantissa  =  Math.pow(10,  prev  /  1);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  short  mantissa  =  Math.pow(10,  prev  /  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	short  mantissa  =  Math.pow(10,  prev  /  1);	  int    mantissa    =    Math.pow(10,    prev    /    1);    	non-compiled	[CE]  ';'  expected	153	None	replace
378	[BUG]  [BUGGY]  x  =  getLastCHAR();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastCHAR();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastCHAR();	  x    =    getLastChar()    +    2;    	non-compiled	[CE]  ';'  expected	314	None	replace
379	[BUG]  [BUGGY]  x  =  getLastChar().getBooleanValue();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().getBooleanValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().getBooleanValue();	  x    =    getLastChar()    +    2;    	non-compiled	[CE]  ';'  expected	314	None	replace
380	[BUG]  [BUGGY]  if(x  >=  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  0  ||  prev  ==  '-')  {	  if(x    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	101	None	replace
381	[BUG]  [BUGGY]  if(prev  <  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0  ||  prev  ==  '-')  {	  if(x    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	101	None	replace
382	[BUG]  [BUGGY]  if(x  >  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  ||  prev  ==  '-')  {	  if(x    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	101	None	replace
383	[BUG]  [BUGGY]  if(x  ==  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  0  ||  prev  ==  '-')  {	  if(x    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	101	None	replace
384	[BUG]  [BUGGY]  if(prev  <  0  ||  x  ==  '-')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0  ||  x  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0  ||  x  ==  '-')  {	  if(x    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	101	None	replace
385	[BUG]  [BUGGY]  if(x  <  10  ||  prev  >=  '-')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  10  ||  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  10  ||  prev  >=  '-')  {	  if(x    <=    10    &&    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	350	None	replace
386	[BUG]  [BUGGY]  if(x  <=  10  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  prev  ==  '-')  {	  if(x    <=    10    &&    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	350	None	replace
387	[BUG]  [BUGGY]  if(x  <=  10  &&  prev!=  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  prev!=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  prev!=  '-')  {	  if(x    <=    10    &&    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	350	None	replace
388	[BUG]  [BUGGY]  if(x  <=  10  ||  prev  >=  '-')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  ||  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  ||  prev  >=  '-')  {	  if(x    <=    10    &&    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	350	None	replace
389	[BUG]  [BUGGY]  if(x  >=  10  &&  prev  >=  '-')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  10  &&  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  10  &&  prev  >=  '-')  {	  if(x    <=    10    &&    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	350	None	replace
390	[BUG]  [BUGGY]  if(x  ==  10  &&  prev  >=  '-')  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  10  &&  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  10  &&  prev  >=  '-')  {	  if(x    <=    10    &&    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	350	None	replace
391	[BUG]  [BUGGY]  if(x  <=  1  &&  prev  >=  '-')  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  1  &&  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  1  &&  prev  >=  '-')  {	  if(x    <=    10    &&    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	350	None	replace
392	[BUG]  [BUGGY]  if(x  <  10  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  10  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  10  &&  prev  ==  '-')  {	  if(x    <=    10    &&    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	350	None	replace
393	[BUG]  [BUGGY]  if(x  ==  prev)  {  If(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  If(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  If(x  ==  (long)x)  {	  if(x    ==    (long)x)    {    If(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	326	None	replace
394	[BUG]  [BUGGY]  If(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  If(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	If(x  ==  (long)x)  {	  if(x    ==    (long)x)    {    If(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	326	None	replace
395	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  If(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  If(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '-')  {  If(x  ==  (long)x)  {	  if(x    ==    (long)x)    {    If(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	326	None	replace
396	[BUG]  [BUGGY]  int  x  =  getFirstChar()  +  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar()  +  1;	  int    x    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	263	None	replace
397	[BUG]  [BUGGY]  long  x  =  getLastChar()  +  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar()  +  1;	  int    x    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	263	None	replace
398	[BUG]  [BUGGY]  long  value  =(int)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =(int)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(int)Math.pow(10,  x);	  long    value    =(long)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	15	None	replace
399	[BUG]  [BUGGY]  long  value  =(long)Math.pow(10,  Math.pow(10,  prev));  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =(long)Math.pow(10,  Math.pow(10,  prev));  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(long)Math.pow(10,  Math.pow(10,  prev));	  long    value    =(long)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	15	None	replace
400	[BUG]  [BUGGY]  long  value  =(long)Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =(long)Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(long)Math.pow(10,  x  +  1);	  long    value    =(long)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	15	None	replace
401	[BUG]  [BUGGY]  if(x  <=  (char)x)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  (char)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  (char)x)  {	  if(x    <=    (long)x)    {    	non-compiled	[CE]  ';'  expected	293	None	replace
402	[BUG]  [BUGGY]  if(x  <=  Double.POSITIVE_INFINITY  ||  x  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Double.POSITIVE_INFINITY  ||  x  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Double.POSITIVE_INFINITY  ||  x  <=  Double.POSITIVE_INFINITY)  {	  if(x    <=    (long)x)    {    	non-compiled	[CE]  ';'  expected	293	None	replace
403	[BUG]  [BUGGY]  String  x  =  getLastChar();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  x  =  getLastChar();	  char    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	261	None	replace
404	[BUG]  [BUGGY]  Char  x  =  getLastChar();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Char  x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Char  x  =  getLastChar();	  char    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	261	None	replace
405	[BUG]  [BUGGY]  Character  x  =  getLastChar();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  x  =  getLastChar();	  char    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	261	None	replace
406	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  }	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	338	None	replace
407	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  x  ==  getLastChar())  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  x  ==  getLastChar())  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  ||  x  ==  getLastChar())  {  int  x  =  getLastChar();  }	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	338	None	replace
408	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  long  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  long  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE)  {  long  x  =  getLastChar();  }	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	338	None	replace
409	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  x  ==  getLastChar())  {  int  x  =  getLastChar();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  x  ==  getLastChar())  {  int  x  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  ||  x  ==  getLastChar())  {  int  x  =  getLastChar();	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	338	None	replace
410	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getFirstChar();  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getFirstChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE)  {  int  x  =  getFirstChar();  }	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	338	None	replace
411	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  int  x  =  getLastChar();  }	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	338	None	replace
412	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  /  prev;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar()  /  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  /  prev;	  double    mantissa    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	295	None	replace
413	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  *  prev;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar()  *  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  *  prev;	  double    mantissa    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	295	None	replace
414	[BUG]  [BUGGY]  double  mantissa  =  getFirstChar()  -  prev;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getFirstChar()  -  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getFirstChar()  -  prev;	  double    mantissa    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	295	None	replace
415	[BUG]  [BUGGY]  long  mantissa  =  getLastChar()  -  prev;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getLastChar()  -  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getLastChar()  -  prev;	  double    mantissa    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	295	None	replace
416	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  +  prev;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar()  +  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  +  prev;	  double    mantissa    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	295	None	replace
417	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  -  prev  +  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar()  -  prev  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  -  prev  +  1;	  double    mantissa    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	295	None	replace
418	[BUG]  [BUGGY]  int  mantissa  =  getLastChar()  -  prev;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getLastChar()  -  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar()  -  prev;	  double    mantissa    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	295	None	replace
419	[BUG]  [BUGGY]  int  value  =  getLastChar(),  prev.doubleValue()  +  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar(),  prev.doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar(),  prev.doubleValue()  +  1;	  int    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	200	None	replace
420	[BUG]  [BUGGY]  int  value  =  getFirstChar(),  prev.doubleValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getFirstChar(),  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstChar(),  prev.doubleValue();	  int    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	200	None	replace
421	[BUG]  [BUGGY]  int  value  =  getLastChar(),  prev.intValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar(),  prev.intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar(),  prev.intValue();	  int    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	200	None	replace
422	[BUG]  [BUGGY]  int  value  =  getLastChar(),  prev.doubleValue()  *  2;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar(),  prev.doubleValue()  *  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar(),  prev.doubleValue()  *  2;	  int    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	200	None	replace
423	[BUG]  [BUGGY]  char  value  =  getLastChar(),  prev.doubleValue();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  getLastChar(),  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  getLastChar(),  prev.doubleValue();	  int    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	200	None	replace
424	[BUG]  [BUGGY]  Char  value  =(char)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Char  value  =(char)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Char  value  =(char)Math.pow(10,  prev);	  char    value    =(char)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	16	None	replace
425	[BUG]  [BUGGY]  String  value  =(short)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =(short)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =(short)Math.pow(10,  x);	  char    value    =(char)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	16	None	replace
426	[BUG]  [BUGGY]  String  value  =(String)Math.pow(10,  X);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =(String)Math.pow(10,  X);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =(String)Math.pow(10,  X);	  char    value    =(char)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	16	None	replace
427	[BUG]  [BUGGY]  String  value  =(string)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =(string)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =(string)Math.pow(10,  x);	  char    value    =(char)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	16	None	replace
428	[BUG]  [BUGGY]  String  value  =(String)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =(String)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =(String)Math.pow(10,  prev);	  char    value    =(char)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	20	None	replace
429	[BUG]  [BUGGY]  Character  value  =(char)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  value  =(char)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  value  =(char)Math.pow(10,  prev);	  char    value    =(char)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	20	None	replace
430	[BUG]  [BUGGY]  Character  value  =(Character)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  value  =(Character)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  value  =(Character)Math.pow(10,  prev);	  char    value    =(char)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	20	None	replace
431	[BUG]  [BUGGY]  String  value  =(short)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =(short)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =(short)Math.pow(10,  prev);	  char    value    =(char)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	20	None	replace
432	[BUG]  [BUGGY]  String  value  =(String)Math.pow(10,  Prev);  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =(String)Math.pow(10,  Prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =(String)Math.pow(10,  Prev);	  char    value    =(char)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	20	None	replace
433	[BUG]  [BUGGY]  String  value  =(string)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =(string)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =(string)Math.pow(10,  prev);	  char    value    =(char)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	20	None	replace
434	[BUG]  [BUGGY]  String  value  =(StrING)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =(StrING)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =(StrING)Math.pow(10,  prev);	  char    value    =(char)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	20	None	replace
435	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('ufffd',  prev);  [CE]  unclosed  character  literal  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('ufffd',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('ufffd',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('ufffd',    prev);    	non-compiled	[CE]  unclosed  character  literal	321	None	replace
436	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('ufffd',  prev);  [CE]  unclosed  character  literal  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('ufffd',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('ufffd',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('ufffd',    prev);    	non-compiled	[CE]  unclosed  character  literal	321	None	replace
437	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('ufffd',    prev);    	non-compiled	[CE]  ';'  expected	321	None	replace
438	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('ufffd',  prev);  [CE]  unclosed  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('ufffd',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('ufffd',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('ufffd',    prev);    	non-compiled	[CE]  unclosed  character  literal	321	None	replace
439	[BUG]  [BUGGY]  char  x  =  getLastChar().lastIndexOf('ufffd',  prev);  [CE]  unclosed  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().lastIndexOf('ufffd',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().lastIndexOf('ufffd',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('ufffd',    prev);    	non-compiled	[CE]  unclosed  character  literal	321	None	replace
440	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf(',',  prev);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf(',',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf(',',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('ufffd',    prev);    	non-compiled	[CE]  ';'  expected	321	None	replace
441	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('ufffd',  prev);  [CE]  unclosed  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('ufffd',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('ufffd',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('ufffd',    prev);    	non-compiled	[CE]  unclosed  character  literal	321	None	replace
442	[BUG]  [BUGGY]  Integer  x  =  getLastIntChar();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastIntChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastIntChar();	          x    =    getLastChar();    Integer    x    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	89	None	replace
443	[BUG]  [BUGGY]  int  x  =  getLastIntChar();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastIntChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastIntChar();	          x    =    getLastChar();    Integer    x    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	89	None	replace
444	[BUG]  [BUGGY]  Integer  x  =  getFirstIntChar();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getFirstIntChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getFirstIntChar();	          x    =    getLastChar();    Integer    x    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	89	None	replace
445	[BUG]  [BUGGY]  Number  x  =  getLastIntChar();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  x  =  getLastIntChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  x  =  getLastIntChar();	          x    =    getLastChar();    Integer    x    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	89	None	replace
446	[BUG]  [BUGGY]  x  =  getLastIntChar();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastIntChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastIntChar();	          x    =    getLastChar();    Integer    x    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	89	None	replace
447	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
448	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
449	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
450	[BUG]  [BUGGY]  long  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
451	[BUG]  [BUGGY]  long  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
452	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
453	[BUG]  [BUGGY]  double  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
454	[BUG]  [BUGGY]  long  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
455	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
456	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
457	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >>  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >>  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  >>  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
458	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
459	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev!=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev!=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  >=  Long.MIN_VALUE  ||  prev!=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
460	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  [Delete]  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  [Delete]  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  [Delete]  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ')'  expected	34	None	add
461	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  If(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  If(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    If(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
462	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  [BUGGY]  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  [BUGGY]  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  [BUGGY]  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  	34	None	add
463	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev  >>  Long.MAX_VALUE)  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev  >>  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  >=  Long.MIN_VALUE  ||  prev  >>  Long.MAX_VALUE)  {	  	non-compiled	[CE]  	34	None	add
464	[BUG]  [BUGGY]  String  value  =  getLastChar().doubleValue();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  getLastChar().doubleValue();	  char    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  	197	None	replace
465	[BUG]  [BUGGY]  BigInteger  value  =  getLastChar().doubleValue();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  BigInteger  value  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigInteger  value  =  getLastChar().doubleValue();	  char    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  	197	None	replace
466	[BUG]  [BUGGY]  Char  value  =  getLastChar().doubleValue();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Char  value  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Char  value  =  getLastChar().doubleValue();	  char    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  	197	None	replace
467	[BUG]  [BUGGY]  Number  value  =  getLastChar().doubleValue();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  value  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  value  =  getLastChar().doubleValue();	  char    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  	197	None	replace
468	[BUG]  [BUGGY]  Character  value  =  getLastChar().doubleValue();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  value  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  value  =  getLastChar().doubleValue();	  char    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  	197	None	replace
469	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev).doubleValue();  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev).doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev).doubleValue();	  int    mantissa    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  	235	None	replace
470	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  prev).doubleValue();  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  Math.pow(10,  prev).doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  prev).doubleValue();	  int    mantissa    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  	235	None	replace
471	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  prev).doubleValue();  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  prev).doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  prev).doubleValue();	  int    mantissa    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  	235	None	replace
472	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev).doubleValue()  +  1;  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev).doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev).doubleValue()  +  1;	  int    mantissa    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  	235	None	replace
473	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev).doubleValue()  /  10;  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev).doubleValue()  /  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev).doubleValue()  /  10;	  int    mantissa    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  	235	None	replace
474	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev),  x.doubleValue();  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev),  x.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev),  x.doubleValue();	  int    mantissa    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  	235	None	replace
475	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  x).doubleValue();  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  x).doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  x).doubleValue();	  int    mantissa    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  	235	None	replace
476	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev).doubleValue()  -  1;  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev).doubleValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev).doubleValue()  -  1;	  int    mantissa    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  	235	None	replace
477	[BUG]  [BUGGY]  double  mantissa  =  getLastChar().doubleValue()  +  1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar().doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar().doubleValue()  +  1;	  double    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  	178	None	replace
478	[BUG]  [BUGGY]  double  mantissa  =  getLastChar(),  prev.doubleValue();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar(),  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar(),  prev.doubleValue();	  double    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  	178	None	replace
479	[BUG]  [BUGGY]  long  mantissa  =  getLastChar().doubleValue();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getLastChar().doubleValue();	  double    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  	178	None	replace
480	[BUG]  [BUGGY]  double  mantissa  =  getFirstChar().doubleValue();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getFirstChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getFirstChar().doubleValue();	  double    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  	178	None	replace
481	[BUG]  [BUGGY]  double  mantissa  =  getLastChar().doubleValue()  -  1;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar().doubleValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar().doubleValue()  -  1;	  double    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  	178	None	replace
482	[BUG]  [BUGGY]  double  mantissa  =  getLastChar().doubleValue()  /  10;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar().doubleValue()  /  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar().doubleValue()  /  10;	  double    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  	178	None	replace
483	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  /.doubleValue();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar()  /.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  /.doubleValue();	  double    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
484	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  	161	None	replace
485	[BUG]  [BUGGY]  long  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	161	None	replace
486	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	161	None	replace
487	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	161	None	replace
488	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf(prev);  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf(prev);  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf(prev);  if(x  >=  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	161	None	replace
489	[BUG]  [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf(x);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf(x);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf(x);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	161	None	replace
490	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf(prev);  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf(prev);  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf(prev);  if(x  ==  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	161	None	replace
491	[BUG]  [BUGGY]  String  value  =  prev  ==  null?  getLastChar()  :  x;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =  prev  ==  null?  getLastChar()  :  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  prev  ==  null?  getLastChar()  :  x;	  char    value    =    prev    ==    null?    getLastChar()    :    x;    	non-compiled	[CE]  ';'  expected	368	None	replace
492	[BUG]  [BUGGY]  char  value  =  prev!=  null?  getLastChar()  :  x;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  prev!=  null?  getLastChar()  :  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev!=  null?  getLastChar()  :  x;	  char    value    =    prev    ==    null?    getLastChar()    :    x;    	non-compiled	[CE]  ';'  expected	368	None	replace
493	[BUG]  [BUGGY]  char  value  =  prev  ==  null?  getFirstChar()  :  x;  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  prev  ==  null?  getFirstChar()  :  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev  ==  null?  getFirstChar()  :  x;	  char    value    =    prev    ==    null?    getLastChar()    :    x;    	non-compiled	[CE]  ';'  expected	368	None	replace
494	[BUG]  [BUGGY]  char  value  =  prev  ==  null?  getLastChar()  :  x  +  1;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  prev  ==  null?  getLastChar()  :  x  +  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev  ==  null?  getLastChar()  :  x  +  1;	  char    value    =    prev    ==    null?    getLastChar()    :    x;    	non-compiled	[CE]  ';'  expected	368	None	replace
495	[BUG]  [BUGGY]  double  value  =  prev  ==  null?  getLastChar()  :  x;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  prev  ==  null?  getLastChar()  :  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  prev  ==  null?  getLastChar()  :  x;	  char    value    =    prev    ==    null?    getLastChar()    :    x;    	non-compiled	[CE]  ';'  expected	368	None	replace
496	[BUG]  [BUGGY]  if(x  <  10)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  10)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  10)  {	  if(x    >    10)    {    	non-compiled	[CE]  ';'  expected	372	None	replace
497	[BUG]  [BUGGY]  if(x  >  10  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  10  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  10  &&  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    >    10)    {    	non-compiled	[CE]  ';'  expected	372	None	replace
498	[BUG]  [BUGGY]  if(x  >  10  &&  prev  ==  ';')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  10  &&  prev  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  10  &&  prev  ==  ';')  {	  if(x    >    10)    {    	non-compiled	[CE]  ';'  expected	372	None	replace
499	[BUG]  [BUGGY]  if(x  >  10  ||  prev  ==  ';')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  10  ||  prev  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  10  ||  prev  ==  ';')  {	  if(x    >    10)    {    	non-compiled	[CE]  ';'  expected	372	None	replace
500	[BUG]  [BUGGY]  if(x  >  10  &&  prev  <=  127)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  10  &&  prev  <=  127)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  10  &&  prev  <=  127)  {	  if(x    >    10)    {    	non-compiled	[CE]  ';'  expected	372	None	replace
501	[BUG]  [BUGGY]  if(x  >  10  &&  prev!=  ';')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  10  &&  prev!=  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  10  &&  prev!=  ';')  {	  if(x    >    10)    {    	non-compiled	[CE]  ';'  expected	372	None	replace
502	[BUG]  [BUGGY]  if(x  >  10  &&  prev  >=  ';')  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  10  &&  prev  >=  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  10  &&  prev  >=  ';')  {	  if(x    >    10)    {    	non-compiled	[CE]  ';'  expected	372	None	replace
503	[BUG]  [BUGGY]  if(x  <=  10)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10)  {	  if(x    >    10)    {    	non-compiled	[CE]  ';'  expected	372	None	replace
504	[BUG]  [BUGGY]  double  mantissa  =  getFirstChar()  /  2;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getFirstChar()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getFirstChar()  /  2;	  double    mantissa    =    getLastChar()    /    2;    	non-compiled	[CE]  ';'  expected	179	None	replace
505	[BUG]  [BUGGY]  long  mantissa  =  getLastChar()  /  2;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getLastChar()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getLastChar()  /  2;	  double    mantissa    =    getLastChar()    /    2;    	non-compiled	[CE]  ';'  expected	179	None	replace
506	[BUG]  [BUGGY]  int  mantissa  =  getLastChar()  /  2;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getLastChar()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar()  /  2;	  double    mantissa    =    getLastChar()    /    2;    	non-compiled	[CE]  ';'  expected	179	None	replace
507	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  *  2;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar()  *  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  *  2;	  double    mantissa    =    getLastChar()    /    2;    	non-compiled	[CE]  ';'  expected	179	None	replace
508	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  /  2  +  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar()  /  2  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  /  2  +  1;	  double    mantissa    =    getLastChar()    /    2;    	non-compiled	[CE]  ';'  expected	179	None	replace
509	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  Math.pow(10,  prev));  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(double)Math.pow(10,  Math.pow(10,  prev));  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  Math.pow(10,  prev));	  int    value    =(int)Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  ';'  expected	19	None	replace
510	[BUG]  [BUGGY]  char  value  =(char)Math.pow(10,  Math.pow(10,  prev));  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(char)Math.pow(10,  Math.pow(10,  prev));  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(char)Math.pow(10,  Math.pow(10,  prev));	  int    value    =(int)Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  ';'  expected	19	None	replace
511	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev),  x);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev),  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  Math.pow(10,  prev),  x);	  int    value    =(int)Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  ';'  expected	19	None	replace
512	[BUG]  [BUGGY]  char  value  =(int)Math.pow(10,  Math.pow(10,  prev));  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(int)Math.pow(10,  Math.pow(10,  prev));  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(int)Math.pow(10,  Math.pow(10,  prev));	  int    value    =(int)Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  ';'  expected	19	None	replace
513	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev  +  1));  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev  +  1));  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  Math.pow(10,  prev  +  1));	  int    value    =(int)Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  ';'  expected	19	None	replace
514	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev)-  1);  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev)-  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  Math.pow(10,  prev)-  1);	  int    value    =(int)Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  ';'  expected	19	None	replace
515	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev  -  1));  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev  -  1));  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  Math.pow(10,  prev  -  1));	  int    value    =(int)Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  ';'  expected	19	None	replace
516	[BUG]  [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	162	None	replace
517	[BUG]  [BUGGY]  long  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	162	None	replace
518	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	162	None	replace
519	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  >=  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	162	None	replace
520	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	162	None	replace
521	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	162	None	replace
522	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('.')+  1;  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	162	None	replace
523	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(double)Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  x  +  1);	  int    value    =(int)Math.pow(10,    x    +    1);    	non-compiled	[CE]  ';'  expected	18	None	replace
524	[BUG]  [BUGGY]  char  value  =(char)Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(char)Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(char)Math.pow(10,  x  +  1);	  int    value    =(int)Math.pow(10,    x    +    1);    	non-compiled	[CE]  ';'  expected	18	None	replace
525	[BUG]  [BUGGY]  char  value  =(int)Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(int)Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(int)Math.pow(10,  x  +  1);	  int    value    =(int)Math.pow(10,    x    +    1);    	non-compiled	[CE]  ';'  expected	18	None	replace
526	[BUG]  [BUGGY]  double  value  =(int)Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(int)Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(int)Math.pow(10,  x  +  1);	  int    value    =(int)Math.pow(10,    x    +    1);    	non-compiled	[CE]  ';'  expected	18	None	replace
527	[BUG]  [BUGGY]  double  value  =(byte)Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(byte)Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(byte)Math.pow(10,  x  +  1);	  int    value    =(int)Math.pow(10,    x    +    1);    	non-compiled	[CE]  ';'  expected	18	None	replace
528	[BUG]  [BUGGY]  short  value  =(short)Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  short  value  =(short)Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	short  value  =(short)Math.pow(10,  x  +  1);	  int    value    =(int)Math.pow(10,    x    +    1);    	non-compiled	[CE]  ';'  expected	18	None	replace
529	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
530	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    if(x  >=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
531	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x!=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x!=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    if(x!=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
532	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  >>  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  >>  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    if(x  >>  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
533	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  If(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  If(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    If(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
534	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  &&  Prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  &&  Prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    if(x  ==  Long.MIN_VALUE  &&  Prev  <=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
535	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  &&  prev  >=  =  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  &&  prev  >=  =  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    if(x  ==  Long.MIN_VALUE  &&  prev  >=  =  Long.MAX_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
536	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [CE]  class  expected  [FE]                  ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    if(x  ==  long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  class  expected	38	None	add
537	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  |&  prev  <=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  |&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    if(x  ==  Long.MIN_VALUE  |&  prev  <=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
538	[BUG]  [BUGGY]  If((  long)x!=  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  If((  long)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	If((  long)x!=  prev)  {	  if((    long)x!=    prev)    {    If((    long)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	216	None	replace
539	[BUG]  [BUGGY]  If((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  If((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	If((  long)x  ==  prev)  {	  if((    long)x!=    prev)    {    If((    long)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	216	None	replace
540	[BUG]  [BUGGY]  If((  long)x  >=  prev)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  If((  long)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	If((  long)x  >=  prev)  {	  if((    long)x!=    prev)    {    If((    long)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	216	None	replace
541	[BUG]  [BUGGY]  Context.codeBug();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Context.codeBug();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Context.codeBug();	  if((    long)x!=    prev)    {    If((    long)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	216	None	replace
542	[BUG]  [BUGGY]  While((  long)x!=  prev)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  While((  long)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	While((  long)x!=  prev)  {	  if((    long)x!=    prev)    {    If((    long)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	216	None	replace
543	[BUG]  [BUGGY]  if(x  ==  (char)prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  (char)prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (char)prev)  {	  if(prev    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	180	None	replace
544	[BUG]  [BUGGY]  if(exp  ==  (int)x)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(exp  ==  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(exp  ==  (int)x)  {	  if(prev    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	180	None	replace
545	[BUG]  [BUGGY]  if(x  >=  (int)prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  (int)prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (int)prev)  {	  if(prev    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	180	None	replace
546	[BUG]  [BUGGY]  if(value  ==  (int)x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(value  ==  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(value  ==  (int)x)  {	  if(prev    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	180	None	replace
547	[BUG]  [BUGGY]  if(x!=  (int)prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  (int)prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  (int)prev)  {	  if(prev    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	180	None	replace
548	[BUG]  [BUGGY]  if(prev  ==  (long)x)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  (long)x)  {	  if(prev    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	180	None	replace
549	[BUG]  [BUGGY]  char  value  =  getLastChar().doubleValue()  -  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  getLastChar().doubleValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  getLastChar().doubleValue()  -  1;	  int    value    =    getLastChar().doubleValue()    -    1;    	non-compiled	[CE]  ';'  expected	199	None	replace
550	[BUG]  [BUGGY]  int  value  =  getFirstChar().doubleValue()  -  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getFirstChar().doubleValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstChar().doubleValue()  -  1;	  int    value    =    getLastChar().doubleValue()    -    1;    	non-compiled	[CE]  ';'  expected	199	None	replace
551	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  /  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar().doubleValue()  /  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().doubleValue()  /  1;	  int    value    =    getLastChar().doubleValue()    -    1;    	non-compiled	[CE]  ';'  expected	199	None	replace
552	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  *  1;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar().doubleValue()  *  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().doubleValue()  *  1;	  int    value    =    getLastChar().doubleValue()    -    1;    	non-compiled	[CE]  ';'  expected	199	None	replace
553	[BUG]  [BUGGY]  String  value  =  getLastChar().toLowerCase();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =  getLastChar().toLowerCase();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  getLastChar().toLowerCase();	  String    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	273	None	replace
554	[BUG]  [BUGGY]  String  value  =  getLastChar()  +  1;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =  getLastChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  getLastChar()  +  1;	  String    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	273	None	replace
555	[BUG]  [BUGGY]  String  value  =  getLowerCase();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =  getLowerCase();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  getLowerCase();	  String    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	273	None	replace
556	[BUG]  [BUGGY]  String  value  =  getLastChar().toCharArray();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =  getLastChar().toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  getLastChar().toCharArray();	  String    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	273	None	replace
557	[BUG]  [BUGGY]  String  value  =  getStringValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =  getStringValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  getStringValue();	  String    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	273	None	replace
558	[BUG]  [BUGGY]  if(x  ==  prev  &&  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev  &&  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev  &&  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	127	None	replace
559	[BUG]  [BUGGY]  if(x  >=  prev  &&  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev  &&  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev  &&  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	127	None	replace
560	[BUG]  [BUGGY]  if(x  <  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	127	None	replace
561	[BUG]  [BUGGY]  if(prev  ==  x  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	127	None	replace
562	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	127	None	replace
563	[BUG]  [BUGGY]  if(x  >=  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	127	None	replace
564	[BUG]  [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_FLOAT))  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_FLOAT))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_FLOAT))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	127	None	replace
565	[BUG]  [BUGGY]  double  value  =  getLastChar()  *  prev.doubleValue();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  *  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  *  prev.doubleValue();	  double    value    =    getLastChar()    -    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	296	None	replace
566	[BUG]  [BUGGY]  double  value  =  getLastChar()  /  prev.doubleValue();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  /  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  /  prev.doubleValue();	  double    value    =    getLastChar()    -    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	296	None	replace
567	[BUG]  [BUGGY]  double  value  =  getFirstChar()  -  prev.doubleValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstChar()  -  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstChar()  -  prev.doubleValue();	  double    value    =    getLastChar()    -    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	296	None	replace
568	[BUG]  [BUGGY]  long  value  =  getLastChar()  -  prev.doubleValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar()  -  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar()  -  prev.doubleValue();	  double    value    =    getLastChar()    -    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	296	None	replace
569	[BUG]  [BUGGY]  double  value  =  getLastChar()  +  prev.doubleValue();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  +  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  +  prev.doubleValue();	  double    value    =    getLastChar()    -    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	296	None	replace
570	[BUG]  [BUGGY]  double  value  =  getLastChar()  -  prev.doubleValue()  +  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  -  prev.doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  -  prev.doubleValue()  +  1;	  double    value    =    getLastChar()    -    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	296	None	replace
571	[BUG]  [BUGGY]  int  value  =  getLastChar()  -  prev.doubleValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar()  -  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  -  prev.doubleValue();	  double    value    =    getLastChar()    -    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	296	None	replace
572	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >=  '.')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >=  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >=  '.')  {	  if(x    <    0    ||    prev    >    '.')    {    	non-compiled	[CE]  ';'  expected	373	None	replace
573	[BUG]  [BUGGY]  if(x  <  0  ||  prev!=  '.')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev!=  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev!=  '.')  {	  if(x    <    0    ||    prev    >    '.')    {    	non-compiled	[CE]  ';'  expected	373	None	replace
574	[BUG]  [BUGGY]  if(prev  <  0  ||  prev  >  '.')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0  ||  prev  >  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0  ||  prev  >  '.')  {	  if(x    <    0    ||    prev    >    '.')    {    	non-compiled	[CE]  ';'  expected	373	None	replace
575	[BUG]  [BUGGY]  if(x  <=  0  ||  prev  >  '.')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0  ||  prev  >  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0  ||  prev  >  '.')  {	  if(x    <    0    ||    prev    >    '.')    {    	non-compiled	[CE]  ';'  expected	373	None	replace
576	[BUG]  [BUGGY]  if(x  >  0  ||  prev  >  '.')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  ||  prev  >  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  ||  prev  >  '.')  {	  if(x    <    0    ||    prev    >    '.')    {    	non-compiled	[CE]  ';'  expected	373	None	replace
577	[BUG]  [BUGGY]  if(x  >  '.'  ||  prev  <  '0'  ||  prev  >  '9')  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  '.'  ||  prev  <  '0'  ||  prev  >  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  '.'  ||  prev  <  '0'  ||  prev  >  '9')  {	  if(x    <    0    ||    prev    >    '.')    {    	non-compiled	[CE]  ';'  expected	373	None	replace
578	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  '.'  ||  prev  >=  '-')  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >  '.'  ||  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >  '.'  ||  prev  >=  '-')  {	  if(x    <    0    ||    prev    >    '.')    {    	non-compiled	[CE]  ';'  expected	373	None	replace
579	[BUG]  [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x  ==  prev)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    ==    prev)    {    if((  int)x  ==  prev)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
580	[BUG]  [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x!=  prev)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    ==    prev)    {    if((  int)x!=  prev)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
581	[BUG]  [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x  >=  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    ==    prev)    {    if((  int)x  >=  prev)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
582	[BUG]  [BUGGY]  if((  int)x  ==  prev)  {  If((  int)x  ==  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  ==  prev)  {  If((  int)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    ==    prev)    {    If((  int)x  ==  prev)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
583	[BUG]  [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x  {  prev)  {  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x  {  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    ==    prev)    {    if((  int)x  {  prev)  {	  	non-compiled	[CE]  ')'  expected	12	None	add
584	[BUG]  [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x  >>  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x  >>  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    ==    prev)    {    if((  int)x  >>  prev)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
585	[BUG]  [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x  [BUGGY]  prev)  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x  [BUGGY]  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    ==    prev)    {    if((  int)x  [BUGGY]  prev)  {	  	non-compiled	[CE]  ')'  expected	12	None	add
586	[BUG]  [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x  ==  Prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  ==  prev)  {  if((  int)x  ==  Prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    ==    prev)    {    if((  int)x  ==  Prev)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
587	[BUG]  [BUGGY]  if((  long)x  ==  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  ==  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  ==  Preconditions.NEGATIVE_INFINITY)  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
588	[BUG]  [BUGGY]  if((  long)x  >=  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >=  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >=  Preconditions.NEGATIVE_INFINITY)  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
589	[BUG]  [BUGGY]  if((  int)x!=  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x!=  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  int)x!=  Preconditions.NEGATIVE_INFINITY)  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
590	[BUG]  [BUGGY]  if((  int)x  >=  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  >=  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  int)x  >=  Preconditions.NEGATIVE_INFINITY)  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
591	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  Preconditions.NEGATIVE_INFINITY)  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
592	[BUG]  [BUGGY]  if((  long)x  >>  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >>  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >>  Preconditions.NEGATIVE_INFINITY)  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
593	[BUG]  [BUGGY]  if((  long)x  >=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  Preconditions.NEGATIVE_INFINITY)  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
594	[BUG]  [BUGGY]  if((  long)x  >  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >  Preconditions.NEGATIVE_INFINITY)  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
595	[BUG]  [BUGGY]  double  x  =  getFirstChar()  +  1;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getFirstChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getFirstChar()  +  1;	  double    x    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	168	None	replace
596	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
597	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar();  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
598	[BUG]  [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  long  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  long  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  prev)  {  x  =  getLastChar();  long  x  =  getLastChar();  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
599	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  long  x  =  getLastChar();  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
600	[BUG]  [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getLastChar();  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
601	[BUG]  [BUGGY]  Integer  value  =  getFirstElement().getLastChar();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstElement().getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstElement().getLastChar();	  Integer    value    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	225	None	replace
602	[BUG]  [BUGGY]  Integer  value  =  getFirstChild().getLastChar();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstChild().getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChild().getLastChar();	  Integer    value    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	225	None	replace
603	[BUG]  [BUGGY]  Long  value  =  getLastChar()  -  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  getLastChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  getLastChar()  -  1;	  Integer    value    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	225	None	replace
604	[BUG]  [BUGGY]  long  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
605	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
606	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
607	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
608	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.');  if(x  >=  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
609	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
610	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
611	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  >=  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
612	[BUG]  [BUGGY]  if(x  ==  prev  &&  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev  &&  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev  &&  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
613	[BUG]  [BUGGY]  if(isEnabled(Feature.AUTO_NON_NUMERIC_VALUE)||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(isEnabled(Feature.AUTO_NON_NUMERIC_VALUE)||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(isEnabled(Feature.AUTO_NON_NUMERIC_VALUE)||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
614	[BUG]  [BUGGY]  if(prev  ==  x  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
615	[BUG]  [BUGGY]  if(x  <  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
616	[BUG]  [BUGGY]  if(x  >=  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
617	[BUG]  [BUGGY]  if(x!=  prev  &&  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev  &&  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev  &&  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
618	[BUG]  [BUGGY]  if(x!=  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
619	[BUG]  [BUGGY]  if(isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
620	[BUG]  [BUGGY]  long  mantissa  =  getLastChar().intValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getLastChar().intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getLastChar().intValue();	  int    mantissa    =    getLastChar().intValue();    	non-compiled	[CE]  ';'  expected	122	None	replace
621	[BUG]  [BUGGY]  int  mantissa  =  getLastChar().intValue()  +  1;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getLastChar().intValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar().intValue()  +  1;	  int    mantissa    =    getLastChar().intValue();    	non-compiled	[CE]  	122	None	replace
622	[BUG]  [BUGGY]  int  mantissa  =  getLastChar().intValue()  -  1;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getLastChar().intValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar().intValue()  -  1;	  int    mantissa    =    getLastChar().intValue();    	non-compiled	[CE]  	122	None	replace
623	[BUG]  [BUGGY]  char  mantissa  =  getLastChar().intValue();  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  getLastChar().intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  getLastChar().intValue();	  int    mantissa    =    getLastChar().intValue();    	non-compiled	[CE]  	122	None	replace
624	[BUG]  [BUGGY]  double  mantissa  =  getLastChar().intValue();  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar().intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar().intValue();	  int    mantissa    =    getLastChar().intValue();    	non-compiled	[CE]  	122	None	replace
625	[BUG]  [BUGGY]  int  mantissa  =  getFirstChar().intValue();  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getFirstChar().intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getFirstChar().intValue();	  int    mantissa    =    getLastChar().intValue();    	non-compiled	[CE]  	122	None	replace
626	[BUG]  [BUGGY]  int  mantissa  =  getLastChar().longValue();  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getLastChar().longValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar().longValue();	  int    mantissa    =    getLastChar().intValue();    	non-compiled	[CE]  	122	None	replace
627	[BUG]  [BUGGY]  long  x  =  getLastChar().doubleValue();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().doubleValue();	  long    x    =    getLastChar();    	non-compiled	[CE]  	174	None	replace
628	[BUG]  [BUGGY]  if(x!=  0)  {  [CE]  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  0)  {	  if(x!=    (long)x)    {    if(x    >>    (long)x)    {    	non-compiled	[CE]  	268	None	replace
629	[BUG]  [BUGGY]  if(prev  <  0  ||  prev  ==  '.')  {  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0  ||  prev  ==  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0  ||  prev  ==  '.')  {	  if(x    <    0    ||    prev    ==    '.')    {    	non-compiled	[CE]  	107	None	replace
630	[BUG]  [BUGGY]  if(x  >=  0  ||  prev  ==  '.')  {  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  0  ||  prev  ==  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  0  ||  prev  ==  '.')  {	  if(x    <    0    ||    prev    ==    '.')    {    	non-compiled	[CE]  	107	None	replace
631	[BUG]  [BUGGY]  if(x  >  0  ||  prev  ==  '.')  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  ||  prev  ==  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  ||  prev  ==  '.')  {	  if(x    <    0    ||    prev    ==    '.')    {    	non-compiled	[CE]  	107	None	replace
632	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '.'  ||  prev  ==  '-')  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '.'  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '.'  ||  prev  ==  '-')  {	  if(x    <    0    ||    prev    ==    '.')    {    	non-compiled	[CE]  	107	None	replace
633	[BUG]  [BUGGY]  if(prev  <  0  ||  x  ==  '.')  {  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0  ||  x  ==  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0  ||  x  ==  '.')  {	  if(x    <    0    ||    prev    ==    '.')    {    	non-compiled	[CE]  	107	None	replace
634	[BUG]  [BUGGY]  double  x  =  getFirstChar()  +  prev;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getFirstChar()  +  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getFirstChar()  +  prev;	  double    x    =    getLastChar()    +    prev;    	non-compiled	[CE]  	307	None	replace
635	[BUG]  [BUGGY]  double  x  =  getLastChar()  *  prev;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar()  *  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  *  prev;	  double    x    =    getLastChar()    +    prev;    	non-compiled	[CE]  	307	None	replace
636	[BUG]  [BUGGY]  double  x  =  getLastChar().doubleValue()  +  prev;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().doubleValue()  +  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().doubleValue()  +  prev;	  double    x    =    getLastChar()    +    prev;    	non-compiled	[CE]  	307	None	replace
637	[BUG]  [BUGGY]  double  x  =  getLastChar()  /  prev;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar()  /  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  /  prev;	  double    x    =    getLastChar()    +    prev;    	non-compiled	[CE]  	307	None	replace
638	[BUG]  [BUGGY]  double  x  =  getLastChar()  +  prev.doubleValue();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar()  +  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  +  prev.doubleValue();	  double    x    =    getLastChar()    +    prev;    	non-compiled	[CE]  	307	None	replace
639	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  prev)-  1;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  prev)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  prev)-  1;	  int    mantissa    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  	236	None	replace
640	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  prev)-  1;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  Math.pow(10,  prev)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  prev)-  1;	  int    mantissa    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  	236	None	replace
641	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  1;  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)/  1;	  int    mantissa    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  	236	None	replace
642	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  prev)-  1;  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  prev)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  prev)-  1;	  int    mantissa    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  	236	None	replace
643	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)-  2;  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)-  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)-  2;	  int    mantissa    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  	236	None	replace
644	[BUG]  [BUGGY]  short  mantissa  =  Math.pow(10,  prev)-  1;  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  short  mantissa  =  Math.pow(10,  prev)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	short  mantissa  =  Math.pow(10,  prev)-  1;	  int    mantissa    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  	236	None	replace
645	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  ==  Long.MIN_VALUE))  {  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  ==  Long.MIN_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  ==  Long.MIN_VALUE))  {	  if((    long)x!=    prev)    {    if((    long)x    ==    prev)    {    	non-compiled	[CE]  	212	None	replace
646	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  ==  '-'))  {  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  ==  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  ==  '-'))  {	  if((    long)x!=    prev)    {    if((    long)x    ==    prev)    {    	non-compiled	[CE]  	212	None	replace
647	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  >=  '-'))  {  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  >=  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  >=  '-'))  {	  if((    long)x!=    prev)    {    if((    long)x    ==    prev)    {    	non-compiled	[CE]  	212	None	replace
648	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  prev)  {  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  	138	None	replace
649	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0  ||  prev  ==  '-')  {  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0  ||  prev  ==  '-')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  	138	None	replace
650	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('.');  if(x  ==  prev)  {  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('.');  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('.');  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  	138	None	replace
651	[BUG]  [BUGGY]  long  x  =  getLastChar().lastIndexOf('.');  if(x  ==  prev)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().lastIndexOf('.');  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().lastIndexOf('.');  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  	138	None	replace
652	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  >=  prev)  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.');  if(x  >=  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  	138	None	replace
653	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('.');  if(x  <  0  ||  prev  ==  '-')  {  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('.');  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('.');  if(x  <  0  ||  prev  ==  '-')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  	138	None	replace
654	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x!=  prev)  {  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.');  if(x!=  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  	138	None	replace
655	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.');  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('.');	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  	138	None	replace
656	[BUG]  [BUGGY]  long  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    prev);    if(x    <    0)    {    	non-compiled	[CE]  	163	None	replace
657	[BUG]  [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    prev);    if(x    <    0)    {    	non-compiled	[CE]  	163	None	replace
658	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    prev);    if(x    <    0)    {    	non-compiled	[CE]  	163	None	replace
659	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    prev);    if(x    <    0)    {    	non-compiled	[CE]  	163	None	replace
660	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  ==  0)  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  ==  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    prev);    if(x    <    0)    {    	non-compiled	[CE]  	163	None	replace
661	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  >  0)  {  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  >  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  >  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    prev);    if(x    <    0)    {    	non-compiled	[CE]  	163	None	replace
662	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '0')  {  [CE]  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '0')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '0')  {	  if(x    <    0    ||    prev    >    '0')    {    	non-compiled	[CE]  	374	None	replace
663	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >=  '0')  {  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >=  '0')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >=  '0')  {	  if(x    <    0    ||    prev    >    '0')    {    	non-compiled	[CE]  	374	None	replace
664	[BUG]  [BUGGY]  if(x  <  0  ||  prev!=  '0')  {  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev!=  '0')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev!=  '0')  {	  if(x    <    0    ||    prev    >    '0')    {    	non-compiled	[CE]  	374	None	replace
665	[BUG]  [BUGGY]  if(x  <=  0  ||  prev  >  '0')  {  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0  ||  prev  >  '0')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0  ||  prev  >  '0')  {	  if(x    <    0    ||    prev    >    '0')    {    	non-compiled	[CE]  	374	None	replace
666	[BUG]  [BUGGY]  if(x  <=  '0'  ||  prev  >  '0')  {  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  '0'  ||  prev  >  '0')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0'  ||  prev  >  '0')  {	  if(x    <    0    ||    prev    >    '0')    {    	non-compiled	[CE]  	374	None	replace
667	[BUG]  [BUGGY]  if(prev  <  0  ||  prev  >  '0')  {  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0  ||  prev  >  '0')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0  ||  prev  >  '0')  {	  if(x    <    0    ||    prev    >    '0')    {    	non-compiled	[CE]  	374	None	replace
668	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  '0'  ||  prev  <=  '9')  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >  '0'  ||  prev  <=  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >  '0'  ||  prev  <=  '9')  {	  if(x    <    0    ||    prev    >    '0')    {    	non-compiled	[CE]  	374	None	replace
669	[BUG]  [BUGGY]  if(x  >  '0'  ||  prev  >  '9')  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  '0'  ||  prev  >  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  '0'  ||  prev  >  '9')  {	  if(x    <    0    ||    prev    >    '0')    {    	non-compiled	[CE]  	374	None	replace
670	[BUG]  [BUGGY]  if(x  <=  x)  {  [CE]  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  x)  {	  if(x    <    prev)    {    	non-compiled	[CE]  	123	None	replace
671	[BUG]  [BUGGY]  if(x  <=  127)  {  [CE]  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  127)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  127)  {	  if(x    <    prev)    {    	non-compiled	[CE]  	123	None	replace
672	[BUG]  [BUGGY]  if(x  <  prev  ||  isEmpty(x))  {  [CE]  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev  ||  isEmpty(x))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev  ||  isEmpty(x))  {	  if(x    <    prev)    {    	non-compiled	[CE]  	123	None	replace
673	[BUG]  [BUGGY]  double  mantissa  =  getMeanOp()  -  1;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getMeanOp()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getMeanOp()  -  1;	  int    mantissa    =    getMeanOp()    -    1;    	non-compiled	[CE]  	77	None	replace
674	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp()  /  1;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp()  /  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp()  /  1;	  int    mantissa    =    getMeanOp()    -    1;    	non-compiled	[CE]  	77	None	replace
675	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp()  *  1;  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp()  *  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp()  *  1;	  int    mantissa    =    getMeanOp()    -    1;    	non-compiled	[CE]  	77	None	replace
676	[BUG]  [BUGGY]  long  mantissa  =  getMeanOp()  -  1;  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getMeanOp()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getMeanOp()  -  1;	  int    mantissa    =    getMeanOp()    -    1;    	non-compiled	[CE]  	77	None	replace
677	[BUG]  [BUGGY]  char  mantissa  =  getMeanOp()  -  1;  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  getMeanOp()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  getMeanOp()  -  1;	  int    mantissa    =    getMeanOp()    -    1;    	non-compiled	[CE]  	77	None	replace
678	[BUG]  [BUGGY]  int  mantissa  =  getSemiColon()  -  1;  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getSemiColon()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getSemiColon()  -  1;	  int    mantissa    =    getMeanOp()    -    1;    	non-compiled	[CE]  	77	None	replace
679	[BUG]  [BUGGY]  Number  value  =  getNumber();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  value  =  getNumber();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  value  =  getNumber();	  Number    value    =    getLastChar();    	non-compiled	[CE]  	277	None	replace
680	[BUG]  [BUGGY]  Number  value  =  getLastChar()  -  1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  value  =  getLastChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  value  =  getLastChar()  -  1;	  Number    value    =    getLastChar();    	non-compiled	[CE]  	277	None	replace
681	[BUG]  [BUGGY]  Number  value  =  getLastChar()  +  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  value  =  getLastChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  value  =  getLastChar()  +  1;	  Number    value    =    getLastChar();    	non-compiled	[CE]  	277	None	replace
682	[BUG]  [BUGGY]  Number  value  =  getFirstChar();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  value  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  value  =  getFirstChar();	  Number    value    =    getLastChar();    	non-compiled	[CE]  	277	None	replace
683	[BUG]  [BUGGY]  number  value  =  getLastChar();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  number  value  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	number  value  =  getLastChar();	  Number    value    =    getLastChar();    	non-compiled	[CE]  	277	None	replace
684	[BUG]  [BUGGY]  char  mantissa  =  getMeanOp(prev);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  getMeanOp(prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  getMeanOp(prev);	  int    mantissa    =    getMeanOp(prev);    	non-compiled	[CE]  	82	None	replace
685	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp(x,  prev);  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp(x,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp(x,  prev);	  int    mantissa    =    getMeanOp(prev);    	non-compiled	[CE]  	82	None	replace
686	[BUG]  [BUGGY]  double  mantissa  =  getMeanOp(prev);  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getMeanOp(prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getMeanOp(prev);	  int    mantissa    =    getMeanOp(prev);    	non-compiled	[CE]  	82	None	replace
687	[BUG]  [BUGGY]  int  mantissa  =  getSemiColonOp(prev);  [CE]  [FE]                                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getSemiColonOp(prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getSemiColonOp(prev);	  int    mantissa    =    getMeanOp(prev);    	non-compiled	[CE]  	82	None	replace
688	[BUG]  [BUGGY]  long  mantissa  =  getMeanOp(prev);  [CE]  [FE]                                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getMeanOp(prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getMeanOp(prev);	  int    mantissa    =    getMeanOp(prev);    	non-compiled	[CE]  	82	None	replace
689	[BUG]  [BUGGY]  Integer  mantissa  =  getMeanOp(prev);  [CE]  [FE]                                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  mantissa  =  getMeanOp(prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  mantissa  =  getMeanOp(prev);	  int    mantissa    =    getMeanOp(prev);    	non-compiled	[CE]  	82	None	replace
690	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp(prev,  x);  [CE]  [FE]                                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp(prev,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp(prev,  x);	  int    mantissa    =    getMeanOp(prev);    	non-compiled	[CE]  	82	None	replace
691	[BUG]  [BUGGY]  Integer  value  =  getLastInt()  -  1;  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastInt()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastInt()  -  1;	  Integer    value    =    getLastInt();    	non-compiled	[CE]  	230	None	replace
692	[BUG]  [BUGGY]  Integer  value  =  getLastInt()  +  1;  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastInt()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastInt()  +  1;	  Integer    value    =    getLastInt();    	non-compiled	[CE]  	230	None	replace
693	[BUG]  [BUGGY]  Integer  value  =  getLastInt().doubleValue();  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastInt().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastInt().doubleValue();	  Integer    value    =    getLastInt();    	non-compiled	[CE]  	230	None	replace
694	[BUG]  [BUGGY]  Integer  value  =  getFirstInt();  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstInt();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstInt();	  Integer    value    =    getLastInt();    	non-compiled	[CE]  	230	None	replace
695	[BUG]  [BUGGY]  Long  value  =  getLastInt();  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  getLastInt();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  getLastInt();	  Integer    value    =    getLastInt();    	non-compiled	[CE]  	230	None	replace
696	[BUG]  [BUGGY]  Integer  value  =  getLastInt()  *  2;  [CE]  [FE]                                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastInt()  *  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastInt()  *  2;	  Integer    value    =    getLastInt();    	non-compiled	[CE]  	230	None	replace
697	[BUG]  [BUGGY]  Integer  value  =  getLastInt()  /  2;  [CE]  [FE]                                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastInt()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastInt()  /  2;	  Integer    value    =    getLastInt();    	non-compiled	[CE]  	230	None	replace
698	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  <  0)  {  [CE]  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar();    if(x    <    0)    {    	non-compiled	[CE]  	160	None	replace
699	[BUG]  [BUGGY]  long  x  =  getLastChar();  if(x  <  0)  {  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar();  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar();    if(x    <    0)    {    	non-compiled	[CE]  	160	None	replace
700	[BUG]  [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar();  if(x  <  0)  {  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0)  {  int  x  =  getLastChar();  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar();    if(x    <    0)    {    	non-compiled	[CE]  	160	None	replace
701	[BUG]  [BUGGY]  double  x  =  getLastChar();  if(x  <  0)  {  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar();  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar();    if(x    <    0)    {    	non-compiled	[CE]  	160	None	replace
702	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '-')  {  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '-')  {	  if(x    <    0)    {    int    x    =    getLastChar();    if(x    <    0)    {    	non-compiled	[CE]  	160	None	replace
703	[BUG]  [BUGGY]  long  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '-')  {  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '-')  {	  if(x    <    0)    {    int    x    =    getLastChar();    if(x    <    0)    {    	non-compiled	[CE]  	160	None	replace
704	[BUG]  [BUGGY]  Integer  x  =  getLastChar();  if(x  <  0)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar();  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar();    if(x    <    0)    {    	non-compiled	[CE]  	160	None	replace
705	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  >=  0)  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  >=  0)  {	  if(x    <    0)    {    int    x    =    getLastChar();    if(x    <    0)    {    	non-compiled	[CE]  	160	None	replace
706	[BUG]  [BUGGY]  Integer  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '-')  {  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '-')  {	  if(x    <    0)    {    int    x    =    getLastChar();    if(x    <    0)    {    	non-compiled	[CE]  	160	None	replace
707	[BUG]  [BUGGY]  if((  x  <=  0)||(x  ==  prev))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <=  0)||(x  ==  prev))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <=  0)||(x  ==  prev))  {	  if((    int)x    ==    prev)    {    	non-compiled	[CE]  	13	None	replace
708	[BUG]  [BUGGY]  if((  x  <=  0)||(x  >=  prev))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <=  0)||(x  >=  prev))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <=  0)||(x  >=  prev))  {	  if((    int)x    ==    prev)    {    	non-compiled	[CE]  	13	None	replace
709	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  <  0  &&  prev!=  '-'))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  <  0  &&  prev!=  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  <  0  &&  prev!=  '-'))  {	  if((    int)x    ==    prev)    {    	non-compiled	[CE]  	13	None	replace
710	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  <  0  &&  prev  ==  '-'))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  <  0  &&  prev  ==  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  <  0  &&  prev  ==  '-'))  {	  if((    int)x    ==    prev)    {    	non-compiled	[CE]  	13	None	replace
711	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  <  0  &&  prev  >=  '-'))  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  <  0  &&  prev  >=  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  <  0  &&  prev  >=  '-'))  {	  if((    int)x    ==    prev)    {    	non-compiled	[CE]  	13	None	replace
712	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    >    prev)    {    if((  long)x  >  prev)  {	  	non-compiled	[CE]  	5	None	add
713	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  If((  long)x  >  prev)  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  prev)  {  If((  long)x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    >    prev)    {    If((  long)x  >  prev)  {	  	non-compiled	[CE]  	5	None	add
714	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  Prev)  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  Prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    >    prev)    {    if((  long)x  >  Prev)  {	  	non-compiled	[CE]  	5	None	add
715	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  if((  Long)x  >  prev)  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  prev)  {  if((  Long)x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    >    prev)    {    if((  Long)x  >  prev)  {	  	non-compiled	[CE]  	5	None	add
716	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  if((  short)x  >  prev)  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  prev)  {  if((  short)x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    >    prev)    {    if((  short)x  >  prev)  {	  	non-compiled	[CE]  	5	None	add
717	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  while((  long)x  >  prev)  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  prev)  {  while((  long)x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    >    prev)    {    while((  long)x  >  prev)  {	  	non-compiled	[CE]  	5	None	add
718	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  ==  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  ==  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    >    prev)    {    if((  long)x  >  prev)  ==	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
719	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  for((  long)x  >  prev)  {  [CE]  not  a  statement  [FE]                  ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  prev)  {  for((  long)x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    >    prev)    {    for((  long)x  >  prev)  {	  	non-compiled	[CE]  not  a  statement	5	None	add
720	[BUG]  [BUGGY]  char  value  =  Math.pow(10,  prev  +  1);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  Math.pow(10,  prev  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  Math.pow(10,  prev  +  1);	  int    value    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  	184	None	replace
721	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  /  1);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev  /  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev  /  1);	  int    value    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  	184	None	replace
722	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  +  2);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev  +  2);	  int    value    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  	184	None	replace
723	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  /  10  +  1);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev  /  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev  /  10  +  1);	  int    value    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  	184	None	replace
724	[BUG]  [BUGGY]  Double  value  =  Math.pow(10,  prev  +  1);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  Math.pow(10,  prev  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  Math.pow(10,  prev  +  1);	  int    value    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  	184	None	replace
725	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  x  +  1);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  x  +  1);	  long    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  	247	None	replace
726	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  x  -  1);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  x  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  x  -  1);	  long    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  	247	None	replace
727	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  x  -  prev);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  x  -  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  x  -  prev);	  long    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  	247	None	replace
728	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  if((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  if((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '-')  {  if((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    {    prev)    {    	non-compiled	[CE]  ';'  expected	242	None	replace
729	[BUG]  [BUGGY]  if(x  >=  prev)  {  if((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  if((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  if((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    {    prev)    {    	non-compiled	[CE]  ';'  expected	242	None	replace
730	[BUG]  [BUGGY]  if(x  ==  prev)  {  if((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  if((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  if((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    {    prev)    {    	non-compiled	[CE]  ';'  expected	242	None	replace
731	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >=  '-')  {  if((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >=  '-')  {  if((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >=  '-')  {  if((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    {    prev)    {    	non-compiled	[CE]  ';'  expected	242	None	replace
732	[BUG]  [BUGGY]  Number  x  =  getFirstChar();  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  x  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  x  =  getFirstChar();	          x    =    getLastChar();    Integer    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	309	None	replace
733	[BUG]  [BUGGY]  Long  x  =  getFirstChar();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  x  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  x  =  getFirstChar();	          x    =    getLastChar();    Integer    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	309	None	replace
734	[BUG]  [BUGGY]  double  mantissa  =  getMeanOp(x);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getMeanOp(x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getMeanOp(x);	  double    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	75	None	replace
735	[BUG]  [BUGGY]  double  mantissa  =  getMeanOp()  +  1;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getMeanOp()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getMeanOp()  +  1;	  double    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	75	None	replace
736	[BUG]  [BUGGY]  double  mantissa  =  getSemiColon();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getSemiColon();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getSemiColon();	  double    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	75	None	replace
737	[BUG]  [BUGGY]  double  mantissa  =  getMeanOp()  /  10;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getMeanOp()  /  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getMeanOp()  /  10;	  double    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	75	None	replace
738	[BUG]  [BUGGY]  double  x  =  getFirstChar().doubleValue();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getFirstChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getFirstChar().doubleValue();	  double    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	169	None	replace
739	[BUG]  [BUGGY]  double  x  =  getFirstChar()  -  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getFirstChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getFirstChar()  -  1;	  double    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	169	None	replace
740	[BUG]  [BUGGY]  double  x  =  getFirstChar().toCharArray();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getFirstChar().toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getFirstChar().toCharArray();	  double    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	169	None	replace
741	[BUG]  [BUGGY]  double  x  =  getPreviousChar();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getPreviousChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getPreviousChar();	  double    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	169	None	replace
742	[BUG]  [BUGGY]  if(x  <  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	358	None	replace
743	[BUG]  [BUGGY]  if(x  <=  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	358	None	replace
744	[BUG]  [BUGGY]  if(x  <  Long.MAX_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MAX_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MAX_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	358	None	replace
745	[BUG]  [BUGGY]  if(x  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MAX_VALUE)  {	  if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	358	None	replace
746	[BUG]  [BUGGY]  if(x  <  Long.MAX_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MAX_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MAX_VALUE  ||  prev  >=  Long.MAX_VALUE)  {	  if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	358	None	replace
747	[BUG]  [BUGGY]  if(x  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MAX_VALUE)  {	  if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	358	None	replace
748	[BUG]  [BUGGY]  Double  value  =  getLastChar()  +  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getLastChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getLastChar()  +  1;	  Double    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	376	None	replace
749	[BUG]  [BUGGY]  Double  value  =  getNumber();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getNumber();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getNumber();	  Double    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	376	None	replace
750	[BUG]  [BUGGY]  Double  value  =  getLastChar()  -  1;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getLastChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getLastChar()  -  1;	  Double    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	376	None	replace
751	[BUG]  [BUGGY]  Double  value  =  getNumberValue();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getNumberValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getNumberValue();	  Double    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	376	None	replace
752	[BUG]  [BUGGY]  Double  value  =  getLongValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getLongValue();	  Double    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	376	None	replace
753	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('-',  prev);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('-',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('-',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    	non-compiled	[CE]  ';'  expected	323	None	replace
754	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('-',  prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('-',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('-',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    	non-compiled	[CE]  ';'  expected	323	None	replace
755	[BUG]  [BUGGY]  char  x  =  getLastChar().lastIndexOf('-',  prev);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().lastIndexOf('-',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().lastIndexOf('-',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    	non-compiled	[CE]  ';'  expected	323	None	replace
756	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('-',  prev);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('-',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('-',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    	non-compiled	[CE]  ';'  expected	323	None	replace
757	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  prev)+  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  prev)+  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-',  prev)+  1;	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    	non-compiled	[CE]  ';'  expected	323	None	replace
758	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev  +  1);  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev  +  1);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n',  prev  +  1);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	318	None	replace
759	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('n',  prev);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('n',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('n',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	318	None	replace
760	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev)+  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev)+  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n',  prev)+  1;	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	318	None	replace
761	[BUG]  [BUGGY]  char  x  =  getLastChar().lastIndexOf('n',  prev);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().lastIndexOf('n',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().lastIndexOf('n',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	318	None	replace
762	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('n',  prev);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('n',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('n',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	318	None	replace
763	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  (double)x)  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (double)x)  {  int  x  =  getLastChar();  }	  if(x    ==    (double)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	362	None	replace
764	[BUG]  [BUGGY]  if(prev  ==  ')')  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  ')')  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  ')')  {  int  x  =  getLastChar();  }	  if(x    ==    (double)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	362	None	replace
765	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  int  x  =  getFirstChar();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  (double)x)  {  int  x  =  getFirstChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (double)x)  {  int  x  =  getFirstChar();  }	  if(x    ==    (double)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	362	None	replace
766	[BUG]  [BUGGY]  if(x  ==  prev  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	124	None	replace
767	[BUG]  [BUGGY]  if(x  <  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	124	None	replace
768	[BUG]  [BUGGY]  if(prev  ==  x  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	124	None	replace
769	[BUG]  [BUGGY]  if(x!=  prev  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	124	None	replace
770	[BUG]  [BUGGY]  if(x  >=  prev  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	124	None	replace
771	[BUG]  [BUGGY]  if(x  >=  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	124	None	replace
772	[BUG]  [BUGGY]  if(x!=  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	124	None	replace
773	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	124	None	replace
774	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue(prev);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue(prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue(prev);	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
775	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
776	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue(prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue(prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue(prev);  if(x  <  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
777	[BUG]  [BUGGY]  Integer  x  =  getLastChar().computeIntValue(prev);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().computeIntValue(prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().computeIntValue(prev);	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
778	[BUG]  [BUGGY]  double  x  =  getLastChar().computeLongValue(prev);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().computeLongValue(prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().computeLongValue(prev);	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
779	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue(prev);  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue(prev);  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue(prev);  if(x  >=  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
780	[BUG]  [BUGGY]  double  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
781	[BUG]  [BUGGY]  long  x  =  getLastChar().computeLongValue(prev);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().computeLongValue(prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().computeLongValue(prev);	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
782	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue(prev);  if(x!=  0)  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue(prev);  if(x!=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue(prev);  if(x!=  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
783	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  1  -  1);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  1  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  +  1  -  1);	  int    mantissa    =    Math.pow(10,    prev    +    1    -    1);    	non-compiled	[CE]  ';'  expected	340	None	replace
784	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  prev  +  1  -  1);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  prev  +  1  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  prev  +  1  -  1);	  int    mantissa    =    Math.pow(10,    prev    +    1    -    1);    	non-compiled	[CE]  ';'  expected	340	None	replace
785	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  +  2  -  1);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  +  2  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  +  2  -  1);	  int    mantissa    =    Math.pow(10,    prev    +    1    -    1);    	non-compiled	[CE]  ';'  expected	340	None	replace
786	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  /  1  -  1);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  /  1  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  /  1  -  1);	  int    mantissa    =    Math.pow(10,    prev    +    1    -    1);    	non-compiled	[CE]  ';'  expected	340	None	replace
787	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  *  1  -  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  *  1  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  *  1  -  1);	  int    mantissa    =    Math.pow(10,    prev    +    1    -    1);    	non-compiled	[CE]  ';'  expected	340	None	replace
788	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  +  1  -  2);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  +  1  -  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  +  1  -  2);	  int    mantissa    =    Math.pow(10,    prev    +    1    -    1);    	non-compiled	[CE]  ';'  expected	340	None	replace
789	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
790	[BUG]  [BUGGY]  long  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
791	[BUG]  [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
792	[BUG]  [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  x);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  x);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  x);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
793	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  >=  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
794	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
795	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
796	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  ==  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
797	[BUG]  [BUGGY]  if((  Long)x  ==  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  Long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  Long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    Long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	339	None	replace
798	[BUG]  [BUGGY]  if(!(x  ==  prev))  {  if((  Long)x  ==  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(!(x  ==  prev))  {  if((  Long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(!(x  ==  prev))  {  if((  Long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    Long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	339	None	replace
799	[BUG]  [BUGGY]  if(!(x  ==  prev))  {  if((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(!(x  ==  prev))  {  if((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(!(x  ==  prev))  {  if((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    Long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	339	None	replace
800	[BUG]  [BUGGY]  x  =  getFirstChar().toCharArray();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar().toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar().toCharArray();	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
801	[BUG]  [BUGGY]  double  x  =  getLastChar();  x  =  getLastChar().toCharArray();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar();  x  =  getLastChar().toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar();  x  =  getLastChar().toCharArray();	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
802	[BUG]  [BUGGY]  x  =  getLastChar();  x  =  getFirstChar().toCharArray();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar();  x  =  getFirstChar().toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar();  x  =  getFirstChar().toCharArray();	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
803	[BUG]  [BUGGY]  n  =  getLastChar();  x  =  getLastChar().toCharArray();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  n  =  getLastChar();  x  =  getLastChar().toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	n  =  getLastChar();  x  =  getLastChar().toCharArray();	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
804	[BUG]  [BUGGY]  x  =  getFirstChar();  x  =  getLastChar().toCharArray();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar();  x  =  getLastChar().toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar();  x  =  getLastChar().toCharArray();	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
805	[BUG]  [BUGGY]  n  =  getLastChar();  n  =  getLastChar().toCharArray();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  n  =  getLastChar();  n  =  getLastChar().toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	n  =  getLastChar();  n  =  getLastChar().toCharArray();	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
806	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	164	None	replace
807	[BUG]  [BUGGY]  long  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	164	None	replace
808	[BUG]  [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  x);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  x);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  x);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	164	None	replace
809	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  >=  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	164	None	replace
810	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	164	None	replace
811	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	164	None	replace
812	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  ==  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	164	None	replace
813	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  >  0)  {  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  >  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  >  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	164	None	replace
814	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  2;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)/  2;	  int    mantissa    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	343	None	replace
815	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  prev)/  10;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  Math.pow(10,  prev)/  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  prev)/  10;	  int    mantissa    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	343	None	replace
816	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  10  +  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  10  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)/  10  +  1;	  int    mantissa    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	343	None	replace
817	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  4;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  4;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)/  4;	  int    mantissa    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	343	None	replace
818	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  prev)/  10;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  prev)/  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  prev)/  10;	  int    mantissa    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	343	None	replace
819	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  8;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  8;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)/  8;	  int    mantissa    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	343	None	replace
820	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {	  if(x    >=    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	357	None	replace
821	[BUG]  [BUGGY]  if(x  >  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  if(x    >=    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	357	None	replace
822	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  x  <  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  x  <  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  ||  x  <  Long.MAX_VALUE)  {	  if(x    >=    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	357	None	replace
823	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  x  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  x  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  ||  x  ==  Long.MAX_VALUE)  {	  if(x    >=    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	357	None	replace
824	[BUG]  [BUGGY]  Double  value  =  getLastChar(),  prev.doubleValue();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getLastChar(),  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getLastChar(),  prev.doubleValue();	  Double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	207	None	replace
825	[BUG]  [BUGGY]  Double  value  =  getLastChar().doubleValue()  +  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getLastChar().doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getLastChar().doubleValue()  +  1;	  Double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	207	None	replace
826	[BUG]  [BUGGY]  Double  value  =  getFirstChar().doubleValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getFirstChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getFirstChar().doubleValue();	  Double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	207	None	replace
827	[BUG]  [BUGGY]  Double  value  =  getLastChar().doubleValue()  -  1;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getLastChar().doubleValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getLastChar().doubleValue()  -  1;	  Double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	207	None	replace
828	[BUG]  [BUGGY]  Double  value  =  getLastChar().doubleValue()  /  100.0;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getLastChar().doubleValue()  /  100.0;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getLastChar().doubleValue()  /  100.0;	  Double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	207	None	replace
829	[BUG]  [BUGGY]  Double  value  =  getLastValue().doubleValue();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getLastValue().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getLastValue().doubleValue();	  Double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	207	None	replace
830	[BUG]  [BUGGY]  double  value  =  getFirstChar()  /  2;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstChar()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstChar()  /  2;	  double    value    =    getLastChar()    /    2;    	non-compiled	[CE]  ';'  expected	131	None	replace
831	[BUG]  [BUGGY]  double  value  =  getLastChar()  /  2  +  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  /  2  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  /  2  +  1;	  double    value    =    getLastChar()    /    2;    	non-compiled	[CE]  ';'  expected	131	None	replace
832	[BUG]  [BUGGY]  double  value  =  getLastChar()  *  2;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  *  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  *  2;	  double    value    =    getLastChar()    /    2;    	non-compiled	[CE]  ';'  expected	131	None	replace
833	[BUG]  [BUGGY]  int  value  =  getLastChar()  /  2;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  /  2;	  double    value    =    getLastChar()    /    2;    	non-compiled	[CE]  ';'  expected	131	None	replace
834	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {	  if(x    >=    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	282	None	replace
835	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  ||  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    >=    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	282	None	replace
836	[BUG]  [BUGGY]  if(prev  >=  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    >=    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	282	None	replace
837	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev!=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev!=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  &&  prev!=  Double.POSITIVE_INFINITY)  {	  if(x    >=    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	282	None	replace
838	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  <  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  <  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  &&  prev  <  Double.POSITIVE_INFINITY)  {	  if(x    >=    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	282	None	replace
839	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {	  if(x    >=    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	282	None	replace
840	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  ||  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    >=    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	282	None	replace
841	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  ||  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    >=    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	282	None	replace
842	[BUG]  [BUGGY]  x  =  getLastChar().toString();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().toString();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().toString();	  x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	114	None	replace
843	[BUG]  [BUGGY]  x  =  getLastChar().toCharArray()  +  1;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().toCharArray()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().toCharArray()  +  1;	  x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	114	None	replace
844	[BUG]  [BUGGY]  x  =  getLastChar().getLongValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().getLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().getLongValue();	  x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	114	None	replace
845	[BUG]  [BUGGY]  x  =  getLastChar().getLength();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().getLength();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().getLength();	  x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	114	None	replace
846	[BUG]  [BUGGY]  char  value  =  getLastChar().doubleValue()  +  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  getLastChar().doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  getLastChar().doubleValue()  +  1;	  int    value    =    getLastChar().doubleValue()    +    1;    	non-compiled	[CE]  ';'  expected	198	None	replace
847	[BUG]  [BUGGY]  int  value  =  getFirstChar().doubleValue()  +  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getFirstChar().doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstChar().doubleValue()  +  1;	  int    value    =    getLastChar().doubleValue()    +    1;    	non-compiled	[CE]  ';'  expected	198	None	replace
848	[BUG]  [BUGGY]  if(x  <  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	370	None	replace
849	[BUG]  [BUGGY]  if(prev  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	370	None	replace
850	[BUG]  [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  >=  Preconditions.MAX_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  >=  Preconditions.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.MIN_VALUE  ||  prev  >=  Preconditions.MAX_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	370	None	replace
851	[BUG]  [BUGGY]  if(x  >=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	370	None	replace
852	[BUG]  [BUGGY]  if(x  <  Preconditions.MIN_VALUE  ||  prev  >=  Preconditions.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Preconditions.MIN_VALUE  ||  prev  >=  Preconditions.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Preconditions.MIN_VALUE  ||  prev  >=  Preconditions.MAX_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	370	None	replace
853	[BUG]  [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  ==  Preconditions.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  ==  Preconditions.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.MIN_VALUE  ||  prev  ==  Preconditions.MAX_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	370	None	replace
854	[BUG]  [BUGGY]  if(x  ==  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	370	None	replace
855	[BUG]  [BUGGY]  if(x  <  prev  ||  prev  >  Preconditions.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev  ||  prev  >  Preconditions.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev  ||  prev  >  Preconditions.MIN_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	370	None	replace
856	[BUG]  [BUGGY]  long  mantissa  =  getLastChar()  +  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getLastChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getLastChar()  +  1;	  int    mantissa    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	120	None	replace
857	[BUG]  [BUGGY]  int  mantissa  =  getFirstChar()  +  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getFirstChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getFirstChar()  +  1;	  int    mantissa    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	120	None	replace
858	[BUG]  [BUGGY]  Integer  mantissa  =  getLastChar();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  mantissa  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  mantissa  =  getLastChar();	  int    mantissa    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	120	None	replace
859	[BUG]  [BUGGY]  int  mantissa  =  getLastChar()  /  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getLastChar()  /  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar()  /  1;	  int    mantissa    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	120	None	replace
860	[BUG]  [BUGGY]  double  x  =  getLastChar().length  -  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().length  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().length  -  1;	  double    x    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	173	None	replace
861	[BUG]  [BUGGY]  long  x  =  getLastChar()  -  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar()  -  1;	  double    x    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	173	None	replace
862	[BUG]  [BUGGY]  double  mantissa  =  getMeanOp(0);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getMeanOp(0);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getMeanOp(0);	  int    mantissa    =    getMeanOp(0);    	non-compiled	[CE]  ';'  expected	334	None	replace
863	[BUG]  [BUGGY]  long  mantissa  =  getMeanOp(0);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getMeanOp(0);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getMeanOp(0);	  int    mantissa    =    getMeanOp(0);    	non-compiled	[CE]  ';'  expected	334	None	replace
864	[BUG]  [BUGGY]  char  mantissa  =  getMeanOp(0);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  getMeanOp(0);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  getMeanOp(0);	  int    mantissa    =    getMeanOp(0);    	non-compiled	[CE]  ';'  expected	334	None	replace
865	[BUG]  [BUGGY]  double  mantissa  =  getMeanOp(1);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getMeanOp(1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getMeanOp(1);	  int    mantissa    =    getMeanOp(0);    	non-compiled	[CE]  ';'  expected	334	None	replace
866	[BUG]  [BUGGY]  char  mantissa  =  getMeanOp(1);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  getMeanOp(1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  getMeanOp(1);	  int    mantissa    =    getMeanOp(0);    	non-compiled	[CE]  ';'  expected	334	None	replace
867	[BUG]  [BUGGY]  long  mantissa  =  getMeanOp(1);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getMeanOp(1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getMeanOp(1);	  int    mantissa    =    getMeanOp(0);    	non-compiled	[CE]  ';'  expected	334	None	replace
868	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp(1);  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp(1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp(1);	  int    mantissa    =    getMeanOp(0);    	non-compiled	[CE]  ';'  expected	334	None	replace
869	[BUG]  [BUGGY]  if(x  ==  (long)prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  (long)prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (long)prev)  {	  if(x    ==    (int)prev)    {    	non-compiled	[CE]  ';'  expected	283	None	replace
870	[BUG]  [BUGGY]  if(x  >=  (double)prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  (double)prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (double)prev)  {	  if(x    ==    (int)prev)    {    	non-compiled	[CE]  ';'  expected	283	None	replace
871	[BUG]  [BUGGY]  if(prev  ==  (char)x)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  (char)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  (char)x)  {	  if(x    ==    (int)prev)    {    	non-compiled	[CE]  ';'  expected	283	None	replace
872	[BUG]  [BUGGY]  while(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  ==  (long)x)  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
873	[BUG]  [BUGGY]  while(x  <  0  ||  prev  ==  ';')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  <  0  ||  prev  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  <  0  ||  prev  ==  ';')  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
874	[BUG]  [BUGGY]  while(x  ==  (int)x)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  ==  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  ==  (int)x)  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
875	[BUG]  [BUGGY]  while(x  >=  (long)x)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  >=  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  >=  (long)x)  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
876	[BUG]  [BUGGY]  while(x  ==  prev)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  ==  prev)  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
877	[BUG]  [BUGGY]  while(x  <  0  ||  prev  ==  '.')  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  <  0  ||  prev  ==  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  <  0  ||  prev  ==  '.')  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
878	[BUG]  [BUGGY]  while(x  <  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  <  0  ||  prev  ==  '-')  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
879	[BUG]  [BUGGY]  while(x  <  0  ||  prev  ==  ':')  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  <  0  ||  prev  ==  ':')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  <  0  ||  prev  ==  ':')  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
880	[BUG]  [BUGGY]  while(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  ==  (double)x)  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
881	[BUG]  [BUGGY]  x  =  getFirstChar().getLongValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar().getLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar().getLongValue();	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
882	[BUG]  [BUGGY]  double  x  =  getLastChar();  x  =  getLastChar().getLongValue();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar();  x  =  getLastChar().getLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar();  x  =  getLastChar().getLongValue();	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
883	[BUG]  [BUGGY]  n  =  getLastChar();  x  =  getLastChar().getLongValue();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  n  =  getLastChar();  x  =  getLastChar().getLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	n  =  getLastChar();  x  =  getLastChar().getLongValue();	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
884	[BUG]  [BUGGY]  x  =  getFirstChar();  x  =  getLastChar().getLongValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar();  x  =  getLastChar().getLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar();  x  =  getLastChar().getLongValue();	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
885	[BUG]  [BUGGY]  n  =  getLastChar().getLongValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  n  =  getLastChar().getLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	n  =  getLastChar().getLongValue();	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
886	[BUG]  [BUGGY]  x  =  getLastChar();  x  =  getLastChar().getIntValue();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar();  x  =  getLastChar().getIntValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar();  x  =  getLastChar().getIntValue();	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
887	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev).doubleValue()  +  1;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev).doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev).doubleValue()  +  1;	  double    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	70	None	replace
888	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev),  x.doubleValue();  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev),  x.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev),  x.doubleValue();	  double    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	70	None	replace
889	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev),  Double.doubleToLongBits(x));  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev),  Double.doubleToLongBits(x));  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev),  Double.doubleToLongBits(x));	  double    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	70	None	replace
890	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev).doubleValue()  /  10;  [CE]  ';'  expected  [FE]                                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev).doubleValue()  /  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev).doubleValue()  /  10;	  double    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	70	None	replace
891	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  x).doubleValue();  [CE]  ';'  expected  [FE]                                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  x).doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  x).doubleValue();	  double    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	70	None	replace
892	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev),  Double.doubleValue();  [CE]  ';'  expected  [FE]                                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev),  Double.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev),  Double.doubleValue();	  double    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	70	None	replace
893	[BUG]  [BUGGY]  Double  value  =  Math.pow(10,  prev).doubleValue();  [CE]  ';'  expected  [FE]                                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  Math.pow(10,  prev).doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  Math.pow(10,  prev).doubleValue();	  double    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	70	None	replace
894	[BUG]  [BUGGY]  String  value  =  prev!=  null?  getLastChar().toCharArray()  :  x;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =  prev!=  null?  getLastChar().toCharArray()  :  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  prev!=  null?  getLastChar().toCharArray()  :  x;	  char    value    =    prev!=    null?    getLastChar().toCharArray()    :    x;    	non-compiled	[CE]  ';'  expected	366	None	replace
895	[BUG]  [BUGGY]  if(x  <=  (double)prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  (double)prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  (double)prev)  {	  if(x    <=    (double)x)    {    	non-compiled	[CE]  ';'  expected	349	None	replace
896	[BUG]  [BUGGY]  if(x  <=  Double.MIN_VALUE  ||  prev  >  Double.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Double.MIN_VALUE  ||  prev  >  Double.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Double.MIN_VALUE  ||  prev  >  Double.MAX_VALUE)  {	  if(x    <=    (double)x)    {    	non-compiled	[CE]  ';'  expected	349	None	replace
897	[BUG]  [BUGGY]  if(x  <=  Double.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Double.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Double.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  if(x    <=    (double)x)    {    	non-compiled	[CE]  ';'  expected	349	None	replace
898	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  /  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar().doubleValue()  /  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  /  1;	  double    value    =    getLastChar().doubleValue()    -    1;    	non-compiled	[CE]  ';'  expected	206	None	replace
899	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  *  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar().doubleValue()  *  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  *  1;	  double    value    =    getLastChar().doubleValue()    -    1;    	non-compiled	[CE]  ';'  expected	206	None	replace
900	[BUG]  [BUGGY]  double  value  =  getFirstChar().doubleValue()  -  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstChar().doubleValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstChar().doubleValue()  -  1;	  double    value    =    getLastChar().doubleValue()    -    1;    	non-compiled	[CE]  ';'  expected	206	None	replace
901	[BUG]  [BUGGY]  double  value  =  getLastChar(),  prev.doubleValue()  -  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar(),  prev.doubleValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar(),  prev.doubleValue()  -  1;	  double    value    =    getLastChar().doubleValue()    -    1;    	non-compiled	[CE]  ';'  expected	206	None	replace
902	[BUG]  [BUGGY]  double  value  =  getFirstChar()  -  1;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstChar()  -  1;	  double    value    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	130	None	replace
903	[BUG]  [BUGGY]  long  value  =  getLastChar()  -  1;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar()  -  1;	  double    value    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	130	None	replace
904	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)/  1;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)/  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)/  1;	  double    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	67	None	replace
905	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)+  2;  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)+  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)+  2;	  double    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	67	None	replace
906	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)+  3;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)+  3;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)+  3;	  double    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	67	None	replace
907	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)+  1  +  1;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)+  1  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)+  1  +  1;	  double    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	67	None	replace
908	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)+  1L;  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)+  1L;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)+  1L;	  double    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	67	None	replace
909	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)+  4;  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)+  4;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)+  4;	  double    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	67	None	replace
910	[BUG]  [BUGGY]  long  mantissa  =  getFirstChar();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getFirstChar();	  int    mantissa    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	121	None	replace
911	[BUG]  [BUGGY]  char  mantissa  =  getFirstChar();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  getFirstChar();	  int    mantissa    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	121	None	replace
912	[BUG]  [BUGGY]  int  mantissa  =  getFirstChar()  -  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getFirstChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getFirstChar()  -  1;	  int    mantissa    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	121	None	replace
913	[BUG]  [BUGGY]  int  mantissa  =  getFirstChar().doubleValue();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getFirstChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getFirstChar().doubleValue();	  int    mantissa    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	121	None	replace
914	[BUG]  [BUGGY]  Integer  mantissa  =  getFirstChar();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  mantissa  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  mantissa  =  getFirstChar();	  int    mantissa    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	121	None	replace
915	[BUG]  [BUGGY]  int  mantissa  =  getFirstChar()  &  0xff;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getFirstChar()  &  0xff;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getFirstChar()  &  0xff;	  int    mantissa    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	121	None	replace
916	[BUG]  [BUGGY]  if((  long)x  ==  Preconditions.NUMBER_INT)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  ==  Preconditions.NUMBER_INT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  ==  Preconditions.NUMBER_INT)  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
917	[BUG]  [BUGGY]  if((  long)x  >=  Preconditions.NUMBER_INT)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >=  Preconditions.NUMBER_INT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >=  Preconditions.NUMBER_INT)  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
918	[BUG]  [BUGGY]  if((  int)x!=  Preconditions.NUMBER_INT)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x!=  Preconditions.NUMBER_INT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  int)x!=  Preconditions.NUMBER_INT)  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
919	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  Preconditions.NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  Preconditions.NUMBER_FLOAT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  Preconditions.NUMBER_FLOAT)  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
920	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  Integer.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  Integer.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  Integer.MIN_VALUE)  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
921	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  >=  Preconditions.NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  >=  Preconditions.NUMBER_FLOAT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  >=  Preconditions.NUMBER_FLOAT)  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
922	[BUG]  [BUGGY]  if((  long)x  >=  Preconditions.NUMBER_INT  ||  prev  ==  Preconditions.NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >=  Preconditions.NUMBER_INT  ||  prev  ==  Preconditions.NUMBER_FLOAT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >=  Preconditions.NUMBER_INT  ||  prev  ==  Preconditions.NUMBER_FLOAT)  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
923	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  Long.MAX_VALUE)  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
924	[BUG]  [BUGGY]  char  value  =(double)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(double)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(double)Math.pow(10,  prev);	  double    value    =(double)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	14	None	replace
925	[BUG]  [BUGGY]  long  value  =(double)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =(double)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(double)Math.pow(10,  x);	  double    value    =(double)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	14	None	replace
926	[BUG]  [BUGGY]  double  value  =(int)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(int)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(int)Math.pow(10,  x);	  double    value    =(double)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	14	None	replace
927	[BUG]  [BUGGY]  long  value  =(double)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =(double)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(double)Math.pow(10,  prev);	  double    value    =(double)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	14	None	replace
928	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  ||  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
929	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
930	[BUG]  [BUGGY]  if(prev  ==  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
931	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
932	[BUG]  [BUGGY]  double  x  =  getLastChar().doubleValue()  +  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().doubleValue()  +  1;	  double    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	170	None	replace
933	[BUG]  [BUGGY]  double  x  =  getLastChar().doubleValue()  +  2;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().doubleValue()  +  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().doubleValue()  +  2;	  double    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	170	None	replace
934	[BUG]  [BUGGY]  double  x  =  getLastChar().doubleValue()  *  2;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().doubleValue()  *  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().doubleValue()  *  2;	  double    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	170	None	replace
935	[BUG]  [BUGGY]  if(x  <=  Double.POSITIVE_INFINITY  ||  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Double.POSITIVE_INFINITY  ||  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Double.POSITIVE_INFINITY  ||  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
936	[BUG]  [BUGGY]  if(x  <=  Double.POSITIVE_INFINITY  ||  prev  <=  Double.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Double.POSITIVE_INFINITY  ||  prev  <=  Double.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Double.POSITIVE_INFINITY  ||  prev  <=  Double.NEGATIVE_INFINITY)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
937	[BUG]  [BUGGY]  if(x  <=  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
938	[BUG]  [BUGGY]  if(x  <=  Double.POSITIVE_INFINITY  ||  prev  >  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Double.POSITIVE_INFINITY  ||  prev  >  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Double.POSITIVE_INFINITY  ||  prev  >  Double.POSITIVE_INFINITY)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
939	[BUG]  [BUGGY]  if(x  <=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
940	[BUG]  [BUGGY]  if(x  <=  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
941	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  /  10  +  1);	  double    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	150	None	replace
942	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  *  1);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  *  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  *  1);	  double    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	150	None	replace
943	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  3);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  3);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  +  3);	  double    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	150	None	replace
944	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  *  10  +  1);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  *  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  *  10  +  1);	  double    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	150	None	replace
945	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
946	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
947	[BUG]  [BUGGY]  if(prev  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
948	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
949	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
950	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
951	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
952	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
953	[BUG]  [BUGGY]  if(x  ==  prev)  {  if((  long)x  ==  Prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  if((  long)x  ==  Prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  if((  long)x  ==  Prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    ==    Prev)    {    	non-compiled	[CE]  ';'  expected	244	None	replace
954	[BUG]  [BUGGY]  if(x  >=  prev)  {  if((  long)x  ==  Prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  if((  long)x  ==  Prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  if((  long)x  ==  Prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    ==    Prev)    {    	non-compiled	[CE]  ';'  expected	244	None	replace
955	[BUG]  [BUGGY]  if((  long)x  ==  Prev)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  ==  Prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  ==  Prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    ==    Prev)    {    	non-compiled	[CE]  ';'  expected	244	None	replace
956	[BUG]  [BUGGY]  double  value  =  getLowerCase();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLowerCase();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLowerCase();	  double    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	132	None	replace
957	[BUG]  [BUGGY]  double  value  =  getSemiColon();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getSemiColon();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getSemiColon();	  double    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	132	None	replace
958	[BUG]  [BUGGY]  double  value  =  getLowerCaseValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLowerCaseValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLowerCaseValue();	  double    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	132	None	replace
959	[BUG]  [BUGGY]  double  value  =  getPreviousChar();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getPreviousChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getPreviousChar();	  double    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	132	None	replace
960	[BUG]  [BUGGY]  double  value  =  getSemiColonValue();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getSemiColonValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getSemiColonValue();	  double    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	132	None	replace
961	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)/  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)/  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)/  1;	  int    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	298	None	replace
962	[BUG]  [BUGGY]  char  value  =  Math.pow(10,  prev)+  1;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  Math.pow(10,  prev)+  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  Math.pow(10,  prev)+  1;	  int    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	298	None	replace
963	[BUG]  [BUGGY]  long  value  =  Math.pow(10,  prev)+  1;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  Math.pow(10,  prev)+  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  Math.pow(10,  prev)+  1;	  int    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	298	None	replace
964	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)+  2;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)+  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)+  2;	  int    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	298	None	replace
965	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)+  1  +  1;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)+  1  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)+  1  +  1;	  int    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	298	None	replace
966	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)+  3;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)+  3;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)+  3;	  int    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	298	None	replace
967	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)+  1L;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)+  1L;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)+  1L;	  int    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	298	None	replace
968	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp().length  +  1;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp().length  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp().length  +  1;	  int    mantissa    =    getMeanOp()    +    1;    	non-compiled	[CE]  ';'  expected	81	None	replace
969	[BUG]  [BUGGY]  char  mantissa  =  getMeanOp()  +  1;  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  getMeanOp()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  getMeanOp()  +  1;	  int    mantissa    =    getMeanOp()    +    1;    	non-compiled	[CE]  ';'  expected	81	None	replace
970	[BUG]  [BUGGY]  long  mantissa  =  getMeanOp()  +  1;  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getMeanOp()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getMeanOp()  +  1;	  int    mantissa    =    getMeanOp()    +    1;    	non-compiled	[CE]  ';'  expected	81	None	replace
971	[BUG]  [BUGGY]  if((  x  +  prev)  >=  (long)x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  +  prev)  >=  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  +  prev)  >=  (long)x)  {	  if((    long)x    >>    prev)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
972	[BUG]  [BUGGY]  if((  int)x  >>  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  >>  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  int)x  >>  prev)  {	  if((    long)x    >>    prev)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
973	[BUG]  [BUGGY]  if((  x  +  prev)  >=  (int)x)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  +  prev)  >=  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  +  prev)  >=  (int)x)  {	  if((    long)x    >>    prev)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
974	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  x);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  x);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-',  x);	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-');    	non-compiled	[CE]  ';'  expected	288	None	replace
975	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  0);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  0);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-',  0);	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-');    	non-compiled	[CE]  ';'  expected	288	None	replace
976	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  1);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  1);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-',  1);	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-');    	non-compiled	[CE]  ';'  expected	288	None	replace
977	[BUG]  [BUGGY]  Integer  value  =  getLastChar().doubleValue()  +  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().doubleValue()  +  1;	  Integer    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	224	None	replace
978	[BUG]  [BUGGY]  Integer  value  =  getLastChar(),  prev.doubleValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar(),  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar(),  prev.doubleValue();	  Integer    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	224	None	replace
979	[BUG]  [BUGGY]  Integer  value  =  getFirstChar().doubleValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChar().doubleValue();	  Integer    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	224	None	replace
980	[BUG]  [BUGGY]  Integer  value  =  getLastChar().doubleValue()  -  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().doubleValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().doubleValue()  -  1;	  Integer    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	224	None	replace
981	[BUG]  [BUGGY]  Integer  value  =  getLastIntChar().doubleValue();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastIntChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntChar().doubleValue();	  Integer    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	224	None	replace
982	[BUG]  [BUGGY]  Integer  value  =  getLastChar().doubleValue()  /  10;  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().doubleValue()  /  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().doubleValue()  /  10;	  Integer    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	224	None	replace
983	[BUG]  [BUGGY]  Integer  value  =  getLastChar().doubleValue()  /  2;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().doubleValue()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().doubleValue()  /  2;	  Integer    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	224	None	replace
984	[BUG]  [BUGGY]  if((  long)x  >=  prev)  {  If  ((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >=  prev)  {  If  ((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >=  prev)  {  If  ((  long)x  ==  prev)  {	  if    ((    long)x    >=    prev)    {    If    ((    long)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	221	None	replace
985	[BUG]  [BUGGY]  If  ((  long)x  >>  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  If  ((  long)x  >>  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	If  ((  long)x  >>  prev)  {	  if    ((    long)x    >=    prev)    {    If    ((    long)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	221	None	replace
986	[BUG]  [BUGGY]  if((  long)x  >=  prev)  {  If  ((  long)x!=  prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >=  prev)  {  If  ((  long)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >=  prev)  {  If  ((  long)x!=  prev)  {	  if    ((    long)x    >=    prev)    {    If    ((    long)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	221	None	replace
987	[BUG]  [BUGGY]  If  ((  long)x  >  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  If  ((  long)x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	If  ((  long)x  >  prev)  {	  if    ((    long)x    >=    prev)    {    If    ((    long)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	221	None	replace
988	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  ';')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  ';')  {	  if(x    ==    (long)x)    {    if(x    >>    (long)x)    {    	non-compiled	[CE]  ';'  expected	328	None	replace
989	[BUG]  [BUGGY]  if(prev  ==  ';')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  ';')  {	  if(x    ==    (long)x)    {    if(x    >>    (long)x)    {    	non-compiled	[CE]  ';'  expected	328	None	replace
990	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('-')+  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('-')+  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('-')+  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-')+    1;    	non-compiled	[CE]  ';'  expected	291	None	replace
991	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('-')+  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('-')+  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('-')+  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-')+    1;    	non-compiled	[CE]  ';'  expected	291	None	replace
992	[BUG]  [BUGGY]  char  x  =  getLastChar().lastIndexOf('-')+  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().lastIndexOf('-')+  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().lastIndexOf('-')+  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-')+    1;    	non-compiled	[CE]  ';'  expected	291	None	replace
993	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('-')+  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('-')+  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('-')+  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-')+    1;    	non-compiled	[CE]  ';'  expected	291	None	replace
994	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-')/  1;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-')/  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-')/  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-')+    1;    	non-compiled	[CE]  ';'  expected	291	None	replace
995	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('-')+  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('-')+  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('-')+  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-')+    1;    	non-compiled	[CE]  ';'  expected	291	None	replace
996	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-')+  2;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-')+  2;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-')+  2;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-')+    1;    	non-compiled	[CE]  ';'  expected	291	None	replace
997	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  prev);  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  prev);  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  prev);  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    x);    	non-compiled	[CE]  ';'  expected	345	None	replace
998	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.',  prev);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('.',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    x);    	non-compiled	[CE]  ';'  expected	345	None	replace
999	[BUG]  [BUGGY]  char  x  =  getLastChar().lastIndexOf('.',  x);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().lastIndexOf('.',  x);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().lastIndexOf('.',  x);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    x);    	non-compiled	[CE]  ';'  expected	345	None	replace
1000	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('.',  x);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('.',  x);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('.',  x);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    x);    	non-compiled	[CE]  ';'  expected	345	None	replace
1001	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('.',  prev);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('.',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('.',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    x);    	non-compiled	[CE]  ';'  expected	345	None	replace
1002	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.',  x);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.',  x);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('.',  x);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    x);    	non-compiled	[CE]  ';'  expected	345	None	replace
1003	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.',  x);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.',  x);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('.',  x);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    x);    	non-compiled	[CE]  ';'  expected	345	None	replace
1004	[BUG]  [BUGGY]  if(x  <  Integer.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Integer.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Integer.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	279	None	replace
1005	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  /  10);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  /  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  /  10);	  double    value    =    Math.pow(10,    prev    +    10);    	non-compiled	[CE]  ';'  expected	317	None	replace
1006	[BUG]  [BUGGY]  long  value  =  Math.pow(10,  prev  +  10);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  Math.pow(10,  prev  +  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  Math.pow(10,  prev  +  10);	  double    value    =    Math.pow(10,    prev    +    10);    	non-compiled	[CE]  ';'  expected	317	None	replace
1007	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  +  10);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev  +  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev  +  10);	  double    value    =    Math.pow(10,    prev    +    10);    	non-compiled	[CE]  ';'  expected	317	None	replace
1008	[BUG]  [BUGGY]  if(x  >>  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >>  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >>  prev)  {	  if(x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
1009	[BUG]  [BUGGY]  if(x  [Delete]  prev)  {  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  [Delete]  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  [Delete]  prev)  {	  if(x    >=    prev)    {    	non-compiled	[CE]  ')'  expected	108	None	replace
1010	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    double    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	85	None	replace
1011	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    double    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	85	None	replace
1012	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    double    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	85	None	replace
1013	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    double    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	85	None	replace
1014	[BUG]  [BUGGY]  if((  int)x  >  prev)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  int)x  >  prev)  {	  if((    long)x    >    prev)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
1015	[BUG]  [BUGGY]  if((  long)x  >  x)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >  x)  {	  if((    long)x    >    prev)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
1016	[BUG]  [BUGGY]  if((  long)x  >  value)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  value)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >  value)  {	  if((    long)x    >    prev)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
1017	[BUG]  [BUGGY]  String  mantissa  =  Math.pow(10,  prev  +  1);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  mantissa  =  Math.pow(10,  prev  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  mantissa  =  Math.pow(10,  prev  +  1);	  char    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	152	None	replace
1018	[BUG]  [BUGGY]  Char  mantissa  =  Math.pow(10,  prev  +  1);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Char  mantissa  =  Math.pow(10,  prev  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Char  mantissa  =  Math.pow(10,  prev  +  1);	  char    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	152	None	replace
1019	[BUG]  [BUGGY]  CharMantissa  mantissa  =  Math.pow(10,  prev  +  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  CharMantissa  mantissa  =  Math.pow(10,  prev  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	CharMantissa  mantissa  =  Math.pow(10,  prev  +  1);	  char    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	152	None	replace
1020	[BUG]  [BUGGY]  Integer  mantissa  =  Math.pow(10,  prev  +  1);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  mantissa  =  Math.pow(10,  prev  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  mantissa  =  Math.pow(10,  prev  +  1);	  char    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	152	None	replace
1021	[BUG]  [BUGGY]  Character  mantissa  =  Math.pow(10,  prev  +  1);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  mantissa  =  Math.pow(10,  prev  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  mantissa  =  Math.pow(10,  prev  +  1);	  char    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	152	None	replace
1022	[BUG]  [BUGGY]  Char  mantissa  =  Math.pow(10,  x);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Char  mantissa  =  Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Char  mantissa  =  Math.pow(10,  x);	  char    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	248	None	replace
1023	[BUG]  [BUGGY]  Number  mantissa  =  Math.pow(10,  x);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  mantissa  =  Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  mantissa  =  Math.pow(10,  x);	  char    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	248	None	replace
1024	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.');	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.');    	non-compiled	[CE]  ';'  expected	289	None	replace
1025	[BUG]  [BUGGY]  char  x  =  getLastChar().lastIndexOf('.');  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().lastIndexOf('.');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().lastIndexOf('.');	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.');    	non-compiled	[CE]  ';'  expected	289	None	replace
1026	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('.');  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('.');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('.');	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.');    	non-compiled	[CE]  ';'  expected	289	None	replace
1027	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  x);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  x);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  x);	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.');    	non-compiled	[CE]  ';'  expected	289	None	replace
1028	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.')+  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.');    	non-compiled	[CE]  ';'  expected	289	None	replace
1029	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('.');  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('.');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('.');	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.');    	non-compiled	[CE]  ';'  expected	289	None	replace
1030	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  1);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  1);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  1);	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.');    	non-compiled	[CE]  ';'  expected	289	None	replace
1031	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  *  100.0;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar().doubleValue()  *  100.0;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  *  100.0;	  double    value    =    getLastChar().doubleValue()    /    100.0;    	non-compiled	[CE]  ';'  expected	208	None	replace
1032	[BUG]  [BUGGY]  double  value  =  getFirstChar().doubleValue()  /  100.0;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstChar().doubleValue()  /  100.0;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstChar().doubleValue()  /  100.0;	  double    value    =    getLastChar().doubleValue()    /    100.0;    	non-compiled	[CE]  ';'  expected	208	None	replace
1033	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  +  100.0;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar().doubleValue()  +  100.0;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  +  100.0;	  double    value    =    getLastChar().doubleValue()    /    100.0;    	non-compiled	[CE]  ';'  expected	208	None	replace
1034	[BUG]  [BUGGY]  Double  value  =  getLastChar().doubleValue()  *  100.0;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getLastChar().doubleValue()  *  100.0;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getLastChar().doubleValue()  *  100.0;	  double    value    =    getLastChar().doubleValue()    /    100.0;    	non-compiled	[CE]  ';'  expected	208	None	replace
1035	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  /  100.0L;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar().doubleValue()  /  100.0L;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  /  100.0L;	  double    value    =    getLastChar().doubleValue()    /    100.0;    	non-compiled	[CE]  ';'  expected	208	None	replace
1036	[BUG]  [BUGGY]  x  =  getFirstChild().doubleValue();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChild().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChild().doubleValue();	  x    =    getFirstChild();    	non-compiled	[CE]  ';'  expected	111	None	replace
1037	[BUG]  [BUGGY]  double  x  =  getFirstChild();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getFirstChild();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getFirstChild();	  x    =    getFirstChild();    	non-compiled	[CE]  ';'  expected	111	None	replace
1038	[BUG]  [BUGGY]  x  =  getFirstChild().charAt(x);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChild().charAt(x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChild().charAt(x);	  x    =    getFirstChild();    	non-compiled	[CE]  ';'  expected	111	None	replace
1039	[BUG]  [BUGGY]  x  =  getFirstChild().charValue();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChild().charValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChild().charValue();	  x    =    getFirstChild();    	non-compiled	[CE]  ';'  expected	111	None	replace
1040	[BUG]  [BUGGY]  x  =  getFirstChild().x;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChild().x;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChild().x;	  x    =    getFirstChild();    	non-compiled	[CE]  ';'  expected	111	None	replace
1041	[BUG]  [BUGGY]  x  =  getLastChild();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChild();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChild();	  x    =    getFirstChild();    	non-compiled	[CE]  ';'  expected	111	None	replace
1042	[BUG]  [BUGGY]  x  =  getFirstChild().charAt(0);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChild().charAt(0);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChild().charAt(0);	  x    =    getFirstChild();    	non-compiled	[CE]  ';'  expected	111	None	replace
1043	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  -  10  +  1);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  -  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  -  10  +  1);	  double    value    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	68	None	replace
1044	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  -  20);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  -  20);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  -  20);	  double    value    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	68	None	replace
1045	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  -  11);  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  -  11);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  -  11);	  double    value    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	68	None	replace
1046	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  ==  0))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  ==  0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  ==  0))  {	  if((    int)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
1047	[BUG]  [BUGGY]  if((  x  >=  prev)||(x!=  0))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x!=  0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x!=  0))  {	  if((    int)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
1048	[BUG]  [BUGGY]  if((  x  >>  prev)||(x  >=  0))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >>  prev)||(x  >=  0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >>  prev)||(x  >=  0))  {	  if((    int)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
1049	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  >=  0))  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  >=  0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  >=  0))  {	  if((    int)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
1050	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)/  2;  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)/  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)/  2;	  double    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	71	None	replace
1051	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)/  10  +  1;  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)/  10  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)/  10  +  1;	  double    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	71	None	replace
1052	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)/  4;  [CE]  ';'  expected  [FE]                                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)/  4;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)/  4;	  double    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	71	None	replace
1053	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)/  8;  [CE]  ';'  expected  [FE]                                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)/  8;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)/  8;	  double    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	71	None	replace
1054	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)/  3;  [CE]  ';'  expected  [FE]                                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)/  3;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)/  3;	  double    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	71	None	replace
1055	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)/  10  -  1;  [CE]  ';'  expected  [FE]                                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)/  10  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)/  10  -  1;	  double    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	71	None	replace
1056	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)/  2.0;  [CE]  ';'  expected  [FE]                                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)/  2.0;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)/  2.0;	  double    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	71	None	replace
1057	[BUG]  [BUGGY]  while(x  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  ==  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    while(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	337	None	replace
1058	[BUG]  [BUGGY]  while(x  <=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  <=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  <=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    while(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	337	None	replace
1059	[BUG]  [BUGGY]  while(x  <  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  <  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  <  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    while(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	337	None	replace
1060	[BUG]  [BUGGY]  while(x  >=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  >=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  >=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    while(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	337	None	replace
1061	[BUG]  [BUGGY]  while(x!=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x!=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x!=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    while(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	337	None	replace
1062	[BUG]  [BUGGY]  while(x  <  0  ||  prev  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  <  0  ||  prev  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  <  0  ||  prev  ==  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    while(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	337	None	replace
1063	[BUG]  [BUGGY]  while(x  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  <=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    while(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	337	None	replace
1064	[BUG]  [BUGGY]  while(x  >  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  >  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  >  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    while(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	337	None	replace
1065	[BUG]  [BUGGY]  while(x  <  Long.MIN_VALUE  &&  prev  ==  ';')  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  <  Long.MIN_VALUE  &&  prev  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  <  Long.MIN_VALUE  &&  prev  ==  ';')  {	  if(x    ==    Long.MIN_VALUE)    {    while(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	337	None	replace
1066	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)/  2;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)/  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)/  2;	  int    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	377	None	replace
1067	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)/  10  +  1;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)/  10  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)/  10  +  1;	  int    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	377	None	replace
1068	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)/  4;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)/  4;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)/  4;	  int    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	377	None	replace
1069	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)/  3;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)/  3;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)/  3;	  int    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	377	None	replace
1070	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)/  8;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)/  8;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)/  8;	  int    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	377	None	replace
1071	[BUG]  [BUGGY]  char  value  =  Math.pow(10,  prev)/  10;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  Math.pow(10,  prev)/  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  Math.pow(10,  prev)/  10;	  int    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	377	None	replace
1072	[BUG]  [BUGGY]  double  value  =  getLastChar().length;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar().length;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().length;	  int    value    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	24	None	replace
1073	[BUG]  [BUGGY]  long  value  =  getLastChar().length;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar().length;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar().length;	  int    value    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	24	None	replace
1074	[BUG]  [BUGGY]  int  value  =  getLastChar().length  -  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar().length  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().length  -  1;	  int    value    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	24	None	replace
1075	[BUG]  [BUGGY]  char  value  =  getLastChar().length;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  getLastChar().length;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  getLastChar().length;	  int    value    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	24	None	replace
1076	[BUG]  [BUGGY]  int  value  =  getLastChar().length  +  1;  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar().length  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().length  +  1;	  int    value    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	24	None	replace
1077	[BUG]  [BUGGY]  int  value  =  getLastChar().length  -  2;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar().length  -  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().length  -  2;	  int    value    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	24	None	replace
1078	[BUG]  [BUGGY]  x  =  getFirstChar()  +  prev;  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar()  +  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar()  +  prev;	  x    =    getLastChar()    +    prev;    	non-compiled	[CE]  ';'  expected	310	None	replace
1079	[BUG]  [BUGGY]  x  =  getLastChar()  *  prev;  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar()  *  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar()  *  prev;	  x    =    getLastChar()    +    prev;    	non-compiled	[CE]  ';'  expected	310	None	replace
1080	[BUG]  [BUGGY]  x  =  getLastChar().doubleValue()  +  prev;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().doubleValue()  +  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().doubleValue()  +  prev;	  x    =    getLastChar()    +    prev;    	non-compiled	[CE]  ';'  expected	310	None	replace
1081	[BUG]  [BUGGY]  x  =  getLastChar()  +  prev.doubleValue();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar()  +  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar()  +  prev.doubleValue();	  x    =    getLastChar()    +    prev;    	non-compiled	[CE]  ';'  expected	310	None	replace
1082	[BUG]  [BUGGY]  x  =  getLastChar()  +  10;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar()  +  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar()  +  10;	  x    =    getLastChar()    +    prev;    	non-compiled	[CE]  ';'  expected	310	None	replace
1083	[BUG]  [BUGGY]  char  x  =  getFirstChar();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getFirstChar();	  int    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	262	None	replace
1084	[BUG]  [BUGGY]  long  x  =  getFirstChar();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getFirstChar();	  int    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	262	None	replace
1085	[BUG]  [BUGGY]  int  x  =  getFirstChar()  -  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar()  -  1;	  int    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	262	None	replace
1086	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  *  10;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar().doubleValue()  *  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().doubleValue()  *  10;	  int    value    =    getLastChar().doubleValue()    /    10;    	non-compiled	[CE]  ';'  expected	202	None	replace
1087	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  +  10;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar().doubleValue()  +  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().doubleValue()  +  10;	  int    value    =    getLastChar().doubleValue()    /    10;    	non-compiled	[CE]  ';'  expected	202	None	replace
1088	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  /  2;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar().doubleValue()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().doubleValue()  /  2;	  int    value    =    getLastChar().doubleValue()    /    10;    	non-compiled	[CE]  ';'  expected	202	None	replace
1089	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  /  10;  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar().doubleValue()  /  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  /  10;	  int    value    =    getLastChar().doubleValue()    /    10;    	non-compiled	[CE]  ';'  expected	202	None	replace
1090	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  /  10  +  1;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar().doubleValue()  /  10  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().doubleValue()  /  10  +  1;	  int    value    =    getLastChar().doubleValue()    /    10;    	non-compiled	[CE]  ';'  expected	202	None	replace
1091	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  /  10L;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar().doubleValue()  /  10L;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().doubleValue()  /  10L;	  int    value    =    getLastChar().doubleValue()    /    10;    	non-compiled	[CE]  ';'  expected	202	None	replace
1092	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    <    0    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	332	None	replace
1093	[BUG]  [BUGGY]  if(prev  <  0  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <    0    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	332	None	replace
1094	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >=  Long.MAX_VALUE)  {	  if(x    <    0    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	332	None	replace
1095	[BUG]  [BUGGY]  if(x  <  0  ||  prev!=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev!=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev!=  Long.MAX_VALUE)  {	  if(x    <    0    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	332	None	replace
1096	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <    0    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	332	None	replace
1097	[BUG]  [BUGGY]  if(x  >  Long.MAX_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MAX_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MAX_VALUE  ||  prev  <=  Long.MAX_VALUE)  {	  if(x    <    0    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	332	None	replace
1098	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >  Long.MIN_VALUE)  {	  if(x    <    0    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	332	None	replace
1099	[BUG]  [BUGGY]  when(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  when(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	when(x  ==  (long)x)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1100	[BUG]  [BUGGY]  when(x  ==  (int)x)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  when(x  ==  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	when(x  ==  (int)x)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1101	[BUG]  [BUGGY]  when(x  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  when(x  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	when(x  ==  Long.MIN_VALUE)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1102	[BUG]  [BUGGY]  when(x  ==  ';')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  when(x  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	when(x  ==  ';')  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1103	[BUG]  [BUGGY]  when(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  when(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	when(x  ==  (double)x)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1104	[BUG]  [BUGGY]  if(x  ==  prev)  {  when(x  ==  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  when(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  when(x  ==  prev)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1105	[BUG]  [BUGGY]  if(x  ==  prev)  {  when(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  when(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  when(x  ==  (long)x)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1106	[BUG]  [BUGGY]  when(x  ==  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  when(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	when(x  ==  prev)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1107	[BUG]  [BUGGY]  if(x  <  0)  {  when(x  ==  ';')  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  when(x  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  when(x  ==  ';')  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1108	[BUG]  [BUGGY]  Double  mantissa  =  getLastChar();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  getLastChar();	  double    mantissa    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	175	None	replace
1109	[BUG]  [BUGGY]  double  mantissa  =  getFirstChar()  +  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getFirstChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getFirstChar()  +  1;	  double    mantissa    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	175	None	replace
1110	[BUG]  [BUGGY]  if((  x  >=  prev)||(x!=  Long.MIN_VALUE))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x!=  Long.MIN_VALUE))  {  [BUGGY]    prev)  {  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x!=  Long.MIN_VALUE))  {	  if((    long)x!=    prev)    {    if((    long)x    	non-compiled	[CE]  ';'  expected	214	None	replace
1111	[BUG]  [BUGGY]  if((  x  <=  0)||(x  >>  prev))  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <=  0)||(x  >>  prev))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <=  0)||(x  >>  prev))  {	  if((    int)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
1112	[BUG]  [BUGGY]  if((  x  +  prev)  >=  0)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  +  prev)  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  +  prev)  >=  0)  {	  if((    int)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
1113	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  /  2);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  /  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  /  2);	  double    value    =    Math.pow(10,    prev    +    2);    	non-compiled	[CE]  ';'  expected	316	None	replace
1114	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  *  2);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  *  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  *  2);	  double    value    =    Math.pow(10,    prev    +    2);    	non-compiled	[CE]  ';'  expected	316	None	replace
1115	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  +  2  -  1);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  +  2  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  +  2  -  1);	  double    value    =    Math.pow(10,    prev    +    2);    	non-compiled	[CE]  ';'  expected	316	None	replace
1116	[BUG]  [BUGGY]  long  value  =  Math.pow(10,  prev  +  2);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  Math.pow(10,  prev  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  Math.pow(10,  prev  +  2);	  double    value    =    Math.pow(10,    prev    +    2);    	non-compiled	[CE]  ';'  expected	316	None	replace
1117	[BUG]  [BUGGY]  Double  x  =  getLastChar()  -  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  x  =  getLastChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  x  =  getLastChar()  -  1;	  int    x    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	265	None	replace
1118	[BUG]  [BUGGY]  short  mantissa  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  short  mantissa  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	short  mantissa  =  Math.pow(10,  prev);	  short    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	300	None	replace
1119	[BUG]  [BUGGY]  char  x  =  getLastChar().charAt(0);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().charAt(0);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().charAt(0);	  double    x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	306	None	replace
1120	[BUG]  [BUGGY]  double  x  =  getLastChar().charAt(x);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().charAt(x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().charAt(x);	  double    x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	306	None	replace
1121	[BUG]  [BUGGY]  double  x  =  getLastChar().charAt(prev);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().charAt(prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().charAt(prev);	  double    x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	306	None	replace
1122	[BUG]  [BUGGY]  double  x  =  getLastChar().substring(0,  prev).charAt(0);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().substring(0,  prev).charAt(0);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().substring(0,  prev).charAt(0);	  double    x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	306	None	replace
1123	[BUG]  [BUGGY]  double  x  =  getLastChar().charAt(0,  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().charAt(0,  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().charAt(0,  1);	  double    x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	306	None	replace
1124	[BUG]  [BUGGY]  double  x  =  getFirstChar().charAt(0);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getFirstChar().charAt(0);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getFirstChar().charAt(0);	  double    x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	306	None	replace
1125	[BUG]  [BUGGY]  if(prev  <  0  ||  prev  >  '-')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0  ||  prev  >  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0  ||  prev  >  '-')  {	  if(x    <    0    ||    prev    >    '-')    {    	non-compiled	[CE]  ';'  expected	106	None	replace
1126	[BUG]  [BUGGY]  if(x  <=  0  ||  prev  >  '-')  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0  ||  prev  >  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0  ||  prev  >  '-')  {	  if(x    <    0    ||    prev    >    '-')    {    	non-compiled	[CE]  ';'  expected	106	None	replace
1127	[BUG]  [BUGGY]  if(x  >  0  ||  prev  >  '-')  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  ||  prev  >  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  ||  prev  >  '-')  {	  if(x    <    0    ||    prev    >    '-')    {    	non-compiled	[CE]  ';'  expected	106	None	replace
1128	[BUG]  [BUGGY]  if(x  >=  0  ||  prev  >  '-')  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  0  ||  prev  >  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  0  ||  prev  >  '-')  {	  if(x    <    0    ||    prev    >    '-')    {    	non-compiled	[CE]  ';'  expected	106	None	replace
1129	[BUG]  [BUGGY]  if(x  <  1  ||  prev  >  '-')  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  1  ||  prev  >  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  1  ||  prev  >  '-')  {	  if(x    <    0    ||    prev    >    '-')    {    	non-compiled	[CE]  ';'  expected	106	None	replace
1130	[BUG]  [BUGGY]  String  mantissa  =  getMeanOp();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  mantissa  =  getMeanOp();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  mantissa  =  getMeanOp();	  char    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	78	None	replace
1131	[BUG]  [BUGGY]  CharMantissa  mantissa  =  getMeanOp();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  CharMantissa  mantissa  =  getMeanOp();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	CharMantissa  mantissa  =  getMeanOp();	  char    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	78	None	replace
1132	[BUG]  [BUGGY]  Character  mantissa  =  getMeanOp();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  mantissa  =  getMeanOp();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  mantissa  =  getMeanOp();	  char    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	78	None	replace
1133	[BUG]  [BUGGY]  Integer  mantissa  =  getMeanOp();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  mantissa  =  getMeanOp();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  mantissa  =  getMeanOp();	  char    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	78	None	replace
1134	[BUG]  [BUGGY]  Long  mantissa  =  getMeanOp();  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  getMeanOp();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  getMeanOp();	  char    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	78	None	replace
1135	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  prev  /  10  +  1);	  int    mantissa    =    Math.pow(10,    prev    /    10    +    1);    	non-compiled	[CE]  ';'  expected	156	None	replace
1136	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  prev  /  10  +  1);	  int    mantissa    =    Math.pow(10,    prev    /    10    +    1);    	non-compiled	[CE]  ';'  expected	156	None	replace
1137	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  *  10  +  1);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  *  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  *  10  +  1);	  int    mantissa    =    Math.pow(10,    prev    /    10    +    1);    	non-compiled	[CE]  ';'  expected	156	None	replace
1138	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  /  10  +  2);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  /  10  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  /  10  +  2);	  int    mantissa    =    Math.pow(10,    prev    /    10    +    1);    	non-compiled	[CE]  ';'  expected	156	None	replace
1139	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  prev  /  10  +  1);	  int    mantissa    =    Math.pow(10,    prev    /    10    +    1);    	non-compiled	[CE]  ';'  expected	156	None	replace
1140	[BUG]  [BUGGY]  float  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  mantissa  =  Math.pow(10,  prev  /  10  +  1);	  int    mantissa    =    Math.pow(10,    prev    /    10    +    1);    	non-compiled	[CE]  ';'  expected	156	None	replace
1141	[BUG]  [BUGGY]  short  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  short  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	short  mantissa  =  Math.pow(10,  prev  /  10  +  1);	  int    mantissa    =    Math.pow(10,    prev    /    10    +    1);    	non-compiled	[CE]  ';'  expected	156	None	replace
1142	[BUG]  [BUGGY]  Int  x  =  getLastChar();  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Int  x  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Int  x  =  getLastChar();	  if(x    >=    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	325	None	replace
1143	[BUG]  [BUGGY]  if(x  <  '0'  ||  x  >  '9')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  '0'  ||  x  >  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  '0'  ||  x  >  '9')  {	  if(x    <=    '0'    ||    x    >    '9')    {    	non-compiled	[CE]  ';'  expected	304	None	replace
1144	[BUG]  [BUGGY]  if(x  >=  '0'  ||  x  >  '9')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  '0'  ||  x  >  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  '0'  ||  x  >  '9')  {	  if(x    <=    '0'    ||    x    >    '9')    {    	non-compiled	[CE]  ';'  expected	304	None	replace
1145	[BUG]  [BUGGY]  if(x  >  '9'  ||  x  <=  '0'  ||  x  >  '9')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  '9'  ||  x  <=  '0'  ||  x  >  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  '9'  ||  x  <=  '0'  ||  x  >  '9')  {	  if(x    <=    '0'    ||    x    >    '9')    {    	non-compiled	[CE]  ';'  expected	304	None	replace
1146	[BUG]  [BUGGY]  if(x  <  '0'  ||  prev  >  '9')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  '0'  ||  prev  >  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  '0'  ||  prev  >  '9')  {	  if(x    <=    '0'    ||    x    >    '9')    {    	non-compiled	[CE]  ';'  expected	304	None	replace
1147	[BUG]  [BUGGY]  if(x  ==  '0'  ||  x  >  '9')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  '0'  ||  x  >  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  '0'  ||  x  >  '9')  {	  if(x    <=    '0'    ||    x    >    '9')    {    	non-compiled	[CE]  ';'  expected	304	None	replace
1148	[BUG]  [BUGGY]  if(x  <=  '0'  ||  x  >  '9'  ||  prev  <=  '9')  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  '0'  ||  x  >  '9'  ||  prev  <=  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0'  ||  x  >  '9'  ||  prev  <=  '9')  {	  if(x    <=    '0'    ||    x    >    '9')    {    	non-compiled	[CE]  ';'  expected	304	None	replace
1149	[BUG]  [BUGGY]  if(x  >=  '0'  &&  x  >  '9')  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  '0'  &&  x  >  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  '0'  &&  x  >  '9')  {	  if(x    <=    '0'    ||    x    >    '9')    {    	non-compiled	[CE]  ';'  expected	304	None	replace
1150	[BUG]  [BUGGY]  Integer  value  =  getLastChar(),  prev.toString();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar(),  prev.toString();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar(),  prev.toString();	  Integer    value    =    getLastChar().toString();    	non-compiled	[CE]  ';'  expected	228	None	replace
1151	[BUG]  [BUGGY]  Integer  value  =  getFirstChar().toString();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstChar().toString();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChar().toString();	  Integer    value    =    getLastChar().toString();    	non-compiled	[CE]  ';'  expected	228	None	replace
1152	[BUG]  [BUGGY]  Integer  value  =  getLastChar().toString()  +  1;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().toString()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().toString()  +  1;	  Integer    value    =    getLastChar().toString();    	non-compiled	[CE]  ';'  expected	228	None	replace
1153	[BUG]  [BUGGY]  Integer  value  =  getLastIntChar().toString();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastIntChar().toString();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntChar().toString();	  Integer    value    =    getLastChar().toString();    	non-compiled	[CE]  ';'  expected	228	None	replace
1154	[BUG]  [BUGGY]  Integer  value  =  getLastChar().toUpperCase();  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().toUpperCase();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().toUpperCase();	  Integer    value    =    getLastChar().toString();    	non-compiled	[CE]  ';'  expected	228	None	replace
1155	[BUG]  [BUGGY]  Integer  value  =  getLastChar().toLongValue();  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().toLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().toLongValue();	  Integer    value    =    getLastChar().toString();    	non-compiled	[CE]  ';'  expected	228	None	replace
1156	[BUG]  [BUGGY]  long  value  =  getLastChar()  +  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar()  +  1;	  int    value    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	23	None	replace
1157	[BUG]  [BUGGY]  ((  long)x)  {  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  ((  long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	((  long)x)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
1158	[BUG]  [BUGGY]  ((  long)x)  ==  prev)  {  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  ((  long)x)  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	((  long)x)  ==  prev)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
1159	[BUG]  [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x  +  1)  {  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x  +  1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  ==  prev)  {  ((  long)x  +  1)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
1160	[BUG]  [BUGGY]  if(x  ==  prev)  {  ((  long)x  ==  prev)  {  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  ((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  ((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
1161	[BUG]  [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x  >  prev)  {  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  ==  prev)  {  ((  long)x  >  prev)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
1162	[BUG]  [BUGGY]  this.statementContext.addNumber(x,  prev);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  this.statementContext.addNumber(x,  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	this.statementContext.addNumber(x,  prev);	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	245	None	replace
1163	[BUG]  [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x)  {  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  ==  prev)  {  ((  long)x)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
1164	[BUG]  [BUGGY]  if(x  ==  prev)  {  ((  long)x  >=  prev)  {  [CE]  not  a  statement  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  ((  long)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  ((  long)x  >=  prev)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
1165	[BUG]  [BUGGY]  this.statementContext.addNumber(x);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  this.statementContext.addNumber(x);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	this.statementContext.addNumber(x);	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	245	None	replace
1166	[BUG]  [BUGGY]  Integer  value  =  getLastChild().doubleValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChild().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChild().doubleValue();	  Integer    value    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	333	None	replace
1167	[BUG]  [BUGGY]  Integer  value  =  getFirstChild().doubleValue()  +  1;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstChild().doubleValue()  +  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChild().doubleValue()  +  1;	  Integer    value    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	333	None	replace
1168	[BUG]  [BUGGY]  Integer  value  =  getFirstChild().doubleValue()  -  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstChild().doubleValue()  -  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChild().doubleValue()  -  1;	  Integer    value    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	333	None	replace
1169	[BUG]  [BUGGY]  Integer  value  =  getFirstChild().doubleValue()  /  2;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstChild().doubleValue()  /  2;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChild().doubleValue()  /  2;	  Integer    value    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	333	None	replace
1170	[BUG]  [BUGGY]  Integer  value  =  getFirstChild().doubleValue()  *  2;  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstChild().doubleValue()  *  2;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChild().doubleValue()  *  2;	  Integer    value    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	333	None	replace
1171	[BUG]  [BUGGY]  Long  value  =  getFirstChild().doubleValue();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  getFirstChild().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  getFirstChild().doubleValue();	  Integer    value    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	333	None	replace
1172	[BUG]  [BUGGY]  Integer  value  =  getFirstChild().doubleValue()  /  10;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstChild().doubleValue()  /  10;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChild().doubleValue()  /  10;	  Integer    value    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	333	None	replace
1173	[BUG]  [BUGGY]  long  value  =  Math.pow(10,  prev)-  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  Math.pow(10,  prev)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  Math.pow(10,  prev)-  1;	  int    value    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	186	None	replace
1174	[BUG]  [BUGGY]  char  value  =  Math.pow(10,  prev)-  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  Math.pow(10,  prev)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  Math.pow(10,  prev)-  1;	  int    value    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	186	None	replace
1175	[BUG]  [BUGGY]  Double  value  =  Math.pow(10,  prev)-  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  Math.pow(10,  prev)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  Math.pow(10,  prev)-  1;	  int    value    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	186	None	replace
1176	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)-  2;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)-  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)-  2;	  int    value    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	186	None	replace
1177	[BUG]  [BUGGY]  float  value  =  Math.pow(10,  prev)-  1;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  value  =  Math.pow(10,  prev)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  value  =  Math.pow(10,  prev)-  1;	  int    value    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	186	None	replace
1178	[BUG]  [BUGGY]  short  value  =  Math.pow(10,  prev)-  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  short  value  =  Math.pow(10,  prev)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	short  value  =  Math.pow(10,  prev)-  1;	  int    value    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	186	None	replace
1179	[BUG]  [BUGGY]  long  mantissa  =  getLastChar()  -  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getLastChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getLastChar()  -  1;	  int    mantissa    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	118	None	replace
1180	[BUG]  [BUGGY]  int  mantissa  =  getLastChar().length  -  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getLastChar().length  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar().length  -  1;	  int    mantissa    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	118	None	replace
1181	[BUG]  [BUGGY]  Long  mantissa  =  getLastChar()  -  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  getLastChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  getLastChar()  -  1;	  int    mantissa    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	118	None	replace
1182	[BUG]  [BUGGY]  x  =  getLastChar().charAt(x)+  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().charAt(x)+  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(x)+  1;	  x    =    getLastChar().charAt(x);    	non-compiled	[CE]  ';'  expected	312	None	replace
1183	[BUG]  [BUGGY]  x  =  getFirstChar().charAt(x);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar().charAt(x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar().charAt(x);	  x    =    getLastChar().charAt(x);    	non-compiled	[CE]  ';'  expected	312	None	replace
1184	[BUG]  [BUGGY]  x  =  getLastChar().charAt(x)-  1;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().charAt(x)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(x)-  1;	  x    =    getLastChar().charAt(x);    	non-compiled	[CE]  ';'  expected	312	None	replace
1185	[BUG]  [BUGGY]  x  =  getLastChar().charAt(x).toCharArray();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().charAt(x).toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(x).toCharArray();	  x    =    getLastChar().charAt(x);    	non-compiled	[CE]  ';'  expected	312	None	replace
1186	[BUG]  [BUGGY]  x  =  getLastChar().charAt(x,  prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().charAt(x,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(x,  prev);	  x    =    getLastChar().charAt(x);    	non-compiled	[CE]  ';'  expected	312	None	replace
1187	[BUG]  [BUGGY]  if(prev  <  0  ||  prev  >=  '-')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0  ||  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0  ||  prev  >=  '-')  {	  if(x    <    0    ||    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	103	None	replace
1188	[BUG]  [BUGGY]  if(x  >=  0  ||  prev  >=  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  0  ||  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  0  ||  prev  >=  '-')  {	  if(x    <    0    ||    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	103	None	replace
1189	[BUG]  [BUGGY]  if(x  >  0  ||  prev  >=  '-')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  ||  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  ||  prev  >=  '-')  {	  if(x    <    0    ||    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	103	None	replace
1190	[BUG]  [BUGGY]  if(prev  <  0  ||  x  >=  '-')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0  ||  x  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0  ||  x  >=  '-')  {	  if(x    <    0    ||    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	103	None	replace
1191	[BUG]  [BUGGY]  String  mantissa  =  getLastChar();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  mantissa  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  mantissa  =  getLastChar();	  char    mantissa    =    getLastChar();    	non-compiled	[CE]  ';'  expected	117	None	replace
1192	[BUG]  [BUGGY]  Long  mantissa  =  getLastChar();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  getLastChar();	  char    mantissa    =    getLastChar();    	non-compiled	[CE]  ';'  expected	117	None	replace
1193	[BUG]  [BUGGY]  Character  mantissa  =  getLastChar();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  mantissa  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  mantissa  =  getLastChar();	  char    mantissa    =    getLastChar();    	non-compiled	[CE]  ';'  expected	117	None	replace
1194	[BUG]  [BUGGY]  Number  mantissa  =  getLastChar();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  mantissa  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  mantissa  =  getLastChar();	  char    mantissa    =    getLastChar();    	non-compiled	[CE]  ';'  expected	117	None	replace
1195	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(double)Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  prev  -  1);	  int    value    =(int)Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	192	None	replace
1196	[BUG]  [BUGGY]  char  value  =(char)Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(char)Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(char)Math.pow(10,  prev  -  1);	  int    value    =(int)Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	192	None	replace
1197	[BUG]  [BUGGY]  long  value  =(long)Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =(long)Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(long)Math.pow(10,  prev  -  1);	  int    value    =(int)Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	192	None	replace
1198	[BUG]  [BUGGY]  char  value  =(int)Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(int)Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(int)Math.pow(10,  prev  -  1);	  int    value    =(int)Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	192	None	replace
1199	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  prev  -  1  +  1);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  prev  -  1  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  prev  -  1  +  1);	  int    value    =(int)Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	192	None	replace
1200	[BUG]  [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
1201	[BUG]  [BUGGY]  long  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
1202	[BUG]  [BUGGY]  double  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
1203	[BUG]  [BUGGY]  Integer  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
1204	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  >  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  >  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  >  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
1205	[BUG]  [BUGGY]  int  x  =  getFirstChar();  if(x  <  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar();  if(x  <  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar();  if(x  <  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
1206	[BUG]  [BUGGY]  long  mantissa  =  getMeanOp(x);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getMeanOp(x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getMeanOp(x);	  long    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	80	None	replace
1207	[BUG]  [BUGGY]  long  mantissa  =  getMeanOp()  /  2;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getMeanOp()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getMeanOp()  /  2;	  long    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	80	None	replace
1208	[BUG]  [BUGGY]  if(prev!=  Long.MIN_VALUE  &&  x  ==  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  Long.MIN_VALUE  &&  x  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  Long.MIN_VALUE  &&  x  ==  '-')  {	  if(x!=    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	281	None	replace
1209	[BUG]  [BUGGY]  if(prev!=  Long.MIN_VALUE  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  Long.MIN_VALUE  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  Long.MIN_VALUE  &&  prev  ==  '-')  {	  if(x!=    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	281	None	replace
1210	[BUG]  [BUGGY]  if(prev!=  Long.MIN_VALUE  &&  x  >=  '-')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  Long.MIN_VALUE  &&  x  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  Long.MIN_VALUE  &&  x  >=  '-')  {	  if(x!=    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	281	None	replace
1211	[BUG]  [BUGGY]  char  value  =  getFirstChar().doubleValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  getFirstChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  getFirstChar().doubleValue();	  int    value    =    getFirstChar().doubleValue();    	non-compiled	[CE]  ';'  expected	201	None	replace
1212	[BUG]  [BUGGY]  int  value  =  getFirstChar().doubleValue()  /  2;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getFirstChar().doubleValue()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstChar().doubleValue()  /  2;	  int    value    =    getFirstChar().doubleValue();    	non-compiled	[CE]  ';'  expected	201	None	replace
1213	[BUG]  [BUGGY]  double  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
1214	[BUG]  [BUGGY]  Integer  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
1215	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
1216	[BUG]  [BUGGY]  int  value  =  getLastChar()  -  0xFFFF;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar()  -  0xFFFF;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  -  0xFFFF;	  int    value    =    getLastChar()    &    0xFFFF;    	non-compiled	[CE]  ';'  expected	353	None	replace
1217	[BUG]  [BUGGY]  int  value  =  getLastChar()  /  0xFFFF;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar()  /  0xFFFF;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  /  0xFFFF;	  int    value    =    getLastChar()    &    0xFFFF;    	non-compiled	[CE]  ';'  expected	353	None	replace
1218	[BUG]  [BUGGY]  char  value  =  getLastChar()  &  0xFFFF;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  getLastChar()  &  0xFFFF;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  getLastChar()  &  0xFFFF;	  int    value    =    getLastChar()    &    0xFFFF;    	non-compiled	[CE]  ';'  expected	353	None	replace
1219	[BUG]  [BUGGY]  double  value  =  getLastChar()  &  0xFFFF;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  &  0xFFFF;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  &  0xFFFF;	  int    value    =    getLastChar()    &    0xFFFF;    	non-compiled	[CE]  ';'  expected	353	None	replace
1220	[BUG]  [BUGGY]  int  value  =  getLastChar()  +  0xFFFF;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar()  +  0xFFFF;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  +  0xFFFF;	  int    value    =    getLastChar()    &    0xFFFF;    	non-compiled	[CE]  ';'  expected	353	None	replace
1221	[BUG]  [BUGGY]  int  value  =  getFirstChar()  &  0xFFFF;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getFirstChar()  &  0xFFFF;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstChar()  &  0xFFFF;	  int    value    =    getLastChar()    &    0xFFFF;    	non-compiled	[CE]  ';'  expected	353	None	replace
1222	[BUG]  [BUGGY]  long  value  =  getLastChar()  &  0xFFFF;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar()  &  0xFFFF;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar()  &  0xFFFF;	  int    value    =    getLastChar()    &    0xFFFF;    	non-compiled	[CE]  ';'  expected	353	None	replace
1223	[BUG]  [BUGGY]  int  value  =  getLastChar()  *  0xFFFF;  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar()  *  0xFFFF;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  *  0xFFFF;	  int    value    =    getLastChar()    &    0xFFFF;    	non-compiled	[CE]  ';'  expected	353	None	replace
1224	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf(':',  prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf(':',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf(':',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(':');    	non-compiled	[CE]  ';'  expected	324	None	replace
1225	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf(':');  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf(':');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf(':');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(':');    	non-compiled	[CE]  ';'  expected	324	None	replace
1226	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf(':');  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf(':');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf(':');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(':');    	non-compiled	[CE]  ';'  expected	324	None	replace
1227	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf(':',  prev);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf(':',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf(':',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(':');    	non-compiled	[CE]  ';'  expected	324	None	replace
1228	[BUG]  [BUGGY]  char  x  =  getLastChar().lastIndexOf(':');  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().lastIndexOf(':');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().lastIndexOf(':');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(':');    	non-compiled	[CE]  ';'  expected	324	None	replace
1229	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf(':');  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf(':');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf(':');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(':');    	non-compiled	[CE]  ';'  expected	324	None	replace
1230	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf(':');  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf(':');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf(':');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(':');    	non-compiled	[CE]  ';'  expected	324	None	replace
1231	[BUG]  [BUGGY]  if((  double)x!=  prev)  {  if((  double)x!=  prev)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  double)x!=  prev)  {  if((  double)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    double)x!=    prev)    {    if((  double)x!=  prev)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
1232	[BUG]  [BUGGY]  if((  double)x!=  prev)  {  if((  double)x  >=  prev)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  double)x!=  prev)  {  if((  double)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    double)x!=    prev)    {    if((  double)x  >=  prev)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
1233	[BUG]  [BUGGY]  if((  double)x!=  prev)  {  if((  double)x  >>  prev)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  double)x!=  prev)  {  if((  double)x  >>  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    double)x!=    prev)    {    if((  double)x  >>  prev)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
1234	[BUG]  [BUGGY]  if((  double)x!=  prev)  {  if((  double)x  ==  prev)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  double)x!=  prev)  {  if((  double)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    double)x!=    prev)    {    if((  double)x  ==  prev)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
1235	[BUG]  [BUGGY]  if((  double)x!=  prev)  {  if((  double)x  [Delete]  prev)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  double)x!=  prev)  {  if((  double)x  [Delete]  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    double)x!=    prev)    {    if((  double)x  [Delete]  prev)  {	  	non-compiled	[CE]  ')'  expected	10	None	add
1236	[BUG]  [BUGGY]  if((  double)x!=  prev)  {  if((  double)x  [BUGGY]  prev)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  double)x!=  prev)  {  if((  double)x  [BUGGY]  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    double)x!=    prev)    {    if((  double)x  [BUGGY]  prev)  {	  	non-compiled	[CE]  ')'  expected	10	None	add
1237	[BUG]  [BUGGY]  if((  double)x!=  prev)  {  if((  double)x  [PATCH]  prev)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  double)x!=  prev)  {  if((  double)x  [PATCH]  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    double)x!=    prev)    {    if((  double)x  [PATCH]  prev)  {	  	non-compiled	[CE]  ')'  expected	10	None	add
1238	[BUG]  [BUGGY]  if((  double)x!=  prev)  {  If((  double)x!=  prev)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  double)x!=  prev)  {  If((  double)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    double)x!=    prev)    {    If((  double)x!=  prev)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
1239	[BUG]  [BUGGY]  Integer  x  =  getLastChild().doubleValue();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChild().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChild().doubleValue();	  if(x    <    0)    {    Integer    x    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	322	None	replace
1240	[BUG]  [BUGGY]  Integer  x  =  getLastChar().doubleValue();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().doubleValue();	  if(x    <    0)    {    Integer    x    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	322	None	replace
1241	[BUG]  [BUGGY]  int  x  =  getFirstChild().doubleValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChild().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChild().doubleValue();	  if(x    <    0)    {    Integer    x    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	322	None	replace
1242	[BUG]  [BUGGY]  char  x  =  getFirstChild().doubleValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getFirstChild().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getFirstChild().doubleValue();	  if(x    <    0)    {    Integer    x    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	322	None	replace
1243	[BUG]  [BUGGY]  Number  x  =  getFirstChild().doubleValue();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  x  =  getFirstChild().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  x  =  getFirstChild().doubleValue();	  if(x    <    0)    {    Integer    x    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	322	None	replace
1244	[BUG]  [BUGGY]  Double  x  =  getFirstChild().doubleValue();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  x  =  getFirstChild().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  x  =  getFirstChild().doubleValue();	  if(x    <    0)    {    Integer    x    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	322	None	replace
1245	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  ==  prev)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
1246	[BUG]  [BUGGY]  double  x  =  getLastChar();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar();  if(x  ==  prev)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
1247	[BUG]  [BUGGY]  if(prev  ==  0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
1248	[BUG]  [BUGGY]  long  x  =  getLastChar();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar();  if(x  ==  prev)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
1249	[BUG]  [BUGGY]  if(prev  >=  0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
1250	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  >=  prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  >=  prev)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
1251	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x!=  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x!=  prev)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
1252	[BUG]  [BUGGY]  String  value  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  Math.pow(10,  prev);	  char    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	182	None	replace
1253	[BUG]  [BUGGY]  BigInteger  value  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  BigInteger  value  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigInteger  value  =  Math.pow(10,  prev);	  char    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	182	None	replace
1254	[BUG]  [BUGGY]  Char  value  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Char  value  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Char  value  =  Math.pow(10,  prev);	  char    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	182	None	replace
1255	[BUG]  [BUGGY]  Character  value  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  value  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  value  =  Math.pow(10,  prev);	  char    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	182	None	replace
1256	[BUG]  [BUGGY]  Double  value  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  Math.pow(10,  prev);	  char    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	182	None	replace
1257	[BUG]  [BUGGY]  Number  value  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  value  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  value  =  Math.pow(10,  prev);	  char    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	182	None	replace
1258	[BUG]  [BUGGY]  if(prev  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
1259	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev!=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev!=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  ||  prev!=  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
1260	[BUG]  [BUGGY]  if(x  <  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MIN_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MIN_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	369	None	replace
1261	[BUG]  [BUGGY]  if(prev  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MIN_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MIN_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	369	None	replace
1262	[BUG]  [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  >=  Preconditions.MIN_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  >=  Preconditions.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.MIN_VALUE  ||  prev  >=  Preconditions.MIN_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	369	None	replace
1263	[BUG]  [BUGGY]  if(x  <  Preconditions.MIN_VALUE  ||  prev  >=  Preconditions.MIN_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Preconditions.MIN_VALUE  ||  prev  >=  Preconditions.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Preconditions.MIN_VALUE  ||  prev  >=  Preconditions.MIN_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	369	None	replace
1264	[BUG]  [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  ==  Preconditions.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  ==  Preconditions.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.MIN_VALUE  ||  prev  ==  Preconditions.MIN_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	369	None	replace
1265	[BUG]  [BUGGY]  if(x  >=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MIN_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	369	None	replace
1266	[BUG]  [BUGGY]  x  =  getLastChar().toLowerCase(len);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().toLowerCase(len);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().toLowerCase(len);	  x    =    getLastChar().toLowerCase();    	non-compiled	[CE]  ';'  expected	113	None	replace
1267	[BUG]  [BUGGY]  x  =  getLastChar().toUpperCase();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().toUpperCase();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().toUpperCase();	  x    =    getLastChar().toLowerCase();    	non-compiled	[CE]  ';'  expected	113	None	replace
1268	[BUG]  [BUGGY]  x  =  getLastChar().toLowerCase(prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().toLowerCase(prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().toLowerCase(prev);	  x    =    getLastChar().toLowerCase();    	non-compiled	[CE]  ';'  expected	113	None	replace
1269	[BUG]  [BUGGY]  x  =  getFirstChar().toLowerCase();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar().toLowerCase();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar().toLowerCase();	  x    =    getLastChar().toLowerCase();    	non-compiled	[CE]  ';'  expected	113	None	replace
1270	[BUG]  [BUGGY]  double  x  =  getLastChar().toLowerCase();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().toLowerCase();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().toLowerCase();	  x    =    getLastChar().toLowerCase();    	non-compiled	[CE]  ';'  expected	113	None	replace
1271	[BUG]  [BUGGY]  x  =  getLastChar().toLowerCase(label);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().toLowerCase(label);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().toLowerCase(label);	  x    =    getLastChar().toLowerCase();    	non-compiled	[CE]  ';'  expected	113	None	replace
1272	[BUG]  [BUGGY]  x  =  getLastChar().toLowerCase()  +  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().toLowerCase()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().toLowerCase()  +  1;	  x    =    getLastChar().toLowerCase();    	non-compiled	[CE]  ';'  expected	113	None	replace
1273	[BUG]  [BUGGY]  x  =  getLastChar().toLowerCase(x);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().toLowerCase(x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().toLowerCase(x);	  x    =    getLastChar().toLowerCase();    	non-compiled	[CE]  ';'  expected	113	None	replace
1274	[BUG]  [BUGGY]  double  mantissa  =  getFirstChar()  -  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getFirstChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getFirstChar()  -  1;	  double    mantissa    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	176	None	replace
1275	[BUG]  [BUGGY]  Integer  mantissa  =  getLastInt()  -  1;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  mantissa  =  getLastInt()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  mantissa  =  getLastInt()  -  1;	  double    mantissa    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	176	None	replace
1276	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
1277	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  <  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
1278	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev!=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev!=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  <  Long.MIN_VALUE  ||  prev!=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
1279	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev  >>  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev  >>  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  <  Long.MIN_VALUE  ||  prev  >>  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
1280	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  If(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  If(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    If(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
1281	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
1282	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  class  expected  [FE]                ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  <  long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  class  expected	32	None	add
1283	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev  [BUGGY]  Long.MAX_VALUE)  {  [CE]  ')'  expected  [FE]                  ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev  [BUGGY]  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  <  Long.MIN_VALUE  ||  prev  [BUGGY]  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ')'  expected	32	None	add
1284	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  Prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  Prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  <  Long.MIN_VALUE  ||  Prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
1285	[BUG]  [BUGGY]  Double  value  =(Double)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =(Double)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =(Double)Math.pow(10,  prev);	  char    value    =(int)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	193	None	replace
1286	[BUG]  [BUGGY]  Long  value  =(Long)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =(Long)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =(Long)Math.pow(10,  prev);	  char    value    =(int)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	193	None	replace
1287	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {	  if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
1288	[BUG]  [BUGGY]  if(prev!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
1289	[BUG]  [BUGGY]  if(x  <=  0  ||  prev!=  '-')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0  ||  prev!=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0  ||  prev!=  '-')  {	  if(x    <    0    ||    prev!=    '-')    {    	non-compiled	[CE]  ';'  expected	105	None	replace
1290	[BUG]  [BUGGY]  if(x  >=  0  ||  prev!=  '-')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  0  ||  prev!=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  0  ||  prev!=  '-')  {	  if(x    <    0    ||    prev!=    '-')    {    	non-compiled	[CE]  ';'  expected	105	None	replace
1291	[BUG]  [BUGGY]  if(x  >  0  ||  prev!=  '-')  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  ||  prev!=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  ||  prev!=  '-')  {	  if(x    <    0    ||    prev!=    '-')    {    	non-compiled	[CE]  ';'  expected	105	None	replace
1292	[BUG]  [BUGGY]  if(x  ==  prev)  {  while(x  ==  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  while(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  while(x  ==  prev)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
1293	[BUG]  [BUGGY]  if(x  ==  prev)  {  while(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  while(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  while(x  ==  (double)x)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
1294	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  while(x  ==  x)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  while(x  ==  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '-')  {  while(x  ==  x)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
1295	[BUG]  [BUGGY]  while(x  >=  (double)x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  >=  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  >=  (double)x)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
1296	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  while(x  >=  x)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  while(x  >=  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '-')  {  while(x  >=  x)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
1297	[BUG]  [BUGGY]  if(x  >  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    >=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	35	None	replace
1298	[BUG]  [BUGGY]  double  value  =  getLastChar(),  prev.doubleValue()  +  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar(),  prev.doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar(),  prev.doubleValue()  +  1;	  double    value    =    getLastChar().doubleValue()    +    1;    	non-compiled	[CE]  ';'  expected	204	None	replace
1299	[BUG]  [BUGGY]  double  value  =  getLastChar()  /.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  /.doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  /.doubleValue()  +  1;	  double    value    =    getLastChar().doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1300	[BUG]  [BUGGY]  double  value  =  getFirstChar().doubleValue()  +  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstChar().doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstChar().doubleValue()  +  1;	  double    value    =    getLastChar().doubleValue()    +    1;    	non-compiled	[CE]  ';'  expected	204	None	replace
1301	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  +  2;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar().doubleValue()  +  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  +  2;	  double    value    =    getLastChar().doubleValue()    +    1;    	non-compiled	[CE]  ';'  expected	204	None	replace
1302	[BUG]  [BUGGY]  long  value  =(int)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =(int)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(int)Math.pow(10,  prev);	  long    value    =(long)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	190	None	replace
1303	[BUG]  [BUGGY]  long  value  =(long)Math.pow(10,  prev  *  10);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =(long)Math.pow(10,  prev  *  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(long)Math.pow(10,  prev  *  10);	  long    value    =(long)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	190	None	replace
1304	[BUG]  [BUGGY]  this.x  =  getFirstChar();  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  this.x  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	this.x  =  getFirstChar();	  x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	109	None	replace
1305	[BUG]  [BUGGY]  x  =  getFirstChar()  +  1;  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar()  +  1;	  x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	109	None	replace
1306	[BUG]  [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  +  2);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  Math.pow(10,  prev  +  2);	  Long    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	378	None	replace
1307	[BUG]  [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  /  1);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  /  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  Math.pow(10,  prev  /  1);	  Long    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	378	None	replace
1308	[BUG]  [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  Math.pow(10,  prev  -  1);	  Long    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	378	None	replace
1309	[BUG]  [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  *  1);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  *  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  Math.pow(10,  prev  *  1);	  Long    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	378	None	replace
1310	[BUG]  [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  +  1  -  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  +  1  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  Math.pow(10,  prev  +  1  -  1);	  Long    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	378	None	replace
1311	[BUG]  [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  +  3);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  +  3);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  Math.pow(10,  prev  +  3);	  Long    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	378	None	replace
1312	[BUG]  [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  Math.pow(10,  prev  /  10  +  1);	  Long    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	378	None	replace
1313	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  prev  +  2);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  prev  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  prev  +  2);	  long    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	151	None	replace
1314	[BUG]  [BUGGY]  if(x  <  (double)prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  (double)prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (double)prev)  {	  if(x    ==    (double)prev)    {    	non-compiled	[CE]  ';'  expected	315	None	replace
1315	[BUG]  [BUGGY]  if(x!=  (double)prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  (double)prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  (double)prev)  {	  if(x    ==    (double)prev)    {    	non-compiled	[CE]  ';'  expected	315	None	replace
1316	[BUG]  [BUGGY]  if(value  ==  (double)prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(value  ==  (double)prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(value  ==  (double)prev)  {	  if(x    ==    (double)prev)    {    	non-compiled	[CE]  ';'  expected	315	None	replace
1317	[BUG]  [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  >=  prev)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    >=    prev)    {    if((  int)x  >=  prev)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
1318	[BUG]  [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x!=  prev)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    >=    prev)    {    if((  int)x!=  prev)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
1319	[BUG]  [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  >>  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  >>  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    >=    prev)    {    if((  int)x  >>  prev)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
1320	[BUG]  [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  ==  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    >=    prev)    {    if((  int)x  ==  prev)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
1321	[BUG]  [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  [Delete]  prev)  {  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  [Delete]  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    >=    prev)    {    if((  int)x  [Delete]  prev)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
1322	[BUG]  [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  [BUGGY]  prev)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  [BUGGY]  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    >=    prev)    {    if((  int)x  [BUGGY]  prev)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
1323	[BUG]  [BUGGY]  if((  int)x  >=  prev)  {  If((  int)x  >=  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  >=  prev)  {  If((  int)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    >=    prev)    {    If((  int)x  >=  prev)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
1324	[BUG]  [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  [PATCH]  prev)  {  [CE]  ')'  expected  [FE]                  ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  [PATCH]  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    >=    prev)    {    if((  int)x  [PATCH]  prev)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
1325	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
1326	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
1327	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
1328	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  ==  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
1329	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  ||  prev!=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  ||  prev!=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  ==  Long.MIN_VALUE  ||  prev!=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
1330	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  class  expected  [FE]              ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  ==  long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  class  expected	30	None	add
1331	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  If(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  If(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    If(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
1332	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >>  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  >>  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  >>  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
1333	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  ||  prev  >>  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE  ||  prev  >>  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  ==  Long.MIN_VALUE  ||  prev  >>  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
1334	[BUG]  [BUGGY]  if(x  ==  Predicates.Number.MIN_VALUE  ||  prev  ==  (double)x)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Predicates.Number.MIN_VALUE  ||  prev  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Predicates.Number.MIN_VALUE  ||  prev  ==  (double)x)  {	  if(prev    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
1335	[BUG]  [BUGGY]  if(x  ==  Predicates.Number.MIN_VALUE  ||  prev  ==  Double.MAX_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Predicates.Number.MIN_VALUE  ||  prev  ==  Double.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Predicates.Number.MIN_VALUE  ||  prev  ==  Double.MAX_VALUE)  {	  if(prev    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
1336	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')-  1;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')-  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.')-  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.')-    1;    	non-compiled	[CE]  ';'  expected	290	None	replace
1337	[BUG]  [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.')-  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().lastIndexOf('.')-  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().lastIndexOf('.')-  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.')-    1;    	non-compiled	[CE]  ';'  expected	290	None	replace
1338	[BUG]  [BUGGY]  char  x  =  getLastChar().lastIndexOf('.')-  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().lastIndexOf('.')-  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().lastIndexOf('.')-  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.')-    1;    	non-compiled	[CE]  ';'  expected	290	None	replace
1339	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('.')-  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('.')-  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('.')-  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.')-    1;    	non-compiled	[CE]  ';'  expected	290	None	replace
1340	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev)-  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev)-  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  prev)-  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.')-    1;    	non-compiled	[CE]  ';'  expected	290	None	replace
1341	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')/  1;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')/  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.')/  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.')-    1;    	non-compiled	[CE]  ';'  expected	290	None	replace
1342	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  x)-  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  x)-  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  x)-  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.')-    1;    	non-compiled	[CE]  ';'  expected	290	None	replace
1343	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('.')-  1;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('.')-  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('.')-  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.')-    1;    	non-compiled	[CE]  ';'  expected	290	None	replace
1344	[BUG]  [BUGGY]  double  x  =  getLastChar().toCharArray()  +  1;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().toCharArray()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().toCharArray()  +  1;	  double    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	171	None	replace
1345	[BUG]  [BUGGY]  double  x  =  getLastChar().toCharArray(prev);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().toCharArray(prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().toCharArray(prev);	  double    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	171	None	replace
1346	[BUG]  [BUGGY]  double  x  =  getLastChar().getLength();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().getLength();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().getLength();	  double    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	171	None	replace
1347	[BUG]  [BUGGY]  double  x  =  getLastChar().toString();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().toString();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().toString();	  double    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	171	None	replace
1348	[BUG]  [BUGGY]  int  x  =  getLastChar().toCharArray();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().toCharArray();	  double    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	171	None	replace
1349	[BUG]  [BUGGY]  long  x  =  getLastChar().toCharArray();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().toCharArray();	  double    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	171	None	replace
1350	[BUG]  [BUGGY]  Integer  x  =  getLastChar().indexOf('n',  prev);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().indexOf('n',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().indexOf('n',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().indexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	319	None	replace
1351	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('n',  prev)+  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('n',  prev)+  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('n',  prev)+  1;	  if(x    <    0)    {    int    x    =    getLastChar().indexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	319	None	replace
1352	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('n',  prev  +  1);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('n',  prev  +  1);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('n',  prev  +  1);	  if(x    <    0)    {    int    x    =    getLastChar().indexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	319	None	replace
1353	[BUG]  [BUGGY]  char  x  =  getLastChar().indexOf('n',  prev);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().indexOf('n',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().indexOf('n',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().indexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	319	None	replace
1354	[BUG]  [BUGGY]  int  x  =  getFirstChar().indexOf('n',  prev);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().indexOf('n',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().indexOf('n',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().indexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	319	None	replace
1355	[BUG]  [BUGGY]  double  x  =  getLastChar().indexOf('n',  prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().indexOf('n',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().indexOf('n',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().indexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	319	None	replace
1356	[BUG]  [BUGGY]  if(x  <=(int)mapping)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=(int)mapping)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=(int)mapping)  {	  if(x    <=(int)x)    {    	non-compiled	[CE]  ';'  expected	375	None	replace
1357	[BUG]  [BUGGY]  if(prev  <  0)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0)  {	  if(x    <    0)    {    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	158	None	replace
1358	[BUG]  [BUGGY]  if(prev  >=  '-')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  '-')  {	  if(x    <    0)    {    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	158	None	replace
1359	[BUG]  [BUGGY]  if(prev!=  '-')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  '-')  {	  if(x    <    0)    {    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	158	None	replace
1360	[BUG]  [BUGGY]  int  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1361	[BUG]  [BUGGY]  double  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1362	[BUG]  [BUGGY]  int  x  =  getLastChar().doubleValue();  if(x  <  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().doubleValue();  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().doubleValue();  if(x  <  0  ||  prev  ==  '-')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1363	[BUG]  [BUGGY]  long  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1364	[BUG]  [BUGGY]  double  x  =  getLastChar().doubleValue();  if(x  <  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().doubleValue();  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().doubleValue();  if(x  <  0  ||  prev  ==  '-')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1365	[BUG]  [BUGGY]  int  x  =  getLastChar().doubleValue();  if(x  <  0)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().doubleValue();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().doubleValue();  if(x  <  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1366	[BUG]  [BUGGY]  int  x  =  getLastChar().doubleValue();  if(x  >=  prev)  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().doubleValue();  if(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().doubleValue();  if(x  >=  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1367	[BUG]  [BUGGY]  long  x  =  getLastChar().doubleValue();  if(x  <  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().doubleValue();  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().doubleValue();  if(x  <  0  ||  prev  ==  '-')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1368	[BUG]  [BUGGY]  int  x  =  getLastChar().doubleValue();  if(x!=  prev)  {  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().doubleValue();  if(x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().doubleValue();  if(x!=  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1369	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
1370	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  If(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  If(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    If(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
1371	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(x  >=  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    if(x  >=  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
1372	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(x  <  long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  class  expected  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(x  <  long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    if(x  <  long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  	non-compiled	[CE]  class  expected	28	None	add
1373	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  Prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  Prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    if(x  <  Long.MIN_VALUE  ||  Prev  >  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
1374	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(x  >  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(x  >  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    if(x  >  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
1375	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  while(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  while(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    while(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
1376	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar();  }	          x    =    getLastChar();    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	83	None	replace
1377	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	83	None	replace
1378	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	83	None	replace
1379	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	83	None	replace
1380	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	83	None	replace
1381	[BUG]  [BUGGY]  Integer  x  =  getLastChar()  +  1;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar()  +  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar()  +  1;	  Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	27	None	replace
1382	[BUG]  [BUGGY]  Integer  x  =  getFirstChild();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getFirstChild();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getFirstChild();	  Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	27	None	replace
1383	[BUG]  [BUGGY]  Integer  x  =  getLastChar().toString();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().toString();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().toString();	  Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	27	None	replace
1384	[BUG]  [BUGGY]  Integer  x  =  getLastChar().intValue();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().intValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().intValue();	  Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	27	None	replace
1385	[BUG]  [BUGGY]  Integer  x  =  getLastInt();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastInt();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastInt();	  Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	27	None	replace
1386	[BUG]  [BUGGY]  Integer  value  =  getLastChar().intValue()  +  1;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().intValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().intValue()  +  1;	  Integer    value    =    getLastChar().intValue();    	non-compiled	[CE]  ';'  expected	226	None	replace
1387	[BUG]  [BUGGY]  Integer  value  =  getLastChar().intValue()  -  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().intValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().intValue()  -  1;	  Integer    value    =    getLastChar().intValue();    	non-compiled	[CE]  ';'  expected	226	None	replace
1388	[BUG]  [BUGGY]  Integer  value  =  getFirstChar().intValue();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstChar().intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChar().intValue();	  Integer    value    =    getLastChar().intValue();    	non-compiled	[CE]  ';'  expected	226	None	replace
1389	[BUG]  [BUGGY]  Integer  value  =  getLastInt().intValue();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastInt().intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastInt().intValue();	  Integer    value    =    getLastChar().intValue();    	non-compiled	[CE]  ';'  expected	226	None	replace
1390	[BUG]  [BUGGY]  Integer  value  =  getLastChar().intValue()  /  10;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().intValue()  /  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().intValue()  /  10;	  Integer    value    =    getLastChar().intValue();    	non-compiled	[CE]  ';'  expected	226	None	replace
1391	[BUG]  [BUGGY]  Integer  value  =  getLastChar().intValue()  /  2;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().intValue()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().intValue()  /  2;	  Integer    value    =    getLastChar().intValue();    	non-compiled	[CE]  ';'  expected	226	None	replace
1392	[BUG]  [BUGGY]  Integer  value  =  getLastChar().intValue()  /  10  +  1;  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().intValue()  /  10  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().intValue()  /  10  +  1;	  Integer    value    =    getLastChar().intValue();    	non-compiled	[CE]  ';'  expected	226	None	replace
1393	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  +  2);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  prev  +  2);	  Double    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	157	None	replace
1394	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  *  1);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  *  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  prev  *  1);	  Double    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	157	None	replace
1395	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  +  3);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  +  3);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  prev  +  3);	  Double    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	157	None	replace
1396	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  +  1  -  x);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  +  1  -  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  prev  +  1  -  x);	  Double    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	157	None	replace
1397	[BUG]  [BUGGY]  if((  x  >=  prev)||(x!=  Double.POSITIVE_INFINITY))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x!=  Double.POSITIVE_INFINITY))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x!=  Double.POSITIVE_INFINITY))  {	  if((    double)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
1398	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  ==  Double.POSITIVE_INFINITY))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  ==  Double.POSITIVE_INFINITY))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  ==  Double.POSITIVE_INFINITY))  {	  if((    double)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
1399	[BUG]  [BUGGY]  if((  x  >=  prev)||(x!=  Double.NaN))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x!=  Double.NaN))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x!=  Double.NaN))  {	  if((    double)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
1400	[BUG]  [BUGGY]  if((  x  >=  prev)||(x!=  double))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x!=  double))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x!=  double))  {	  if((    double)x!=    prev)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1401	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  ==  Double.NaN))  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  ==  Double.NaN))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  ==  Double.NaN))  {	  if((    double)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
1402	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '.')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '.')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	134	None	replace
1403	[BUG]  [BUGGY]  double  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar();  if(x  <  0  ||  prev  ==  '-')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	134	None	replace
1404	[BUG]  [BUGGY]  float  value  =(float)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  value  =(float)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  value  =(float)Math.pow(10,  prev);	  float    value    =(float)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	292	None	replace
1405	[BUG]  [BUGGY]  float  value  =(float)Math.pow(10,  Math.pow(10,  prev));  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  value  =(float)Math.pow(10,  Math.pow(10,  prev));  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  value  =(float)Math.pow(10,  Math.pow(10,  prev));	  float    value    =(float)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	292	None	replace
1406	[BUG]  [BUGGY]  char  value  =(double)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(double)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(double)Math.pow(10,  x);	  float    value    =(float)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	292	None	replace
1407	[BUG]  [BUGGY]  double  value  =(float)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(float)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(float)Math.pow(10,  x);	  float    value    =(float)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	292	None	replace
1408	[BUG]  [BUGGY]  char  value  =(float)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(float)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(float)Math.pow(10,  x);	  float    value    =(float)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	292	None	replace
1409	[BUG]  [BUGGY]  if(x  <=  Double.POSITIVE_INFINITY  ||  x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Double.POSITIVE_INFINITY  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Double.POSITIVE_INFINITY  ||  x  >  Long.MAX_VALUE)  {	  if(x    <    (long)x)    {    	non-compiled	[CE]  ';'  expected	188	None	replace
1410	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  x  +  1);	  double    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	246	None	replace
1411	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  x  -  prev);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  x  -  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  x  -  prev);	  double    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	246	None	replace
1412	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  value);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  value);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  value);	  double    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	246	None	replace
1413	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  x  -  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  x  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  x  -  1);	  double    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	246	None	replace
1414	[BUG]  [BUGGY]  Character  value  =  getLastChar().toCharArray();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  value  =  getLastChar().toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  value  =  getLastChar().toCharArray();	  Character    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	275	None	replace
1415	[BUG]  [BUGGY]  Character  value  =  getLastChar()  &  x;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  value  =  getLastChar()  &  x;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  value  =  getLastChar()  &  x;	  Character    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	275	None	replace
1416	[BUG]  [BUGGY]  Character  value  =  getLastChar()  +  1;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  value  =  getLastChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  value  =  getLastChar()  +  1;	  Character    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	275	None	replace
1417	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp(x  +  1);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp(x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp(x  +  1);	  int    mantissa    =    getMeanOp(x);    	non-compiled	[CE]  ';'  expected	76	None	replace
1418	[BUG]  [BUGGY]  char  mantissa  =  getMeanOp(x);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  getMeanOp(x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  getMeanOp(x);	  int    mantissa    =    getMeanOp(x);    	non-compiled	[CE]  ';'  expected	76	None	replace
1419	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp(x  -  1);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp(x  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp(x  -  1);	  int    mantissa    =    getMeanOp(x);    	non-compiled	[CE]  ';'  expected	76	None	replace
1420	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp(x,  0);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp(x,  0);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp(x,  0);	  int    mantissa    =    getMeanOp(x);    	non-compiled	[CE]  ';'  expected	76	None	replace
1421	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp(x,  1);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp(x,  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp(x,  1);	  int    mantissa    =    getMeanOp(x);    	non-compiled	[CE]  ';'  expected	76	None	replace
1422	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.');  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('.');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    	non-compiled	[CE]  ';'  expected	166	None	replace
1423	[BUG]  [BUGGY]  double  value  =  getFirstChar(),  prev.doubleValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstChar(),  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstChar(),  prev.doubleValue();	  double    value    =    getFirstChar().doubleValue();    	non-compiled	[CE]  ';'  expected	205	None	replace
1424	[BUG]  [BUGGY]  double  value  =  getFirstString().doubleValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstString().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstString().doubleValue();	  double    value    =    getFirstChar().doubleValue();    	non-compiled	[CE]  ';'  expected	205	None	replace
1425	[BUG]  [BUGGY]  double  value  =  getFirstLine().doubleValue();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstLine().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstLine().doubleValue();	  double    value    =    getFirstChar().doubleValue();    	non-compiled	[CE]  ';'  expected	205	None	replace
1426	[BUG]  [BUGGY]  char  mantissa  =  getLastChar().doubleValue();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  getLastChar().doubleValue();	  int    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	119	None	replace
1427	[BUG]  [BUGGY]  int  mantissa  =  getLastChar().doubleValue()  +  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getLastChar().doubleValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar().doubleValue()  +  1;	  int    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	119	None	replace
1428	[BUG]  [BUGGY]  int  mantissa  =  getLastChar().doubleValue()  -  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getLastChar().doubleValue()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar().doubleValue()  -  1;	  int    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	119	None	replace
1429	[BUG]  [BUGGY]  int  mantissa  =  getLastChar(),  prev.doubleValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getLastChar(),  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar(),  prev.doubleValue();	  int    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	119	None	replace
1430	[BUG]  [BUGGY]  int  mantissa  =  getLastChar().doubleValue()  /  10;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getLastChar().doubleValue()  /  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar().doubleValue()  /  10;	  int    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	119	None	replace
1431	[BUG]  [BUGGY]  x  =  getPositiveCharacter();  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getPositiveCharacter();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getPositiveCharacter();	  x    =    getPositiveNumericValue();    	non-compiled	[CE]  ';'  expected	311	None	replace
1432	[BUG]  [BUGGY]  x  =  getPositiveNumericValue()  +  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getPositiveNumericValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getPositiveNumericValue()  +  1;	  x    =    getPositiveNumericValue();    	non-compiled	[CE]  ';'  expected	311	None	replace
1433	[BUG]  [BUGGY]  x  =  getStringValue();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getStringValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getStringValue();	  x    =    getPositiveNumericValue();    	non-compiled	[CE]  ';'  expected	311	None	replace
1434	[BUG]  [BUGGY]  double  x  =  getPositiveNumericValue();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getPositiveNumericValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getPositiveNumericValue();	  x    =    getPositiveNumericValue();    	non-compiled	[CE]  ';'  expected	311	None	replace
1435	[BUG]  [BUGGY]  x  =  getPositiveChar();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getPositiveChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getPositiveChar();	  x    =    getPositiveNumericValue();    	non-compiled	[CE]  ';'  expected	311	None	replace
1436	[BUG]  [BUGGY]  x  =  getPositiveNumericValue().doubleValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getPositiveNumericValue().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getPositiveNumericValue().doubleValue();	  x    =    getPositiveNumericValue();    	non-compiled	[CE]  ';'  expected	311	None	replace
1437	[BUG]  [BUGGY]  x  =  getPositiveCharacterValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getPositiveCharacterValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getPositiveCharacterValue();	  x    =    getPositiveNumericValue();    	non-compiled	[CE]  ';'  expected	311	None	replace
1438	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  ==  -1))  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  ==  -1))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  ==  -1))  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	238	None	replace
1439	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev)+  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev)+  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev)+  1;	  int    mantissa    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	302	None	replace
1440	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  prev)+  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  Math.pow(10,  prev)+  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  prev)+  1;	  int    mantissa    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	302	None	replace
1441	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  prev)+  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  prev)+  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  prev)+  1;	  int    mantissa    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	302	None	replace
1442	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)+  2;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)+  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)+  2;	  int    mantissa    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	302	None	replace
1443	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)+  1L;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)+  1L;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)+  1L;	  int    mantissa    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	302	None	replace
1444	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)+  1  +  1;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)+  1  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)+  1  +  1;	  int    mantissa    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	302	None	replace
1445	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)+  3;  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)+  3;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)+  3;	  int    mantissa    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	302	None	replace
1446	[BUG]  [BUGGY]  if((  int)x  <  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  <  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  int)x  <  prev)  {	  if((    long)x    <    prev)    {    	non-compiled	[CE]  ';'  expected	299	None	replace
1447	[BUG]  [BUGGY]  if((  long)x  <=  Preconditions.INVALID_PADDING)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  Preconditions.INVALID_PADDING)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  <=  Preconditions.INVALID_PADDING)  {	  if((    long)x    <    prev)    {    	non-compiled	[CE]  ';'  expected	299	None	replace
1448	[BUG]  [BUGGY]  if((  long)x  <=  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  <=  Preconditions.NEGATIVE_INFINITY)  {	  if((    long)x    <    prev)    {    	non-compiled	[CE]  ';'  expected	299	None	replace
1449	[BUG]  [BUGGY]  if((  long)x  <=  Preconditions.INVALID_DEFAULT)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  Preconditions.INVALID_DEFAULT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  <=  Preconditions.INVALID_DEFAULT)  {	  if((    long)x    <    prev)    {    	non-compiled	[CE]  ';'  expected	299	None	replace
1450	[BUG]  [BUGGY]  if((  long)x  <=  Preconditions.INCRDECR_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  Preconditions.INCRDECR_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  <=  Preconditions.INCRDECR_VALUE)  {	  if((    long)x    <    prev)    {    	non-compiled	[CE]  ';'  expected	299	None	replace
1451	[BUG]  [BUGGY]  double  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
1452	[BUG]  [BUGGY]  Integer  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
1453	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x!=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x!=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x!=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
1454	[BUG]  [BUGGY]  char  value  =  Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  Math.pow(10,  prev  -  1);	  int    value    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	183	None	replace
1455	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  -  2);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev  -  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev  -  2);	  int    value    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	183	None	replace
1456	[BUG]  [BUGGY]  Double  value  =  Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  Math.pow(10,  prev  -  1);	  int    value    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	183	None	replace
1457	[BUG]  [BUGGY]  short  value  =  Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  short  value  =  Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	short  value  =  Math.pow(10,  prev  -  1);	  int    value    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	183	None	replace
1458	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('n',  prev)-  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('n',  prev)-  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('n',  prev)-  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().indexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	286	None	replace
1459	[BUG]  [BUGGY]  Integer  value  =  getLastIntValue();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastIntValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntValue();	  Integer    value    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	231	None	replace
1460	[BUG]  [BUGGY]  Integer  value  =  getLastIntElement();  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastIntElement();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntElement();	  Integer    value    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	231	None	replace
1461	[BUG]  [BUGGY]  Integer  value  =  getLastIntIndex();  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastIntIndex();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntIndex();	  Integer    value    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	231	None	replace
1462	[BUG]  [BUGGY]  Integer  value  =  getLastIntDecimal();  [CE]  ';'  expected  [FE]                                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastIntDecimal();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntDecimal();	  Integer    value    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	231	None	replace
1463	[BUG]  [BUGGY]  Integer  value  =  getLastIntEmptyChar();  [CE]  ';'  expected  [FE]                                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastIntEmptyChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntEmptyChar();	  Integer    value    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	231	None	replace
1464	[BUG]  [BUGGY]  Integer  value  =  getFirstIntChar();  [CE]  ';'  expected  [FE]                                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstIntChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstIntChar();	  Integer    value    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	231	None	replace
1465	[BUG]  [BUGGY]  Integer  value  =  getLastIntLongValue();  [CE]  ';'  expected  [FE]                                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastIntLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntLongValue();	  Integer    value    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	231	None	replace
1466	[BUG]  [BUGGY]  Integer  value  =  getLastIntBound();  [CE]  ';'  expected  [FE]                                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastIntBound();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntBound();	  Integer    value    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	231	None	replace
1467	[BUG]  [BUGGY]  if((  int)x!=  prev)  {  if((  int)x!=  prev)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x!=  prev)  {  if((  int)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x!=    prev)    {    if((  int)x!=  prev)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
1468	[BUG]  [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  >=  prev)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x!=    prev)    {    if((  int)x  >=  prev)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
1469	[BUG]  [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  >>  prev)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  >>  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x!=    prev)    {    if((  int)x  >>  prev)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
1470	[BUG]  [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  ==  prev)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x!=    prev)    {    if((  int)x  ==  prev)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
1471	[BUG]  [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  [BUGGY]  prev)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  [BUGGY]  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x!=    prev)    {    if((  int)x  [BUGGY]  prev)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
1472	[BUG]  [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  [Delete]  prev)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  [Delete]  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x!=    prev)    {    if((  int)x  [Delete]  prev)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
1473	[BUG]  [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  [PATCH]  prev)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  [PATCH]  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x!=    prev)    {    if((  int)x  [PATCH]  prev)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
1474	[BUG]  [BUGGY]  if((  int)x!=  prev)  {  If((  int)x!=  prev)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x!=  prev)  {  If((  int)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x!=    prev)    {    If((  int)x!=  prev)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
1475	[BUG]  [BUGGY]  double  mantissa  =  getFirstChar()  /  10;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getFirstChar()  /  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getFirstChar()  /  10;	  double    mantissa    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	177	None	replace
1476	[BUG]  [BUGGY]  char  value  =  Math.pow(10,  prev).charValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  Math.pow(10,  prev).charValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  Math.pow(10,  prev).charValue();	  double    value    =    Math.pow(10,    prev).charValue();    	non-compiled	[CE]  ';'  expected	365	None	replace
1477	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev).intValue();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev).intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev).intValue();	  double    value    =    Math.pow(10,    prev).charValue();    	non-compiled	[CE]  ';'  expected	365	None	replace
1478	[BUG]  [BUGGY]  long  value  =  Math.pow(10,  prev).charValue();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  Math.pow(10,  prev).charValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  Math.pow(10,  prev).charValue();	  double    value    =    Math.pow(10,    prev).charValue();    	non-compiled	[CE]  ';'  expected	365	None	replace
1479	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  x).charValue();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  x).charValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  x).charValue();	  double    value    =    Math.pow(10,    prev).charValue();    	non-compiled	[CE]  ';'  expected	365	None	replace
1480	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev).charValue()  +  1;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev).charValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev).charValue()  +  1;	  double    value    =    Math.pow(10,    prev).charValue();    	non-compiled	[CE]  ';'  expected	365	None	replace
1481	[BUG]  [BUGGY]  if(prev  ==  ')')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  ')')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  ')')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
1482	[BUG]  [BUGGY]  x  =  getFirstChar();  x  =  getLastChar().doubleValue();  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar();  x  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar();  x  =  getLastChar().doubleValue();	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
1483	[BUG]  [BUGGY]  if(prev  ==  ')')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  ')')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  ')')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
1484	[BUG]  [BUGGY]  n  =  getLastChar();  n  =  getLastChar().doubleValue();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  n  =  getLastChar();  n  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	n  =  getLastChar();  n  =  getLastChar().doubleValue();	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
1485	[BUG]  [BUGGY]  double  x  =  getLastChar();  x  =  getLastChar().doubleValue();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar();  x  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar();  x  =  getLastChar().doubleValue();	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
1486	[BUG]  [BUGGY]  Integer  value  =  getLastChar()  /  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar()  /  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar()  /  1;	  Integer    value    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	227	None	replace
1487	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  x  -  1);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(double)Math.pow(10,  x  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  x  -  1);	  int    value    =(int)Math.pow(10,    x    -    1);    	non-compiled	[CE]  ';'  expected	363	None	replace
1488	[BUG]  [BUGGY]  char  value  =(char)Math.pow(10,  x  -  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(char)Math.pow(10,  x  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(char)Math.pow(10,  x  -  1);	  int    value    =(int)Math.pow(10,    x    -    1);    	non-compiled	[CE]  ';'  expected	363	None	replace
1489	[BUG]  [BUGGY]  long  value  =(long)Math.pow(10,  x  -  1);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =(long)Math.pow(10,  x  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(long)Math.pow(10,  x  -  1);	  int    value    =(int)Math.pow(10,    x    -    1);    	non-compiled	[CE]  ';'  expected	363	None	replace
1490	[BUG]  [BUGGY]  char  value  =(int)Math.pow(10,  x  -  1);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =(int)Math.pow(10,  x  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(int)Math.pow(10,  x  -  1);	  int    value    =(int)Math.pow(10,    x    -    1);    	non-compiled	[CE]  ';'  expected	363	None	replace
1491	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev  -  1);  [CE]  ')'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  Math.pow(10,  prev  -  1);	  int    value    =(int)Math.pow(10,    x    -    1);    	non-compiled	[CE]  ')'  expected	363	None	replace
1492	[BUG]  [BUGGY]  double  x  =  getLongValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLongValue();	  x    =    getLongValue();    	non-compiled	[CE]  ';'  expected	115	None	replace
1493	[BUG]  [BUGGY]  x  =  getLongValue()  +  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLongValue()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLongValue()  +  1;	  x    =    getLongValue();    	non-compiled	[CE]  ';'  expected	115	None	replace
1494	[BUG]  [BUGGY]  x  =  getLongValue().doubleValue();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLongValue().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLongValue().doubleValue();	  x    =    getLongValue();    	non-compiled	[CE]  ';'  expected	115	None	replace
1495	[BUG]  [BUGGY]  x  =  getBigIntegerValue();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getBigIntegerValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getBigIntegerValue();	  x    =    getLongValue();    	non-compiled	[CE]  ';'  expected	115	None	replace
1496	[BUG]  [BUGGY]  x  =  getLongValue().longValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLongValue().longValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLongValue().longValue();	  x    =    getLongValue();    	non-compiled	[CE]  ';'  expected	115	None	replace
1497	[BUG]  [BUGGY]  x  =  getLongValue().trim();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLongValue().trim();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLongValue().trim();	  x    =    getLongValue();    	non-compiled	[CE]  ';'  expected	115	None	replace
1498	[BUG]  [BUGGY]  x  =  getNumberValue();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getNumberValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getNumberValue();	  x    =    getLongValue();    	non-compiled	[CE]  ';'  expected	115	None	replace
1499	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  x  +  1);	  int    mantissa    =    Math.pow(10,    x    +    1);    	non-compiled	[CE]  ';'  expected	249	None	replace
1500	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  x  +  1);	  int    mantissa    =    Math.pow(10,    x    +    1);    	non-compiled	[CE]  ';'  expected	249	None	replace
1501	[BUG]  [BUGGY]  float  mantissa  =  Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  mantissa  =  Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  mantissa  =  Math.pow(10,  x  +  1);	  int    mantissa    =    Math.pow(10,    x    +    1);    	non-compiled	[CE]  ';'  expected	249	None	replace
1502	[BUG]  [BUGGY]  short  mantissa  =  Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  short  mantissa  =  Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	short  mantissa  =  Math.pow(10,  x  +  1);	  int    mantissa    =    Math.pow(10,    x    +    1);    	non-compiled	[CE]  ';'  expected	249	None	replace
1503	[BUG]  [BUGGY]  long  mantissa  =  getLastChar().length;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getLastChar().length;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getLastChar().length;	  long    mantissa    =    getLastChar();    	non-compiled	[CE]  ';'  expected	116	None	replace
1504	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	278	None	replace
1505	[BUG]  [BUGGY]  if(x  <  long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  class  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  class  expected	278	None	replace
1506	[BUG]  [BUGGY]  if(x  <  long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  class  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  class  expected	278	None	replace
1507	[BUG]  [BUGGY]  long  x  =  getLastChar().length();  if(x  <  0)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().length();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().length();  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().length();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	167	None	replace
1508	[BUG]  [BUGGY]  int  x  =  getLastChar().length();  if(x  <  0)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().length();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().length();  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().length();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	167	None	replace
1509	[BUG]  [BUGGY]  double  x  =  getLastChar().length();  if(x  <  0)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().length();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().length();  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().length();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	167	None	replace
1510	[BUG]  [BUGGY]  int  x  =  getLastChar().length();  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().length();  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().length();  if(x  >=  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().length();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	167	None	replace
1511	[BUG]  [BUGGY]  long  x  =  getLastChar().length();  if(x  <  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().length();  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().length();  if(x  <  0  ||  prev  ==  '-')  {	  if(x    <    0)    {    int    x    =    getLastChar().length();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	167	None	replace
1512	[BUG]  [BUGGY]  Integer  x  =  getLastChar().length();  if(x  <  0)  {  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().length();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().length();  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().length();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	167	None	replace
1513	[BUG]  [BUGGY]  int  x  =  getLastChar().length();  if(x  >  0)  {  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().length();  if(x  >  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().length();  if(x  >  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().length();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	167	None	replace
1514	[BUG]  [BUGGY]  int  x  =  getLastChar().length();  if(x  <  0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().length();  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().length();  if(x  <  0  ||  prev  ==  '-')  {	  if(x    <    0)    {    int    x    =    getLastChar().length();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	167	None	replace
1515	[BUG]  [BUGGY]  if(prev  ==  '-')  {  if(x  <  0)  {  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().length();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	167	None	replace
1516	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  +  1)-  1;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  +  1)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  +  1)-  1;	  double    value    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	69	None	replace
1517	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)-  2;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)-  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)-  2;	  double    value    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	69	None	replace
1518	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  -  1)-  1;  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  -  1)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  -  1)-  1;	  double    value    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	69	None	replace
1519	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  x)-  1;  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  x)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  x)-  1;	  double    value    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	69	None	replace
1520	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)-  1  +  1;  [CE]  ';'  expected  [FE]                                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)-  1  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)-  1  +  1;	  double    value    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	69	None	replace
1521	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  prev  *  10);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(double)Math.pow(10,  prev  *  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  prev  *  10);	  double    value    =(double)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	189	None	replace
1522	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  prev),  x);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(double)Math.pow(10,  prev),  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  prev),  x);	  double    value    =(double)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	189	None	replace
1523	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  prev  /  10);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(double)Math.pow(10,  prev  /  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  prev  /  10);	  double    value    =(double)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	189	None	replace
1524	[BUG]  [BUGGY]  double  value  =  getLastChar()  /  prev;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  /  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  /  prev;	  double    value    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	301	None	replace
1525	[BUG]  [BUGGY]  double  value  =  getLastChar()  *  prev;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  *  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  *  prev;	  double    value    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	301	None	replace
1526	[BUG]  [BUGGY]  double  value  =  getFirstChar()  -  prev;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstChar()  -  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstChar()  -  prev;	  double    value    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	301	None	replace
1527	[BUG]  [BUGGY]  double  value  =  getLastChar()  +  prev;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  +  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  +  prev;	  double    value    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	301	None	replace
1528	[BUG]  [BUGGY]  double  value  =  getLastChar()  -  prev  +  1;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  -  prev  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  -  prev  +  1;	  double    value    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	301	None	replace
1529	[BUG]  [BUGGY]  long  value  =  getLastChar()  -  prev;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar()  -  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar()  -  prev;	  double    value    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	301	None	replace
1530	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  x  -  prev);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  x  -  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  x  -  prev);	  Double    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	251	None	replace
1531	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  value);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  value);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  value);	  Double    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	251	None	replace
1532	[BUG]  [BUGGY]  BigInteger  value  =  getLastChar()  +  1;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  BigInteger  value  =  getLastChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigInteger  value  =  getLastChar()  +  1;	  BigInteger    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	274	None	replace
1533	[BUG]  [BUGGY]  BigInteger  value  =  getLastChar()  -  1;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  BigInteger  value  =  getLastChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigInteger  value  =  getLastChar()  -  1;	  BigInteger    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	274	None	replace
1534	[BUG]  [BUGGY]  BigInteger  value  =  getFirstChar();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  BigInteger  value  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigInteger  value  =  getFirstChar();	  BigInteger    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	274	None	replace
1535	[BUG]  [BUGGY]  BigInteger  value  =  getBigIntegerValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  BigInteger  value  =  getBigIntegerValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigInteger  value  =  getBigIntegerValue();	  BigInteger    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	274	None	replace
1536	[BUG]  [BUGGY]  BigInteger  value  =  getLongValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  BigInteger  value  =  getLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigInteger  value  =  getLongValue();	  BigInteger    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	274	None	replace
1537	[BUG]  [BUGGY]  BigInteger  value  =  getNumber();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  BigInteger  value  =  getNumber();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigInteger  value  =  getNumber();	  BigInteger    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	274	None	replace
1538	[BUG]  [BUGGY]  BigInteger  value  =  getLastChar()  /  2;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  BigInteger  value  =  getLastChar()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigInteger  value  =  getLastChar()  /  2;	  BigInteger    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	274	None	replace
1539	[BUG]  [BUGGY]  double  value  =  getLastChar(),  prev.doubleValue()  *  2;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar(),  prev.doubleValue()  *  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar(),  prev.doubleValue()  *  2;	  double    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	203	None	replace
1540	[BUG]  [BUGGY]  double  value  =  getLastChar(),  prev.doubleValue()  +  2;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar(),  prev.doubleValue()  +  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar(),  prev.doubleValue()  +  2;	  double    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	203	None	replace
1541	[BUG]  [BUGGY]  double  value  =  getLongValue(),  prev.doubleValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLongValue(),  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLongValue(),  prev.doubleValue();	  double    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	203	None	replace
1542	[BUG]  [BUGGY]  if(prev!=  ')')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  ')')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  ')')  {	  if(x    ==    prev)    {    if(x    {    prev)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
1543	[BUG]  [BUGGY]  char  value  =  Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  Math.pow(10,  prev  -  10);	  int    value    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	187	None	replace
1544	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  /  10);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev  /  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev  /  10);	  int    value    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	187	None	replace
1545	[BUG]  [BUGGY]  Double  value  =  Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  Math.pow(10,  prev  -  10);	  int    value    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	187	None	replace
1546	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  *  10);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev  *  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev  *  10);	  int    value    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	187	None	replace
1547	[BUG]  [BUGGY]  short  value  =  Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  short  value  =  Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	short  value  =  Math.pow(10,  prev  -  10);	  int    value    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	187	None	replace
1548	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  prev  +  2);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  Math.pow(10,  prev  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  prev  +  2);	  int    mantissa    =    Math.pow(10,    prev    +    2);    	non-compiled	[CE]  ';'  expected	154	None	replace
1549	[BUG]  [BUGGY]  short  mantissa  =  Math.pow(10,  prev  +  2);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  short  mantissa  =  Math.pow(10,  prev  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	short  mantissa  =  Math.pow(10,  prev  +  2);	  int    mantissa    =    Math.pow(10,    prev    +    2);    	non-compiled	[CE]  ';'  expected	154	None	replace
1550	[BUG]  [BUGGY]  if(x  >  prev)  {  if((  long)x!=  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev)  {  if((  long)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev)  {  if((  long)x!=  prev)  {	  if    ((    long)x    >=    prev)    {    if    ((    long)x    [PATCH]    prev)    {    	non-compiled	[CE]  ';'  expected	364	None	replace
1551	[BUG]  [BUGGY]  Long  x  =  getLastChar();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  x  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  x  =  getLastChar();	  Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	27	None	replace
1552	[BUG]  [BUGGY]  Integer  x  =  getLastCharIndex();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastCharIndex();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastCharIndex();	  Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	27	None	replace
1553	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)-  1  +  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)-  1  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)-  1  +  1;	  int    mantissa    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	236	None	replace
1554	[BUG]  [BUGGY]  Integer  value  =  getFirstElement();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstElement();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstElement();	  Integer    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	229	None	replace
1555	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  >=  Double.POSITIVE_INFINITY))  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  >=  Double.POSITIVE_INFINITY))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  >=  Double.POSITIVE_INFINITY))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
1556	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  ==  Double.POSITIVE_INFINITY))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  ==  Double.POSITIVE_INFINITY))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  ==  Double.POSITIVE_INFINITY))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
1557	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  ==  Double.MIN_VALUE  &&  prev  <=  Double.MAX_VALUE))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  ==  Double.MIN_VALUE  &&  prev  <=  Double.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  ==  Double.MIN_VALUE  &&  prev  <=  Double.MAX_VALUE))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
1558	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  ==  Double.MIN_VALUE  &&  prev  <=  Double.MIN_VALUE))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  ==  Double.MIN_VALUE  &&  prev  <=  Double.MIN_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  ==  Double.MIN_VALUE  &&  prev  <=  Double.MIN_VALUE))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
1559	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  ==  Double.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  ==  Double.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  ==  Double.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
1560	[BUG]  [BUGGY]  if(prev!=  (double)x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  (double)x)  {	  if(x!=    (double)x)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
1561	[BUG]  [BUGGY]  Double  value  =(double)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =(double)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =(double)Math.pow(10,  prev);	  double    value    =(double)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	14	None	replace
1562	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.')-  1;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.')-  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('.')-  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.')-    1;    	non-compiled	[CE]  ';'  expected	290	None	replace
1563	[BUG]  [BUGGY]  x  =  getLastChar().lastIndexOf('.')-  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().lastIndexOf('.')-  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().lastIndexOf('.')-  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.')-    1;    	non-compiled	[CE]  ';'  expected	290	None	replace
1564	[BUG]  [BUGGY]  int  x  =  getLastChar().doubleValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().doubleValue();	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1565	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1566	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1567	[BUG]  [BUGGY]  int  x  =  getLastChar().doubleValue();  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().doubleValue();  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().doubleValue();  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1568	[BUG]  [BUGGY]  if(value  >=  (long)x)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(value  >=  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(value  >=  (long)x)  {	  if(value    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
1569	[BUG]  [BUGGY]  if(value!=  (long)x)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(value!=  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(value!=  (long)x)  {	  if(value    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
1570	[BUG]  [BUGGY]  if(x  >=  prev)  {  If  ((  long)x  >=  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  If  ((  long)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  If  ((  long)x  >=  prev)  {	  if    ((    long)x    >=    prev)    {    If    ((    long)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	221	None	replace
1571	[BUG]  [BUGGY]  if((  long)x  >=  prev)  {  If  ((  long)x  >  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >=  prev)  {  If  ((  long)x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >=  prev)  {  If  ((  long)x  >  prev)  {	  if    ((    long)x    >=    prev)    {    If    ((    long)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	221	None	replace
1572	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
1573	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
1574	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
1575	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
1576	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  -  12);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  -  12);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  -  12);	  double    value    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	68	None	replace
1577	[BUG]  [BUGGY]  if(prev  ==  '-')  {  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	133	None	replace
1578	[BUG]  [BUGGY]  if(prev  ==  'n')  {  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n')  {  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n')  {  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	133	None	replace
1579	[BUG]  [BUGGY]  if(prev  ==  null)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {	  if(x    ==    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	133	None	replace
1580	[BUG]  [BUGGY]  if(x  >  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MIN_VALUE  ||  prev  <=  Long.MAX_VALUE)  {	  if(x    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
1581	[BUG]  [BUGGY]  if(x  >  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
1582	[BUG]  [BUGGY]  while(x  <  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  <  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  <  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    while(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	337	None	replace
1583	[BUG]  [BUGGY]  long  value  =(long)x;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =(long)x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(long)x;	  if(x    ==    Long.MIN_VALUE)    {    while(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	337	None	replace
1584	[BUG]  [BUGGY]  ((  long)x  ==  prev)  {  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  ((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
1585	[BUG]  [BUGGY]  if(x  >=  prev)  {  ((  long)x  ==  prev)  {  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  ((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  ((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
1586	[BUG]  [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x  >=  prev)  {  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  ==  prev)  {  ((  long)x  >=  prev)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
1587	[BUG]  [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x!=  prev)  {  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  ==  prev)  {  ((  long)x!=  prev)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
1588	[BUG]  [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x  <=  0)  {  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x  <=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  ==  prev)  {  ((  long)x  <=  0)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
1589	[BUG]  [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x  >>  prev)  {  [CE]  not  a  statement  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  ==  prev)  {  ((  long)x  >>  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  ==  prev)  {  ((  long)x  >>  prev)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
1590	[BUG]  [BUGGY]  long  mantissa  =  getMean();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  getMean();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getMean();	  long    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	80	None	replace
1591	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar();  }	  if(x    ==    (double)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	362	None	replace
1592	[BUG]  [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  int  x  =  getLastChar();	  if(x    ==    (double)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	362	None	replace
1593	[BUG]  [BUGGY]  if(prev  ==  '-')  {  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  if(x  ==  0)  {	  if(x    ==    (int)x)    {    if(x    ==    (Int)x)    {    	non-compiled	[CE]  ';'  expected	258	None	replace
1594	[BUG]  [BUGGY]  if((  x  ==  prev)||(x!=  Long.MIN_VALUE))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x!=  Long.MIN_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x!=  Long.MIN_VALUE))  {	  if((    long)x!=    prev)    {    if((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	212	None	replace
1595	[BUG]  [BUGGY]  if((  x  ==  prev)||(x!=  Long.MAX_VALUE))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x!=  Long.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x!=  Long.MAX_VALUE))  {	  if((    long)x!=    prev)    {    if((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	212	None	replace
1596	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  >=  Long.MIN_VALUE))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  >=  Long.MIN_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  >=  Long.MIN_VALUE))  {	  if((    long)x!=    prev)    {    if((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	212	None	replace
1597	[BUG]  [BUGGY]  if(x  <  (int)Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  (int)Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (int)Long.MIN_VALUE)  {	  if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	279	None	replace
1598	[BUG]  [BUGGY]  double  mantissa  =  getLastChar().doubleValue()  -  prev;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar().doubleValue()  -  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar().doubleValue()  -  prev;	  double    mantissa    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	295	None	replace
1599	[BUG]  [BUGGY]  Integer  value  =  getPreviousChar()  -  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getPreviousChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getPreviousChar()  -  1;	  Integer    value    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	225	None	replace
1600	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  -  1  +  1);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  -  1  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  -  1  +  1);	  int    mantissa    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	155	None	replace
1601	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  >=  Long.MIN_VALUE))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  >=  Long.MIN_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  >=  Long.MIN_VALUE))  {	  if    ((    long)x    >=    prev)    {    if    ((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	220	None	replace
1602	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)+  10;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)+  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)+  10;	  double    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	67	None	replace
1603	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  prev);  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  prev);  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  prev);  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
1604	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  1);  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  1);  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  1);  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
1605	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('n');  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('n');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('n');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
1606	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getFirstChar().lastIndexOf('n');  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getFirstChar().lastIndexOf('n');  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getFirstChar().lastIndexOf('n');  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
1607	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {	  if(x    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
1608	[BUG]  [BUGGY]  Integer  value  =  getLastChar().valueToString();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().valueToString();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().valueToString();	  Integer    value    =    getLastChar().toString();    	non-compiled	[CE]  ';'  expected	228	None	replace
1609	[BUG]  [BUGGY]  Integer  value  =  getLastChar().toPositiveChar();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().toPositiveChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().toPositiveChar();	  Integer    value    =    getLastChar().toString();    	non-compiled	[CE]  ';'  expected	228	None	replace
1610	[BUG]  [BUGGY]  int  value  =  getFirstChar().length;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getFirstChar().length;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstChar().length;	  int    value    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	24	None	replace
1611	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  >=  Integer.MIN_VALUE))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  >=  Integer.MIN_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  >=  Integer.MIN_VALUE))  {	  if((    long)x!=    prev)    {    if((    long)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	210	None	replace
1612	[BUG]  [BUGGY]  x  =  getFirstChild().intValue();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChild().intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChild().intValue();	  x    =    getFirstChild();    	non-compiled	[CE]  ';'  expected	111	None	replace
1613	[BUG]  [BUGGY]  if(x  ==  prev)  {  If  ((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  If  ((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  If  ((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    If    ((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	241	None	replace
1614	[BUG]  [BUGGY]  if((  long)x!=  prev)  {  If  ((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  prev)  {  If  ((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  prev)  {  If  ((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    If    ((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	241	None	replace
1615	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  prevs.iterator();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Iterator  <  Object>  it  =  prevs.iterator();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Iterator  <  Object>  it  =  prevs.iterator();	  if    ((    long)x    ==    prev)    {    If    ((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	241	None	replace
1616	[BUG]  [BUGGY]  if(x  <=  '0')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  '0')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0')  {	  if(x    ==    prev)    {    if(x    >>    prev)    {    	non-compiled	[CE]  ';'  expected	52	None	replace
1617	[BUG]  [BUGGY]  Iterator  <  Long>  it  =  x.iterator();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Iterator  <  Long>  it  =  x.iterator();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Iterator  <  Long>  it  =  x.iterator();	  if(x    ==    Long.MIN_VALUE)    {    If(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	61	None	replace
1618	[BUG]  [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getFirstChar();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getFirstChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getFirstChar();  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
1619	[BUG]  [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
1620	[BUG]  [BUGGY]  if(prev!=  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
1621	[BUG]  [BUGGY]  if(prev  ==  '.')  {  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  if(x  ==  prev)  {	  if(x    ==    (int)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	260	None	replace
1622	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r')  {  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r')  {  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n'  ||  prev  ==  'r')  {  if(x  ==  0)  {	  if(x    ==    (int)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	260	None	replace
1623	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  't')  {  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  't')  {  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n'  ||  prev  ==  't')  {  if(x  ==  0)  {	  if(x    ==    (int)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	260	None	replace
1624	[BUG]  [BUGGY]  double  value  =  getFirstByte().doubleValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstByte().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstByte().doubleValue();	  double    value    =    getFirstChar().doubleValue();    	non-compiled	[CE]  ';'  expected	205	None	replace
1625	[BUG]  [BUGGY]  double  value  =  getFirstElement().doubleValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstElement().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstElement().doubleValue();	  double    value    =    getFirstChar().doubleValue();    	non-compiled	[CE]  ';'  expected	205	None	replace
1626	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x!=  Long.MAX_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x!=  Long.MAX_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x!=  Long.MAX_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
1627	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MAX_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  ==  Long.MAX_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  ==  Long.MAX_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
1628	[BUG]  [BUGGY]  if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  (double)x)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  (double)x)  {	  if(prev    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
1629	[BUG]  [BUGGY]  if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  Character.toLowerCase(x))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  Character.toLowerCase(x))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  Character.toLowerCase(x))  {	  if(prev    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
1630	[BUG]  [BUGGY]  if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  Double.POSITIVE_INFINITY)  {	  if(prev    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
1631	[BUG]  [BUGGY]  if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  Double.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  Double.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  Double.NEGATIVE_INFINITY)  {	  if(prev    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
1632	[BUG]  [BUGGY]  if(x  ==  Predicates.Number.INT  ||  prev  ==  (double)x)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Predicates.Number.INT  ||  prev  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Predicates.Number.INT  ||  prev  ==  (double)x)  {	  if(prev    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
1633	[BUG]  [BUGGY]  if(x  >=  prev)  {  if((  long)x  >=  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  if((  long)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  if((  long)x  >=  prev)  {	  if    ((    long)x    >=    prev)    {    if    ((    long)x    >>    prev)    {    	non-compiled	[CE]  ';'  expected	218	None	replace
1634	[BUG]  [BUGGY]  if(x  >=  prev)  {  if((  long)x!=  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  if((  long)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  if((  long)x!=  prev)  {	  if    ((    long)x    >=    prev)    {    if    ((    long)x    >>    prev)    {    	non-compiled	[CE]  ';'  expected	218	None	replace
1635	[BUG]  [BUGGY]  float  value  =(float)Math.pow(10,  x  -  1);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  value  =(float)Math.pow(10,  x  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  value  =(float)Math.pow(10,  x  -  1);	  int    value    =(int)Math.pow(10,    x    -    1);    	non-compiled	[CE]  ';'  expected	363	None	replace
1636	[BUG]  [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	124	None	replace
1637	[BUG]  [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_INTS))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_INTS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_INTS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	124	None	replace
1638	[BUG]  [BUGGY]  if(prev!=  '-')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  '-')  {  x  =  getLastChar();  double  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  '-')  {  x  =  getLastChar();  double  x  =  getLastChar();  }	          x    =    getLastChar();    double    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	85	None	replace
1639	[BUG]  [BUGGY]  if(x  >  10  &&  prev  <=  '0')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  10  &&  prev  <=  '0')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  10  &&  prev  <=  '0')  {	  if(x    >    10)    {    	non-compiled	[CE]  ';'  expected	372	None	replace
1640	[BUG]  [BUGGY]  if(x  >  10  &&  prev  ==  '.')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  10  &&  prev  ==  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  10  &&  prev  ==  '.')  {	  if(x    >    10)    {    	non-compiled	[CE]  ';'  expected	372	None	replace
1641	[BUG]  [BUGGY]  if(x  >  10  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  10  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  10  &&  prev  ==  '-')  {	  if(x    >    10)    {    	non-compiled	[CE]  ';'  expected	372	None	replace
1642	[BUG]  [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  &&  prev  >  Preconditions.MIN_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  &&  prev  >  Preconditions.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.MIN_VALUE  &&  prev  >  Preconditions.MIN_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	369	None	replace
1643	[BUG]  [BUGGY]  double  x  =  getPreviousChar()  -  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getPreviousChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getPreviousChar()  -  1;	  double    x    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	173	None	replace
1644	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	138	None	replace
1645	[BUG]  [BUGGY]  double  x  =  getLastChar().lastIndexOf('.');  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().lastIndexOf('.');  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().lastIndexOf('.');  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	138	None	replace
1646	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.');  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.');  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('.');  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	138	None	replace
1647	[BUG]  [BUGGY]  if((  x  <  prev)||(x  >=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE))  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <  prev)||(x  >=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <  prev)||(x  >=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE))  {	  if((    long)x    <    prev)    {    	non-compiled	[CE]  ';'  expected	299	None	replace
1648	[BUG]  [BUGGY]  if((  x  <  prev)||(x  >  prev))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <  prev)||(x  >  prev))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <  prev)||(x  >  prev))  {	  if((    long)x    <    prev)    {    	non-compiled	[CE]  ';'  expected	299	None	replace
1649	[BUG]  [BUGGY]  if((  x  <  prev)||(x  >  Long.MAX_VALUE))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <  prev)||(x  >  Long.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <  prev)||(x  >  Long.MAX_VALUE))  {	  if((    long)x    <    prev)    {    	non-compiled	[CE]  ';'  expected	299	None	replace
1650	[BUG]  [BUGGY]  if((  x  <  prev)||(x  >=  Long.MAX_VALUE  &&  prev  <=  Long.MAX_VALUE))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <  prev)||(x  >=  Long.MAX_VALUE  &&  prev  <=  Long.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <  prev)||(x  >=  Long.MAX_VALUE  &&  prev  <=  Long.MAX_VALUE))  {	  if((    long)x    <    prev)    {    	non-compiled	[CE]  ';'  expected	299	None	replace
1651	[BUG]  [BUGGY]  double  x  =  getLastChar().getCharIndex();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().getCharIndex();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().getCharIndex();	  double    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	171	None	replace
1652	[BUG]  [BUGGY]  double  x  =  getLastChar().computeValue(prev);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().computeValue(prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().computeValue(prev);	  double    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	171	None	replace
1653	[BUG]  [BUGGY]  x  =  getLastChar().longValue();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().longValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().longValue();	  x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	112	None	replace
1654	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }	          x    =    getLastChar();    Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	87	None	replace
1655	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	87	None	replace
1656	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	87	None	replace
1657	[BUG]  [BUGGY]  x  =  getFirstChar();  Integer  x  =  getLastChar();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar();  Integer  x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar();  Integer  x  =  getLastChar();	          x    =    getLastChar();    Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	87	None	replace
1658	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  else  {  add( ", ");  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  else  {  add( ", ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  else  {  add( ", ");  }	          x    =    getLastChar();    Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	87	None	replace
1659	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  else  {  add( "n ");  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  else  {  add( "n ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastChar();  }  else  {  add( "n ");  }	          x    =    getLastChar();    Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	87	None	replace
1660	[BUG]  [BUGGY]  x  =  getLastChar().charValue();  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().charValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charValue();	  x    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	110	None	replace
1661	[BUG]  [BUGGY]  this.firstChar  =  getFirstChar();  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  this.firstChar  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	this.firstChar  =  getFirstChar();	  x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	109	None	replace
1662	[BUG]  [BUGGY]  x  =  getFirstChar().charValue();  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar().charValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar().charValue();	  x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	109	None	replace
1663	[BUG]  [BUGGY]  if(x!=  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Preconditions.NEGATIVE_INFINITY)  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
1664	[BUG]  [BUGGY]  if((  long)x  <  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  <  Preconditions.NEGATIVE_INFINITY)  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
1665	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {	  if(x    >=    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	282	None	replace
1666	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  ||  prev  ==  Double.POSITIVE_INFINITY)  {	  if(x    >=    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	282	None	replace
1667	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  ||  prev  >=  Double.POSITIVE_INFINITY)  {	  if(x    >=    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	282	None	replace
1668	[BUG]  [BUGGY]  long  x  =  getLastChar().lastIndexOf('.',  x);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().lastIndexOf('.',  x);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().lastIndexOf('.',  x);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    x);    	non-compiled	[CE]  ';'  expected	345	None	replace
1669	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp()  -  1L;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp()  -  1L;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp()  -  1L;	  int    mantissa    =    getMeanOp()    -    1;    	non-compiled	[CE]  ';'  expected	77	None	replace
1670	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp()  -  1  +  1;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp()  -  1  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp()  -  1  +  1;	  int    mantissa    =    getMeanOp()    -    1;    	non-compiled	[CE]  ';'  expected	77	None	replace
1671	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp()  -  2;  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp()  -  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp()  -  2;	  int    mantissa    =    getMeanOp()    -    1;    	non-compiled	[CE]  ';'  expected	77	None	replace
1672	[BUG]  [BUGGY]  double  x  =  getLastChar()  *  3;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar()  *  3;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  *  3;	  double    x    =    getLastChar()    *    2;    	non-compiled	[CE]  ';'  expected	172	None	replace
1673	[BUG]  [BUGGY]  if((  long)x  <=  prev)  {  while((  long)x  <=  prev)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  prev)  {  while((  long)x  <=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    <=    prev)    {    while((  long)x  <=  prev)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
1674	[BUG]  [BUGGY]  if((  long)x  <=  prev)  {  for((  long)x  <=  prev)  {  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  prev)  {  for((  long)x  <=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    <=    prev)    {    for((  long)x  <=  prev)  {	  	non-compiled	[CE]  not  a  statement	8	None	add
1675	[BUG]  [BUGGY]  Number  value  =  getLastChar(0);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Number  value  =  getLastChar(0);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  value  =  getLastChar(0);	  Number    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	277	None	replace
1676	[BUG]  [BUGGY]  Numer  value  =  getLastChar();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Numer  value  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Numer  value  =  getLastChar();	  Number    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	277	None	replace
1677	[BUG]  [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
1678	[BUG]  [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
1679	[BUG]  [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
1680	[BUG]  [BUGGY]  if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
1681	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
1682	[BUG]  [BUGGY]  if(x  <  prev)  {  if(x  >  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev)  {  if(x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev)  {  if(x  >  prev)  {	  if(x    >=    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	145	None	replace
1683	[BUG]  [BUGGY]  if(x  <  prev)  {  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev)  {  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev)  {  if(x  ==  prev)  {	  if(x    >=    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	145	None	replace
1684	[BUG]  [BUGGY]  if(x  <  prev)  {  if(x  >=  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev)  {  if(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev)  {  if(x  >=  prev)  {	  if(x    >=    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	145	None	replace
1685	[BUG]  [BUGGY]  if(prev  >=  '-')  {  if(x  >=  prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  '-')  {  if(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  '-')  {  if(x  >=  prev)  {	  if(x    >=    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	145	None	replace
1686	[BUG]  [BUGGY]  if(prev  >=  '-')  {  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  '-')  {  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  '-')  {  if(x  >=  0)  {	  if(x    >=    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	145	None	replace
1687	[BUG]  [BUGGY]  double  x  =  getFirstChar().toLowerCase();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getFirstChar().toLowerCase();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getFirstChar().toLowerCase();	  double    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	169	None	replace
1688	[BUG]  [BUGGY]  double  x  =  getFirstChar().trim();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getFirstChar().trim();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getFirstChar().trim();	  double    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	169	None	replace
1689	[BUG]  [BUGGY]  Integer  value  =  getLastChar().longValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().longValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().longValue();	  Integer    value    =    getLastChar().intValue();    	non-compiled	[CE]  ';'  expected	226	None	replace
1690	[BUG]  [BUGGY]  Integer  value  =  getLastChar(),  prev.intValue();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar(),  prev.intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar(),  prev.intValue();	  Integer    value    =    getLastChar().intValue();    	non-compiled	[CE]  ';'  expected	226	None	replace
1691	[BUG]  [BUGGY]  Long  value  =  getLastChar().intValue();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  getLastChar().intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  getLastChar().intValue();	  Integer    value    =    getLastChar().intValue();    	non-compiled	[CE]  ';'  expected	226	None	replace
1692	[BUG]  [BUGGY]  if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	162	None	replace
1693	[BUG]  [BUGGY]  if(prev  ==  'n')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n')  {	  if(x    <    0)    {    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	158	None	replace
1694	[BUG]  [BUGGY]  if((  x  >  prev)||(x  >=  0))  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >  prev)||(x  >=  0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >  prev)||(x  >=  0))  {	  if((    int)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
1695	[BUG]  [BUGGY]  if((  x  +  1)  >=  prev)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  +  1)  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  +  1)  >=  prev)  {	  if((    int)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
1696	[BUG]  [BUGGY]  if((  x  <  prev)||(x  >=  0))  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <  prev)||(x  >=  0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <  prev)||(x  >=  0))  {	  if((    int)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
1697	[BUG]  [BUGGY]  if((  x  >  prev)||(x  <=  0))  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >  prev)||(x  <=  0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >  prev)||(x  <=  0))  {	  if((    int)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
1698	[BUG]  [BUGGY]  if(prev  ==  '.')  {  if(x  >=  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  if(x  >=  0)  {	  if(x    ==    (long)x)    {    if(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	136	None	replace
1699	[BUG]  [BUGGY]  if(x  >  prev)  {  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev)  {  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev)  {  if(x  >=  0)  {	  if(x    ==    (long)x)    {    if(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	136	None	replace
1700	[BUG]  [BUGGY]  if(x  ==  prev)  {  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  if(x  >=  0)  {	  if(x    ==    (long)x)    {    if(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	136	None	replace
1701	[BUG]  [BUGGY]  if(prev  ==  '-')  {  if(x  >=  prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  if(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  if(x  >=  prev)  {	  if(x    ==    (long)x)    {    if(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	136	None	replace
1702	[BUG]  [BUGGY]  if(prev  ==  'n')  {  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n')  {  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n')  {  if(x  >=  0)  {	  if(x    ==    (long)x)    {    if(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	136	None	replace
1703	[BUG]  [BUGGY]  if(prev  ==  'n')  {  if(x  >=  prev)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n')  {  if(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n')  {  if(x  >=  prev)  {	  if(x    ==    (long)x)    {    if(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	136	None	replace
1704	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  prev  +  1  -  1);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  Math.pow(10,  prev  +  1  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  prev  +  1  -  1);	  int    mantissa    =    Math.pow(10,    prev    +    1    -    1);    	non-compiled	[CE]  ';'  expected	340	None	replace
1705	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  +  1  /  1);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  +  1  /  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  +  1  /  1);	  int    mantissa    =    Math.pow(10,    prev    +    1    -    1);    	non-compiled	[CE]  ';'  expected	340	None	replace
1706	[BUG]  [BUGGY]  if(x  <=  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.NEGATIVE_INFINITY)  {	  if(x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
1707	[BUG]  [BUGGY]  if(x  <=  Preconditions.INCRDECR_NUMBER)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.INCRDECR_NUMBER)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.INCRDECR_NUMBER)  {	  if(x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
1708	[BUG]  [BUGGY]  int  mantissa  =  getFirstChar().length;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getFirstChar().length;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getFirstChar().length;	  int    mantissa    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	121	None	replace
1709	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev),  doubleValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev),  doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev),  doubleValue();	  int    mantissa    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	235	None	replace
1710	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)-  x.doubleValue();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)-  x.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)-  x.doubleValue();	  int    mantissa    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	235	None	replace
1711	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  2.0.doubleValue();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  2.0.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)/  2.0.doubleValue();	  int    mantissa    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	235	None	replace
1712	[BUG]  [BUGGY]  if(prev  >=  0.0)  {  if((  long)x  >=  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  0.0)  {  if((  long)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  0.0)  {  if((  long)x  >=  prev)  {	  if    ((    long)x    >=    prev)    {    if    ((    long)x    [Delete]    prev)    {    	non-compiled	[CE]  ';'  expected	222	None	replace
1713	[BUG]  [BUGGY]  Long  mantissa  =  getLastChar()  +  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  getLastChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  getLastChar()  +  1;	  int    mantissa    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	120	None	replace
1714	[BUG]  [BUGGY]  double  value  =  getValue();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getValue();	  double    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	132	None	replace
1715	[BUG]  [BUGGY]  double  value  =  getFirstElement();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstElement();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstElement();	  double    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	132	None	replace
1716	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  '-')  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
1717	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  ':')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  ':')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  ':')  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
1718	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  ';')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  ';')  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
1719	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  Long.MIN_VALUE)  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
1720	[BUG]  [BUGGY]  Integer  value  =  getLastValue().doubleValue();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastValue().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastValue().doubleValue();	  Integer    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	224	None	replace
1721	[BUG]  [BUGGY]  Double  value  =  getFirstChar();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getFirstChar();	  Double    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	376	None	replace
1722	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  ')')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >  ')')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >  ')')  {	  if(x    ==    (long)x)    {    if(x    {    (long)x)    {    	non-compiled	[CE]  ';'  expected	327	None	replace
1723	[BUG]  [BUGGY]  x  =  getFirstChar();  x  =  getLastChar();  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar();  x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar();  x  =  getLastChar();	          x    =    getLastChar();    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	83	None	replace
1724	[BUG]  [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	83	None	replace
1725	[BUG]  [BUGGY]  if(prev  ==  'n')  {  x  =  getLastChar();  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n')  {  x  =  getLastChar();  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n')  {  x  =  getLastChar();  x  =  getLastChar();  }	          x    =    getLastChar();    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	83	None	replace
1726	[BUG]  [BUGGY]  if(prev!=  '-')  {  x  =  getLastChar();  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  '-')  {  x  =  getLastChar();  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  '-')  {  x  =  getLastChar();  x  =  getLastChar();  }	          x    =    getLastChar();    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	83	None	replace
1727	[BUG]  [BUGGY]  double  x  =  getLastChar()  +  prev  +  1;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar()  +  prev  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  +  prev  +  1;	  double    x    =    getLastChar()    +    prev;    	non-compiled	[CE]  ';'  expected	307	None	replace
1728	[BUG]  [BUGGY]  double  x  =  getLastChar()  +  prev.charAt(x);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar()  +  prev.charAt(x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  +  prev.charAt(x);	  double    x    =    getLastChar()    +    prev;    	non-compiled	[CE]  ';'  expected	307	None	replace
1729	[BUG]  [BUGGY]  double  x  =  getLastChar()  +  prev.charAt(0);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar()  +  prev.charAt(0);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  +  prev.charAt(0);	  double    x    =    getLastChar()    +    prev;    	non-compiled	[CE]  ';'  expected	307	None	replace
1730	[BUG]  [BUGGY]  x  =  getLastChar()  +  prev  +  1;  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar()  +  prev  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar()  +  prev  +  1;	  x    =    getLastChar()    +    prev;    	non-compiled	[CE]  ';'  expected	310	None	replace
1731	[BUG]  [BUGGY]  x  =  getLastChar()  +  prev.charAt(x);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar()  +  prev.charAt(x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar()  +  prev.charAt(x);	  x    =    getLastChar()    +    prev;    	non-compiled	[CE]  ';'  expected	310	None	replace
1732	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  (long)x)  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (long)x)  {  int  x  =  getLastChar();  }	  if(x    >=    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	325	None	replace
1733	[BUG]  [BUGGY]  if(x  >=  (int)x)  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  (int)x)  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (int)x)  {  int  x  =  getLastChar();  }	  if(x    >=    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	325	None	replace
1734	[BUG]  [BUGGY]  if(x  >=  prev)  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  int  x  =  getLastChar();  }	  if(x    >=    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	325	None	replace
1735	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  int  x  =  getFirstChar();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  (long)x)  {  int  x  =  getFirstChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (long)x)  {  int  x  =  getFirstChar();  }	  if(x    >=    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	325	None	replace
1736	[BUG]  [BUGGY]  if(x  >=  (int)x)  {  int  x  =  getLastChar();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  (int)x)  {  int  x  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (int)x)  {  int  x  =  getLastChar();	  if(x    >=    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	325	None	replace
1737	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  long  x  =  getLastChar();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  (long)x)  {  long  x  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (long)x)  {  long  x  =  getLastChar();	  if(x    >=    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	325	None	replace
1738	[BUG]  [BUGGY]  int  x  =  getLastChar().length();  if(x  >=  prev)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().length();  if(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().length();  if(x  >=  prev)  {	  if(x    <    0)    {    int    x    =    getLastChar().length();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	167	None	replace
1739	[BUG]  [BUGGY]  Integer  x  =  getLastChar().length();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().length();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().length();	  if(x    <    0)    {    int    x    =    getLastChar().length();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	167	None	replace
1740	[BUG]  [BUGGY]  int  x  =  getLastChar().length();  if(x  >=  -1)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().length();  if(x  >=  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().length();  if(x  >=  -1)  {	  if(x    <    0)    {    int    x    =    getLastChar().length();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	167	None	replace
1741	[BUG]  [BUGGY]  char  value  =  prev  ==  null?  getLastChar().getCharAt(x):  x;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  prev  ==  null?  getLastChar().getCharAt(x):  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev  ==  null?  getLastChar().getCharAt(x):  x;	  char    value    =    prev    ==    null?    getLastChar().toCharArray()    :    x;    	non-compiled	[CE]  ';'  expected	367	None	replace
1742	[BUG]  [BUGGY]  char  value  =  prev  ==  null?  getFirstChar().toCharArray()  :  x;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  prev  ==  null?  getFirstChar().toCharArray()  :  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev  ==  null?  getFirstChar().toCharArray()  :  x;	  char    value    =    prev    ==    null?    getLastChar().toCharArray()    :    x;    	non-compiled	[CE]  ';'  expected	367	None	replace
1743	[BUG]  [BUGGY]  char  value  =  prev  ==  null?  getLastChar().toCharArray()  :  x  +  1;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  prev  ==  null?  getLastChar().toCharArray()  :  x  +  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev  ==  null?  getLastChar().toCharArray()  :  x  +  1;	  char    value    =    prev    ==    null?    getLastChar().toCharArray()    :    x;    	non-compiled	[CE]  ';'  expected	367	None	replace
1744	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MAX_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MAX_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  <  Long.MAX_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
1745	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  while(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  while(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    while(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
1746	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  for(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  >  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  for(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    for(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  >  expected	32	None	add
1747	[BUG]  [BUGGY]  if(Double.isNaN(prev)||  prev  >  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(Double.isNaN(prev)||  prev  >  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(Double.isNaN(prev)||  prev  >  Double.POSITIVE_INFINITY)  {	  if(x    <    0    ||    prev    >    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	331	None	replace
1748	[BUG]  [BUGGY]  if(x  >  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Double.POSITIVE_INFINITY)  {	  if(x    <    0    ||    prev    >    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	331	None	replace
1749	[BUG]  [BUGGY]  if(x  >=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Double.POSITIVE_INFINITY)  {	  if(x    <    0    ||    prev    >    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	331	None	replace
1750	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  int  x  =  getLastChar();  }	          x    =    getLastChar();    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	84	None	replace
1751	[BUG]  [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  int  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  prev)  {  x  =  getLastChar();  int  x  =  getLastChar();  }	          x    =    getLastChar();    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	84	None	replace
1752	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  int  x  =  getLastChar();  }	          x    =    getLastChar();    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	84	None	replace
1753	[BUG]  [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  int  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  int  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  prev)  {  x  =  getLastChar();  int  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	84	None	replace
1754	[BUG]  [BUGGY]  if(prev!=  '-')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  '-')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  '-')  {  x  =  getLastChar();  int  x  =  getLastChar();  }	          x    =    getLastChar();    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	84	None	replace
1755	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	84	None	replace
1756	[BUG]  [BUGGY]  if(prev  ==  'n')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n')  {  x  =  getLastChar();  int  x  =  getLastChar();  }	          x    =    getLastChar();    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	84	None	replace
1757	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  int  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	84	None	replace
1758	[BUG]  [BUGGY]  if(prev  >=  '-')  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  '-')  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  '-')  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
1759	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('-',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
1760	[BUG]  [BUGGY]  BigInteger  value  =  getBigInteger();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  BigInteger  value  =  getBigInteger();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigInteger  value  =  getBigInteger();	  BigInteger    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	274	None	replace
1761	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  >=  -1)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.');  if(x  >=  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.');  if(x  >=  -1)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
1762	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.');  if(x  <  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.');  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('.');  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
1763	[BUG]  [BUGGY]  double  mantissa  =  getFirstElement();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getFirstElement();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getFirstElement();	  double    mantissa    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	177	None	replace
1764	[BUG]  [BUGGY]  if(x  <  0  &&  prev  ==  '.')  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  &&  prev  ==  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  &&  prev  ==  '.')  {	  if(x    <    0    ||    prev    ==    '.')    {    	non-compiled	[CE]  ';'  expected	107	None	replace
1765	[BUG]  [BUGGY]  if(x  >  0  &&  prev  ==  '.')  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  &&  prev  ==  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  &&  prev  ==  '.')  {	  if(x    <    0    ||    prev    ==    '.')    {    	non-compiled	[CE]  ';'  expected	107	None	replace
1766	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
1767	[BUG]  [BUGGY]  int  x  =  getLastChar().computeIntValue(prev);  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeIntValue(prev);  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeIntValue(prev);  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
1768	[BUG]  [BUGGY]  long  value  =  getLastChar().computeLongValue(prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar().computeLongValue(prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar().computeLongValue(prev);	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
1769	[BUG]  [BUGGY]  if(x  <  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MAX_VALUE)  {	  if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	358	None	replace
1770	[BUG]  [BUGGY]  if(x!=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MAX_VALUE)  {	  if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	358	None	replace
1771	[BUG]  [BUGGY]  double  mantissa  =  getMean();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getMean();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getMean();	  double    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	75	None	replace
1772	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  <  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	160	None	replace
1773	[BUG]  [BUGGY]  if(prev!=  null)  {  int  x  =  getLastChar();  if(x  <  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  null)  {  int  x  =  getLastChar();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  null)  {  int  x  =  getLastChar();  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	160	None	replace
1774	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  >  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  >  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  >  0)  {	  if(x    <    0)    {    int    x    =    getLastChar();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	160	None	replace
1775	[BUG]  [BUGGY]  if(x!=  prev  &&  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev  &&  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev  &&  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	127	None	replace
1776	[BUG]  [BUGGY]  if(x  >=  prev)  {  while(x  ==  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  while(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  while(x  ==  prev)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
1777	[BUG]  [BUGGY]  if(x!=  prev)  {  while(x  ==  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev)  {  while(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev)  {  while(x  ==  prev)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
1778	[BUG]  [BUGGY]  if(x  <=  0)  {  while(x  ==  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  while(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  while(x  ==  prev)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
1779	[BUG]  [BUGGY]  if(x  <  0)  {  while(x  ==  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  while(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  while(x  ==  0)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
1780	[BUG]  [BUGGY]  if(x  <  prev)  {  while(x  ==  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev)  {  while(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev)  {  while(x  ==  prev)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
1781	[BUG]  [BUGGY]  if(x  ==  prev)  {  while(x  >=  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  while(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  while(x  >=  prev)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
1782	[BUG]  [BUGGY]  if((  x  +  prev)  >=  long)  {  [CE]  '.class'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  +  prev)  >=  long)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  +  prev)  >=  long)  {	  if((    long)x    >>    prev)    {    	non-compiled	[CE]  '.class'  expected	7	None	replace
1783	[BUG]  [BUGGY]  if((  x)  >=  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x)  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x)  >=  prev)  {	  if((    long)x    >>    prev)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
1784	[BUG]  [BUGGY]  if((  x  <  prev)||(x  >=  long))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <  prev)||(x  >=  long))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <  prev)||(x  >=  long))  {	  if((    long)x    >>    prev)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1785	[BUG]  [BUGGY]  if((  x  <  prev)||(x  >=  Long.MAX_VALUE))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <  prev)||(x  >=  Long.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <  prev)||(x  >=  Long.MAX_VALUE))  {	  if((    long)x    >>    prev)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
1786	[BUG]  [BUGGY]  if((  x  >  prev)&&(x  >=  long))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >  prev)&&(x  >=  long))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >  prev)&&(x  >=  long))  {	  if((    long)x    >>    prev)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1787	[BUG]  [BUGGY]  if((  x  <  prev)||(x  >=  Long.MIN_VALUE))  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <  prev)||(x  >=  Long.MIN_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <  prev)||(x  >=  Long.MIN_VALUE))  {	  if((    long)x    >>    prev)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
1788	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  prev  +  2);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(double)Math.pow(10,  prev  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  prev  +  2);	  double    value    =(double)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	189	None	replace
1789	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  prev  +  10);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(double)Math.pow(10,  prev  +  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  prev  +  10);	  double    value    =(double)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	189	None	replace
1790	[BUG]  [BUGGY]  if(x  <  Integer.MIN_VALUE  ||  prev  >  Integer.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Integer.MIN_VALUE  ||  prev  >  Integer.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Integer.MIN_VALUE  ||  prev  >  Integer.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
1791	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().getLongValue();  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().getLongValue();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().getLongValue();  }	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
1792	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().getLongValue();  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().getLongValue();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().getLongValue();  }	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
1793	[BUG]  [BUGGY]  n  =  getLastChar();  n  =  getLastChar().getLongValue();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  n  =  getLastChar();  n  =  getLastChar().getLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	n  =  getLastChar();  n  =  getLastChar().getLongValue();	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
1794	[BUG]  [BUGGY]  x  =  getLastChar();  x  =  getFirstChar().getLongValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar();  x  =  getFirstChar().getLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar();  x  =  getFirstChar().getLongValue();	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
1795	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().getLongValue();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().getLongValue();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().getLongValue();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
1796	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().getLongValue();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().getLongValue();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().getLongValue();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
1797	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }	          x    =    getLastChar();    Integer    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	309	None	replace
1798	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    Integer    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	309	None	replace
1799	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }	          x    =    getLastChar();    Integer    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	309	None	replace
1800	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    Integer    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	309	None	replace
1801	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    Integer    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	309	None	replace
1802	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    Integer    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	309	None	replace
1803	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
1804	[BUG]  [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
1805	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
1806	[BUG]  [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  prev)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
1807	[BUG]  [BUGGY]  n  =  getFirstChar();  n  =  getLastChar().toCharArray();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  n  =  getFirstChar();  n  =  getLastChar().toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	n  =  getFirstChar();  n  =  getLastChar().toCharArray();	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
1808	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)-  x.doubleValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)-  x.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)-  x.doubleValue();	  int    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	185	None	replace
1809	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev),  doubleValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev),  doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev),  doubleValue();	  int    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	185	None	replace
1810	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  Predicate.doubleToLongBits(x));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  Predicate.doubleToLongBits(x));  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  Predicate.doubleToLongBits(x));	  Double    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	251	None	replace
1811	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  Predicate.doubleToLongBits(prev));  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  Predicate.doubleToLongBits(prev));  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  Predicate.doubleToLongBits(prev));	  Double    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	251	None	replace
1812	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  Predicate.doubleToIntBits(x));  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  Predicate.doubleToIntBits(x));  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  Predicate.doubleToIntBits(x));	  Double    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	251	None	replace
1813	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(11,  x);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(11,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(11,  x);	  Double    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	251	None	replace
1814	[BUG]  [BUGGY]  x  =  getLastChar().charAt(1);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().charAt(1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(1);	  x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	313	None	replace
1815	[BUG]  [BUGGY]  x  =  getLastChar().charAt(0,  prev);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().charAt(0,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(0,  prev);	  x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	313	None	replace
1816	[BUG]  [BUGGY]  if(x  ==  prev)  {  if((  long)x  >=  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  if((  long)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  if((  long)x  >=  prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    >>    prev)    {    	non-compiled	[CE]  ';'  expected	243	None	replace
1817	[BUG]  [BUGGY]  if(x  ==  prev)  {  if((  long)x!=  prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  if((  long)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  if((  long)x!=  prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    >>    prev)    {    	non-compiled	[CE]  ';'  expected	243	None	replace
1818	[BUG]  [BUGGY]  if(x  >  prev)  {  if((  long)x  ==  Prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev)  {  if((  long)x  ==  Prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev)  {  if((  long)x  ==  Prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    ==    Prev)    {    	non-compiled	[CE]  ';'  expected	244	None	replace
1819	[BUG]  [BUGGY]  if(x  <  prev)  {  if((  long)x  ==  Prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev)  {  if((  long)x  ==  Prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev)  {  if((  long)x  ==  Prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    ==    Prev)    {    	non-compiled	[CE]  ';'  expected	244	None	replace
1820	[BUG]  [BUGGY]  if(x!=  prev)  {  if((  long)x  ==  Prev)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev)  {  if((  long)x  ==  Prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev)  {  if((  long)x  ==  Prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    ==    Prev)    {    	non-compiled	[CE]  ';'  expected	244	None	replace
1821	[BUG]  [BUGGY]  if(prev  >=  0.0)  {  if((  long)x  ==  Prev)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  0.0)  {  if((  long)x  ==  Prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  0.0)  {  if((  long)x  ==  Prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    ==    Prev)    {    	non-compiled	[CE]  ';'  expected	244	None	replace
1822	[BUG]  [BUGGY]  if(prev  >=  0)  {  if((  long)x  ==  Prev)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  0)  {  if((  long)x  ==  Prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  0)  {  if((  long)x  ==  Prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    ==    Prev)    {    	non-compiled	[CE]  ';'  expected	244	None	replace
1823	[BUG]  [BUGGY]  if(x  <  prev)  {  if((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev)  {  if((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev)  {  if((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	238	None	replace
1824	[BUG]  [BUGGY]  for(int  mantissa  =  Math.pow(10,  x);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  for(int  mantissa  =  Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	for(int  mantissa  =  Math.pow(10,  x);	  long    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  illegal  start  of  expression	247	None	replace
1825	[BUG]  [BUGGY]  x  =  getLastChar().charAt(x  -  1);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().charAt(x  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(x  -  1);	  x    =    getLastChar().charAt(x);    	non-compiled	[CE]  ';'  expected	312	None	replace
1826	[BUG]  [BUGGY]  x  =  getLastChar().charAt(x  +  2);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().charAt(x  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(x  +  2);	  x    =    getLastChar().charAt(x);    	non-compiled	[CE]  ';'  expected	312	None	replace
1827	[BUG]  [BUGGY]  if(x  <=  (byte)x)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  (byte)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  (byte)x)  {	  if(x    <=    (long)x)    {    	non-compiled	[CE]  ';'  expected	293	None	replace
1828	[BUG]  [BUGGY]  if(x  <=  (short)x)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  (short)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  (short)x)  {	  if(x    <=    (long)x)    {    	non-compiled	[CE]  ';'  expected	293	None	replace
1829	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)/  12;  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)/  12;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)/  12;	  double    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	71	None	replace
1830	[BUG]  [BUGGY]  int  value  =  getFirstString().doubleValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getFirstString().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstString().doubleValue();	  int    value    =    getFirstChar().doubleValue();    	non-compiled	[CE]  ';'  expected	201	None	replace
1831	[BUG]  [BUGGY]  int  value  =  getFirstLine().doubleValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getFirstLine().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstLine().doubleValue();	  int    value    =    getFirstChar().doubleValue();    	non-compiled	[CE]  ';'  expected	201	None	replace
1832	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf(':',  prev);  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf(':',  prev);  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf(':',  prev);  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(':');    	non-compiled	[CE]  ';'  expected	324	None	replace
1833	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf(':');  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf(':');  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf(':');  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(':');    	non-compiled	[CE]  ';'  expected	324	None	replace
1834	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  +  1  -  value);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  +  1  -  value);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  prev  +  1  -  value);	  Double    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	157	None	replace
1835	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  10);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  +  10);	  double    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	232	None	replace
1836	[BUG]  [BUGGY]  if(x  >=  '0'  &&  x  <=  '9')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  '0'  &&  x  <=  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  '0'  &&  x  <=  '9')  {	  if(x    <=    '0'    ||    x    >    '9')    {    	non-compiled	[CE]  ';'  expected	304	None	replace
1837	[BUG]  [BUGGY]  if(x  <=  '0'  &&  x  >  '9')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  '0'  &&  x  >  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0'  &&  x  >  '9')  {	  if(x    <=    '0'    ||    x    >    '9')    {    	non-compiled	[CE]  ';'  expected	304	None	replace
1838	[BUG]  [BUGGY]  if(x  ==  '0'  &&  x  <=  '9')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  '0'  &&  x  <=  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  '0'  &&  x  <=  '9')  {	  if(x    <=    '0'    ||    x    >    '9')    {    	non-compiled	[CE]  ';'  expected	304	None	replace
1839	[BUG]  [BUGGY]  if(x  >  '0'  ||  x  >  '9')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  '0'  ||  x  >  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  '0'  ||  x  >  '9')  {	  if(x    <=    '0'    ||    x    >    '9')    {    	non-compiled	[CE]  ';'  expected	304	None	replace
1840	[BUG]  [BUGGY]  if(x!=  '0'  &&  x  <=  '9')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  '0'  &&  x  <=  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  '0'  &&  x  <=  '9')  {	  if(x    <=    '0'    ||    x    >    '9')    {    	non-compiled	[CE]  ';'  expected	304	None	replace
1841	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('n',  prev);  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('n',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('n',  prev);	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	284	None	replace
1842	[BUG]  [BUGGY]  Char  value  =  getLastChar();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Char  value  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Char  value  =  getLastChar();	  Character    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	275	None	replace
1843	[BUG]  [BUGGY]  this.value  =  getLastChar();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  this.value  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	this.value  =  getLastChar();	  Character    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	275	None	replace
1844	[BUG]  [BUGGY]  Character  value  =  getFirstChar();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Character  value  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  value  =  getFirstChar();	  Character    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	275	None	replace
1845	[BUG]  [BUGGY]  String  value  =(x  <  0)?(int)Math.pow(10,  x):  prev;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =(x  <  0)?(int)Math.pow(10,  x):  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =(x  <  0)?(int)Math.pow(10,  x):  prev;	  char    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	17	None	replace
1846	[BUG]  [BUGGY]  Integer  value  =(int)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =(int)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =(int)Math.pow(10,  x);	  char    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	17	None	replace
1847	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  -  11);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev  -  11);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  -  11);	  int    mantissa    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	237	None	replace
1848	[BUG]  [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  -  10);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  Math.pow(10,  prev  -  10);	  int    mantissa    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	237	None	replace
1849	[BUG]  [BUGGY]  double  prev  =  getLastChar();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  prev  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  ';'  expected	26	None	replace
1850	[BUG]  [BUGGY]  long  prev  =  getLastChar();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  prev  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  ';'  expected	26	None	replace
1851	[BUG]  [BUGGY]  Long  prev  =  getLastChar();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  prev  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  ';'  expected	26	None	replace
1852	[BUG]  [BUGGY]  char  value  =  prev  ==  null?  getLastChar()  +  1  :  x;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  prev  ==  null?  getLastChar()  +  1  :  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev  ==  null?  getLastChar()  +  1  :  x;	  char    value    =    prev    ==    null?    getLastChar()    :    x;    	non-compiled	[CE]  ';'  expected	368	None	replace
1853	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }	          x    =    getLastChar();    Integer    x    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	89	None	replace
1854	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }	          x    =    getLastChar();    Integer    x    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	89	None	replace
1855	[BUG]  [BUGGY]  x  =  getFirstChar();  Integer  x  =  getLastIntChar();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar();  Integer  x  =  getLastIntChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar();  Integer  x  =  getLastIntChar();	          x    =    getLastChar();    Integer    x    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	89	None	replace
1856	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    Integer    x    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	89	None	replace
1857	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    Integer    x    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	89	None	replace
1858	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    Integer    x    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	89	None	replace
1859	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  else  {  add( ", ");  }  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  else  {  add( ", ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Integer  x  =  getLastIntChar();  }  else  {  add( ", ");  }	          x    =    getLastChar();    Integer    x    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	89	None	replace
1860	[BUG]  [BUGGY]  double  value  =  getLastChar(),  Predicates.doubleValue();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar(),  Predicates.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar(),  Predicates.doubleValue();	  double    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	203	None	replace
1861	[BUG]  [BUGGY]  double  value  =  getLastChar(),  prev.intValue();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar(),  prev.intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar(),  prev.intValue();	  double    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	203	None	replace
1862	[BUG]  [BUGGY]  double  value  =  getfirstChar(),  prev.doubleValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getfirstChar(),  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getfirstChar(),  prev.doubleValue();	  double    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	203	None	replace
1863	[BUG]  [BUGGY]  float  value  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  value  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  value  =  Math.pow(10,  prev);	  long    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	181	None	replace
1864	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY))  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  >=  Double.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY))  {	  if((    double)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	360	None	replace
1865	[BUG]  [BUGGY]  if((  x  >=  prev)||(x  >=  Double.MIN_VALUE))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x  >=  Double.MIN_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x  >=  Double.MIN_VALUE))  {	  if((    double)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	360	None	replace
1866	[BUG]  [BUGGY]  if(prev  ==  null)  {  if(x  ==  0)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  if(x  ==  0)  {	  if(x    ==    (double)x)    {    if(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	93	None	replace
1867	[BUG]  [BUGGY]  if(prev  ==  null)  {  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  if(x  ==  prev)  {	  if(x    ==    (double)x)    {    if(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	93	None	replace
1868	[BUG]  [BUGGY]  if(prev  ==  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  prev)  {	  if(x    ==    (double)x)    {    if(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	93	None	replace
1869	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  *  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar()  *  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  *  1;	  double    mantissa    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	176	None	replace
1870	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  long  x  =  getLastChar();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  long  x  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE)  {  long  x  =  getLastChar();	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	338	None	replace
1871	[BUG]  [BUGGY]  Integer  value  =  getLastIntChar()  +  1;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastIntChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntChar()  +  1;	  Integer    value    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	231	None	replace
1872	[BUG]  [BUGGY]  Integer  value  =  getLastIntChar()  -  1;  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastIntChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntChar()  -  1;	  Integer    value    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	231	None	replace
1873	[BUG]  [BUGGY]  if(x  >=  '0'  &&  prev  <=  '9')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  '0'  &&  prev  <=  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  '0'  &&  prev  <=  '9')  {	  if(x    <    0    ||    prev    >    '0')    {    	non-compiled	[CE]  ';'  expected	374	None	replace
1874	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  '0'  ||  x  >  '9')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >  '0'  ||  x  >  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >  '0'  ||  x  >  '9')  {	  if(x    <    0    ||    prev    >    '0')    {    	non-compiled	[CE]  ';'  expected	374	None	replace
1875	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  '0'  &&  prev  <=  '9')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >  '0'  &&  prev  <=  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >  '0'  &&  prev  <=  '9')  {	  if(x    <    0    ||    prev    >    '0')    {    	non-compiled	[CE]  ';'  expected	374	None	replace
1876	[BUG]  [BUGGY]  if(x  >>  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >>  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >>  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
1877	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  >=  -1)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  >=  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  >=  -1)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	164	None	replace
1878	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('n',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	164	None	replace
1879	[BUG]  [BUGGY]  x  =  getPositiveNumericValue(prev);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getPositiveNumericValue(prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getPositiveNumericValue(prev);	  x    =    getPositiveNumericValue();    	non-compiled	[CE]  ';'  expected	311	None	replace
1880	[BUG]  [BUGGY]  x  =  getPositiveNumericValue()  +  prev;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getPositiveNumericValue()  +  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getPositiveNumericValue()  +  prev;	  x    =    getPositiveNumericValue();    	non-compiled	[CE]  ';'  expected	311	None	replace
1881	[BUG]  [BUGGY]  double  value  =  getLastChar()  -  prev.charValue();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  -  prev.charValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  -  prev.charValue();	  double    value    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	301	None	replace
1882	[BUG]  [BUGGY]  if(x  >  '.')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  '.')  {	  if(x    <    0    ||    prev    >    '.')    {    	non-compiled	[CE]  ';'  expected	373	None	replace
1883	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >>  '.')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >>  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >>  '.')  {	  if(x    <    0    ||    prev    >    '.')    {    	non-compiled	[CE]  ';'  expected	373	None	replace
1884	[BUG]  [BUGGY]  if(prev  <  0  ||  x  >  '.')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0  ||  x  >  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0  ||  x  >  '.')  {	  if(x    <    0    ||    prev    >    '.')    {    	non-compiled	[CE]  ';'  expected	373	None	replace
1885	[BUG]  [BUGGY]  if(x  <  getLastChar())  {  if(x  >=  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  getLastChar())  {  if(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  getLastChar())  {  if(x  >=  prev)  {	  if(x    >=    (long)x)    {    if(x    <    (long)x)    {    	non-compiled	[CE]  ';'  expected	351	None	replace
1886	[BUG]  [BUGGY]  if(x  >  prev)  {  if(x  <  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev)  {  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev)  {  if(x  <  0)  {	  if(x    >=    (long)x)    {    if(x    <    (long)x)    {    	non-compiled	[CE]  ';'  expected	351	None	replace
1887	[BUG]  [BUGGY]  if(x  <  getLastChar())  {  if(x  >=  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  getLastChar())  {  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  getLastChar())  {  if(x  >=  0)  {	  if(x    >=    (long)x)    {    if(x    <    (long)x)    {    	non-compiled	[CE]  ';'  expected	351	None	replace
1888	[BUG]  [BUGGY]  if(x  <  getLastChar())  {  if(x  >=  (long)x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  getLastChar())  {  if(x  >=  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  getLastChar())  {  if(x  >=  (long)x)  {	  if(x    >=    (long)x)    {    if(x    <    (long)x)    {    	non-compiled	[CE]  ';'  expected	351	None	replace
1889	[BUG]  [BUGGY]  if(x  >  prev)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev)  {  int  x  =  getLastChar();  if(x  ==  prev)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
1890	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
1891	[BUG]  [BUGGY]  if(prev  >=  0.0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  0.0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  0.0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
1892	[BUG]  [BUGGY]  if(prev  >=  0.0)  {  int  x  =  getLastChar();  if(x  <  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  0.0)  {  int  x  =  getLastChar();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  0.0)  {  int  x  =  getLastChar();  if(x  <  0)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
1893	[BUG]  [BUGGY]  if(prev  >=  0.0)  {  int  x  =  getLastChar();  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  0.0)  {  int  x  =  getLastChar();  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  0.0)  {  int  x  =  getLastChar();  if(x  ==  -1)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
1894	[BUG]  [BUGGY]  if((  x  >=  prev)||(x!=  Integer.MIN_VALUE))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x!=  Integer.MIN_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x!=  Integer.MIN_VALUE))  {	  if((    long)x!=    prev)    {    if((    long)x    [Delete]    prev)    {    	non-compiled	[CE]  ';'  expected	213	None	replace
1895	[BUG]  [BUGGY]  if((  x  >=  prev)||(x!=  Integer.MAX_VALUE))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x!=  Integer.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x!=  Integer.MAX_VALUE))  {	  if((    long)x!=    prev)    {    if((    long)x    [Delete]    prev)    {    	non-compiled	[CE]  ';'  expected	213	None	replace
1896	[BUG]  [BUGGY]  if((  int)x  ==  prev)  {  while((  int)x  ==  prev)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  ==  prev)  {  while((  int)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    ==    prev)    {    while((  int)x  ==  prev)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
1897	[BUG]  [BUGGY]  if(x  <  Integer.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Integer.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Integer.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	278	None	replace
1898	[BUG]  [BUGGY]  if(x  <  (Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  (Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE))  {	  if(x    <    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	278	None	replace
1899	[BUG]  [BUGGY]  if(x  <  Long.MAX_VALUE  ||  x  >  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MAX_VALUE  ||  x  >  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MAX_VALUE  ||  x  >  Long.MIN_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	278	None	replace
1900	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getFirstChar();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getFirstChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (long)x)  {  int  x  =  getFirstChar();  }	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	329	None	replace
1901	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  long  x  =  getLastChar();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  (long)x)  {  long  x  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (long)x)  {  long  x  =  getLastChar();	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	329	None	replace
1902	[BUG]  [BUGGY]  if(x  ==  prev)  {  if(x!=  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  if(x!=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  if(x!=  0)  {	  if(x    ==    (int)x)    {    if(x!=    (int)x)    {    	non-compiled	[CE]  ';'  expected	255	None	replace
1903	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r')  {  if(x!=  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r')  {  if(x!=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n'  ||  prev  ==  'r')  {  if(x!=  0)  {	  if(x    ==    (int)x)    {    if(x!=    (int)x)    {    	non-compiled	[CE]  ';'  expected	255	None	replace
1904	[BUG]  [BUGGY]  if(prev  ==  '-')  {  if(x!=  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  if(x!=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  if(x!=  0)  {	  if(x    ==    (int)x)    {    if(x!=    (int)x)    {    	non-compiled	[CE]  ';'  expected	255	None	replace
1905	[BUG]  [BUGGY]  if(prev  ==  '-')  {  if(x!=  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  if(x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  if(x!=  prev)  {	  if(x    ==    (int)x)    {    if(x!=    (int)x)    {    	non-compiled	[CE]  ';'  expected	255	None	replace
1906	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  't')  {  if(x!=  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  't')  {  if(x!=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n'  ||  prev  ==  't')  {  if(x!=  0)  {	  if(x    ==    (int)x)    {    if(x!=    (int)x)    {    	non-compiled	[CE]  ';'  expected	255	None	replace
1907	[BUG]  [BUGGY]  if(prev  ==  '.')  {  if(x!=  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  if(x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  if(x!=  prev)  {	  if(x    ==    (int)x)    {    if(x!=    (int)x)    {    	non-compiled	[CE]  ';'  expected	255	None	replace
1908	[BUG]  [BUGGY]  if(prev  ==  '.')  {  if(x!=  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  if(x!=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  if(x!=  0)  {	  if(x    ==    (int)x)    {    if(x!=    (int)x)    {    	non-compiled	[CE]  ';'  expected	255	None	replace
1909	[BUG]  [BUGGY]  int  value  =  getFirstChar().doubleValue()  /  10;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getFirstChar().doubleValue()  /  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstChar().doubleValue()  /  10;	  int    value    =    getLastChar().doubleValue()    /    10;    	non-compiled	[CE]  ';'  expected	202	None	replace
1910	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  /  4;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar().doubleValue()  /  4;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().doubleValue()  /  4;	  int    value    =    getLastChar().doubleValue()    /    10;    	non-compiled	[CE]  ';'  expected	202	None	replace
1911	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('-');  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('-');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('-');	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-');    	non-compiled	[CE]  ';'  expected	288	None	replace
1912	[BUG]  [BUGGY]  if(x!=  prev)  {  If(x!=  (long)x)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev)  {  If(x!=  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev)  {  If(x!=  (long)x)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
1913	[BUG]  [BUGGY]  if(x  >=  prev)  {  If(x!=  null)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  If(x!=  null)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  If(x!=  null)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
1914	[BUG]  [BUGGY]  if(x!=  prev)  {  If(x!=  null)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev)  {  If(x!=  null)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev)  {  If(x!=  null)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
1915	[BUG]  [BUGGY]  if(x  >=  prev)  {  If(x!=  (int)x)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  If(x!=  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  If(x!=  (int)x)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
1916	[BUG]  [BUGGY]  if(x  ==  prev)  {  If(x!=  null)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  If(x!=  null)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  If(x!=  null)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
1917	[BUG]  [BUGGY]  if(x  <=  '0'  &&  x  >  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  '0'  &&  x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0'  &&  x  >  prev)  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
1918	[BUG]  [BUGGY]  if(x  <  prev  ||  x  >  '0')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev  ||  x  >  '0')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev  ||  x  >  '0')  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
1919	[BUG]  [BUGGY]  if(x  >=  '0'  &&  x  <=  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  '0'  &&  x  <=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  '0'  &&  x  <=  prev)  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
1920	[BUG]  [BUGGY]  if(x  ==  '0'  &&  x  <=  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  '0'  &&  x  <=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  '0'  &&  x  <=  prev)  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
1921	[BUG]  [BUGGY]  if(x  >  '0'  ||  x  >  prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  '0'  ||  x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  '0'  ||  x  >  prev)  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
1922	[BUG]  [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.');  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.');  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.');  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    	non-compiled	[CE]  ';'  expected	166	None	replace
1923	[BUG]  [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.');  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    	non-compiled	[CE]  ';'  expected	166	None	replace
1924	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.');  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.');  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.');  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    	non-compiled	[CE]  ';'  expected	166	None	replace
1925	[BUG]  [BUGGY]  int  value  =  getLastChar()  &  0xFFFF  +  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar()  &  0xFFFF  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  &  0xFFFF  +  1;	  int    value    =    getLastChar()    &    0xFFFF;    	non-compiled	[CE]  ';'  expected	353	None	replace
1926	[BUG]  [BUGGY]  if(x  <  (int)prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  (int)prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (int)prev)  {	  if(x    ==    (int)prev)    {    	non-compiled	[CE]  ';'  expected	283	None	replace
1927	[BUG]  [BUGGY]  if(x  <=  (int)prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  (int)prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  (int)prev)  {	  if(x    ==    (int)prev)    {    	non-compiled	[CE]  ';'  expected	283	None	replace
1928	[BUG]  [BUGGY]  if(x  >=  (long)prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  (long)prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (long)prev)  {	  if(x    ==    (int)prev)    {    	non-compiled	[CE]  ';'  expected	283	None	replace
1929	[BUG]  [BUGGY]  x  =  getLastChar().charAt(prev).toCharArray();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().charAt(prev).toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(prev).toCharArray();	  x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	114	None	replace
1930	[BUG]  [BUGGY]  Char  mantissa  =  getMeanOp();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Char  mantissa  =  getMeanOp();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Char  mantissa  =  getMeanOp();	  char    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	78	None	replace
1931	[BUG]  [BUGGY]  Boolean  mantissa  =  getMeanOp();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Boolean  mantissa  =  getMeanOp();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Boolean  mantissa  =  getMeanOp();	  char    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	78	None	replace
1932	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	134	None	replace
1933	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  ==  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	134	None	replace
1934	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  ==  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  ==  '-')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	134	None	replace
1935	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	134	None	replace
1936	[BUG]  [BUGGY]  if(prev!=  null)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  null)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  null)  {  int  x  =  getLastChar();  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	134	None	replace
1937	[BUG]  [BUGGY]  if(prev!=  null)  {  int  x  =  getLastChar();  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  null)  {  int  x  =  getLastChar();  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  null)  {  int  x  =  getLastChar();  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	134	None	replace
1938	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  -  1  +  2);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  -  1  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  -  1  +  2);	  double    value    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	66	None	replace
1939	[BUG]  [BUGGY]  if(x  <  0)  {  If(x  >  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  If(x  >  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  If(x  >  0)  {	  if(x    >=    (long)x)    {    If(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	148	None	replace
1940	[BUG]  [BUGGY]  if(x  <=  0)  {  If(x  >=  (long)x)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  If(x  >=  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  If(x  >=  (long)x)  {	  if(x    >=    (long)x)    {    If(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	148	None	replace
1941	[BUG]  [BUGGY]  if(x  >  0)  {  If(x  <  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  If(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  If(x  <  0)  {	  if(x    >=    (long)x)    {    If(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	148	None	replace
1942	[BUG]  [BUGGY]  if(x  ==  prev)  {  If(x  >=  (long)x)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  If(x  >=  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  If(x  >=  (long)x)  {	  if(x    >=    (long)x)    {    If(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	148	None	replace
1943	[BUG]  [BUGGY]  Iterator  <  Long>  it  =  prevs.iterator();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Iterator  <  Long>  it  =  prevs.iterator();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Iterator  <  Long>  it  =  prevs.iterator();	  if(x    >=    (long)x)    {    If(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	148	None	replace
1944	[BUG]  [BUGGY]  String  value  =(x)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =(x)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =(x)Math.pow(10,  x);	  char    value    =(char)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	16	None	replace
1945	[BUG]  [BUGGY]  String  value  =(byte)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =(byte)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =(byte)Math.pow(10,  x);	  char    value    =(char)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	16	None	replace
1946	[BUG]  [BUGGY]  if(x  >=  prev)  {  If(x  ==  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  If(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  If(x  ==  prev)  {	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
1947	[BUG]  [BUGGY]  if(x  <  0)  {  If(x  ==  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  If(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  If(x  ==  0)  {	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
1948	[BUG]  [BUGGY]  if(x  <=  0)  {  If(x  ==  (int)x)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  If(x  ==  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  If(x  ==  (int)x)  {	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
1949	[BUG]  [BUGGY]  if(x  >=  prev)  {  If(x  ==  (int)x)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  If(x  ==  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  If(x  ==  (int)x)  {	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
1950	[BUG]  [BUGGY]  if(x!=  prev)  {  If(x  ==  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev)  {  If(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev)  {  If(x  ==  prev)  {	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
1951	[BUG]  [BUGGY]  if(x  <=  0)  {  If(x  ==  prev)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  If(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  If(x  ==  prev)  {	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
1952	[BUG]  [BUGGY]  if(x  >=  prev)  {  when(x  ==  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  when(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  when(x  ==  prev)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1953	[BUG]  [BUGGY]  if(x  <  0)  {  when(x  ==  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  when(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  when(x  ==  0)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1954	[BUG]  [BUGGY]  if(x  <=  0)  {  when(x  ==  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  when(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  when(x  ==  prev)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1955	[BUG]  [BUGGY]  if(x  <=  0)  {  when(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  when(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  when(x  ==  (long)x)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1956	[BUG]  [BUGGY]  if(x  <  0)  {  when(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  when(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  when(x  ==  (long)x)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
1957	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(x  <  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(x  <  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    if(x  <  Long.MAX_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
1958	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  for(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  >  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  for(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    for(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  	non-compiled	[CE]  >  expected	28	None	add
1959	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r')  {  if(x  >=  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r')  {  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n'  ||  prev  ==  'r')  {  if(x  >=  0)  {	  if(x    ==    (int)x)    {    if(x    >=    (int)x)    {    	non-compiled	[CE]  ';'  expected	254	None	replace
1960	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  't')  {  if(x  >=  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  't')  {  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n'  ||  prev  ==  't')  {  if(x  >=  0)  {	  if(x    ==    (int)x)    {    if(x    >=    (int)x)    {    	non-compiled	[CE]  ';'  expected	254	None	replace
1961	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '+')  {  if(x  >=  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '+')  {  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-'  ||  prev  ==  '+')  {  if(x  >=  0)  {	  if(x    ==    (int)x)    {    if(x    >=    (int)x)    {    	non-compiled	[CE]  ';'  expected	254	None	replace
1962	[BUG]  [BUGGY]  if(prev  ==  null)  {  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  if(x  >=  0)  {	  if(x    ==    (int)x)    {    if(x    >=    (int)x)    {    	non-compiled	[CE]  ';'  expected	254	None	replace
1963	[BUG]  [BUGGY]  if(x!=  Long.MAX_VALUE  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MAX_VALUE  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MAX_VALUE  &&  prev  ==  '-')  {	  if(x!=    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	281	None	replace
1964	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  >=  '-')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  &&  prev  >=  '-')  {	  if(x!=    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	281	None	replace
1965	[BUG]  [BUGGY]  if(x!=  Integer.MIN_VALUE  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Integer.MIN_VALUE  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Integer.MIN_VALUE  &&  prev  ==  '-')  {	  if(x!=    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	281	None	replace
1966	[BUG]  [BUGGY]  if(x  >>  Long.MIN_VALUE  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >>  Long.MIN_VALUE  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >>  Long.MIN_VALUE  &&  prev  ==  '-')  {	  if(x!=    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	281	None	replace
1967	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    Double    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	308	None	replace
1968	[BUG]  [BUGGY]  if(prev  ==  'n')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n')  {  x  =  getLastChar();  Double  x  =  getLastChar();  }	          x    =    getLastChar();    Double    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	308	None	replace
1969	[BUG]  [BUGGY]  if(x  <=  Predicates.NUMBER_INT  ||  prev  >  Predicates.NUMBER_INT)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Predicates.NUMBER_INT  ||  prev  >  Predicates.NUMBER_INT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Predicates.NUMBER_INT  ||  prev  >  Predicates.NUMBER_INT)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
1970	[BUG]  [BUGGY]  if(x  <=  Predicates.MIN_NUMBER_INT  ||  prev  >  Predicates.MAX_NUMBER_INT)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Predicates.MIN_NUMBER_INT  ||  prev  >  Predicates.MAX_NUMBER_INT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Predicates.MIN_NUMBER_INT  ||  prev  >  Predicates.MAX_NUMBER_INT)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
1971	[BUG]  [BUGGY]  if(x  <=  Predicates.NUMBER_INT  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Predicates.NUMBER_INT  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Predicates.NUMBER_INT  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
1972	[BUG]  [BUGGY]  if(x  <=  Predicates.NUMBER_INT  ||  prev  >  Predicates.NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Predicates.NUMBER_INT  ||  prev  >  Predicates.NUMBER_FLOAT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Predicates.NUMBER_INT  ||  prev  >  Predicates.NUMBER_FLOAT)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
1973	[BUG]  [BUGGY]  if(x  <=  Predicates.NUMBER_INT  ||  prev  >  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Predicates.NUMBER_INT  ||  prev  >  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Predicates.NUMBER_INT  ||  prev  >  Double.POSITIVE_INFINITY)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
1974	[BUG]  [BUGGY]  if(x  <=  Predicates.MIN_NUMBER_INT  ||  prev  >  Predicates.MAX_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Predicates.MIN_NUMBER_INT  ||  prev  >  Predicates.MAX_NUMBER_FLOAT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Predicates.MIN_NUMBER_INT  ||  prev  >  Predicates.MAX_NUMBER_FLOAT)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
1975	[BUG]  [BUGGY]  int  value  =  getLastChar(),  prev.longValue();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar(),  prev.longValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar(),  prev.longValue();	  int    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	200	None	replace
1976	[BUG]  [BUGGY]  int  value  =  getLastChar(),  prev.floatValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar(),  prev.floatValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar(),  prev.floatValue();	  int    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	200	None	replace
1977	[BUG]  [BUGGY]  if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  (int)x)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Predicates.NUMBER_INT  ||  prev  ==  (int)x)  {	  if(prev    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	180	None	replace
1978	[BUG]  [BUGGY]  x  =  getLastChar().lastIndexOf('-')+  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().lastIndexOf('-')+  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().lastIndexOf('-')+  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-')+    1;    	non-compiled	[CE]  ';'  expected	291	None	replace
1979	[BUG]  [BUGGY]  if(prev!=  '-')  {  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  '-')  {  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  '-')  {  if(x  ==  prev)  {	  if(x!=    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	269	None	replace
1980	[BUG]  [BUGGY]  if(prev!=  null)  {  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  null)  {  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  null)  {  if(x  ==  prev)  {	  if(x!=    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	269	None	replace
1981	[BUG]  [BUGGY]  if(prev!=  '-')  {  if(x  >=  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  '-')  {  if(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  '-')  {  if(x  >=  prev)  {	  if(x!=    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	269	None	replace
1982	[BUG]  [BUGGY]  if(prev!=  '-')  {  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  '-')  {  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  '-')  {  if(x  ==  0)  {	  if(x!=    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	269	None	replace
1983	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  >=  0))  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  >=  0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  >=  0))  {	  if((    int)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
1984	[BUG]  [BUGGY]  if((  x  <=  0)||(x  >  prev))  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <=  0)||(x  >  prev))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <=  0)||(x  >  prev))  {	  if((    int)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
1985	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  >=  -1))  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  >=  -1))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  >=  -1))  {	  if((    int)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
1986	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  >=  0.0))  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  >=  0.0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  >=  0.0))  {	  if((    int)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
1987	[BUG]  [BUGGY]  if(prev  >=  '-')  {  if(x!=  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  '-')  {  if(x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  '-')  {  if(x!=  prev)  {	  if(x!=    (long)x)    {    if(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	266	None	replace
1988	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp(x  +  prev);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp(x  +  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp(x  +  prev);	  int    mantissa    =    getMeanOp(x);    	non-compiled	[CE]  ';'  expected	76	None	replace
1989	[BUG]  [BUGGY]  char  x  =  getLastChar()  +  1;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar()  +  1;	  char    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	261	None	replace
1990	[BUG]  [BUGGY]  char  x  =  getLastChar().doubleValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().doubleValue();	  char    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	261	None	replace
1991	[BUG]  [BUGGY]  char  x  =  getLastChar().toCharArray();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar().toCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar().toCharArray();	  char    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	261	None	replace
1992	[BUG]  [BUGGY]  int  value  =  getFirstChar()  &  0xff;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getFirstChar()  &  0xff;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstChar()  &  0xff;	  int    value    =    getLastChar()    &    0xff;    	non-compiled	[CE]  ';'  expected	25	None	replace
1993	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
1994	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  >=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
1995	[BUG]  [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
1996	[BUG]  [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  >=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
1997	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  >=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  >=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
1998	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
1999	[BUG]  [BUGGY]  int  mantissa  =  getLastChar()  -  prev.doubleValue();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getLastChar()  -  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar()  -  prev.doubleValue();	  int    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	119	None	replace
2000	[BUG]  [BUGGY]  char  mantissa  =  getLastChar()  -  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  mantissa  =  getLastChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  getLastChar()  -  1;	  int    mantissa    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	118	None	replace
2001	[BUG]  [BUGGY]  short  value  =  Math.pow(10,  prev  +  1);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  short  value  =  Math.pow(10,  prev  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	short  value  =  Math.pow(10,  prev  +  1);	  int    value    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	184	None	replace
2002	[BUG]  [BUGGY]  int  x  =  getLastChar().length  -  4;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().length  -  4;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().length  -  4;	  int    x    =    getLastChar().length;    	non-compiled	[CE]  ';'  expected	264	None	replace
2003	[BUG]  [BUGGY]  float  value  =(float)Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  value  =(float)Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  value  =(float)Math.pow(10,  x  +  1);	  int    value    =(int)Math.pow(10,    x    +    1);    	non-compiled	[CE]  ';'  expected	18	None	replace
2004	[BUG]  [BUGGY]  char  value  =  getLastChar()  -  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  getLastChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  getLastChar()  -  1;	  int    value    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	22	None	replace
2005	[BUG]  [BUGGY]  if(x  <=  0)  {  If(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  If(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  If(x  ==  (long)x)  {	  if(x    ==    (long)x)    {    If(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	326	None	replace
2006	[BUG]  [BUGGY]  if(x  <  0)  {  If(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  If(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  If(x  ==  (long)x)  {	  if(x    ==    (long)x)    {    If(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	326	None	replace
2007	[BUG]  [BUGGY]  if(x  <=(int)value)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=(int)value)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=(int)value)  {	  if(x    <=(int)x)    {    	non-compiled	[CE]  ';'  expected	375	None	replace
2008	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)/  10  -  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)/  10  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)/  10  -  1;	  int    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	377	None	replace
2009	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)/  12;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)/  12;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)/  12;	  int    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	377	None	replace
2010	[BUG]  [BUGGY]  if((  x  ==  prev)||(x!=  Double.POSITIVE_INFINITY))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x!=  Double.POSITIVE_INFINITY))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x!=  Double.POSITIVE_INFINITY))  {	  if((    double)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
2011	[BUG]  [BUGGY]  if((  x  >=  prev)||(x!=  Double.MIN_VALUE))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x!=  Double.MIN_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x!=  Double.MIN_VALUE))  {	  if((    double)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
2012	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(11,  x);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(11,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(11,  x);	  double    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	246	None	replace
2013	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'n')  {  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'n')  {  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n'  ||  prev  ==  'n')  {  if(x  >=  0)  {	  if(x    ==    (double)x)    {    if(x    >>    (double)x)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
2014	[BUG]  [BUGGY]  if((  x  <=  0)||(x!=  prev))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <=  0)||(x!=  prev))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <=  0)||(x!=  prev))  {	  if((    int)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
2015	[BUG]  [BUGGY]  if((  x  >=  prev)||(x!=  -1))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x!=  -1))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x!=  -1))  {	  if((    int)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
2016	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)-  x.doubleValue();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)-  x.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)-  x.doubleValue();	  double    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	70	None	replace
2017	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev),  doubleValue();  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev),  doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev),  doubleValue();	  double    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	70	None	replace
2018	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev)+  1);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev)+  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  Math.pow(10,  prev)+  1);	  int    value    =(int)Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  ';'  expected	19	None	replace
2019	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
2020	[BUG]  [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().indexOf('n',  x);  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().indexOf('n',  x);  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0)  {  int  x  =  getLastChar().indexOf('n',  x);  }	  if(x    <    0)    {    int    x    =    getLastChar().indexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	319	None	replace
2021	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().indexOf('n',  prev);  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().indexOf('n',  prev);  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().indexOf('n',  prev);  }	  if(x    <    0)    {    int    x    =    getLastChar().indexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	319	None	replace
2022	[BUG]  [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().indexOf('n',  x);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().indexOf('n',  x);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0)  {  int  x  =  getLastChar().indexOf('n',  x);	  if(x    <    0)    {    int    x    =    getLastChar().indexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	319	None	replace
2023	[BUG]  [BUGGY]  char  value  =  Math.pow(10,  prev  +  2);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  Math.pow(10,  prev  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  Math.pow(10,  prev  +  2);	  double    value    =    Math.pow(10,    prev    +    2);    	non-compiled	[CE]  ';'  expected	316	None	replace
2024	[BUG]  [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
2025	[BUG]  [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
2026	[BUG]  [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NUMBER_INT_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NUMBER_INT_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NUMBER_INT_NON_NUMERIC_NUMBERS))  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
2027	[BUG]  [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NUMBER_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NUMBER_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NUMBER_NUMERIC_NUMBERS))  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
2028	[BUG]  [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.NON_NUMERIC_NUMBER_ASCII))  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.NON_NUMERIC_NUMBER_ASCII))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  &&  isEnabled(Feature.NON_NUMERIC_NUMBER_ASCII))  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
2029	[BUG]  [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NUMBER_NUMERIC_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NUMBER_NUMERIC_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NUMBER_NUMERIC_NON_NUMERIC_NUMBERS))  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
2030	[BUG]  [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  isEnabled(Feature.FLUSH_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  isEnabled(Feature.FLUSH_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  isEnabled(Feature.FLUSH_NON_NUMERIC_NUMBERS))  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
2031	[BUG]  [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  isEnabled(Feature.QUOTE_NUMBER_NUMBERS))  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  isEnabled(Feature.QUOTE_NUMBER_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  isEnabled(Feature.QUOTE_NUMBER_NUMBERS))  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
2032	[BUG]  [BUGGY]  Long  value  =  getLastChar()  +  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  getLastChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  getLastChar()  +  1;	  Long    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	276	None	replace
2033	[BUG]  [BUGGY]  Long  value  =  getLastChar().longValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  getLastChar().longValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  getLastChar().longValue();	  Long    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	276	None	replace
2034	[BUG]  [BUGGY]  Long  value  =  getLastChar()  -  prev;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  getLastChar()  -  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  getLastChar()  -  prev;	  Long    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	276	None	replace
2035	[BUG]  [BUGGY]  if(x  >=  prev)  {  if(x!=  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  if(x!=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  if(x!=  0)  {	  if(x    ==    (long)x)    {    if(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	141	None	replace
2036	[BUG]  [BUGGY]  if(x  ==  prev)  {  if(x!=  -1)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  if(x!=  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  if(x!=  -1)  {	  if(x    ==    (long)x)    {    if(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	141	None	replace
2037	[BUG]  [BUGGY]  if(prev  ==  'n')  {  if(x!=  prev)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n')  {  if(x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n')  {  if(x!=  prev)  {	  if(x    ==    (long)x)    {    if(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	141	None	replace
2038	[BUG]  [BUGGY]  if(x!=  prev)  {  if((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev)  {  if((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev)  {  if((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    {    prev)    {    	non-compiled	[CE]  ';'  expected	242	None	replace
2039	[BUG]  [BUGGY]  if(x  <  Integer.MIN_VALUE  ||  prev  ==  Integer.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Integer.MIN_VALUE  ||  prev  ==  Integer.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Integer.MIN_VALUE  ||  prev  ==  Integer.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
2040	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
2041	[BUG]  [BUGGY]  if(x  <=  0  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0  &&  prev  ==  '-')  {	  if(x    <=    0)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
2042	[BUG]  [BUGGY]  if(x  <=  0  &&  prev  >=  '-')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0  &&  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0  &&  prev  >=  '-')  {	  if(x    <=    0)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
2043	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue();	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
2044	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  ==  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue();  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
2045	[BUG]  [BUGGY]  Integer  x  =  getLastChar().computeIntValue();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  x  =  getLastChar().computeIntValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar().computeIntValue();	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
2046	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar().computeLongValue();  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar().computeLongValue();  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar().computeLongValue();  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
2047	[BUG]  [BUGGY]  long  value  =  getLastChar().computeLongValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar().computeLongValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar().computeLongValue();	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
2048	[BUG]  [BUGGY]  long  x  =  getLastChar().computeLongValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().computeLongValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().computeLongValue();	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
2049	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar().computeLongValue();  if(x  <  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar().computeLongValue();  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar().computeLongValue();  if(x  <  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
2050	[BUG]  [BUGGY]  if(x  <=  0)  {  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  if(x  ==  prev)  {	  if(x    ==    (int)x)    {    if(x    {    (int)x)    {    	non-compiled	[CE]  ';'  expected	259	None	replace
2051	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  +  1  -  1);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  +  1  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  +  1  -  1);	  double    value    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	65	None	replace
2052	[BUG]  [BUGGY]  long  x  =  getLastChar().lastIndexOf('.');  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().lastIndexOf('.');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().lastIndexOf('.');	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.');    	non-compiled	[CE]  ';'  expected	289	None	replace
2053	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  +  2;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar()  +  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  +  2;	  double    mantissa    =    getLastChar()    /    2;    	non-compiled	[CE]  ';'  expected	179	None	replace
2054	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)-  1  -  1;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)-  1  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)-  1  -  1;	  double    value    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	69	None	replace
2055	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
2056	[BUG]  [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
2057	[BUG]  [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x!=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x!=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x!=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
2058	[BUG]  [BUGGY]  if(prev  >=  0.0)  {  if((  long)x!=  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  0.0)  {  if((  long)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  0.0)  {  if((  long)x!=  prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	240	None	replace
2059	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev!=  '-')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev!=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  &&  prev!=  '-')  {	  if(x    >=    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	280	None	replace
2060	[BUG]  [BUGGY]  if(x  <  0  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  &&  prev  ==  '-')  {	  if(x    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	101	None	replace
2061	[BUG]  [BUGGY]  if(x  >  0  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  &&  prev  ==  '-')  {	  if(x    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	101	None	replace
2062	[BUG]  [BUGGY]  char  value  =  prev!=  null?  getLastChar().getCharAt(x):  x;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  prev!=  null?  getLastChar().getCharAt(x):  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev!=  null?  getLastChar().getCharAt(x):  x;	  char    value    =    prev!=    null?    getLastChar().toCharArray()    :    x;    	non-compiled	[CE]  ';'  expected	366	None	replace
2063	[BUG]  [BUGGY]  char  value  =  prev!=  null?  getFirstChar().toCharArray()  :  x;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  prev!=  null?  getFirstChar().toCharArray()  :  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev!=  null?  getFirstChar().toCharArray()  :  x;	  char    value    =    prev!=    null?    getLastChar().toCharArray()    :    x;    	non-compiled	[CE]  ';'  expected	366	None	replace
2064	[BUG]  [BUGGY]  char  value  =  prev!=  null?  getLastChar().toCharArray()  :  x  +  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  prev!=  null?  getLastChar().toCharArray()  :  x  +  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev!=  null?  getLastChar().toCharArray()  :  x  +  1;	  char    value    =    prev!=    null?    getLastChar().toCharArray()    :    x;    	non-compiled	[CE]  ';'  expected	366	None	replace
2065	[BUG]  [BUGGY]  if(x  >  '0'  &&  prev  <=  '9')  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  '0'  &&  prev  <=  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  '0'  &&  prev  <=  '9')  {	  if(x    <    0    ||    prev    >    '-')    {    	non-compiled	[CE]  ';'  expected	106	None	replace
2066	[BUG]  [BUGGY]  if(prev  <  0  ||  x  >  '-')  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0  ||  x  >  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0  ||  x  >  '-')  {	  if(x    <    0    ||    prev    >    '-')    {    	non-compiled	[CE]  ';'  expected	106	None	replace
2067	[BUG]  [BUGGY]  Long  value  =  Math.pow(10,  prev)-  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  Math.pow(10,  prev)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  Math.pow(10,  prev)-  1;	  int    value    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	186	None	replace
2068	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  ||  prev  ==  Double.POSITIVE_INFINITY)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
2069	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  >=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  >=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  ||  prev  >=  Double.POSITIVE_INFINITY)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
2070	[BUG]  [BUGGY]  Long  value  =(long)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =(long)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =(long)Math.pow(10,  prev);	  char    value    =(int)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	193	None	replace
2071	[BUG]  [BUGGY]  if((  long)x!=  prev)  {  If((  long)x  >=  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  prev)  {  If((  long)x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  prev)  {  If((  long)x  >=  prev)  {	  if((    long)x!=    prev)    {    If((    long)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	216	None	replace
2072	[BUG]  [BUGGY]  if(x  <  0)  {  while(x  ==  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  while(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  while(x  ==  prev)  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
2073	[BUG]  [BUGGY]  if(x  <  0)  {  while(x  >=  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  while(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  while(x  >=  0)  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
2074	[BUG]  [BUGGY]  x  =  getLastChar().intValue();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().intValue();	  x    =    getLastChar()    +    2;    	non-compiled	[CE]  ';'  expected	314	None	replace
2075	[BUG]  [BUGGY]  float  x  =  getLastChar();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  x  =  getLastChar();	  long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	174	None	replace
2076	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp()  +  1L;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp()  +  1L;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp()  +  1L;	  int    mantissa    =    getMeanOp()    +    1;    	non-compiled	[CE]  ';'  expected	81	None	replace
2077	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp()  +  2;  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp()  +  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp()  +  2;	  int    mantissa    =    getMeanOp()    +    1;    	non-compiled	[CE]  ';'  expected	81	None	replace
2078	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp()  -  prev.doubleValue();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOp()  -  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp()  -  prev.doubleValue();	  int    mantissa    =    getMeanOp().doubleValue();    	non-compiled	[CE]  ';'  expected	79	None	replace
2079	[BUG]  [BUGGY]  if(x  <  0  &&  prev  >=  '-')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  &&  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  &&  prev  >=  '-')  {	  if(x    <    0    ||    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	103	None	replace
2080	[BUG]  [BUGGY]  if(x  >  0  &&  prev  >=  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  &&  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  &&  prev  >=  '-')  {	  if(x    <    0    ||    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	103	None	replace
2081	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)/  charValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)/  charValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)/  charValue();	  double    value    =    Math.pow(10,    prev).charValue();    	non-compiled	[CE]  ';'  expected	365	None	replace
2082	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev).longValue();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev).longValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev).longValue();	  double    value    =    Math.pow(10,    prev).charValue();    	non-compiled	[CE]  ';'  expected	365	None	replace
2083	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)/  10  +  charValue();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)/  10  +  charValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)/  10  +  charValue();	  double    value    =    Math.pow(10,    prev).charValue();    	non-compiled	[CE]  ';'  expected	365	None	replace
2084	[BUG]  [BUGGY]  long  x  =  getLastChar().lastIndexOf('-',  prev);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().lastIndexOf('-',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().lastIndexOf('-',  prev);	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    	non-compiled	[CE]  ';'  expected	287	None	replace
2085	[BUG]  [BUGGY]  Double  x  =  getLastChar().doubleValue();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  x  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  x  =  getLastChar().doubleValue();	  double    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	170	None	replace
2086	[BUG]  [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  &&  prev  >  Preconditions.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  &&  prev  >  Preconditions.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.MIN_VALUE  &&  prev  >  Preconditions.MAX_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	370	None	replace
2087	[BUG]  [BUGGY]  if(x  >  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	370	None	replace
2088	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  -  prev.doubleValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar()  -  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  -  prev.doubleValue();	  double    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	178	None	replace
2089	[BUG]  [BUGGY]  if(x  >  prev  ||  isEnabled(Feature.QUOTE_NUMBER_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev  ||  isEnabled(Feature.QUOTE_NUMBER_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev  ||  isEnabled(Feature.QUOTE_NUMBER_NUMERIC_NUMBERS))  {	  if(x    >    prev)    {    	non-compiled	[CE]  ';'  expected	125	None	replace
2090	[BUG]  [BUGGY]  if(x  >  prev  ||  isEnabled(Feature.QUOTE_NUMBER_INT_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev  ||  isEnabled(Feature.QUOTE_NUMBER_INT_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev  ||  isEnabled(Feature.QUOTE_NUMBER_INT_NON_NUMERIC_NUMBERS))  {	  if(x    >    prev)    {    	non-compiled	[CE]  ';'  expected	125	None	replace
2091	[BUG]  [BUGGY]  if(x  >  prev  ||(prev  >=  '-'  &&  prev  <=  '-'))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev  ||(prev  >=  '-'  &&  prev  <=  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev  ||(prev  >=  '-'  &&  prev  <=  '-'))  {	  if(x    >    prev)    {    	non-compiled	[CE]  ';'  expected	125	None	replace
2092	[BUG]  [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  x);  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  x);  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  x);  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	318	None	replace
2093	[BUG]  [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  x);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  x);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  x);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	318	None	replace
2094	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  <  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  <  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  <  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
2095	[BUG]  [BUGGY]  if(prev  ==  Integer.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  Integer.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  Integer.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
2096	[BUG]  [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
2097	[BUG]  [BUGGY]  if(prev  ==  Integer.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  Integer.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  Integer.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
2098	[BUG]  [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  <  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  <  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  null)  {  int  x  =  getLastChar();  if(x  <  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
2099	[BUG]  [BUGGY]  double  value  =  getPreviousChar()  -  1;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getPreviousChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getPreviousChar()  -  1;	  double    value    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	130	None	replace
2100	[BUG]  [BUGGY]  if(x  <  10  &&  prev  >=  '-')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  10  &&  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  10  &&  prev  >=  '-')  {	  if(x    <=    10    &&    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	350	None	replace
2101	[BUG]  [BUGGY]  long  value  =  getLastChar()  /  2;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  value  =  getLastChar()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar()  /  2;	  double    value    =    getLastChar()    /    2;    	non-compiled	[CE]  ';'  expected	131	None	replace
2102	[BUG]  [BUGGY]  double  value  =  getLastChar()  /  2L;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  /  2L;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  /  2L;	  double    value    =    getLastChar()    /    2;    	non-compiled	[CE]  ';'  expected	131	None	replace
2103	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  1  -  value);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  1  -  value);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  +  1  -  value);	  double    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	150	None	replace
2104	[BUG]  [BUGGY]  if(x  <  prev  ||  isEnabled(Feature.QUOTE_NUMBER_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev  ||  isEnabled(Feature.QUOTE_NUMBER_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev  ||  isEnabled(Feature.QUOTE_NUMBER_NUMERIC_NUMBERS))  {	  if(x    <    prev)    {    	non-compiled	[CE]  ';'  expected	123	None	replace
2105	[BUG]  [BUGGY]  if(x  <  prev  ||  isEnabled(Feature.QUOTE_NUMBER_INT_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev  ||  isEnabled(Feature.QUOTE_NUMBER_INT_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev  ||  isEnabled(Feature.QUOTE_NUMBER_INT_NON_NUMERIC_NUMBERS))  {	  if(x    <    prev)    {    	non-compiled	[CE]  ';'  expected	123	None	replace
2106	[BUG]  [BUGGY]  if(x  <  prev  ||  isEnabled(Feature.QUOTE_NUMBER_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev  ||  isEnabled(Feature.QUOTE_NUMBER_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev  ||  isEnabled(Feature.QUOTE_NUMBER_NON_NUMERIC_NUMBERS))  {	  if(x    <    prev)    {    	non-compiled	[CE]  ';'  expected	123	None	replace
2107	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    	non-compiled	[CE]  ';'  expected	323	None	replace
2108	[BUG]  [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  x);  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  x);  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  x);  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    	non-compiled	[CE]  ';'  expected	323	None	replace
2109	[BUG]  [BUGGY]  if(x  >  Preconditions.INCRDECR_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Preconditions.INCRDECR_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Preconditions.INCRDECR_VALUE)  {	  if(x    <=    Preconditions.INCRDECR_VALUE)    {    	non-compiled	[CE]  ';'  expected	371	None	replace
2110	[BUG]  [BUGGY]  if(x  <=  Preconditions.INCRDECR_VALUE  ||  prev  >  Integer.MAX_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.INCRDECR_VALUE  ||  prev  >  Integer.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.INCRDECR_VALUE  ||  prev  >  Integer.MAX_VALUE)  {	  if(x    <=    Preconditions.INCRDECR_VALUE)    {    	non-compiled	[CE]  ';'  expected	371	None	replace
2111	[BUG]  [BUGGY]  if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('-');  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('-');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('-');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-');    	non-compiled	[CE]  ';'  expected	320	None	replace
2112	[BUG]  [BUGGY]  float  value  =(double)Math.pow(10,  x);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  value  =(double)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  value  =(double)Math.pow(10,  x);	  float    value    =(float)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	292	None	replace
2113	[BUG]  [BUGGY]  float  value  =(float)Math.pow(10,  Predicate.SHORT);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  value  =(float)Math.pow(10,  Predicate.SHORT);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  value  =(float)Math.pow(10,  Predicate.SHORT);	  float    value    =(float)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	292	None	replace
2114	[BUG]  [BUGGY]  Integer  value  =  getPreviousChild().doubleValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getPreviousChild().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getPreviousChild().doubleValue();	  Integer    value    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	333	None	replace
2115	[BUG]  [BUGGY]  String  value  =  getLastChar().trim();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =  getLastChar().trim();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  getLastChar().trim();	  String    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	273	None	replace
2116	[BUG]  [BUGGY]  String  value  =  getFirstChar();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  getFirstChar();	  String    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	273	None	replace
2117	[BUG]  [BUGGY]  char  x  =  getLastChar()  -  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  x  =  getLastChar()  -  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar()  -  1;	  int    x    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	265	None	replace
2118	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
2119	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
2120	[BUG]  [BUGGY]  if(prev  ==  'n')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
2121	[BUG]  [BUGGY]  if(prev!=  ')')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  ')')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  ')')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
2122	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
2123	[BUG]  [BUGGY]  double  x  =  getLastChar().charAt(0,  prev);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().charAt(0,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().charAt(0,  prev);	  double    x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	306	None	replace
2124	[BUG]  [BUGGY]  double  x  =  getLastChar().charAt(i);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().charAt(i);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().charAt(i);	  double    x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	306	None	replace
2125	[BUG]  [BUGGY]  if(x  >  prev)  {  if(x  >=  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev)  {  if(x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev)  {  if(x  >=  prev)  {	  if(x    >=    (long)x)    {    if(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	144	None	replace
2126	[BUG]  [BUGGY]  Long  value  =  Math.pow(10,  prev  -  1);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  Math.pow(10,  prev  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  Math.pow(10,  prev  -  1);	  int    value    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	183	None	replace
2127	[BUG]  [BUGGY]  if(x  >=  prev  &&  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev  &&  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev  &&  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
2128	[BUG]  [BUGGY]  if(x  >  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
2129	[BUG]  [BUGGY]  if(x  <=  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
2130	[BUG]  [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE)&&  isEnabled(Feature.AUTO_NON_NUMERIC_MASK))  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE)&&  isEnabled(Feature.AUTO_NON_NUMERIC_MASK))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE)&&  isEnabled(Feature.AUTO_NON_NUMERIC_MASK))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
2131	[BUG]  [BUGGY]  if(x  <  0)  {  Integer  x  =  getFirstChild().doubleValue();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  Integer  x  =  getFirstChild().doubleValue();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  Integer  x  =  getFirstChild().doubleValue();  }	  if(x    <    0)    {    Integer    x    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	322	None	replace
2132	[BUG]  [BUGGY]  if(x  <  0)  {  Integer  x  =  getLastChild().doubleValue();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  Integer  x  =  getLastChild().doubleValue();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  Integer  x  =  getLastChild().doubleValue();  }	  if(x    <    0)    {    Integer    x    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	322	None	replace
2133	[BUG]  [BUGGY]  if(x  <  0)  {  Integer  x  =  getLastChild().doubleValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  Integer  x  =  getLastChild().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  Integer  x  =  getLastChild().doubleValue();	  if(x    <    0)    {    Integer    x    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	322	None	replace
2134	[BUG]  [BUGGY]  if(x  >  prev)  {  If(x  ==  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev)  {  If(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev)  {  If(x  ==  prev)  {	  if(x    ==    prev)    {    If(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
2135	[BUG]  [BUGGY]  if(x  <  prev)  {  If(x  ==  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  prev)  {  If(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev)  {  If(x  ==  prev)  {	  if(x    ==    prev)    {    If(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
2136	[BUG]  [BUGGY]  if(x  >  prev)  {  If(x  <  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  prev)  {  If(x  <  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev)  {  If(x  <  prev)  {	  if(x    ==    prev)    {    If(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
2137	[BUG]  [BUGGY]  if(x  <=  '0')  {  If(x  ==  prev)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  '0')  {  If(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0')  {  If(x  ==  prev)  {	  if(x    ==    prev)    {    If(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
2138	[BUG]  [BUGGY]  if(prev  >=  x)  {  If(x  ==  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  x)  {  If(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  x)  {  If(x  ==  prev)  {	  if(x    ==    prev)    {    If(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
2139	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  Long.MAX_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  Long.MAX_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    if(x  ==  Long.MAX_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
2140	[BUG]  [BUGGY]  if(x  >  0  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  &&  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    >    0)    {    	non-compiled	[CE]  ';'  expected	102	None	replace
2141	[BUG]  [BUGGY]  if(x  >  0  &&  prev!=  '-')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  &&  prev!=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  &&  prev!=  '-')  {	  if(x    >    0)    {    	non-compiled	[CE]  ';'  expected	102	None	replace
2142	[BUG]  [BUGGY]  if(x  >  0  &&  prev  <=  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  &&  prev  <=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  &&  prev  <=  '-')  {	  if(x    >    0)    {    	non-compiled	[CE]  ';'  expected	102	None	replace
2143	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('ufffd',  prev);  [CE]  unclosed  character  literal  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('ufffd',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('ufffd',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('ufffd',    prev);    	non-compiled	[CE]  unclosed  character  literal	321	None	replace
2144	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('/',  prev);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('/',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('/',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('ufffd',    prev);    	non-compiled	[CE]  ';'  expected	321	None	replace
2145	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  if(x    >=    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	357	None	replace
2146	[BUG]  [BUGGY]  int  x  =  getFirstChar();  if(x  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar();  if(x  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar();  if(x  ==  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
2147	[BUG]  [BUGGY]  int  value  =  getFirstChar()  +  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getFirstChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstChar()  +  1;	  int    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	341	None	replace
2148	[BUG]  [BUGGY]  int  value  =  getValue();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getValue();	  int    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	341	None	replace
2149	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  /  100.0  +  1;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar().doubleValue()  /  100.0  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  /  100.0  +  1;	  double    value    =    getLastChar().doubleValue()    /    100.0;    	non-compiled	[CE]  ';'  expected	208	None	replace
2150	[BUG]  [BUGGY]  if(x  <  0  &&  prev!=  '-')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  &&  prev!=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  &&  prev!=  '-')  {	  if(x    <    0    ||    prev!=    '-')    {    	non-compiled	[CE]  ';'  expected	105	None	replace
2151	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  3;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  3;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)/  3;	  int    mantissa    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	343	None	replace
2152	[BUG]  [BUGGY]  if(x  <=  0)  {  If(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  If(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  If(x  ==  (double)x)  {	  if(x    ==    (double)x)    {    If(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
2153	[BUG]  [BUGGY]  if(x!=  prev)  {  If(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev)  {  If(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev)  {  If(x  ==  (double)x)  {	  if(x    ==    (double)x)    {    If(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
2154	[BUG]  [BUGGY]  if(binOp)  {  int  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(binOp)  {  int  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(binOp)  {  int  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	161	None	replace
2155	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf(prev);  if(x  >=  -1)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf(prev);  if(x  >=  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf(prev);  if(x  >=  -1)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	161	None	replace
2156	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf(prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf(prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf(prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	161	None	replace
2157	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
2158	[BUG]  [BUGGY]  if(prev!=  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev!=  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev!=  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
2159	[BUG]  [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  prev)  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  prev)  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
2160	[BUG]  [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
2161	[BUG]  [BUGGY]  if(prev  ==  'n')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  'n')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  'n')  {  x  =  getLastChar();  long  x  =  getLastChar();  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
2162	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( ", ");  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( ", ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( ", ");  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
2163	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  >=  -1)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  >=  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  >=  -1)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	163	None	replace
2164	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('.',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	163	None	replace
2165	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar();  if(x  ==  prev)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
2166	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  <  0  ||  x  >  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  <  0  ||  x  >  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  <  0  ||  x  >  0)  {	  if(x    ==    prev)    {    int    x    =    getLastChar();    if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	285	None	replace
2167	[BUG]  [BUGGY]  Integer  value  =  getFirstChild().intValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstChild().intValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChild().intValue();	  Integer    value    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	333	None	replace
2168	[BUG]  [BUGGY]  int  value  =  getFirstChild().doubleValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getFirstChild().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstChild().doubleValue();	  Integer    value    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	333	None	replace
2169	[BUG]  [BUGGY]  if(x  >=  Predicate.NUMBER_INT)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Predicate.NUMBER_INT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Predicate.NUMBER_INT)  {	  if(x!=    (long)x)    {    if(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	267	None	replace
2170	[BUG]  [BUGGY]  if(x  >=  Predicate.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Predicate.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Predicate.NEGATIVE_INFINITY)  {	  if(x!=    (long)x)    {    if(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	267	None	replace
2171	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  ==  ';')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  &&  prev  ==  ';')  {	  if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	356	None	replace
2172	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  ==  ':')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  ==  ':')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  &&  prev  ==  ':')  {	  if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	356	None	replace
2173	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	356	None	replace
2174	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  x  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  ||  x  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  ||  x  ==  Long.MAX_VALUE)  {	  if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	356	None	replace
2175	[BUG]  [BUGGY]  if(x  <=  10  &&  prev  >=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  prev  >=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  prev  >=  Double.POSITIVE_INFINITY)  {	  if(x    ==    prev)    {    if(x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
2176	[BUG]  [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&	  if(x    ==    (int)x)    {    if(x    ==    (int)x)    {    	non-compiled	[CE]  illegal  start  of  expression	253	None	replace
2177	[BUG]  [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&	  if(x    ==    (int)x)    {    if(x    ==    (int)x)    {    	non-compiled	[CE]  illegal  start  of  expression	253	None	replace
2178	[BUG]  [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  127)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  127)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  127)  {	  if(x    ==    (int)x)    {    if(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	253	None	replace
2179	[BUG]  [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  127)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  127)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  127)  {	  if(x    ==    (int)x)    {    if(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	253	None	replace
2180	[BUG]  [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  >=  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  >=  prev)  {	  if(x    ==    (int)x)    {    if(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	253	None	replace
2181	[BUG]  [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  >=  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  >=  prev)  {	  if(x    ==    (int)x)    {    if(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	253	None	replace
2182	[BUG]  [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&!  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&!  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&!	  if(x    ==    (int)x)    {    if(x    ==    (int)x)    {    	non-compiled	[CE]  illegal  start  of  expression	253	None	replace
2183	[BUG]  [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  >=  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  >=  prev)  {	  if(x    >=    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	145	None	replace
2184	[BUG]  [BUGGY]  if(!(x  <  0  ||  prev  >  ')')  {  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(!(x  <  0  ||  prev  >  ')')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(!(x  <  0  ||  prev  >  ')')  {	  if(x    ==    (int)x)    {    if(x    {    (int)x)    {    	non-compiled	[CE]  ')'  expected	259	None	replace
2185	[BUG]  [BUGGY]  x  =  getLastChar().valueToLowerCase(x);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().valueToLowerCase(x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().valueToLowerCase(x);	  x    =    getLastChar().toLowerCase();    	non-compiled	[CE]  ';'  expected	113	None	replace
2186	[BUG]  [BUGGY]  if(x  >=  (x  +  1))  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  (x  +  1))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (x  +  1))  {	  if(x    <=(int)x)    {    	non-compiled	[CE]  ';'  expected	375	None	replace
2187	[BUG]  [BUGGY]  Double  mantissa  =  getLastChar().doubleValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  getLastChar().doubleValue();	  double    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	178	None	replace
2188	[BUG]  [BUGGY]  byte  x  =  getLastChar();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  byte  x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	byte  x  =  getLastChar();	  long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	174	None	replace
2189	[BUG]  [BUGGY]  n  =  getFirstChar();  int  x  =  getLastChar();  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  n  =  getFirstChar();  int  x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	n  =  getFirstChar();  int  x  =  getLastChar();	          x    =    getLastChar();    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	84	None	replace
2190	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
2191	[BUG]  [BUGGY]  if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('-',  x);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('-',  x);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('-',  x);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
2192	[BUG]  [BUGGY]  if(prev  >=  '-')  {  int  x  =  getLastChar().lastIndexOf('-',  x);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  '-')  {  int  x  =  getLastChar().lastIndexOf('-',  x);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  '-')  {  int  x  =  getLastChar().lastIndexOf('-',  x);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
2193	[BUG]  [BUGGY]  if(prev  >=  '.')  {  int  x  =  getLastChar().lastIndexOf('-',  x);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  '.')  {  int  x  =  getLastChar().lastIndexOf('-',  x);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  '.')  {  int  x  =  getLastChar().lastIndexOf('-',  x);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
2194	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  >  0)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  >  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  >  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	165	None	replace
2195	[BUG]  [BUGGY]  if(x  >  0  ||  prev  >  '0')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  ||  prev  >  '0')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  ||  prev  >  '0')  {	  if(x    <    0    ||    prev    >    '0')    {    	non-compiled	[CE]  ';'  expected	374	None	replace
2196	[BUG]  [BUGGY]  if(x  <=  10  &&  prev  <=  127)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  prev  <=  127)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  prev  <=  127)  {	  if(x    ==    prev)    {    if(x    ==    Prev)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
2197	[BUG]  [BUGGY]  if(x!=  Predicate.NUMBER_INT)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Predicate.NUMBER_INT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Predicate.NUMBER_INT)  {	  if(x!=    (long)x)    {    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	269	None	replace
2198	[BUG]  [BUGGY]  Integer  value  =  getLastChar().toPosition();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().toPosition();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().toPosition();	  Integer    value    =    getLastChar().toString();    	non-compiled	[CE]  ';'  expected	228	None	replace
2199	[BUG]  [BUGGY]  Integer  value  =  getLastChar().toPlainString();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().toPlainString();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().toPlainString();	  Integer    value    =    getLastChar().toString();    	non-compiled	[CE]  ';'  expected	228	None	replace
2200	[BUG]  [BUGGY]  Integer  value  =  getLastChar().toPath();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().toPath();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().toPath();	  Integer    value    =    getLastChar().toString();    	non-compiled	[CE]  ';'  expected	228	None	replace
2201	[BUG]  [BUGGY]  Integer  value  =  getLastChar().valueToString(x);  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastChar().valueToString(x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().valueToString(x);	  Integer    value    =    getLastChar().toString();    	non-compiled	[CE]  ';'  expected	228	None	replace
2202	[BUG]  [BUGGY]  if((  int)x  ==  prev)  {  ((  int)x  ==  prev)  {  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  ==  prev)  {  ((  int)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  int)x  ==  prev)  {  ((  int)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
2203	[BUG]  [BUGGY]  if((  long)x  >=  prev)  {  ((  long)x  ==  prev)  {  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >=  prev)  {  ((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >=  prev)  {  ((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
2204	[BUG]  [BUGGY]  if((  long)x!=  prev)  {  ((  long)x  ==  prev)  {  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  prev)  {  ((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  prev)  {  ((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    ((    long)x    ==    prev)    {    	non-compiled	[CE]  not  a  statement	245	None	replace
2205	[BUG]  [BUGGY]  if(x  <=  1  ||  x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  1  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  1  ||  x  >  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
2206	[BUG]  [BUGGY]  float  value  =(float)Math.pow(10,  Math.abs(x));  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  value  =(float)Math.pow(10,  Math.abs(x));  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  value  =(float)Math.pow(10,  Math.abs(x));	  float    value    =(float)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	292	None	replace
2207	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  x  +  10);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  x  +  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  x  +  10);	  double    value    =    Math.pow(10,    prev    +    10);    	non-compiled	[CE]  ';'  expected	317	None	replace
2208	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
2209	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
2210	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  long  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  long  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  long  x  =  getLastChar();  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
2211	[BUG]  [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  x  =  getLastChar();  long  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    long    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	88	None	replace
2212	[BUG]  [BUGGY]  Long  value  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  Math.pow(10,  prev);	  char    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	182	None	replace
2213	[BUG]  [BUGGY]  if(x  >  value  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  value  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  value  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
2214	[BUG]  [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE)&&  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUE))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE)&&  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE)&&  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUE))  {	  if(x    ==    prev    ||    isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))    {    	non-compiled	[CE]  ';'  expected	128	None	replace
2215	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	164	None	replace
2216	[BUG]  [BUGGY]  if(prev  >=  '-')  {  int  x  =  getLastChar().lastIndexOf('n',  x);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  '-')  {  int  x  =  getLastChar().lastIndexOf('n',  x);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  '-')  {  int  x  =  getLastChar().lastIndexOf('n',  x);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	164	None	replace
2217	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  ==  '-')  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  ==  '-')  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	164	None	replace
2218	[BUG]  [BUGGY]  if(x  <  0  ||  x  >  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  x  >  prev)  {	  if    ((    long)x    ==    prev)    {    if    ((    long)x    {    prev)    {    	non-compiled	[CE]  ';'  expected	242	None	replace
2219	[BUG]  [BUGGY]  if(x  >  Long.MIN_VALUE  ||  x  <  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MIN_VALUE  ||  x  <  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MIN_VALUE  ||  x  <  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	279	None	replace
2220	[BUG]  [BUGGY]  if(x  <  (int)Math.abs(x)>  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  (int)Math.abs(x)>  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (int)Math.abs(x)>  Long.MIN_VALUE)  {	  if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	279	None	replace
2221	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('n',  x);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('n',  x);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('n',  x);	  if(x    ==    prev)    {    int    x    =    getLastChar().indexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	286	None	replace
2222	[BUG]  [BUGGY]  double  x  =  getFirstChar()  /  2;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getFirstChar()  /  2;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getFirstChar()  /  2;	  double    x    =    getLastChar()    *    2;    	non-compiled	[CE]  ';'  expected	172	None	replace
2223	[BUG]  [BUGGY]  if(prev  ==  x  ||  prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  ||  prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  ||  prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  x)  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
2224	[BUG]  [BUGGY]  if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  x)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Preconditions.NUMBER_INT  ||  prev  ==  x)  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
2225	[BUG]  [BUGGY]  if(prev  ==  x  &&!(x  <=  0  &&  prev  <=  '0'))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  &&!(x  <=  0  &&  prev  <=  '0'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  &&!(x  <=  0  &&  prev  <=  '0'))  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
2226	[BUG]  [BUGGY]  if(prev  ==  x  &&!(x  <=  0  &&  prev  >=  '-'))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  &&!(x  <=  0  &&  prev  >=  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  &&!(x  <=  0  &&  prev  >=  '-'))  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
2227	[BUG]  [BUGGY]  if(prev  ==  x  &&  isEmpty(x))  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  x  &&  isEmpty(x))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x  &&  isEmpty(x))  {	  if(prev    ==    x)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
2228	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  <=  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  <=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  &&  prev  <=  '-')  {	  if(x!=    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	281	None	replace
2229	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  x  -  prev);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(double)Math.pow(10,  x  -  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  x  -  prev);	  double    value    =(double)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	14	None	replace
2230	[BUG]  [BUGGY]  if(x  <=  Double.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Double.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Double.NEGATIVE_INFINITY)  {	  if(x    ==    Long.MIN_VALUE)    {    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
2231	[BUG]  [BUGGY]  x  =  getLastChar().substring(0,  x);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().substring(0,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().substring(0,  x);	  x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	313	None	replace
2232	[BUG]  [BUGGY]  x  =  getLastChar().substring(0,  1);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().substring(0,  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().substring(0,  1);	  x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	313	None	replace
2233	[BUG]  [BUGGY]  if(x  <=  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
2234	[BUG]  [BUGGY]  if(x  <=  Double.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Double.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Double.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
2235	[BUG]  [BUGGY]  if(x  ==  Double.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Double.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Double.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
2236	[BUG]  [BUGGY]  Double  prev  =  getLastChar();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  prev  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  ';'  expected	26	None	replace
2237	[BUG]  [BUGGY]  String  prev  =  getLastString();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  prev  =  getLastString();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  prev  =  getLastString();	  char    prev    =    getLastChar();    	non-compiled	[CE]  ';'  expected	26	None	replace
2238	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  1,  x);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  1,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  +  1,  x);	  double    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	150	None	replace
2239	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  1  -  x);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  1  -  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  +  1  -  x);	  double    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	150	None	replace
2240	[BUG]  [BUGGY]  int  value  =  getSemiColon();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getSemiColon();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getSemiColon();	  int    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	341	None	replace
2241	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  int  x  =  getFirstChar();  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  (double)x)  {  int  x  =  getFirstChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (double)x)  {  int  x  =  getFirstChar();	  if(x    ==    (double)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	362	None	replace
2242	[BUG]  [BUGGY]  if(x  <=  0)  {  int  x  =  getLastChar();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  int  x  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  int  x  =  getLastChar();	  if(x    ==    (double)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	362	None	replace
2243	[BUG]  [BUGGY]  if(x  >=  (double)x)  {  int  x  =  getLastChar();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  (double)x)  {  int  x  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (double)x)  {  int  x  =  getLastChar();	  if(x    ==    (double)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	362	None	replace
2244	[BUG]  [BUGGY]  if(x  >=  (double)x)  {  int  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  (double)x)  {  int  x  =  getLastChar();  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (double)x)  {  int  x  =  getLastChar();  }	  if(x    ==    (double)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	362	None	replace
2245	[BUG]  [BUGGY]  if(x  >  1  ||  x  <  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  1  ||  x  <  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  1  ||  x  <  prev)  {	  if(x    >=    (long)x)    {    if(x    [Delete]    (long)x)    {    	non-compiled	[CE]  ';'  expected	146	None	replace
2246	[BUG]  [BUGGY]  if(x  <  (Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE))  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  (Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE))  {	  if(x    <    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	278	None	replace
2247	[BUG]  [BUGGY]  if(x  <=  Long.MAX_VALUE  ||  x  >  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MAX_VALUE  ||  x  >  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MAX_VALUE  ||  x  >  Long.MIN_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	278	None	replace
2248	[BUG]  [BUGGY]  if(x  <  (long)x  ||  x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  (long)x  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (long)x  ||  x  >  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	278	None	replace
2249	[BUG]  [BUGGY]  if(x  <=  Double.MIN_VALUE  ||  x  >  Double.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Double.MIN_VALUE  ||  x  >  Double.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Double.MIN_VALUE  ||  x  >  Double.MAX_VALUE)  {	  if(x    <=    (double)x)    {    	non-compiled	[CE]  ';'  expected	349	None	replace
2250	[BUG]  [BUGGY]  if((  x  >=  x)||(x!=  prev))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  x)||(x!=  prev))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  x)||(x!=  prev))  {	  if((    int)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
2251	[BUG]  [BUGGY]  if((  x  >=  x)&&(x!=  prev))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  x)&&(x!=  prev))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  x)&&(x!=  prev))  {	  if((    int)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
2252	[BUG]  [BUGGY]  if((  x  >>  x)&&(x!=  prev))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >>  x)&&(x!=  prev))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >>  x)&&(x!=  prev))  {	  if((    int)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
2253	[BUG]  [BUGGY]  if((  x  >=  x)&&(prev!=  x))  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  x)&&(prev!=  x))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  x)&&(prev!=  x))  {	  if((    int)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
2254	[BUG]  [BUGGY]  x  =  getLastChar().lastIndexOf('-',  prev);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().lastIndexOf('-',  prev);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().lastIndexOf('-',  prev);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    	non-compiled	[CE]  ';'  expected	323	None	replace
2255	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  1);  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  1);  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  1);  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('-',    prev);    	non-compiled	[CE]  ';'  expected	323	None	replace
2256	[BUG]  [BUGGY]  if(x  <  (Long)x  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  (Long)x  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (Long)x  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
2257	[BUG]  [BUGGY]  if(x  <  (long)x  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  (long)x  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (long)x  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
2258	[BUG]  [BUGGY]  if(x  <  (Long.MIN_VALUE  ||  prev  ==  '-'))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  (Long.MIN_VALUE  ||  prev  ==  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (Long.MIN_VALUE  ||  prev  ==  '-'))  {	  if(x    >=    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	280	None	replace
2259	[BUG]  [BUGGY]  if(x  >  Long.MAX_VALUE  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MAX_VALUE  &&  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MAX_VALUE  &&  prev  ==  '-')  {	  if(x    >=    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	280	None	replace
2260	[BUG]  [BUGGY]  if(x  <=  Long.MIN_VALUE  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MIN_VALUE  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MIN_VALUE  ||  prev  ==  '-')  {	  if(x    >=    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	280	None	replace
2261	[BUG]  [BUGGY]  String  value  =  getLastString().doubleValue();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  String  value  =  getLastString().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  getLastString().doubleValue();	  char    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	197	None	replace
2262	[BUG]  [BUGGY]  if(x  >  0)  {  while(x  ==  x)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  while(x  ==  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  while(x  ==  x)  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
2263	[BUG]  [BUGGY]  if(x  <=  0)  {  while(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  while(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  while(x  ==  (long)x)  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
2264	[BUG]  [BUGGY]  if(x  ==  prev)  {  while(x  ==  x)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  while(x  ==  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  while(x  ==  x)  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
2265	[BUG]  [BUGGY]  if(x  ==  prev)  {  while(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev)  {  while(x  ==  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev)  {  while(x  ==  (long)x)  {	  if(x    ==    (long)x)    {    while(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	330	None	replace
2266	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE)&&  prev  <=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  if(x  ==  Long.MIN_VALUE)&&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    if(x  ==  Long.MIN_VALUE)&&  prev  <=  Long.MAX_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
2267	[BUG]  [BUGGY]  if((  long)x  <=  1L)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  1L)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  <=  1L)  {	  if((    long)x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
2268	[BUG]  [BUGGY]  Long  value  =  getFirstChar();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  getFirstChar();	  Long    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	276	None	replace
2269	[BUG]  [BUGGY]  BigDecimal  value  =  getLastChar();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  BigDecimal  value  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigDecimal  value  =  getLastChar();	  BigInteger    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	274	None	replace
2270	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  prev  +  1  -  x);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  mantissa  =  Math.pow(10,  prev  +  1  -  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  prev  +  1  -  x);	  long    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	151	None	replace
2271	[BUG]  [BUGGY]  if(x  >  0.0  ||  prev  >=  '-')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0.0  ||  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0.0  ||  prev  >=  '-')  {	  if(x    <    0    ||    prev    >=    '-')    {    	non-compiled	[CE]  ';'  expected	103	None	replace
2272	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  x  -  1);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  x  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  x  -  1);	  double    value    =    Math.pow(10,    prev    -    1);    	non-compiled	[CE]  ';'  expected	66	None	replace
2273	[BUG]  [BUGGY]  if(x  >  '9'  ||  x  <=  '0')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  '9'  ||  x  <=  '0')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  '9'  ||  x  <=  '0')  {	  if(x    <=    '0'    ||    x    >    '9')    {    	non-compiled	[CE]  ';'  expected	304	None	replace
2274	[BUG]  [BUGGY]  if(x  <=  0  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <    0    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	332	None	replace
2275	[BUG]  [BUGGY]  if((  short)x!=  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  short)x!=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  short)x!=  prev)  {	  if((    long)x!=    prev)    {    if((    long)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	209	None	replace
2276	[BUG]  [BUGGY]  if((  x  >=  prev)||(x!=  x))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)||(x!=  x))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)||(x!=  x))  {	  if((    double)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
2277	[BUG]  [BUGGY]  if((  x  >=  x)&&(prev  ==  '-'  ||  prev  ==  '+')&&(x  <=  x))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  x)&&(prev  ==  '-'  ||  prev  ==  '+')&&(x  <=  x))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  x)&&(prev  ==  '-'  ||  prev  ==  '+')&&(x  <=  x))  {	  if((    double)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
2278	[BUG]  [BUGGY]  if((  x  >=  x)&&(prev!=  '.')&&(x  <=  x))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  x)&&(prev!=  '.')&&(x  <=  x))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  x)&&(prev!=  '.')&&(x  <=  x))  {	  if((    double)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
2279	[BUG]  [BUGGY]  if((  x  >=  x)||(x  >=  prev))  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  x)||(x  >=  prev))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  x)||(x  >=  prev))  {	  if((    double)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	360	None	replace
2280	[BUG]  [BUGGY]  if((  x  >=  x)||(x  >  prev))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  x)||(x  >  prev))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  x)||(x  >  prev))  {	  if((    double)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	360	None	replace
2281	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
2282	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
2283	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  <  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
2284	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
2285	[BUG]  [BUGGY]  if(x  <=  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
2286	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  >=  0)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  >=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  >=  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue(prev);    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
2287	[BUG]  [BUGGY]  if(x  <=  Long.MIN_VALUE  &&  x  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MIN_VALUE  &&  x  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MIN_VALUE  &&  x  <=  Long.MAX_VALUE)  {	  if(x    <=    (long)x)    {    	non-compiled	[CE]  ';'  expected	293	None	replace
2288	[BUG]  [BUGGY]  char  value  =  getFirstChar(),  prev.doubleValue();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  char  value  =  getFirstChar(),  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  getFirstChar(),  prev.doubleValue();	  int    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	200	None	replace
2289	[BUG]  [BUGGY]  if(x!=  prev  ||(x  <  0  &&  prev  <=  '0')||(x  >  0  &&  prev  <=  '9'))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev  ||(x  <  0  &&  prev  <=  '0')||(x  >  0  &&  prev  <=  '9'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev  ||(x  <  0  &&  prev  <=  '0')||(x  >  0  &&  prev  <=  '9'))  {	  if(x!=    prev)    {    	non-compiled	[CE]  ';'  expected	74	None	replace
2290	[BUG]  [BUGGY]  if(x!=  prev  ||(x  >=  '.'  &&  x  <=  'a'  &&  x  <=  'z'))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev  ||(x  >=  '.'  &&  x  <=  'a'  &&  x  <=  'z'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev  ||(x  >=  '.'  &&  x  <=  'a'  &&  x  <=  'z'))  {	  if(x!=    prev)    {    	non-compiled	[CE]  ';'  expected	74	None	replace
2291	[BUG]  [BUGGY]  if(x!=  prev  ||(x  <  0  &&  prev  <=  '-')||(x  >  0  &&  prev  <=  '-'))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev  ||(x  <  0  &&  prev  <=  '-')||(x  >  0  &&  prev  <=  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev  ||(x  <  0  &&  prev  <=  '-')||(x  >  0  &&  prev  <=  '-'))  {	  if(x!=    prev)    {    	non-compiled	[CE]  ';'  expected	74	None	replace
2292	[BUG]  [BUGGY]  if(x!=  prev  ||(x  <  0  &&  prev  <=  '0')||(x  >  0  &&  prev  >=  '-'))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev  ||(x  <  0  &&  prev  <=  '0')||(x  >  0  &&  prev  >=  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev  ||(x  <  0  &&  prev  <=  '0')||(x  >  0  &&  prev  >=  '-'))  {	  if(x!=    prev)    {    	non-compiled	[CE]  ';'  expected	74	None	replace
2293	[BUG]  [BUGGY]  if(x!=  prev  ||(x  <  0  &&  prev  <=  '0')||(x  >=  0  &&  prev  <=  '9'))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev  ||(x  <  0  &&  prev  <=  '0')||(x  >=  0  &&  prev  <=  '9'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev  ||(x  <  0  &&  prev  <=  '0')||(x  >=  0  &&  prev  <=  '9'))  {	  if(x!=    prev)    {    	non-compiled	[CE]  ';'  expected	74	None	replace
2294	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  '-');  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  '-');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n',  '-');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
2295	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('n');  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('n');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('n');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
2296	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf('n');  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf('n');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf('n');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
2297	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getFirstChar().lastIndexOf('n');  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getFirstChar().lastIndexOf('n');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getFirstChar().lastIndexOf('n');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('n');    	non-compiled	[CE]  ';'  expected	344	None	replace
2298	[BUG]  [BUGGY]  if(x  >  1  ||  x  >=  prev)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  1  ||  x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  1  ||  x  >=  prev)  {	  if(x    >=    (long)x)    {    if(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	142	None	replace
2299	[BUG]  [BUGGY]  if(x  >  value)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  value)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  value)  {	  if(x    >=    (long)x)    {    if(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	142	None	replace
2300	[BUG]  [BUGGY]  if(x  >  1  ||  x  <=  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  1  ||  x  <=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  1  ||  x  <=  0)  {	  if(x    >=    (long)x)    {    if(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	142	None	replace
2301	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev),  x).doubleValue();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev),  x).doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev),  x).doubleValue();	  double    value    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	70	None	replace
2302	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '.'  ||  prev  ==  ':')  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '.'  ||  prev  ==  ':')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '.'  ||  prev  ==  ':')  {	  if(x    <    0    ||    prev    ==    '.')    {    	non-compiled	[CE]  ';'  expected	107	None	replace
2303	[BUG]  [BUGGY]  if(x  ==  Predicate.NUMBER_INT  ||  prev  ==  (double)x)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Predicate.NUMBER_INT  ||  prev  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Predicate.NUMBER_INT  ||  prev  ==  (double)x)  {	  if(prev    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
2304	[BUG]  [BUGGY]  if(x  ==  Predicate.NUMBER_INT  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Predicate.NUMBER_INT  ||  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Predicate.NUMBER_INT  ||  prev  ==  Double.POSITIVE_INFINITY)  {	  if(prev    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
2305	[BUG]  [BUGGY]  if(x  ==  Predicate.NUMBER_INT  ||  prev  ==  Double.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Predicate.NUMBER_INT  ||  prev  ==  Double.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Predicate.NUMBER_INT  ||  prev  ==  Double.NEGATIVE_INFINITY)  {	  if(prev    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
2306	[BUG]  [BUGGY]  if(x  ==  Predicates.Number.NEGATIVE_INFINITY  ||  prev  ==  (double)x)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Predicates.Number.NEGATIVE_INFINITY  ||  prev  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Predicates.Number.NEGATIVE_INFINITY  ||  prev  ==  (double)x)  {	  if(prev    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
2307	[BUG]  [BUGGY]  if(x  ==  Predicate.NUMBER_INT  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Predicate.NUMBER_INT  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Predicate.NUMBER_INT  ||  prev  ==  Long.MAX_VALUE)  {	  if(prev    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
2308	[BUG]  [BUGGY]  if(x  >  0)  {  If(x  >=  (long)x)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  If(x  >=  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  If(x  >=  (long)x)  {	  if(x    >=    (long)x)    {    If(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	148	None	replace
2309	[BUG]  [BUGGY]  if(x  <=  0)  {  If(x  >=  (int)x)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  If(x  >=  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  If(x  >=  (int)x)  {	  if(x    >=    (long)x)    {    If(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	148	None	replace
2310	[BUG]  [BUGGY]  if(x  >  0.5)  {  If(x  >=  0.5)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0.5)  {  If(x  >=  0.5)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0.5)  {  If(x  >=  0.5)  {	  if(x    >=    (long)x)    {    If(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	148	None	replace
2311	[BUG]  [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  [BUG]  prev)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x  >=  prev)  {  if((  int)x  [BUG]  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x    >=    prev)    {    if((  int)x  [BUG]  prev)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
2312	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  x  -  10);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  x  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  x  -  10);	  int    value    =(int)Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	194	None	replace
2313	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(X  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  if(X  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    if(X  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
2314	[BUG]  [BUGGY]  if(x  >  Long.MIN_VALUE  &&  x  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MIN_VALUE  &&  x  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MIN_VALUE  &&  x  <=  Long.MAX_VALUE)  {	  if(x    >=    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	357	None	replace
2315	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {	  if(x    >=    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	357	None	replace
2316	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
2317	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
2318	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
2319	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
2320	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
2321	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getFirstChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
2322	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getFirstChar();  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getFirstChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  x  =  getFirstChar();  }	          x    =    getLastChar();    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	86	None	replace
2323	[BUG]  [BUGGY]  if(x  <=  1  ||  x  >  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  1  ||  x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  1  ||  x  >  prev)  {	  if(x    ==    prev)    {    if(x!=    prev)    {    	non-compiled	[CE]  ';'  expected	50	None	replace
2324	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  x  -  1);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  x  -  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  x  -  1);	  Double    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	251	None	replace
2325	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  Predicate.DEFAULT_NUMBER_INT);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  Predicate.DEFAULT_NUMBER_INT);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  Predicate.DEFAULT_NUMBER_INT);	  Double    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	251	None	replace
2326	[BUG]  [BUGGY]  if(x!=  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	127	None	replace
2327	[BUG]  [BUGGY]  if(x  <=  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	127	None	replace
2328	[BUG]  [BUGGY]  if(x  >  0)  {  If(x  ==  x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  If(x  ==  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  If(x  ==  x)  {	  if(x    ==    (double)x)    {    If(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
2329	[BUG]  [BUGGY]  if(x  >  0)  {  If(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  If(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  If(x  ==  (double)x)  {	  if(x    ==    (double)x)    {    If(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
2330	[BUG]  [BUGGY]  if(x  >=  prev)  {  If(x  ==  x)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  If(x  ==  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  If(x  ==  x)  {	  if(x    ==    (double)x)    {    If(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
2331	[BUG]  [BUGGY]  if(x  ==  (int)x)  {  int  x  =  getLastChar();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  (int)x)  {  int  x  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (int)x)  {  int  x  =  getLastChar();	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	329	None	replace
2332	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar();	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	329	None	replace
2333	[BUG]  [BUGGY]  if(x  >  X_VALUE_NUMBER_INT  ||  x  >  X_VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  X_VALUE_NUMBER_INT  ||  x  >  X_VALUE_NUMBER_FLOAT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  X_VALUE_NUMBER_INT  ||  x  >  X_VALUE_NUMBER_FLOAT)  {	  if(x    >    (double)x)    {    	non-compiled	[CE]  ';'  expected	355	None	replace
2334	[BUG]  [BUGGY]  if(x  >  X_VALUE_NUMBER_INT  ||  x  <  X_VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  X_VALUE_NUMBER_INT  ||  x  <  X_VALUE_NUMBER_FLOAT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  X_VALUE_NUMBER_INT  ||  x  <  X_VALUE_NUMBER_FLOAT)  {	  if(x    >    (double)x)    {    	non-compiled	[CE]  ';'  expected	355	None	replace
2335	[BUG]  [BUGGY]  if(x  >  '0'  &&  x  <=  '9')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  '0'  &&  x  <=  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  '0'  &&  x  <=  '9')  {	  if(x    >    (double)x)    {    	non-compiled	[CE]  ';'  expected	355	None	replace
2336	[BUG]  [BUGGY]  t  value  =  getLastChar();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  t  value  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	t  value  =  getLastChar();	  int    value    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	23	None	replace
2337	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  x);  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('n',  x);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('n',  x);	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('n',    prev);    	non-compiled	[CE]  ';'  expected	284	None	replace
2338	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  /  8;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar().doubleValue()  /  8;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().doubleValue()  /  8;	  int    value    =    getLastChar().doubleValue()    /    10;    	non-compiled	[CE]  ';'  expected	202	None	replace
2339	[BUG]  [BUGGY]  x  =  getLastChar().valueToCharArray();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().valueToCharArray();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().valueToCharArray();	  x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	114	None	replace
2340	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar();  if(x  ==  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar();  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar();  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	134	None	replace
2341	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	138	None	replace
2342	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	138	None	replace
2343	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	138	None	replace
2344	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	138	None	replace
2345	[BUG]  [BUGGY]  if(x  <=  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	138	None	replace
2346	[BUG]  [BUGGY]  if(x  <=  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	138	None	replace
2347	[BUG]  [BUGGY]  Boolean  mantissa  =  Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Boolean  mantissa  =  Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Boolean  mantissa  =  Math.pow(10,  prev);	  char    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	234	None	replace
2348	[BUG]  [BUGGY]  int  value  =  getLastChar()  &  0xFFFFL;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  getLastChar()  &  0xFFFFL;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  &  0xFFFFL;	  int    value    =    getLastChar()    &    0xFFFF;    	non-compiled	[CE]  ';'  expected	353	None	replace
2349	[BUG]  [BUGGY]  if(x  <=  prev)  {  If(x  ==  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  prev)  {  If(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  prev)  {  If(x  ==  prev)  {	  if(x    ==    prev)    {    If(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
2350	[BUG]  [BUGGY]  if(x  <=  127)  {  If(x  ==  prev)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  127)  {  If(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  127)  {  If(x  ==  prev)  {	  if(x    ==    prev)    {    If(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
2351	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
2352	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
2353	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().toCharArray();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getLastChar().toCharArray();    	non-compiled	[CE]  ';'  expected	91	None	replace
2354	[BUG]  [BUGGY]  int  mantissa  =  getMeanOffset(prev);  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getMeanOffset(prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOffset(prev);	  int    mantissa    =    getMeanOp(prev);    	non-compiled	[CE]  ';'  expected	82	None	replace
2355	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  x  ==  Preconditions.NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  x  ==  Preconditions.NUMBER_FLOAT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NUMBER_INT  ||  x  ==  Preconditions.NUMBER_FLOAT)  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
2356	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  '+')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  '+')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NUMBER_INT  ||  prev  ==  '+')  {	  if((    long)x!=    Preconditions.NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	347	None	replace
2357	[BUG]  [BUGGY]  Integer  value  =  getFirstInteger();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getFirstInteger();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstInteger();	  Integer    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	229	None	replace
2358	[BUG]  [BUGGY]  if((  x  ==  prev)||(x  ==  '-')&&(prev!=  '+')&&(x  <=  0))  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x  ==  '-')&&(prev!=  '+')&&(x  <=  0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x  ==  '-')&&(prev!=  '+')&&(x  <=  0))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
2359	[BUG]  [BUGGY]  if((  x  ==  prev)&&(x  <  0)||(x  >  0))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)&&(x  <  0)||(x  >  0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)&&(x  <  0)||(x  >  0))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
2360	[BUG]  [BUGGY]  if((  x  ==  prev)&&(x  <  0)&&(prev!=  '.')&&(x  <=  0))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)&&(x  <  0)&&(prev!=  '.')&&(x  <=  0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)&&(x  <  0)&&(prev!=  '.')&&(x  <=  0))  {	  if((    double)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	352	None	replace
2361	[BUG]  [BUGGY]  while(x  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    while(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	337	None	replace
2362	[BUG]  [BUGGY]  while(x  <  (long)x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  <  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  <  (long)x)  {	  if(x    ==    Long.MIN_VALUE)    {    while(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	337	None	replace
2363	[BUG]  [BUGGY]  if(x  >  0)  {  If(x  ==  0)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  If(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  If(x  ==  0)  {	  if(x    ==    (long)x)    {    If(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	326	None	replace
2364	[BUG]  [BUGGY]  if(x  >  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {	  if(x    >=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	35	None	replace
2365	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	83	None	replace
2366	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar();  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar();  }	          x    =    getLastChar();    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	83	None	replace
2367	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	83	None	replace
2368	[BUG]  [BUGGY]  float  x  =  getLastChar()  +  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  float  x  =  getLastChar()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  x  =  getLastChar()  +  1;	  int    x    =    getLastChar()    +    1;    	non-compiled	[CE]  ';'  expected	263	None	replace
2369	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  x)/  10;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  x)/  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  x)/  10;	  int    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	377	None	replace
2370	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  {  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  if(x  {  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    if(x  {  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ')'  expected	30	None	add
2371	[BUG]  [BUGGY]  if(x  >=  prev)  {  while(x  ==  x)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  while(x  ==  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  while(x  ==  x)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
2372	[BUG]  [BUGGY]  if(x  <=  0)  {  while(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  while(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  while(x  ==  (double)x)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
2373	[BUG]  [BUGGY]  while(x  ==  x)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  while(x  ==  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	while(x  ==  x)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
2374	[BUG]  [BUGGY]  if(x  >=  prev)  {  while(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  while(x  ==  (double)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  while(x  ==  (double)x)  {	  if(x    ==    (double)x)    {    while(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	297	None	replace
2375	[BUG]  [BUGGY]  int  mantissa  =  getSemiColon();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getSemiColon();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getSemiColon();	  int    mantissa    =    getMeanOp(0);    	non-compiled	[CE]  ';'  expected	334	None	replace
2376	[BUG]  [BUGGY]  if(x  >  0  ||  prev  <=  '-')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0  ||  prev  <=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0  ||  prev  <=  '-')  {	  if(x    >    0)    {    	non-compiled	[CE]  ';'  expected	102	None	replace
2377	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getFirstChar();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getFirstChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE)  {  int  x  =  getFirstChar();	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	338	None	replace
2378	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  double  x  =  getLastChar();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  double  x  =  getLastChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE)  {  double  x  =  getLastChar();	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	338	None	replace
2379	[BUG]  [BUGGY]  if((  x  <  prev)||(x  >=  Integer.MAX_VALUE))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  <  prev)||(x  >=  Integer.MAX_VALUE))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  <  prev)||(x  >=  Integer.MAX_VALUE))  {	  if((    long)x    >>    prev)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
2380	[BUG]  [BUGGY]  long  x  =  getLastChar();  Integer  x  =  getLastChar();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar();  Integer  x  =  getLastChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar();  Integer  x  =  getLastChar();	          x    =    getLastChar();    Integer    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	87	None	replace
2381	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  +  1,  x);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  +  1,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  prev  +  1,  x);	  Double    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	157	None	replace
2382	[BUG]  [BUGGY]  BigInteger  value  =(BigInteger)Math.pow(10,  prev);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  BigInteger  value  =(BigInteger)Math.pow(10,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigInteger  value  =(BigInteger)Math.pow(10,  prev);	  char    value    =(int)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	193	None	replace
2383	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)*  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =  Math.pow(10,  prev)*  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)*  1;	  int    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	298	None	replace
2384	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	163	None	replace
2385	[BUG]  [BUGGY]  int  x  =  getLastChar().indexOf('.',  prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().indexOf('.',  prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().indexOf('.',  prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	163	None	replace
2386	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  ==  -1)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	163	None	replace
2387	[BUG]  [BUGGY]  int  mantissa  =  getSecondOp()  +  1;  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  mantissa  =  getSecondOp()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getSecondOp()  +  1;	  int    mantissa    =    getMeanOp()    +    1;    	non-compiled	[CE]  ';'  expected	81	None	replace
2388	[BUG]  [BUGGY]  if(x  >  maxNumber)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  maxNumber)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  maxNumber)  {	  if(x    >    prev)    {    	non-compiled	[CE]  ';'  expected	125	None	replace
2389	[BUG]  [BUGGY]  if(x  >  MAX_NUMBER_INT)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  MAX_NUMBER_INT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  MAX_NUMBER_INT)  {	  if(x    >    prev)    {    	non-compiled	[CE]  ';'  expected	125	None	replace
2390	[BUG]  [BUGGY]  if(x  <=  10  &&  prev  ==  '.')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  prev  ==  '.')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  prev  ==  '.')  {	  if(x    ==    (double)x)    {    if(x    >=    (double)x)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
2391	[BUG]  [BUGGY]  int  x  =  getFirstChar().lastIndexOf(':');  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().lastIndexOf(':');  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().lastIndexOf(':');	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(':');    	non-compiled	[CE]  ';'  expected	324	None	replace
2392	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf(':')+  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf(':')+  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf(':')+  1;	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(':');    	non-compiled	[CE]  ';'  expected	324	None	replace
2393	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf(':',  1);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf(':',  1);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf(':',  1);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(':');    	non-compiled	[CE]  ';'  expected	324	None	replace
2394	[BUG]  [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  >=  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  >=  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  <=  10  &&  x  >=  prev)  {	  if(x    ==    (int)x)    {    if(x!=    (int)x)    {    	non-compiled	[CE]  ';'  expected	255	None	replace
2395	[BUG]  [BUGGY]  double  x  =  getLastChar().getLongValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar().getLongValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().getLongValue();	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
2396	[BUG]  [BUGGY]  x  =  getLastChar().getIntValue();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().getIntValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().getIntValue();	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
2397	[BUG]  [BUGGY]  x  =  getLastChar().getValue();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().getValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().getValue();	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
2398	[BUG]  [BUGGY]  x  =  getLastChar().getXValue();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().getXValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().getXValue();	          x    =    getLastChar();    x    =    getLastChar().getLongValue();    	non-compiled	[CE]  ';'  expected	90	None	replace
2399	[BUG]  [BUGGY]  Integer  mantissa  =  Math.pow(10,  prev).doubleValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  mantissa  =  Math.pow(10,  prev).doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  mantissa  =  Math.pow(10,  prev).doubleValue();	  int    mantissa    =    Math.pow(10,    prev).doubleValue();    	non-compiled	[CE]  ';'  expected	235	None	replace
2400	[BUG]  [BUGGY]  if(x  <=  Integer.MIN_VALUE)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Integer.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Integer.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    if(x    >>    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
2401	[BUG]  [BUGGY]  if(x  <=  Integer.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Integer.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Integer.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    if(x    >>    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
2402	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  x  +  2);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  x  +  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  x  +  2);	  double    value    =    Math.pow(10,    prev    +    2);    	non-compiled	[CE]  ';'  expected	316	None	replace
2403	[BUG]  [BUGGY]  if(x  >  0.0  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0.0  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0.0  ||  prev  ==  '-')  {	  if(x    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	101	None	replace
2404	[BUG]  [BUGGY]  x  =  getLastChar()  +  4;  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar()  +  4;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar()  +  4;	  x    =    getLastChar()    +    prev;    	non-compiled	[CE]  ';'  expected	310	None	replace
2405	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  x  -  10);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  x  -  10);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  x  -  10);	  double    value    =    Math.pow(10,    prev    -    10);    	non-compiled	[CE]  ';'  expected	68	None	replace
2406	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  if(x  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  if(x  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  if(x  <  0)  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
2407	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  for(int  i  =  0;  i  <  prev;  ++i)  {  add( " ");  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  for(int  i  =  0;  i  <  prev;  ++i)  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  for(int  i  =  0;  i  <  prev;  ++i)  {  add( " ");  }	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
2408	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  for(int  i  =  0;  i  <  10;  ++i)  {  add( " ");  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  for(int  i  =  0;  i  <  10;  ++i)  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  (long)x  =  getLastChar();  }  else  {  for(int  i  =  0;  i  <  10;  ++i)  {  add( " ");  }	          x    =    getLastChar();    (long)x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	92	None	replace
2409	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  ':')  {  when(x  ==  0)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  ':')  {  when(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  ':')  {  when(x  ==  0)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
2410	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  when(x  ==  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  when(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '-')  {  when(x  ==  0)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
2411	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '.')  {  when(x  ==  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '.')  {  when(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '.')  {  when(x  ==  0)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
2412	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  'n')  {  when(x  ==  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  'n')  {  when(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  'n')  {  when(x  ==  0)  {	  if(x    ==    (long)x)    {    when(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	379	None	replace
2413	[BUG]  [BUGGY]  x  =  getPositiveBigIntegerValue();  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getPositiveBigIntegerValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getPositiveBigIntegerValue();	  x    =    getPositiveNumericValue();    	non-compiled	[CE]  ';'  expected	311	None	replace
2414	[BUG]  [BUGGY]  x  =  getPositiveIntegerValue();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getPositiveIntegerValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getPositiveIntegerValue();	  x    =    getPositiveNumericValue();    	non-compiled	[CE]  ';'  expected	311	None	replace
2415	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  <=  '-')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  <=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  &&  prev  <=  '-')  {	  if(x    ==    Long.MIN_VALUE    &&    prev    ==    '-')    {    	non-compiled	[CE]  ';'  expected	359	None	replace
2416	[BUG]  [BUGGY]  double  value  =  getValue(),  prev.doubleValue();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getValue(),  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getValue(),  prev.doubleValue();	  double    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	203	None	replace
2417	[BUG]  [BUGGY]  double  value  =  getLastChar()  +  1,  prev.doubleValue();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  +  1,  prev.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  +  1,  prev.doubleValue();	  double    value    =    getLastChar(),    prev.doubleValue();    	non-compiled	[CE]  ';'  expected	203	None	replace
2418	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  x)+  1;  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  x)+  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  x)+  1;	  double    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	67	None	replace
2419	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)*  1;  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev)*  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)*  1;	  double    value    =    Math.pow(10,    prev)+    1;    	non-compiled	[CE]  ';'  expected	67	None	replace
2420	[BUG]  [BUGGY]  if(x  <=  '0'  ||  x  >  prev.doubleValue())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  '0'  ||  x  >  prev.doubleValue())  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0'  ||  x  >  prev.doubleValue())  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
2421	[BUG]  [BUGGY]  if(x!=  '0'  &&  x  <=  '9'  ||  x  >  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  '0'  &&  x  <=  '9'  ||  x  >  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  '0'  &&  x  <=  '9'  ||  x  >  prev)  {	  if(x    <=    '0'    ||    x    >    prev)    {    	non-compiled	[CE]  ';'  expected	305	None	replace
2422	[BUG]  [BUGGY]  if(x  <=  Long.MAX_VALUE  ||  prev  >  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MAX_VALUE  ||  prev  >  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MAX_VALUE  ||  prev  >  Long.MIN_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
2423	[BUG]  [BUGGY]  if(x  <  (long)x  ||  prev  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  (long)x  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (long)x  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <    Long.MIN_VALUE    ||    prev    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
2424	[BUG]  [BUGGY]  Integer  mantissa  =  getLastChar().doubleValue();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  mantissa  =  getLastChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  mantissa  =  getLastChar().doubleValue();	  int    mantissa    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	119	None	replace
2425	[BUG]  [BUGGY]  Integer  value  =  getLastIntLong();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastIntLong();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntLong();	  Integer    value    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	231	None	replace
2426	[BUG]  [BUGGY]  Integer  value  =  getLastIntVolume();  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastIntVolume();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntVolume();	  Integer    value    =    getLastIntChar();    	non-compiled	[CE]  ';'  expected	231	None	replace
2427	[BUG]  [BUGGY]  x  =  getUpperBound();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getUpperBound();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getUpperBound();	  x    =    getLongValue();    	non-compiled	[CE]  ';'  expected	115	None	replace
2428	[BUG]  [BUGGY]  if(x!=  0)  {  If(x!=  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  0)  {  If(x!=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  0)  {  If(x!=  0)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
2429	[BUG]  [BUGGY]  if(x  >=  0)  {  If(x!=  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  0)  {  If(x!=  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  0)  {  If(x!=  0)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
2430	[BUG]  [BUGGY]  if(x  >=  prev)  {  If(x!=  x)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  If(x!=  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  If(x!=  x)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
2431	[BUG]  [BUGGY]  if(x!=  prev)  {  If(x!=  x)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev)  {  If(x!=  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev)  {  If(x!=  x)  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
2432	[BUG]  [BUGGY]  if(x!=  prev)  {  If(x  ==  ';')  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev)  {  If(x  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev)  {  If(x  ==  ';')  {	  if(x!=    (long)x)    {    If(x!=    (long)x)    {    	non-compiled	[CE]  ';'  expected	272	None	replace
2433	[BUG]  [BUGGY]  Double  value  =  getLastChar().doubleValue()  /  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =  getLastChar().doubleValue()  /  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getLastChar().doubleValue()  /  1;	  double    value    =    getLastChar().doubleValue()    +    1;    	non-compiled	[CE]  ';'  expected	204	None	replace
2434	[BUG]  [BUGGY]  x  =  getFirstChar().toUpperCase();  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChar().toUpperCase();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar().toUpperCase();	  x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	109	None	replace
2435	[BUG]  [BUGGY]  if(x  <=  Integer.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Integer.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Integer.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  if(x    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
2436	[BUG]  [BUGGY]  if((  x  ==  prev)||(x!=  x))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x!=  x))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x!=  x))  {	  if((    long)x!=    prev)    {    if((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	212	None	replace
2437	[BUG]  [BUGGY]  if((  x  ==  prev)&&(x!=  x))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)&&(x!=  x))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)&&(x!=  x))  {	  if((    long)x!=    prev)    {    if((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	212	None	replace
2438	[BUG]  [BUGGY]  if((  x  ==  prev)||(x!=  -1))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)||(x!=  -1))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)||(x!=  -1))  {	  if((    long)x!=    prev)    {    if((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	212	None	replace
2439	[BUG]  [BUGGY]  if(x  >=  (double)value)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  (double)value)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (double)value)  {	  if(value    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
2440	[BUG]  [BUGGY]  if(x  ==  (long)value)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  (long)value)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (long)value)  {	  if(value    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
2441	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  /  100.0,  prev);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar().doubleValue()  /  100.0,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  /  100.0,  prev);	  double    value    =    getLastChar().doubleValue()    /    100.0;    	non-compiled	[CE]  ';'  expected	208	None	replace
2442	[BUG]  [BUGGY]  if(x  <=  127)  {  If(x  ==  (int)x)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  127)  {  If(x  ==  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  127)  {  If(x  ==  (int)x)  {	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
2443	[BUG]  [BUGGY]  if(x!=  prev)  {  If(x  ==  (int)x)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  prev)  {  If(x  ==  (int)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev)  {  If(x  ==  (int)x)  {	  if(x    ==    (int)x)    {    If(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	256	None	replace
2444	[BUG]  [BUGGY]  if((  x  >=  prev)&&(x  <=  0))  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >=  prev)&&(x  <=  0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >=  prev)&&(x  <=  0))  {	  if((    int)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
2445	[BUG]  [BUGGY]  if((  x  ==  prev)&&(x  <=  0))  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  ==  prev)&&(x  <=  0))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  ==  prev)&&(x  <=  0))  {	  if((    int)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
2446	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  x);  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  x);  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  x);  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    	non-compiled	[CE]  ';'  expected	166	None	replace
2447	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
2448	[BUG]  [BUGGY]  if(x  <=  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
2449	[BUG]  [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  x)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  x)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
2450	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  x)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  x)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
2451	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
2452	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  <  (long)x)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  <  (long)x)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  <  (long)x)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
2453	[BUG]  [BUGGY]  int  x  =  getLastChar();  if(x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar();  if(x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar();  if(x  >  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    int    x    =    getLastChar();    if(x    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
2454	[BUG]  [BUGGY]  if(x  <=  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	124	None	replace
2455	[BUG]  [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  isEnabled(Feature.QUOTE_NON_NUMERIC_INTS))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  isEnabled(Feature.QUOTE_NON_NUMERIC_INTS))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  isEnabled(Feature.QUOTE_NON_NUMERIC_INTS))  {	  if(x    ==    prev    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ';'  expected	124	None	replace
2456	[BUG]  [BUGGY]  x  =  getFirstChild()  +  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getFirstChild()  +  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChild()  +  1;	  x    =    getFirstChild();    	non-compiled	[CE]  ';'  expected	111	None	replace
2457	[BUG]  [BUGGY]  x  =  getPreviousSemiColon();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getPreviousSemiColon();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getPreviousSemiColon();	  x    =    getFirstChild();    	non-compiled	[CE]  ';'  expected	111	None	replace
2458	[BUG]  [BUGGY]  x  =  getLastChar().charAt(x++);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar().charAt(x++);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(x++);	  x    =    getLastChar().charAt(x);    	non-compiled	[CE]  ';'  expected	312	None	replace
2459	[BUG]  [BUGGY]  long  x  =  getLastChar().charAt(0);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar().charAt(0);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar().charAt(0);	  double    x    =    getLastChar().charAt(0);    	non-compiled	[CE]  ';'  expected	306	None	replace
2460	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
2461	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
2462	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
2463	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
2464	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  add( " ");  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '-')  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  else  {  add( " ");  }	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
2465	[BUG]  [BUGGY]  if(x  >  0)  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  x  =  getLastChar();  x  =  getLastChar().doubleValue();  }	          x    =    getLastChar();    x    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	354	None	replace
2466	[BUG]  [BUGGY]  double  value  =  getLastChar()  *  1;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar()  *  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  *  1;	  double    value    =    getLastChar()    -    1;    	non-compiled	[CE]  ';'  expected	130	None	replace
2467	[BUG]  [BUGGY]  if(x  <=  LAST_VALID_NUMBER)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  LAST_VALID_NUMBER)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  LAST_VALID_NUMBER)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
2468	[BUG]  [BUGGY]  if(x  <=  X_VALUE_NUMBER)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  X_VALUE_NUMBER)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  X_VALUE_NUMBER)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
2469	[BUG]  [BUGGY]  if(x  <=  '0'  &&  prev  <=  '9')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  '0'  &&  prev  <=  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0'  &&  prev  <=  '9')  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
2470	[BUG]  [BUGGY]  if(x  <=  LAST_VALID_DEFAULT)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  LAST_VALID_DEFAULT)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  LAST_VALID_DEFAULT)  {	  if(x    <=    prev)    {    	non-compiled	[CE]  ';'  expected	303	None	replace
2471	[BUG]  [BUGGY]  double  value  =  getFirstChar()  /.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstChar()  /.doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstChar()  /.doubleValue();	  double    value    =    getFirstChar().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
2472	[BUG]  [BUGGY]  double  value  =  prev!=  null?  getLastChar().toCharArray()  :  x;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  prev!=  null?  getLastChar().toCharArray()  :  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  prev!=  null?  getLastChar().toCharArray()  :  x;	  char    value    =    prev!=    null?    getLastChar().toCharArray()    :    x;    	non-compiled	[CE]  ';'  expected	366	None	replace
2473	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  int  x  =  getFirstChar();  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  (long)x)  {  int  x  =  getFirstChar();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (long)x)  {  int  x  =  getFirstChar();	  if(x    >=    (long)x)    {    int    x    =    getLastChar();    	non-compiled	[CE]  ';'  expected	325	None	replace
2474	[BUG]  [BUGGY]  if(x  [Delete]  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  [Delete]  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  [Delete]  Long.MIN_VALUE  &&  prev  ==  Long.MAX_VALUE)  {	  if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
2475	[BUG]  [BUGGY]  if(x!=  Long.MAX_VALUE  ||  prev  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MAX_VALUE  ||  prev  ==  Long.MIN_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MAX_VALUE  ||  prev  ==  Long.MIN_VALUE)  {	  if(x!=    Long.MIN_VALUE    ||    prev    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
2476	[BUG]  [BUGGY]  double  value  =  getPreviousValue();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getPreviousValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getPreviousValue();	  double    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	132	None	replace
2477	[BUG]  [BUGGY]  double  value  =  getFirstChar()  &  0xFFFF;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getFirstChar()  &  0xFFFF;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstChar()  &  0xFFFF;	  double    value    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	132	None	replace
2478	[BUG]  [BUGGY]  if((  long)x  <=  prev)  {  If  ((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  <=  prev)  {  If  ((  long)x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  <=  prev)  {  If  ((  long)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    If    ((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	241	None	replace
2479	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
2480	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
2481	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
2482	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
2483	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  prev)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
2484	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  '-')  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  '-')  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().doubleValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
2485	[BUG]  [BUGGY]  Long  mantissa  =  Math.pow(10,  prev)-  1;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  mantissa  =  Math.pow(10,  prev)-  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  Math.pow(10,  prev)-  1;	  int    mantissa    =    Math.pow(10,    prev)-    1;    	non-compiled	[CE]  ';'  expected	236	None	replace
2486	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
2487	[BUG]  [BUGGY]  if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  '-')  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
2488	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  1);  if(x  <  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  1);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  1);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
2489	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  x);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  x);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  x);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
2490	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  2);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  2);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  2);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.');    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	159	None	replace
2491	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >=  ';')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0  ||  prev  >=  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >=  ';')  {	  if(x    ==    (long)x)    {    if(x    >>    (long)x)    {    	non-compiled	[CE]  ';'  expected	328	None	replace
2492	[BUG]  [BUGGY]  Integer  value  =  getLastValue().intValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Integer  value  =  getLastValue().intValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastValue().intValue();	  Integer    value    =    getLastChar().intValue();    	non-compiled	[CE]  ';'  expected	226	None	replace
2493	[BUG]  [BUGGY]  ||(x!=  prev))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  ||(x!=  prev))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	||(x!=  prev))  {	  if((    long)x!=    prev)    {    If((    long)x!=    prev)    {    	non-compiled	[CE]  illegal  start  of  expression	216	None	replace
2494	[BUG]  [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.DEFAULT_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.DEFAULT_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.DEFAULT_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	369	None	replace
2495	[BUG]  [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.SHORT_VALUE)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.SHORT_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.SHORT_VALUE)  {	  if(x    <=    Preconditions.MIN_VALUE    ||    prev    >    Preconditions.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	369	None	replace
2496	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.'),  prev  -  1;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.'),  prev  -  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.'),  prev  -  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('.')-    1;    	non-compiled	[CE]  ';'  expected	290	None	replace
2497	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  x  +  1);  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  x  +  1);  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  x  +  1);  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    x);    	non-compiled	[CE]  ';'  expected	345	None	replace
2498	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  x  +  1);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  x  +  1);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  x  +  1);	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    x);    	non-compiled	[CE]  ';'  expected	345	None	replace
2499	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getFirstChar().lastIndexOf('.',  x);  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  int  x  =  getFirstChar().lastIndexOf('.',  x);  }  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  int  x  =  getFirstChar().lastIndexOf('.',  x);  }	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.',    x);    	non-compiled	[CE]  ';'  expected	345	None	replace
2500	[BUG]  [BUGGY]  double  mantissa  =  getMeanOp()  -  prev;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getMeanOp()  -  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getMeanOp()  -  prev;	  double    mantissa    =    getMeanOp();    	non-compiled	[CE]  ';'  expected	75	None	replace
2501	[BUG]  [BUGGY]  double  value  =  Math.pow(11,  prev).charValue();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(11,  prev).charValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(11,  prev).charValue();	  double    value    =    Math.pow(10,    prev).charValue();    	non-compiled	[CE]  ';'  expected	365	None	replace
2502	[BUG]  [BUGGY]  int  x  =  getFirstChar().length();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().length();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().length();	  int    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	262	None	replace
2503	[BUG]  [BUGGY]  int  x  =  getFirstChar().doubleValue();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getFirstChar().doubleValue();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar().doubleValue();	  int    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	262	None	replace
2504	[BUG]  [BUGGY]  double  x  =  getLastChar();  Integer  x  =  getFirstChar();  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getLastChar();  Integer  x  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar();  Integer  x  =  getFirstChar();	          x    =    getLastChar();    Integer    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	309	None	replace
2505	[BUG]  [BUGGY]  x  =  getLastChar();  int  x  =  getFirstChar();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  x  =  getLastChar();  int  x  =  getFirstChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar();  int  x  =  getFirstChar();	          x    =    getLastChar();    Integer    x    =    getFirstChar();    	non-compiled	[CE]  ';'  expected	309	None	replace
2506	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	161	None	replace
2507	[BUG]  [BUGGY]  if(x  >=  prev)  {  int  x  =  getLastChar().lastIndexOf(x);  if(x  <  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  prev)  {  int  x  =  getLastChar().lastIndexOf(x);  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {  int  x  =  getLastChar().lastIndexOf(x);  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	161	None	replace
2508	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf(prev);  if(x  >  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf(prev);  if(x  >  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf(prev);  if(x  >  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	161	None	replace
2509	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-');  if(x  <  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-');  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-');  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf(prev);    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	161	None	replace
2510	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  prev  -  2);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =(double)Math.pow(10,  prev  -  2);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  prev  -  2);	  double    value    =(double)Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	189	None	replace
2511	[BUG]  [BUGGY]  if(getLastChar()!=  null)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(getLastChar()!=  null)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(getLastChar()!=  null)  {	  if(x    <    0)    {    int    x    =    getLastChar().length();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	167	None	replace
2512	[BUG]  [BUGGY]  if(x  >  1  ||  prev  <=  '0')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  1  ||  prev  <=  '0')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  1  ||  prev  <=  '0')  {	  if(x    <=    0)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
2513	[BUG]  [BUGGY]  byte  mantissa  =  Math.pow(10,  x);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  byte  mantissa  =  Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	byte  mantissa  =  Math.pow(10,  x);	  long    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	247	None	replace
2514	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  x)/  10;  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  x)/  10;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  x)/  10;	  double    value    =    Math.pow(10,    prev)/    10;    	non-compiled	[CE]  ';'  expected	71	None	replace
2515	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  +  1,  x);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  prev  +  1,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  +  1,  x);	  double    value    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	65	None	replace
2516	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  x  +  1);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  Math.pow(10,  x  +  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  x  +  1);	  double    value    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	65	None	replace
2517	[BUG]  [BUGGY]  if(!(x  <  0  ||  prev  >  '-'))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(!(x  <  0  ||  prev  >  '-'))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(!(x  <  0  ||  prev  >  '-'))  {	  if(x    <    0)    {    int    x    =    getLastChar();    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	160	None	replace
2518	[BUG]  [BUGGY]  if(x  <=  10  &&  prev  >=  ')')  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  prev  >=  ')')  {  [BUGGY]    prev)  {  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  prev  >=  ')')  {	  if(x    ==    prev)    {    if(x    	non-compiled	[CE]  ';'  expected	55	None	replace
2519	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().computeLongValue();  if(x  ==  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().computeLongValue();  if(x  ==  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().computeLongValue();  if(x  ==  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
2520	[BUG]  [BUGGY]  if(x  <  getLastChar().computeLongValue())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  getLastChar().computeLongValue())  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  getLastChar().computeLongValue())  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
2521	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  <  0  ||  x  >  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  <  0  ||  x  >  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue();  if(x  <  0  ||  x  >  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
2522	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().computeLongValue();  if(x  ==  -1)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().computeLongValue();  if(x  ==  -1)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().computeLongValue();  if(x  ==  -1)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
2523	[BUG]  [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  >  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().computeLongValue();  if(x  >  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().computeLongValue();  if(x  >  0)  {	  if(x    ==    (long)x)    {    int    x    =    getLastChar().computeLongValue();    if(x    ==    (long)x)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
2524	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  -  prev;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar().doubleValue()  -  prev;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  -  prev;	  double    value    =    getLastChar()    -    prev;    	non-compiled	[CE]  ';'  expected	301	None	replace
2525	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  x  +  1,  prev);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  x  +  1,  prev);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  x  +  1,  prev);	  int    value    =(int)Math.pow(10,    x    +    1);    	non-compiled	[CE]  ';'  expected	18	None	replace
2526	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  x)+  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('-',  x)+  1;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('-',  x)+  1;	  if(x    ==    prev)    {    int    x    =    getLastChar().lastIndexOf('-')+    1;    	non-compiled	[CE]  ';'  expected	291	None	replace
2527	[BUG]  [BUGGY]  Annotation  <  Integer>  x  =  getFirstChild().doubleValue();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Annotation  <  Integer>  x  =  getFirstChild().doubleValue();  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Annotation  <  Integer>  x  =  getFirstChild().doubleValue();	  if(x    <    0)    {    Integer    x    =    getFirstChild().doubleValue();    	non-compiled	[CE]  ';'  expected	322	None	replace
2528	[BUG]  [BUGGY]  if(x  >  1  ||  prev  >=  '-')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  1  ||  prev  >=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  1  ||  prev  >=  '-')  {	  if(x    <    0)    {    if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	158	None	replace
2529	[BUG]  [BUGGY]  if(x  <=  10  &&  prev  ==  ')')  {  [CE]  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  10  &&  prev  ==  ')')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  prev  ==  ')')  {	  if(x    >=    (long)x)    {    if(x    <    (long)x)    {    	non-compiled	[CE]  	351	None	replace
2530	[BUG]  [BUGGY]  if(x  >  100)  {  [CE]  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  100)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  100)  {	  if(x    >    10)    {    	non-compiled	[CE]  	372	None	replace
2531	[BUG]  [BUGGY]  if(x  >  10  &&  prev  <=  '9')  {  [CE]  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  10  &&  prev  <=  '9')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  10  &&  prev  <=  '9')  {	  if(x    >    10)    {    	non-compiled	[CE]  	372	None	replace
2532	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  else  {  add( " ");  }  [CE]  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  0)  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  else  {  add( " ");  }  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0)  {  x  =  getLastChar();  Double  x  =  getLastChar();  }  else  {  add( " ");  }	          x    =    getLastChar();    Double    x    =    getLastChar();    	non-compiled	[CE]  	308	None	replace
2533	[BUG]  [BUGGY]  if((  double)x  <  prev)  {  [CE]  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  double)x  <  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  double)x  <  prev)  {	  if((    long)x    <    prev)    {    	non-compiled	[CE]  	299	None	replace
2534	[BUG]  [BUGGY]  if(x  <=  Long.MAX_VALUE  &&  prev  ==  ';')  {  [CE]  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MAX_VALUE  &&  prev  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MAX_VALUE  &&  prev  ==  ';')  {	  if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  	358	None	replace
2535	[BUG]  [BUGGY]  if(x  <=  Long.MAX_VALUE  ||  prev  ==  ';')  {  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MAX_VALUE  ||  prev  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MAX_VALUE  ||  prev  ==  ';')  {	  if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  	358	None	replace
2536	[BUG]  [BUGGY]  if(x  <=  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {	  if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  	358	None	replace
2537	[BUG]  [BUGGY]  if(x  <=  Long.MAX_VALUE  &&  prev  >=  ';')  {  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MAX_VALUE  &&  prev  >=  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MAX_VALUE  &&  prev  >=  ';')  {	  if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  	358	None	replace
2538	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  <  (long)  x;  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  <  (long)  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    >    prev)    {    if((  long)x  >  prev)  <  (long)  x;	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
2539	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  <  (long)  x);  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  <  (long)  x);  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    >    prev)    {    if((  long)x  >  prev)  <  (long)  x);	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
2540	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  <  (long)  x  =  (long)  x;  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  <  (long)  x  =  (long)  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    >    prev)    {    if((  long)x  >  prev)  <  (long)  x  =  (long)  x;	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
2541	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  {  this.long  =  (long)  x;  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  {  this.long  =  (long)  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    >    prev)    {    if((  long)x  >  prev)  {  this.long  =  (long)  x;	  	non-compiled	[CE]  <identifier>  expected	5	None	add
2542	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  <=  (long)  x;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x  >  prev)  {  if((  long)x  >  prev)  <=  (long)  x;  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x    >    prev)    {    if((  long)x  >  prev)  <=  (long)  x;	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
2543	[BUG]  [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  [BUG]  prev)  {  [CE]  [FE]    AssertionFailedError    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  int)x!=  prev)  {  if((  int)x  [BUG]  prev)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    int)x!=    prev)    {    if((  int)x  [BUG]  prev)  {	  	non-compiled	[CE]  	1	None	add
2544	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  x));  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  x));  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  Math.pow(10,  x));	  int    value    =(int)Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  	19	None	replace
2545	[BUG]  [BUGGY]  if(x  >=  '0'  &&  prev!=  '-')  {  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  '0'  &&  prev!=  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  '0'  &&  prev!=  '-')  {	  if(x    <    0    ||    prev!=    '-')    {    	non-compiled	[CE]  	105	None	replace
2546	[BUG]  [BUGGY]  if((  x  >  prev)||(x  >=  x))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  x  >  prev)||(x  >=  x))  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  x  >  prev)||(x  >=  x))  {	  if((    int)x    >=    prev)    {    	non-compiled	[CE]  	4	None	replace
2547	[BUG]  [BUGGY]  long  x  =  getLastChar();  Integer  x  =  getLastIntChar();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  long  x  =  getLastChar();  Integer  x  =  getLastIntChar();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar();  Integer  x  =  getLastIntChar();	          x    =    getLastChar();    Integer    x    =    getLastIntChar();    	non-compiled	[CE]  	89	None	replace
2548	[BUG]  [BUGGY]  double  x  =  getFirstBound();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  x  =  getFirstBound();  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getFirstBound();	  double    x    =    getFirstChar();    	non-compiled	[CE]  	169	None	replace
2549	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  	39	None	replace
2550	[BUG]  [BUGGY]  if(x  <=  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE    &&    prev    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  	39	None	replace
2551	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  x  /  1);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  value  =(int)Math.pow(10,  x  /  1);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  x  /  1);	  int    value    =(int)Math.pow(10,    x    -    1);    	non-compiled	[CE]  	363	None	replace
2552	[BUG]  [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    <    0)    {    	non-compiled	[CE]  	162	None	replace
2553	[BUG]  [BUGGY]  if(prev  >=  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  '.')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    <    0)    {    	non-compiled	[CE]  	162	None	replace
2554	[BUG]  [BUGGY]  if(prev  >=  '-')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(prev  >=  '-')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  >=  '-')  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    <    0)    {    	non-compiled	[CE]  	162	None	replace
2555	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev)+  1;  if(x  <  0)  {  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.',  prev)+  1;  if(x  <  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.',  prev)+  1;  if(x  <  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    <    0)    {    	non-compiled	[CE]  	162	None	replace
2556	[BUG]  [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  >  0)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  >  0)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  >  0)  {	  if(x    <    0)    {    int    x    =    getLastChar().lastIndexOf('.')+    1;    if(x    <    0)    {    	non-compiled	[CE]  	162	None	replace
2557	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  /  1;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  mantissa  =  getLastChar()  /  1;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  /  1;	  double    mantissa    =    getLastChar()    +    1;    	non-compiled	[CE]  	175	None	replace
2558	[BUG]  [BUGGY]  if(x  >  '.'  ||  prev  <  ':')  {  [CE]  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  '.'  ||  prev  <  ':')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  '.'  ||  prev  <  ':')  {	  if(x    <    0    ||    prev    >    '.')    {    	non-compiled	[CE]  	373	None	replace
2559	[BUG]  [BUGGY]  if(x  >  '.'  ||  prev  <  '-')  {  [CE]  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >  '.'  ||  prev  <  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  '.'  ||  prev  <  '-')  {	  if(x    <    0    ||    prev    >    '.')    {    	non-compiled	[CE]  	373	None	replace
2560	[BUG]  [BUGGY]  if(x  >=  Double.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  >=  Double.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Double.MIN_VALUE  &&  prev  ==  Double.POSITIVE_INFINITY)  {	  if(x    >=    Long.MIN_VALUE    &&    prev    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  	282	None	replace
2561	[BUG]  [BUGGY]  Double  value  =(Double)Math.pow(10,  x);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Double  value  =(Double)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =(Double)Math.pow(10,  x);	  char    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  	17	None	replace
2562	[BUG]  [BUGGY]  Long  value  =(long)Math.pow(10,  x);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  Long  value  =(long)Math.pow(10,  x);  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =(long)Math.pow(10,  x);	  char    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  	17	None	replace
2563	[BUG]  [BUGGY]  if(x  <=  Preconditions.INCRDECR_VALUE  &&  prev  ==  ';')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.INCRDECR_VALUE  &&  prev  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.INCRDECR_VALUE  &&  prev  ==  ';')  {	  if(x    <=    Preconditions.INCRDECR_VALUE)    {    	non-compiled	[CE]  ';'  expected	371	None	replace
2564	[BUG]  [BUGGY]  if(x  <  Preconditions.INCRDECR_VALUE  ||  x  >  Preconditions.INCRDECR_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <  Preconditions.INCRDECR_VALUE  ||  x  >  Preconditions.INCRDECR_VALUE)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Preconditions.INCRDECR_VALUE  ||  x  >  Preconditions.INCRDECR_VALUE)  {	  if(x    <=    Preconditions.INCRDECR_VALUE)    {    	non-compiled	[CE]  ';'  expected	371	None	replace
2565	[BUG]  [BUGGY]  if(x  <=  Preconditions.INCRDECR_VALUE  &&  prev  >=  ';')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if(x  <=  Preconditions.INCRDECR_VALUE  &&  prev  >=  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.INCRDECR_VALUE  &&  prev  >=  ';')  {	  if(x    <=    Preconditions.INCRDECR_VALUE)    {    	non-compiled	[CE]  ';'  expected	371	None	replace
2566	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  ';')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  ';')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  ';')  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
2567	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  ':')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  ':')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  ':')  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
2568	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  '-')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  '-')  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  prev  ==  '-')  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
2569	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  x  ==  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  x  ==  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]      long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NEGATIVE_INFINITY  ||  x  ==  Preconditions.NEGATIVE_INFINITY)  {	  if((    long)x!=    Preconditions.NEGATIVE_INFINITY)    {    	non-compiled	[CE]  ';'  expected	346	None	replace
2570	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  -  1L;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }      [BUGGY]  double  value  =  getLastChar().doubleValue()  -  1L;  [BUGGY]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  -  1L;	  double    value    =    getLastChar().doubleValue()    -    1;    	non-compiled	[CE]  ';'  expected	206	None	replace
