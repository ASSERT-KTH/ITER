bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  int)x!=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	add	if((  int)x!=  prev)  {	  if((    long)x!=    prev)    {    	compilable	  [FE]  AssertionFailedError  	40	4	replace
2	[BUG]  [BUGGY]  if((  int)x!=  prev)  {  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  int)x!=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  int)x!=  prev)  {	  if((    long)x!=    prev)    {    	compilable	  [FE]  AssertionFailedError  	40	4	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  int)x  >=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	add	if((  int)x  >=  prev)  {	  if((    long)x!=    prev)    {    	compilable	  [FE]  ComparisonFailure  	40	21	replace
4	[BUG]  [BUGGY]  if((  int)x  >=  prev)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  int)x  >=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  int)x  >=  prev)  {	  if((    long)x!=    prev)    {    	compilable	  [FE]  ComparisonFailure  	40	21	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x  >  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	add	if((  long)x  >  prev)  {	  if((    long)x!=    prev)    {    	compilable	  [FE]  ComparisonFailure  	40	21	replace
6	[BUG]  [BUGGY]  if((  long)x  >  prev)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x  >  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >  prev)  {	  if((    long)x!=    prev)    {    	compilable	  [FE]  ComparisonFailure  	40	21	replace
7	[BUG]  [BUGGY]  if((  long)x  >>  prev)  {  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x  >>  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  >>  prev)  {	  if((    long)x!=    prev)    {    	non-compiled	[CE]  incompatible  types	40	None	replace
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x  <=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	add	if((  long)x  <=  prev)  {	  if((    long)x!=    prev)    {    	compilable	  [FE]  ComparisonFailure  	40	7	replace
9	[BUG]  [BUGGY]  if((  long)x  <=  prev)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x  <=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  <=  prev)  {	  if((    long)x!=    prev)    {    	compilable	  [FE]  ComparisonFailure  	40	7	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  double)x!=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	add	if((  double)x!=  prev)  {	  if((    long)x!=    prev)    {    	compilable	  [FE]  AssertionFailedError  	40	4	replace
11	[BUG]  [BUGGY]  if((  double)x!=  prev)  {  [FE]  AssertionFailedError  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  double)x!=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  double)x!=  prev)  {	  if((    long)x!=    prev)    {    	compilable	  [FE]  AssertionFailedError  	40	4	replace
12	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  int)x  ==  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	add	if((  int)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    	compilable	  [FE]  ComparisonFailure  	10	22	replace
13	[BUG]  [BUGGY]  if((  int)x  ==  prev)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  int)x  ==  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  int)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    	compilable	  [FE]  ComparisonFailure  	10	22	replace
14	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  x);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =(double)Math.pow(10,  x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  x);	      int    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
15	[BUG]  [BUGGY]  long  value  =(long)Math.pow(10,  x);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  long  value  =(long)Math.pow(10,  x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(long)Math.pow(10,  x);	      int    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
16	[BUG]  [BUGGY]  char  value  =(char)Math.pow(10,  x);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  value  =(char)Math.pow(10,  x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(char)Math.pow(10,  x);	      int    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
17	[BUG]  [BUGGY]  char  value  =(int)Math.pow(10,  x);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  value  =(int)Math.pow(10,  x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(int)Math.pow(10,  x);	      int    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
18	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  x  +  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =(int)Math.pow(10,  x  +  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  x  +  1);	      int    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
19	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev));  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =(int)Math.pow(10,  Math.pow(10,  prev));  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  Math.pow(10,  prev));	      int    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
20	[BUG]  [BUGGY]  char  value  =(char)Math.pow(10,  prev);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  value  =(char)Math.pow(10,  prev);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(char)Math.pow(10,  prev);	      int    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
21	[BUG]  [BUGGY]  long  value  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  long  value  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar();	      int    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
22	[BUG]  [BUGGY]  int  value  =  getLastChar()  -  1;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  getLastChar()  -  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  -  1;	      int    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
23	[BUG]  [BUGGY]  int  value  =  getLastChar()  +  1;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  getLastChar()  +  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  +  1;	      int    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
24	[BUG]  [BUGGY]  int  value  =  getLastChar().length;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  getLastChar().length;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().length;	      int    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
25	[BUG]  [BUGGY]  int  value  =  getLastChar()  &  0xff;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  getLastChar()  &  0xff;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  &  0xff;	      int    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
26	[BUG]  [BUGGY]  char  prev  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  prev  =  getLastChar();  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  prev  =  getLastChar();	      	non-compiled	[CE]  illegal  start  of  type	17	None	replace
27	[BUG]  [BUGGY]  Integer  x  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Integer  x  =  getLastChar();  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  x  =  getLastChar();	      	non-compiled	[CE]  illegal  start  of  type	17	None	replace
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	add	if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	compilable	  [FE]  ComparisonFailure  	29	22	replace
29	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  ||  prev  >  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	compilable	  [FE]  ComparisonFailure  	29	22	replace
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	add	if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	compilable	  [FE]  ComparisonFailure  	29	22	replace
31	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	compilable	  [FE]  ComparisonFailure  	29	22	replace
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	add	if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	compilable	  [FE]  ComparisonFailure  	29	22	replace
33	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	compilable	  [FE]  ComparisonFailure  	29	22	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	add	if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	compilable	  [FE]  AssertionFailedError  	29	3	replace
35	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	compilable	  [FE]  AssertionFailedError  	29	3	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	add	if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	compilable	  [FE]  AssertionFailedError  	29	3	replace
37	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [FE]  AssertionFailedError  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  ||  prev  ==  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	compilable	  [FE]  AssertionFailedError  	29	3	replace
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	add	if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	compilable	  [FE]  ComparisonFailure  	29	22	replace
39	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  &&  prev  <=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	compilable	  [FE]  ComparisonFailure  	29	22	replace
40	[BUG]  [BUGGY]  if(x  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <=  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
41	[BUG]  [BUGGY]  if(x  >  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
42	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
43	[BUG]  [BUGGY]  if(x  >=  (double)x)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (double)x)  {	  if(x    ==    (double)x)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
44	[BUG]  [BUGGY]  if(x  <  (double)x)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (double)x)  {	  if(x    ==    (double)x)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  if(prev  ==  (double)x)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(prev  ==  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  (double)x)  {	  if(x    ==    (double)x)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  if(x!=  (double)x)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  (double)x)  {	  if(x    ==    (double)x)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  if(value  ==  (double)x)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(value  ==  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(value  ==  (double)x)  {	  if(x    ==    (double)x)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  if(x  ==  prev)  {  if(x  ==  prev)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  if(x  ==  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    if(x  ==  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
49	[BUG]  [BUGGY]  if(x  ==  prev)  {  if(x  >=  prev)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  if(x  >=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    if(x  >=  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
50	[BUG]  [BUGGY]  if(x  ==  prev)  {  if(x!=  prev)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  if(x!=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    if(x!=  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
51	[BUG]  [BUGGY]  if(x  ==  prev)  {  If(x  ==  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  If(x  ==  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    If(x  ==  prev)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
52	[BUG]  [BUGGY]  if(x  ==  prev)  {  if(x  >>  prev)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  if(x  >>  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    if(x  >>  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
53	[BUG]  [BUGGY]  if(x  ==  prev)  {  if(x  {  prev)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  if(x  {  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    if(x  {  prev)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
54	[BUG]  [BUGGY]  if(x  ==  prev)  {  if(x  ==  Prev)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  if(x  ==  Prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    if(x  ==  Prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
55	[BUG]  [BUGGY]  if(x  ==  prev)  {  if(x  [BUGGY]  prev)  {  [CE]  ')'  expected  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  if(x  [BUGGY]  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    if(x  [BUGGY]  prev)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
56	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  if(x  ==  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  if(x  ==  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE)    {    if(x  ==  Long.MIN_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
57	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  if(x  >=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  if(x  >=  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE)    {    if(x  >=  Long.MIN_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
58	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE)    {    int  x  =  getLastChar();  if(x  ==  Long.MIN_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
59	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  if(x!=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  if(x!=  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE)    {    if(x!=  Long.MIN_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
60	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE)    {    int  x  =  getLastChar();  if(x  >=  Long.MIN_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
61	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  If(x  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  If(x  ==  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE)    {    If(x  ==  Long.MIN_VALUE)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
62	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE)    {    int  x  =  getLastChar();  if(x!=  Long.MIN_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
63	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  if(x  >>  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  if(x  >>  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE)    {    if(x  >>  Long.MIN_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
64	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE)    {    int  x  =  getLastChar();  if(x  <  Long.MIN_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
65	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  +  1);  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  Math.pow(10,  prev  +  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  +  1);	      double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	27	None	replace
66	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  -  1);  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]                            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  Math.pow(10,  prev  -  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  -  1);	      double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	27	None	replace
67	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)+  1;  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]                              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  Math.pow(10,  prev)+  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)+  1;	      double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	27	None	replace
68	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  -  10);  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]                                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  Math.pow(10,  prev  -  10);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  -  10);	      double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	27	None	replace
69	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)-  1;  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]                                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  Math.pow(10,  prev)-  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)-  1;	      double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	27	None	replace
70	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  Math.pow(10,  prev).doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev).doubleValue();	      double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  double  cannot  be  dereferenced	27	None	replace
71	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)/  10;  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]                                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  Math.pow(10,  prev)/  10;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev)/  10;	      double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	27	None	replace
72	[BUG]  [BUGGY]  if(x  >=  (int)x)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  (int)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  (int)x)  {	  if(x!=    (long)x)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
73	[BUG]  [BUGGY]  if(x!=  (int)x)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  (int)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  (int)x)  {	  if(x!=    (long)x)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
74	[BUG]  [BUGGY]  if(x!=  prev)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  prev)  {	  if(x!=    (long)x)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
75	[BUG]  [BUGGY]  double  mantissa  =  getMeanOp();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  mantissa  =  getMeanOp();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getMeanOp();	      int    mantissa    =    getMeanOp();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
76	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp(x);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  getMeanOp(x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp(x);	      int    mantissa    =    getMeanOp();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
77	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp()  -  1;  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  getMeanOp()  -  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp()  -  1;	      int    mantissa    =    getMeanOp();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
78	[BUG]  [BUGGY]  char  mantissa  =  getMeanOp();  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  mantissa  =  getMeanOp();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  getMeanOp();	      int    mantissa    =    getMeanOp();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
79	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp().doubleValue();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  getMeanOp().doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp().doubleValue();	      int    mantissa    =    getMeanOp();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
80	[BUG]  [BUGGY]  long  mantissa  =  getMeanOp();  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  long  mantissa  =  getMeanOp();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getMeanOp();	      int    mantissa    =    getMeanOp();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
81	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp()  +  1;  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  getMeanOp()  +  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp()  +  1;	      int    mantissa    =    getMeanOp();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
82	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp(prev);  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  getMeanOp(prev);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp(prev);	      int    mantissa    =    getMeanOp();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
83	[BUG]  [BUGGY]      x  =  getLastChar();  x  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]      x  =  getLastChar();  x  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	        x    =    getLastChar();    x  =  getLastChar();	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
84	[BUG]  [BUGGY]      x  =  getLastChar();  int  x  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]      x  =  getLastChar();  int  x  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	        x    =    getLastChar();    int  x  =  getLastChar();	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
85	[BUG]  [BUGGY]      x  =  getLastChar();  double  x  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]      x  =  getLastChar();  double  x  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	        x    =    getLastChar();    double  x  =  getLastChar();	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
86	[BUG]  [BUGGY]      x  =  getLastChar();  x  =  getFirstChar();  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]      x  =  getLastChar();  x  =  getFirstChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	        x    =    getLastChar();    x  =  getFirstChar();	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
87	[BUG]  [BUGGY]      x  =  getLastChar();  Integer  x  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]      x  =  getLastChar();  Integer  x  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	        x    =    getLastChar();    Integer  x  =  getLastChar();	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
88	[BUG]  [BUGGY]      x  =  getLastChar();  long  x  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]      x  =  getLastChar();  long  x  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	        x    =    getLastChar();    long  x  =  getLastChar();	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
89	[BUG]  [BUGGY]      x  =  getLastChar();  Integer  x  =  getLastIntChar();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]      x  =  getLastChar();  Integer  x  =  getLastIntChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	        x    =    getLastChar();    Integer  x  =  getLastIntChar();	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
90	[BUG]  [BUGGY]      x  =  getLastChar();  x  =  getLastChar().getLongValue();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]      x  =  getLastChar();  x  =  getLastChar().getLongValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	        x    =    getLastChar();    x  =  getLastChar().getLongValue();	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
91	[BUG]  [BUGGY]      x  =  getLastChar();  x  =  getLastChar().toCharArray();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]      x  =  getLastChar();  x  =  getLastChar().toCharArray();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	        x    =    getLastChar();    x  =  getLastChar().toCharArray();	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
92	[BUG]  [BUGGY]      x  =  getLastChar();  (long)x  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]      x  =  getLastChar();  (long)x  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	        x    =    getLastChar();    (long)x  =  getLastChar();	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
93	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  if(x  ==  (double)x)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (double)x)  {  if(x  ==  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (double)x)    {    if(x  ==  (double)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
94	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  if(x  >=  (double)x)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (double)x)  {  if(x  >=  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (double)x)    {    if(x  >=  (double)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
95	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  if(x!=  (double)x)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (double)x)  {  if(x!=  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (double)x)    {    if(x!=  (double)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
96	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  If(x  ==  (double)x)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (double)x)  {  If(x  ==  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (double)x)    {    If(x  ==  (double)x)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
97	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  if(x  >>  (double)x)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (double)x)  {  if(x  >>  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (double)x)    {    if(x  >>  (double)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
98	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  if(x  {  (double)x)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (double)x)  {  if(x  {  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (double)x)    {    if(x  {  (double)x)  {	  	non-compiled	[CE]  ')'  expected	13	None	add
99	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  if(x  ==  (long)x)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (double)x)  {  if(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (double)x)    {    if(x  ==  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
100	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  if(x  [Delete]  (double)x)  {  [CE]  ')'  expected  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (double)x)  {  if(x  [Delete]  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (double)x)    {    if(x  [Delete]  (double)x)  {	  	non-compiled	[CE]  ')'  expected	13	None	add
101	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0  ||  prev  ==  '-')  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '-')  {	  if(x    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
102	[BUG]  [BUGGY]  if(x  >  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >  0)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  0)  {	  if(x    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
103	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0  ||  prev  >=  '-')  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >=  '-')  {	  if(x    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
104	[BUG]  [BUGGY]  if(x  <=  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <=  0)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  0)  {	  if(x    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
105	[BUG]  [BUGGY]  if(x  <  0  ||  prev!=  '-')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0  ||  prev!=  '-')  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev!=  '-')  {	  if(x    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
106	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0  ||  prev  >  '-')  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >  '-')  {	  if(x    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
107	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0  ||  prev  ==  '.')  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  ==  '.')  {	  if(x    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
108	[BUG]  [BUGGY]  if(x  >=  prev)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  prev)  {	  if(x    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
109	[BUG]  [BUGGY]  x  =  getFirstChar();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  x  =  getFirstChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChar();	      x    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
110	[BUG]  [BUGGY]  x  =  getLastChar()  +  1;  [CE]  incomparable  types:  char  and  <null>  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  x  =  getLastChar()  +  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar()  +  1;	      x    =    getLastChar();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	38	None	replace
111	[BUG]  [BUGGY]  x  =  getFirstChild();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  x  =  getFirstChild();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getFirstChild();	      x    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
112	[BUG]  [BUGGY]  x  =  getLastChar().doubleValue();  [CE]  char  cannot  be  dereferenced  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  x  =  getLastChar().doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().doubleValue();	      x    =    getLastChar();    	non-compiled	[CE]  char  cannot  be  dereferenced	38	None	replace
113	[BUG]  [BUGGY]  x  =  getLastChar().toLowerCase();  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  x  =  getLastChar().toLowerCase();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().toLowerCase();	      x    =    getLastChar();    	non-compiled	[CE]  char  cannot  be  dereferenced	38	None	replace
114	[BUG]  [BUGGY]  x  =  getLastChar().toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  x  =  getLastChar().toCharArray();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().toCharArray();	      x    =    getLastChar();    	non-compiled	[CE]  char  cannot  be  dereferenced	38	None	replace
115	[BUG]  [BUGGY]  x  =  getLongValue();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  x  =  getLongValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLongValue();	      x    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
116	[BUG]  [BUGGY]  long  mantissa  =  getLastChar();  [CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  long  mantissa  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  getLastChar();	      int    mantissa    =    getLastChar();    	non-compiled	[CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)	21	None	replace
117	[BUG]  [BUGGY]  char  mantissa  =  getLastChar();  [CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  mantissa  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  getLastChar();	      int    mantissa    =    getLastChar();    	non-compiled	[CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)	21	None	replace
118	[BUG]  [BUGGY]  int  mantissa  =  getLastChar()  -  1;  [CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  getLastChar()  -  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar()  -  1;	      int    mantissa    =    getLastChar();    	non-compiled	[CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)	21	None	replace
119	[BUG]  [BUGGY]  int  mantissa  =  getLastChar().doubleValue();  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  getLastChar().doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar().doubleValue();	      int    mantissa    =    getLastChar();    	non-compiled	[CE]  char  cannot  be  dereferenced	21	None	replace
120	[BUG]  [BUGGY]  int  mantissa  =  getLastChar()  +  1;  [CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  getLastChar()  +  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar()  +  1;	      int    mantissa    =    getLastChar();    	non-compiled	[CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)	21	None	replace
121	[BUG]  [BUGGY]  int  mantissa  =  getFirstChar();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  getFirstChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getFirstChar();	      int    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
122	[BUG]  [BUGGY]  int  mantissa  =  getLastChar().intValue();  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  getLastChar().intValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getLastChar().intValue();	      int    mantissa    =    getLastChar();    	non-compiled	[CE]  char  cannot  be  dereferenced	21	None	replace
123	[BUG]  [BUGGY]  if(x  <  prev)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  prev)  {	  if(x    ==    prev)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
124	[BUG]  [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
125	[BUG]  [BUGGY]  if(x  >  prev)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  prev)  {	  if(x    ==    prev)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
126	[BUG]  [BUGGY]  if(prev  ==  x)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(prev  ==  x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  x)  {	  if(x    ==    prev)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
127	[BUG]  [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev  ||  isEnabled(Feature.QUOTE_NUMERIC_NON_NUMERIC_NUMBERS))  {	  if(x    ==    prev)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
128	[BUG]  [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  prev  ||  isEnabled(Feature.AUTO_NON_NUMERIC_VALUE))  {	  if(x    ==    prev)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
129	[BUG]  [BUGGY]  double  value  =  getLastChar()  +  1;  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  getLastChar()  +  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  +  1;	      double    value    =    getLastChar();    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	18	None	replace
130	[BUG]  [BUGGY]  double  value  =  getLastChar()  -  1;  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  getLastChar()  -  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  -  1;	      double    value    =    getLastChar();    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	18	None	replace
131	[BUG]  [BUGGY]  double  value  =  getLastChar()  /  2;  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  getLastChar()  /  2;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  /  2;	      double    value    =    getLastChar();    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	18	None	replace
132	[BUG]  [BUGGY]  double  value  =  getFirstChar();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  getFirstChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstChar();	      double    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
133	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  if(x  ==  (long)x)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  if(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    if(x  ==  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
134	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar();  if(x  ==  (long)x)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar();  if(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    int  x  =  getLastChar();  if(x  ==  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
135	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar().computeLongValue();  if(x  ==  (long)x)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar().computeLongValue();  if(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    int  x  =  getLastChar().computeLongValue();  if(x  ==  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
136	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  if(x  >=  (long)x)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  if(x  >=  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    if(x  >=  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
137	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  (long)x)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    int  x  =  getLastChar().computeLongValue(prev);  if(x  ==  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
138	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  (long)x)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    int  x  =  getLastChar().lastIndexOf('.');  if(x  ==  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
139	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  (long)x)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar().doubleValue();  if(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    int  x  =  getLastChar().doubleValue();  if(x  ==  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
140	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  (long)x)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  ==  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
141	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  if(x!=  (long)x)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  if(x!=  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    if(x!=  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
142	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  if(x  >=  (long)x)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  (long)x)  {  if(x  >=  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    (long)x)    {    if(x  >=  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
143	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  if(x  >>  (long)x)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  (long)x)  {  if(x  >>  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    (long)x)    {    if(x  >>  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
144	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  if(x!=  (long)x)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  (long)x)  {  if(x!=  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    (long)x)    {    if(x!=  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
145	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  if(x  ==  (long)x)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  (long)x)  {  if(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    (long)x)    {    if(x  ==  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
146	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  if(x  [Delete]  (long)x)  {  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  (long)x)  {  if(x  [Delete]  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    (long)x)    {    if(x  [Delete]  (long)x)  {	  	non-compiled	[CE]  ')'  expected	7	None	add
147	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  if(x  [BUGGY]  (long)x)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  (long)x)  {  if(x  [BUGGY]  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    (long)x)    {    if(x  [BUGGY]  (long)x)  {	  	non-compiled	[CE]  ')'  expected	7	None	add
148	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  If(x  >=  (long)x)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  (long)x)  {  If(x  >=  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    (long)x)    {    If(x  >=  (long)x)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
149	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  if(x  [PATCH]  (long)x)  {  [CE]  ')'  expected  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  (long)x)  {  if(x  [PATCH]  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    (long)x)    {    if(x  [PATCH]  (long)x)  {	  	non-compiled	[CE]  ')'  expected	7	None	add
150	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  1);  [CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  mantissa  =  Math.pow(10,  prev  +  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev  +  1);	      int    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)	42	None	replace
151	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  prev  +  1);  [CE]  possible  loss  of  precision  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  long  mantissa  =  Math.pow(10,  prev  +  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  prev  +  1);	      int    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
152	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  prev  +  1);  [CE]  possible  loss  of  precision  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  mantissa  =  Math.pow(10,  prev  +  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  prev  +  1);	      int    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
153	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  /  1);  [CE]  possible  loss  of  precision  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  Math.pow(10,  prev  /  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  /  1);	      int    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
154	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  +  2);  [CE]  possible  loss  of  precision  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  Math.pow(10,  prev  +  2);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  +  2);	      int    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
155	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  -  1);  [CE]  possible  loss  of  precision  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  Math.pow(10,  prev  -  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  -  1);	      int    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
156	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [CE]  possible  loss  of  precision  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  Math.pow(10,  prev  /  10  +  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  /  10  +  1);	      int    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
157	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  +  1);  [CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Double  mantissa  =  Math.pow(10,  prev  +  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  prev  +  1);	      int    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)	42	None	replace
158	[BUG]  [BUGGY]  if(x  <  0)  {  if(x  <  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  if(x  <  0)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    if(x  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
159	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf('.');  if(x  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
160	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar();  if(x  <  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar();  if(x  <  0)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar();  if(x  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
161	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf(prev);  if(x  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
162	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf('.')+  1;  if(x  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
163	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf('.',  prev);  if(x  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
164	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf('n',  prev);  if(x  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
165	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf('-',  prev);  if(x  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
166	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.');  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf('.');	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
167	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().length();  if(x  <  0)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().length();  if(x  <  0)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().length();  if(x  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
168	[BUG]  [BUGGY]  double  x  =  getLastChar()  +  1;  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  x  =  getLastChar()  +  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  +  1;	      double    x    =    getLastChar();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	19	None	replace
169	[BUG]  [BUGGY]  double  x  =  getFirstChar();  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  x  =  getFirstChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getFirstChar();	      double    x    =    getLastChar();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	19	None	replace
170	[BUG]  [BUGGY]  double  x  =  getLastChar().doubleValue();  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  x  =  getLastChar().doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().doubleValue();	      double    x    =    getLastChar();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	19	None	replace
171	[BUG]  [BUGGY]  double  x  =  getLastChar().toCharArray();  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  x  =  getLastChar().toCharArray();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().toCharArray();	      double    x    =    getLastChar();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	19	None	replace
172	[BUG]  [BUGGY]  double  x  =  getLastChar()  *  2;  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  x  =  getLastChar()  *  2;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  *  2;	      double    x    =    getLastChar();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	19	None	replace
173	[BUG]  [BUGGY]  double  x  =  getLastChar()  -  1;  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  x  =  getLastChar()  -  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  -  1;	      double    x    =    getLastChar();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	19	None	replace
174	[BUG]  [BUGGY]  long  x  =  getLastChar();  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  long  x  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  x  =  getLastChar();	      double    x    =    getLastChar();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	19	None	replace
175	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  +  1;  [CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  mantissa  =  getLastChar()  +  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  +  1;	      double    mantissa    =    getLastChar();    	non-compiled	[CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)	20	None	replace
176	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  -  1;  [CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  mantissa  =  getLastChar()  -  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  -  1;	      double    mantissa    =    getLastChar();    	non-compiled	[CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)	20	None	replace
177	[BUG]  [BUGGY]  double  mantissa  =  getFirstChar();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  mantissa  =  getFirstChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getFirstChar();	      double    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
178	[BUG]  [BUGGY]  double  mantissa  =  getLastChar().doubleValue();  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  mantissa  =  getLastChar().doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar().doubleValue();	      double    mantissa    =    getLastChar();    	non-compiled	[CE]  char  cannot  be  dereferenced	20	None	replace
179	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  /  2;  [CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  mantissa  =  getLastChar()  /  2;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  /  2;	      double    mantissa    =    getLastChar();    	non-compiled	[CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)	20	None	replace
180	[BUG]  [BUGGY]  if(prev  ==  (int)x)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(prev  ==  (int)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(prev  ==  (int)x)  {	  if(x    ==    (int)x)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
181	[BUG]  [BUGGY]  long  value  =  Math.pow(10,  prev);  [CE]  possible  loss  of  precision  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  long  value  =  Math.pow(10,  prev);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  Math.pow(10,  prev);	      int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  possible  loss  of  precision	32	None	replace
182	[BUG]  [BUGGY]  char  value  =  Math.pow(10,  prev);  [CE]  possible  loss  of  precision  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  value  =  Math.pow(10,  prev);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  Math.pow(10,  prev);	      int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  possible  loss  of  precision	32	None	replace
183	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  -  1);  [CE]  possible  loss  of  precision  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  Math.pow(10,  prev  -  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev  -  1);	      int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  possible  loss  of  precision	32	None	replace
184	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  +  1);  [CE]  possible  loss  of  precision  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  Math.pow(10,  prev  +  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev  +  1);	      int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  possible  loss  of  precision	32	None	replace
185	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  Math.pow(10,  prev).doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev).doubleValue();	      int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  double  cannot  be  dereferenced	32	None	replace
186	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)-  1;  [CE]  possible  loss  of  precision  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  Math.pow(10,  prev)-  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)-  1;	      int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  possible  loss  of  precision	32	None	replace
187	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  -  10);  [CE]  possible  loss  of  precision  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  Math.pow(10,  prev  -  10);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev  -  10);	      int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  possible  loss  of  precision	32	None	replace
188	[BUG]  [BUGGY]  if(x  <  (long)x)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  (long)x)  {	  if(x    ==    (long)x)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
189	[BUG]  [BUGGY]  double  value  =(double)Math.pow(10,  prev);  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =(double)Math.pow(10,  prev);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =(double)Math.pow(10,  prev);	      int    value    =(int)Math.pow(10,    prev);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	33	None	replace
190	[BUG]  [BUGGY]  long  value  =(long)Math.pow(10,  prev);  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  long  value  =(long)Math.pow(10,  prev);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =(long)Math.pow(10,  prev);	      int    value    =(int)Math.pow(10,    prev);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	33	None	replace
191	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  prev  +  1);  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =(int)Math.pow(10,  prev  +  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  prev  +  1);	      int    value    =(int)Math.pow(10,    prev);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	33	None	replace
192	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  prev  -  1);  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =(int)Math.pow(10,  prev  -  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  prev  -  1);	      int    value    =(int)Math.pow(10,    prev);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	33	None	replace
193	[BUG]  [BUGGY]  char  value  =(int)Math.pow(10,  prev);  [CE]  possible  loss  of  precision  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  value  =(int)Math.pow(10,  prev);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =(int)Math.pow(10,  prev);	      int    value    =(int)Math.pow(10,    prev);    	non-compiled	[CE]  possible  loss  of  precision	33	None	replace
194	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  prev  -  10);  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =(int)Math.pow(10,  prev  -  10);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  prev  -  10);	      int    value    =(int)Math.pow(10,    prev);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	33	None	replace
195	[BUG]  [BUGGY]  if(x  >  (long)x)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  (long)x)  {	  if(x    >=    (long)x)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
196	[BUG]  [BUGGY]  long  value  =  getLastChar().doubleValue();  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  long  value  =  getLastChar().doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  value  =  getLastChar().doubleValue();	      int    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	35	None	replace
197	[BUG]  [BUGGY]  char  value  =  getLastChar().doubleValue();  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  value  =  getLastChar().doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  getLastChar().doubleValue();	      int    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	35	None	replace
198	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  +  1;  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  getLastChar().doubleValue()  +  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().doubleValue()  +  1;	      int    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	35	None	replace
199	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  -  1;  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  getLastChar().doubleValue()  -  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().doubleValue()  -  1;	      int    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	35	None	replace
200	[BUG]  [BUGGY]  int  value  =  getLastChar(),  prev.doubleValue();  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  getLastChar(),  prev.doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar(),  prev.doubleValue();	      int    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	35	None	replace
201	[BUG]  [BUGGY]  int  value  =  getFirstChar().doubleValue();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  getFirstChar().doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstChar().doubleValue();	      int    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
202	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  /  10;  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  getLastChar().doubleValue()  /  10;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar().doubleValue()  /  10;	      int    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	35	None	replace
203	[BUG]  [BUGGY]  double  value  =  getLastChar(),  prev.doubleValue();  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  getLastChar(),  prev.doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar(),  prev.doubleValue();	      double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  ';'  expected	34	None	replace
204	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  +  1;  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  getLastChar().doubleValue()  +  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  +  1;	      double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	34	None	replace
205	[BUG]  [BUGGY]  double  value  =  getFirstChar().doubleValue();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  getFirstChar().doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getFirstChar().doubleValue();	      double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
206	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  -  1;  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  getLastChar().doubleValue()  -  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  -  1;	      double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	34	None	replace
207	[BUG]  [BUGGY]  Double  value  =  getLastChar().doubleValue();  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Double  value  =  getLastChar().doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getLastChar().doubleValue();	      double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	34	None	replace
208	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  /  100.0;  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  getLastChar().doubleValue()  /  100.0;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar().doubleValue()  /  100.0;	      double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	34	None	replace
209	[BUG]  [BUGGY]  if((  long)x!=  prev)  {  if((  long)x!=  prev)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x!=  prev)  {  if((  long)x!=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x!=    prev)    {    if((  long)x!=  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
210	[BUG]  [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  >=  prev)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  >=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x!=    prev)    {    if((  long)x  >=  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
211	[BUG]  [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  >>  prev)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  >>  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x!=    prev)    {    if((  long)x  >>  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
212	[BUG]  [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  ==  prev)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  ==  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x!=    prev)    {    if((  long)x  ==  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
213	[BUG]  [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  [Delete]  prev)  {  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  [Delete]  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x!=    prev)    {    if((  long)x  [Delete]  prev)  {	  	non-compiled	[CE]  ')'  expected	39	None	add
214	[BUG]  [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  [BUGGY]  prev)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  [BUGGY]  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x!=    prev)    {    if((  long)x  [BUGGY]  prev)  {	  	non-compiled	[CE]  ')'  expected	39	None	add
215	[BUG]  [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  [PATCH]  prev)  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  [PATCH]  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x!=    prev)    {    if((  long)x  [PATCH]  prev)  {	  	non-compiled	[CE]  ')'  expected	39	None	add
216	[BUG]  [BUGGY]  if((  long)x!=  prev)  {  If((  long)x!=  prev)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x!=  prev)  {  If((  long)x!=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x!=    prev)    {    If((  long)x!=  prev)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
217	[BUG]  [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x  >=  prev)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x  >=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    >=    prev)    {    if  ((  long)x  >=  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
218	[BUG]  [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x  >>  prev)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x  >>  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    >=    prev)    {    if  ((  long)x  >>  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
219	[BUG]  [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x!=  prev)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x!=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    >=    prev)    {    if  ((  long)x!=  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
220	[BUG]  [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x  ==  prev)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x  ==  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    >=    prev)    {    if  ((  long)x  ==  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
221	[BUG]  [BUGGY]  if  ((  long)x  >=  prev)  {  If  ((  long)x  >=  prev)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  >=  prev)  {  If  ((  long)x  >=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    >=    prev)    {    If  ((  long)x  >=  prev)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
222	[BUG]  [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x  [Delete]  prev)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x  [Delete]  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    >=    prev)    {    if  ((  long)x  [Delete]  prev)  {	  	non-compiled	[CE]  ')'  expected	15	None	add
223	[BUG]  [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x  [BUGGY]  prev)  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x  [BUGGY]  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    >=    prev)    {    if  ((  long)x  [BUGGY]  prev)  {	  	non-compiled	[CE]  ')'  expected	15	None	add
224	[BUG]  [BUGGY]  Integer  value  =  getLastChar().doubleValue();  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Integer  value  =  getLastChar().doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().doubleValue();	      Integer    value    =    getLastChar();    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
225	[BUG]  [BUGGY]  Integer  value  =  getLastChar()  -  1;  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Integer  value  =  getLastChar()  -  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar()  -  1;	      Integer    value    =    getLastChar();    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	25	None	replace
226	[BUG]  [BUGGY]  Integer  value  =  getLastChar().intValue();  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Integer  value  =  getLastChar().intValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().intValue();	      Integer    value    =    getLastChar();    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
227	[BUG]  [BUGGY]  Integer  value  =  getLastChar()  +  1;  [CE]  variable  value  is  already  defined  in  method  addNumber(double)  [FE]                            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Integer  value  =  getLastChar()  +  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar()  +  1;	      Integer    value    =    getLastChar();    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addNumber(double)	25	None	replace
228	[BUG]  [BUGGY]  Integer  value  =  getLastChar().toString();  [CE]  char  cannot  be  dereferenced  [FE]                              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Integer  value  =  getLastChar().toString();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastChar().toString();	      Integer    value    =    getLastChar();    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
229	[BUG]  [BUGGY]  Integer  value  =  getFirstChar();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Integer  value  =  getFirstChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChar();	      Integer    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
230	[BUG]  [BUGGY]  Integer  value  =  getLastInt();  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Integer  value  =  getLastInt();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastInt();	      Integer    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
231	[BUG]  [BUGGY]  Integer  value  =  getLastIntChar();  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Integer  value  =  getLastIntChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getLastIntChar();	      Integer    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
232	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  prev);  [CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  mantissa  =  Math.pow(10,  prev);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  prev);	      int    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)	24	None	replace
233	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  prev);  [CE]  possible  loss  of  precision  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  long  mantissa  =  Math.pow(10,  prev);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  prev);	      int    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  possible  loss  of  precision	24	None	replace
234	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  prev);  [CE]  possible  loss  of  precision  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  mantissa  =  Math.pow(10,  prev);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  prev);	      int    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  possible  loss  of  precision	24	None	replace
235	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  Math.pow(10,  prev).doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev).doubleValue();	      int    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	replace
236	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)-  1;  [CE]  possible  loss  of  precision  [FE]                            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  Math.pow(10,  prev)-  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)-  1;	      int    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  possible  loss  of  precision	24	None	replace
237	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  -  10);  [CE]  possible  loss  of  precision  [FE]                              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  Math.pow(10,  prev  -  10);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  -  10);	      int    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  possible  loss  of  precision	24	None	replace
238	[BUG]  [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  long)x  ==  prev)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  long)x  ==  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    ==    prev)    {    if  ((  long)x  ==  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
239	[BUG]  [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  long)x  >=  prev)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  long)x  >=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    ==    prev)    {    if  ((  long)x  >=  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
240	[BUG]  [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  long)x!=  prev)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  long)x!=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    ==    prev)    {    if  ((  long)x!=  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
241	[BUG]  [BUGGY]  if  ((  long)x  ==  prev)  {  If  ((  long)x  ==  prev)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  ==  prev)  {  If  ((  long)x  ==  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    ==    prev)    {    If  ((  long)x  ==  prev)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
242	[BUG]  [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  long)x  {  prev)  {  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  long)x  {  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    ==    prev)    {    if  ((  long)x  {  prev)  {	  	non-compiled	[CE]  ')'  expected	9	None	add
243	[BUG]  [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  long)x  >>  prev)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  long)x  >>  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    ==    prev)    {    if  ((  long)x  >>  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
244	[BUG]  [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  long)x  ==  Prev)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  long)x  ==  Prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    ==    prev)    {    if  ((  long)x  ==  Prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
245	[BUG]  [BUGGY]  if  ((  long)x  ==  prev)  {  ((  long)x  ==  prev)  {  [CE]  not  a  statement  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  ==  prev)  {  ((  long)x  ==  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    ==    prev)    {    ((  long)x  ==  prev)  {	  	non-compiled	[CE]  not  a  statement	9	None	add
246	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  x);  [CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  mantissa  =  Math.pow(10,  x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  Math.pow(10,  x);	      int    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)	43	None	replace
247	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  x);  [CE]  possible  loss  of  precision  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  long  mantissa  =  Math.pow(10,  x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	long  mantissa  =  Math.pow(10,  x);	      int    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
248	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  x);  [CE]  possible  loss  of  precision  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  mantissa  =  Math.pow(10,  x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  mantissa  =  Math.pow(10,  x);	      int    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
249	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  x  +  1);  [CE]  possible  loss  of  precision  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  Math.pow(10,  x  +  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  x  +  1);	      int    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
250	[BUG]  [BUGGY]  float  mantissa  =  Math.pow(10,  x);  [CE]  possible  loss  of  precision  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  float  mantissa  =  Math.pow(10,  x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  mantissa  =  Math.pow(10,  x);	      int    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
251	[BUG]  [BUGGY]  Double  mantissa  =  Math.pow(10,  x);  [CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Double  mantissa  =  Math.pow(10,  x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  mantissa  =  Math.pow(10,  x);	      int    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  variable  mantissa  is  already  defined  in  method  addNumber(double)	43	None	replace
252	[BUG]  [BUGGY]  Long  mantissa  =  Math.pow(10,  x);  [CE]  incompatible  types  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Long  mantissa  =  Math.pow(10,  x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  Math.pow(10,  x);	      int    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  incompatible  types	43	None	replace
253	[BUG]  [BUGGY]  if(x  ==  (int)x)  {  if(x  ==  (int)x)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (int)x)  {  if(x  ==  (int)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (int)x)    {    if(x  ==  (int)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
254	[BUG]  [BUGGY]  if(x  ==  (int)x)  {  if(x  >=  (int)x)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (int)x)  {  if(x  >=  (int)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (int)x)    {    if(x  >=  (int)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
255	[BUG]  [BUGGY]  if(x  ==  (int)x)  {  if(x!=  (int)x)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (int)x)  {  if(x!=  (int)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (int)x)    {    if(x!=  (int)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
256	[BUG]  [BUGGY]  if(x  ==  (int)x)  {  If(x  ==  (int)x)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (int)x)  {  If(x  ==  (int)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (int)x)    {    If(x  ==  (int)x)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
257	[BUG]  [BUGGY]  if(x  ==  (int)x)  {  if(x  >>  (int)x)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (int)x)  {  if(x  >>  (int)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (int)x)    {    if(x  >>  (int)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
258	[BUG]  [BUGGY]  if(x  ==  (int)x)  {  if(x  ==  (Int)x)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (int)x)  {  if(x  ==  (Int)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (int)x)    {    if(x  ==  (Int)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
259	[BUG]  [BUGGY]  if(x  ==  (int)x)  {  if(x  {  (int)x)  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (int)x)  {  if(x  {  (int)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (int)x)    {    if(x  {  (int)x)  {	  	non-compiled	[CE]  ')'  expected	5	None	add
260	[BUG]  [BUGGY]  if(x  ==  (int)x)  {  if(x  ==  (long)x)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (int)x)  {  if(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (int)x)    {    if(x  ==  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
261	[BUG]  [BUGGY]  char  x  =  getLastChar();  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  x  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  x  =  getLastChar();	      int    x    =    getLastChar();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	22	None	replace
262	[BUG]  [BUGGY]  int  x  =  getFirstChar();  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  x  =  getFirstChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getFirstChar();	      int    x    =    getLastChar();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	22	None	replace
263	[BUG]  [BUGGY]  int  x  =  getLastChar()  +  1;  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  x  =  getLastChar()  +  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar()  +  1;	      int    x    =    getLastChar();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	22	None	replace
264	[BUG]  [BUGGY]  int  x  =  getLastChar().length;  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  x  =  getLastChar().length;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar().length;	      int    x    =    getLastChar();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	22	None	replace
265	[BUG]  [BUGGY]  int  x  =  getLastChar()  -  1;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  x  =  getLastChar()  -  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  x  =  getLastChar()  -  1;	      int    x    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
266	[BUG]  [BUGGY]  if(x!=  (long)x)  {  if(x!=  (long)x)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  (long)x)  {  if(x!=  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    (long)x)    {    if(x!=  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
267	[BUG]  [BUGGY]  if(x!=  (long)x)  {  if(x  >=  (long)x)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  (long)x)  {  if(x  >=  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    (long)x)    {    if(x  >=  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
268	[BUG]  [BUGGY]  if(x!=  (long)x)  {  if(x  >>  (long)x)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  (long)x)  {  if(x  >>  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    (long)x)    {    if(x  >>  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
269	[BUG]  [BUGGY]  if(x!=  (long)x)  {  if(x  ==  (long)x)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  (long)x)  {  if(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    (long)x)    {    if(x  ==  (long)x)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
270	[BUG]  [BUGGY]  if(x!=  (long)x)  {  if(x  [Delete]  (long)x)  {  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  (long)x)  {  if(x  [Delete]  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    (long)x)    {    if(x  [Delete]  (long)x)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
271	[BUG]  [BUGGY]  if(x!=  (long)x)  {  if(x  [BUGGY]  (long)x)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  (long)x)  {  if(x  [BUGGY]  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    (long)x)    {    if(x  [BUGGY]  (long)x)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
272	[BUG]  [BUGGY]  if(x!=  (long)x)  {  If(x!=  (long)x)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  (long)x)  {  If(x!=  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    (long)x)    {    If(x!=  (long)x)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
273	[BUG]  [BUGGY]  String  value  =  getLastChar();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  String  value  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	String  value  =  getLastChar();	      char    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
274	[BUG]  [BUGGY]  BigInteger  value  =  getLastChar();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  BigInteger  value  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	BigInteger  value  =  getLastChar();	      char    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
275	[BUG]  [BUGGY]  Character  value  =  getLastChar();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Character  value  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Character  value  =  getLastChar();	      char    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
276	[BUG]  [BUGGY]  Long  value  =  getLastChar();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Long  value  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  value  =  getLastChar();	      char    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
277	[BUG]  [BUGGY]  Number  value  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Number  value  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Number  value  =  getLastChar();	      char    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
278	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
279	[BUG]  [BUGGY]  if(x  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
280	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  ==  '-')  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  ==  '-')  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  &&  prev  ==  '-')  {	  if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
281	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  ==  '-')  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  Long.MIN_VALUE  &&  prev  ==  '-')  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE  &&  prev  ==  '-')  {	  if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
282	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  &&  prev  <=  Double.POSITIVE_INFINITY)  {	  if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
283	[BUG]  [BUGGY]  if(x  ==  (int)prev)  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (int)prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (int)prev)  {	  if(x    ==    (int)x)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
284	[BUG]  [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().lastIndexOf('n',  prev);  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().lastIndexOf('n',  prev);  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    int  x  =  getLastChar().lastIndexOf('n',  prev);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	3	None	add
285	[BUG]  [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar();  if(x  ==  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    int  x  =  getLastChar();  if(x  ==  prev)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
286	[BUG]  [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().indexOf('n',  prev);  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().indexOf('n',  prev);  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    int  x  =  getLastChar().indexOf('n',  prev);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	3	None	add
287	[BUG]  [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    int  x  =  getLastChar().lastIndexOf('-',  prev);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	3	None	add
288	[BUG]  [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().lastIndexOf('-');  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().lastIndexOf('-');  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    int  x  =  getLastChar().lastIndexOf('-');	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	3	None	add
289	[BUG]  [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().lastIndexOf('.');  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().lastIndexOf('.');  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    int  x  =  getLastChar().lastIndexOf('.');	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	3	None	add
290	[BUG]  [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().lastIndexOf('.')-  1;  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().lastIndexOf('.')-  1;  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    int  x  =  getLastChar().lastIndexOf('.')-  1;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	3	None	add
291	[BUG]  [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().lastIndexOf('-')+  1;  [CE]  variable  x  is  already  defined  in  method  addNumber(double)  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  prev)  {  int  x  =  getLastChar().lastIndexOf('-')+  1;  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    prev)    {    int  x  =  getLastChar().lastIndexOf('-')+  1;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addNumber(double)	3	None	add
292	[BUG]  [BUGGY]  float  value  =(float)Math.pow(10,  x);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  float  value  =(float)Math.pow(10,  x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	float  value  =(float)Math.pow(10,  x);	      int    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
293	[BUG]  [BUGGY]  if(x  <=  (long)x)  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <=  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  (long)x)  {	  if(x    >=    (long)x)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
294	[BUG]  [BUGGY]  if(x  >  (int)x)  {  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >  (int)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  (int)x)  {	  if(x    >=    (long)x)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
295	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  -  prev;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  mantissa  =  getLastChar()  -  prev;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  mantissa  =  getLastChar()  -  prev;	      double    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
296	[BUG]  [BUGGY]  double  value  =  getLastChar()  -  prev.doubleValue();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  getLastChar()  -  prev.doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  -  prev.doubleValue();	      double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
297	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  while(x  ==  (double)x)  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (double)x)  {  while(x  ==  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (double)x)    {    while(x  ==  (double)x)  {	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
298	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)+  1;  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  Math.pow(10,  prev)+  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)+  1;	      int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
299	[BUG]  [BUGGY]  if((  long)x  <  prev)  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x  <  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x  <  prev)  {	  if    ((    long)x    >=    prev)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
300	[BUG]  [BUGGY]  short  mantissa  =  Math.pow(10,  x);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  short  mantissa  =  Math.pow(10,  x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	short  mantissa  =  Math.pow(10,  x);	      int    mantissa    =    Math.pow(10,    x);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
301	[BUG]  [BUGGY]  double  value  =  getLastChar()  -  prev;  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  getLastChar()  -  prev;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  getLastChar()  -  prev;	      double    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
302	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)+  1;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  Math.pow(10,  prev)+  1;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)+  1;	      int    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
303	[BUG]  [BUGGY]  if(x  <=  prev)  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  prev)  {	  if(x    ==    prev)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
304	[BUG]  [BUGGY]  if(x  <=  '0'  ||  x  >  '9')  {  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <=  '0'  ||  x  >  '9')  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0'  ||  x  >  '9')  {	  if(x    ==    prev)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
305	[BUG]  [BUGGY]  if(x  <=  '0'  ||  x  >  prev)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <=  '0'  ||  x  >  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  '0'  ||  x  >  prev)  {	  if(x    ==    prev)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
306	[BUG]  [BUGGY]  double  x  =  getLastChar().charAt(0);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  x  =  getLastChar().charAt(0);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar().charAt(0);	      double    x    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
307	[BUG]  [BUGGY]  double  x  =  getLastChar()  +  prev;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  x  =  getLastChar()  +  prev;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  x  =  getLastChar()  +  prev;	      double    x    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
308	[BUG]  [BUGGY]      x  =  getLastChar();  Double  x  =  getLastChar();  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]      x  =  getLastChar();  Double  x  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	        x    =    getLastChar();    Double  x  =  getLastChar();	  	non-compiled	[CE]  illegal  start  of  type	37	None	add
309	[BUG]  [BUGGY]      x  =  getLastChar();  Integer  x  =  getFirstChar();  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]      x  =  getLastChar();  Integer  x  =  getFirstChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	        x    =    getLastChar();    Integer  x  =  getFirstChar();	  	non-compiled	[CE]  illegal  start  of  type	37	None	add
310	[BUG]  [BUGGY]  x  =  getLastChar()  +  prev;  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  x  =  getLastChar()  +  prev;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar()  +  prev;	      x    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
311	[BUG]  [BUGGY]  x  =  getPositiveNumericValue();  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  x  =  getPositiveNumericValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getPositiveNumericValue();	      x    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
312	[BUG]  [BUGGY]  x  =  getLastChar().charAt(x);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  x  =  getLastChar().charAt(x);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(x);	      x    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
313	[BUG]  [BUGGY]  x  =  getLastChar().charAt(0);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  x  =  getLastChar().charAt(0);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar().charAt(0);	      x    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
314	[BUG]  [BUGGY]  x  =  getLastChar()  +  2;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  x  =  getLastChar()  +  2;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	x  =  getLastChar()  +  2;	      x    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
315	[BUG]  [BUGGY]  if(x  ==  (double)prev)  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (double)prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  (double)prev)  {	  if(x    ==    (double)x)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
316	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  +  2);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  Math.pow(10,  prev  +  2);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  +  2);	      double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
317	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  +  10);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  Math.pow(10,  prev  +  10);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev  +  10);	      double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
318	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  prev);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('n',  prev);  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf('n',  prev);	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
319	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().indexOf('n',  prev);  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().indexOf('n',  prev);  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().indexOf('n',  prev);	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
320	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('-');  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('-');  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf('-');	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
321	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('ufffd',  prev);  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('ufffd',  prev);  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf('ufffd',  prev);	  	non-compiled	[CE]  unclosed  character  literal	30	None	add
322	[BUG]  [BUGGY]  if(x  <  0)  {  Integer  x  =  getFirstChild().doubleValue();  [CE]  unclosed  character  literal  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  Integer  x  =  getFirstChild().doubleValue();  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    Integer  x  =  getFirstChild().doubleValue();	  	non-compiled	[CE]  unclosed  character  literal	30	None	add
323	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  [CE]  unclosed  character  literal  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('-',  prev);  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf('-',  prev);	  	non-compiled	[CE]  unclosed  character  literal	30	None	add
324	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf(':');  [CE]  unclosed  character  literal  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf(':');  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf(':');	  	non-compiled	[CE]  unclosed  character  literal	30	None	add
325	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  int  x  =  getLastChar();  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  (long)x)  {  int  x  =  getLastChar();  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    (long)x)    {    int  x  =  getLastChar();	  	non-compiled	[CE]  unclosed  character  literal	7	None	add
326	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  If(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  If(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    If(x  ==  (long)x)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
327	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  if(x  {  (long)x)  {  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  if(x  {  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    if(x  {  (long)x)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
328	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  if(x  >>  (long)x)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  if(x  >>  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    if(x  >>  (long)x)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
329	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar();  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  int  x  =  getLastChar();  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    int  x  =  getLastChar();	  	non-compiled	[CE]  ';'  expected	1	None	add
330	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  while(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  while(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    while(x  ==  (long)x)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
331	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  Double.POSITIVE_INFINITY)  {  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0  ||  prev  >  Double.POSITIVE_INFINITY)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >  Double.POSITIVE_INFINITY)  {	  if(x    <    0)    {    	non-compiled	[CE]  unclosed  character  literal	31	None	replace
332	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  Long.MAX_VALUE)  {  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <    0)    {    	non-compiled	[CE]  unclosed  character  literal	31	None	replace
333	[BUG]  [BUGGY]  Integer  value  =  getFirstChild().doubleValue();  [CE]  unclosed  character  literal  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Integer  value  =  getFirstChild().doubleValue();  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Integer  value  =  getFirstChild().doubleValue();	      	non-compiled	[CE]  unclosed  character  literal	17	None	replace
334	[BUG]  [BUGGY]  int  mantissa  =  getMeanOp(0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  getMeanOp(0);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  getMeanOp(0);	      int    mantissa    =    getMeanOp();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
335	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  if(x  ==  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  if(x  ==  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE)    {    if(x  ==  Long.MAX_VALUE)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
336	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  if(x  {  Long.MIN_VALUE)  {  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  if(x  {  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE)    {    if(x  {  Long.MIN_VALUE)  {	  	non-compiled	[CE]  ')'  expected	28	None	add
337	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  while(x  ==  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  while(x  ==  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE)    {    while(x  ==  Long.MIN_VALUE)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
338	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE)  {  int  x  =  getLastChar();  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    Long.MIN_VALUE)    {    int  x  =  getLastChar();	  	non-compiled	[CE]  ';'  expected	28	None	add
339	[BUG]  [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  Long)x  ==  prev)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  ==  prev)  {  if  ((  Long)x  ==  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    ==    prev)    {    if  ((  Long)x  ==  prev)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
340	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev  +  1  -  1);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  Math.pow(10,  prev  +  1  -  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev  +  1  -  1);	      int    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
341	[BUG]  [BUGGY]  int  value  =  getFirstChar();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  getFirstChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getFirstChar();	      int    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
342	[BUG]  [BUGGY]  if(x!=  (long)x)  {  if(x  [PATCH]  (long)x)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  (long)x)  {  if(x  [PATCH]  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=    (long)x)    {    if(x  [PATCH]  (long)x)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
343	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  10;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  mantissa  =  Math.pow(10,  prev)/  10;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  mantissa  =  Math.pow(10,  prev)/  10;	      int    mantissa    =    Math.pow(10,    prev);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
344	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('n');  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('n');  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf('n');	  	non-compiled	[CE]  ';'  expected	30	None	add
345	[BUG]  [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  x);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0)  {  int  x  =  getLastChar().lastIndexOf('.',  x);  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    <    0)    {    int  x  =  getLastChar().lastIndexOf('.',  x);	  	non-compiled	[CE]  ';'  expected	30	None	add
346	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NEGATIVE_INFINITY)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x!=  Preconditions.NEGATIVE_INFINITY)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NEGATIVE_INFINITY)  {	  if((    long)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
347	[BUG]  [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x!=  Preconditions.NUMBER_INT)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  long)x!=  Preconditions.NUMBER_INT)  {	  if((    long)x!=    prev)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
348	[BUG]  [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  [BUG]  prev)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  long)x!=  prev)  {  if((  long)x  [BUG]  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((    long)x!=    prev)    {    if((  long)x  [BUG]  prev)  {	  	non-compiled	[CE]  ')'  expected	39	None	add
349	[BUG]  [BUGGY]  if(x  <=  (double)x)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <=  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  (double)x)  {	  if(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
350	[BUG]  [BUGGY]  if(x  <=  10  &&  prev  >=  '-')  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <=  10  &&  prev  >=  '-')  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  10  &&  prev  >=  '-')  {	  if(x    ==    (int)x)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
351	[BUG]  [BUGGY]  if(x  >=  (long)x)  {  if(x  <  (long)x)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  (long)x)  {  if(x  <  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    >=    (long)x)    {    if(x  <  (long)x)  {	  	non-compiled	[CE]  ')'  expected	7	None	add
352	[BUG]  [BUGGY]  if((  double)x  ==  prev)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  double)x  ==  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  double)x  ==  prev)  {	  if    ((    long)x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
353	[BUG]  [BUGGY]  int  value  =  getLastChar()  &  0xFFFF;  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  getLastChar()  &  0xFFFF;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  getLastChar()  &  0xFFFF;	      int    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	23	None	replace
354	[BUG]  [BUGGY]      x  =  getLastChar();  x  =  getLastChar().doubleValue();  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]      x  =  getLastChar();  x  =  getLastChar().doubleValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	        x    =    getLastChar();    x  =  getLastChar().doubleValue();	  	non-compiled	[CE]  ')'  expected	37	None	add
355	[BUG]  [BUGGY]  if(x  >  (double)x)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  (double)x)  {	  if(x    ==    (double)x)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
356	[BUG]  [BUGGY]  if(x!=  Long.MIN_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x!=  Long.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x!=  Long.MIN_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
357	[BUG]  [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
358	[BUG]  [BUGGY]  if(x  <=  Long.MAX_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <=  Long.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Long.MAX_VALUE)  {	  if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
359	[BUG]  [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  ==  '-')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  Long.MIN_VALUE  &&  prev  ==  '-')  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  ==  Long.MIN_VALUE  &&  prev  ==  '-')  {	  if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
360	[BUG]  [BUGGY]  if((  double)x  >=  prev)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if((  double)x  >=  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if((  double)x  >=  prev)  {	  if    ((    long)x    >=    prev)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
361	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  if(x  [BUGGY]  (double)x)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (double)x)  {  if(x  [BUGGY]  (double)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (double)x)    {    if(x  [BUGGY]  (double)x)  {	  	non-compiled	[CE]  ')'  expected	13	None	add
362	[BUG]  [BUGGY]  if(x  ==  (double)x)  {  int  x  =  getLastChar();  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (double)x)  {  int  x  =  getLastChar();  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (double)x)    {    int  x  =  getLastChar();	  	non-compiled	[CE]  ')'  expected	13	None	add
363	[BUG]  [BUGGY]  int  value  =(int)Math.pow(10,  x  -  1);  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =(int)Math.pow(10,  x  -  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =(int)Math.pow(10,  x  -  1);	      int    value    =(int)Math.pow(10,    x);    	non-compiled	[CE]  ';'  expected	36	None	replace
364	[BUG]  [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x  [PATCH]  prev)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if  ((  long)x  >=  prev)  {  if  ((  long)x  [PATCH]  prev)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if    ((    long)x    >=    prev)    {    if  ((  long)x  [PATCH]  prev)  {	  	non-compiled	[CE]  ')'  expected	15	None	add
365	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev).charValue();  [CE]  ';'  expected  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  double  value  =  Math.pow(10,  prev).charValue();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	double  value  =  Math.pow(10,  prev).charValue();	      double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	27	None	replace
366	[BUG]  [BUGGY]  char  value  =  prev!=  null?  getLastChar().toCharArray()  :  x;  [CE]  ';'  expected  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  value  =  prev!=  null?  getLastChar().toCharArray()  :  x;  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev!=  null?  getLastChar().toCharArray()  :  x;	      	non-compiled	[CE]  ';'  expected	17	None	replace
367	[BUG]  [BUGGY]  char  value  =  prev  ==  null?  getLastChar().toCharArray()  :  x;  [CE]  ';'  expected  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  value  =  prev  ==  null?  getLastChar().toCharArray()  :  x;  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev  ==  null?  getLastChar().toCharArray()  :  x;	      	non-compiled	[CE]  ';'  expected	17	None	replace
368	[BUG]  [BUGGY]  char  value  =  prev  ==  null?  getLastChar()  :  x;  [CE]  ';'  expected  [FE]                            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  char  value  =  prev  ==  null?  getLastChar()  :  x;  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	char  value  =  prev  ==  null?  getLastChar()  :  x;	      	non-compiled	[CE]  ';'  expected	17	None	replace
369	[BUG]  [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MIN_VALUE)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MIN_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MIN_VALUE)  {	  if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
370	[BUG]  [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.MIN_VALUE  ||  prev  >  Preconditions.MAX_VALUE)  {	  if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
371	[BUG]  [BUGGY]  if(x  <=  Preconditions.INCRDECR_VALUE)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <=  Preconditions.INCRDECR_VALUE)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=  Preconditions.INCRDECR_VALUE)  {	  if(x    ==    prev)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
372	[BUG]  [BUGGY]  if(x  >  10)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  >  10)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  >  10)  {	  if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
373	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  '.')  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0  ||  prev  >  '.')  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >  '.')  {	  if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
374	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  '0')  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <  0  ||  prev  >  '0')  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <  0  ||  prev  >  '0')  {	  if(x    <    0)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
375	[BUG]  [BUGGY]  if(x  <=(int)x)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  <=(int)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x  <=(int)x)  {	  if(x    >=    (long)x)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
376	[BUG]  [BUGGY]  Double  value  =  getLastChar();  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Double  value  =  getLastChar();  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Double  value  =  getLastChar();	      char    value    =    getLastChar();    	non-compiled	[CE]  ';'  expected	41	None	replace
377	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)/  10;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  int  value  =  Math.pow(10,  prev)/  10;  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	int  value  =  Math.pow(10,  prev)/  10;	      int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  ';'  expected	32	None	replace
378	[BUG]  [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  +  1);  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  Long  mantissa  =  Math.pow(10,  prev  +  1);  [BUGGY]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	Long  mantissa  =  Math.pow(10,  prev  +  1);	      int    mantissa    =    Math.pow(10,    prev    +    1);    	non-compiled	[CE]  ';'  expected	42	None	replace
379	[BUG]  [BUGGY]  if(x  ==  (long)x)  {  when(x  ==  (long)x)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }    [BUGGY]  if(x  ==  (long)x)  {  when(x  ==  (long)x)  {  [BUGGY]    long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	241	241	1	replace	if(x    ==    (long)x)    {    when(x  ==  (long)x)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
