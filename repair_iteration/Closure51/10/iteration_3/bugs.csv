bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  prev  =  Math.abs(mantissa)/  10  +  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.abs(mantissa)/  10  +  Math.pow(10,  exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.abs(mantissa)/  10  +  Math.pow(10,  exp);	  double    prev    =    Math.abs(value)/    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
2	[BUG]  [BUGGY]  double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp  -  1);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp  -  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp  -  1);	  double    prev    =    Math.abs(value)/    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
3	[BUG]  [BUGGY]  double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp  +  1);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp  +  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp  +  1);	  double    prev    =    Math.abs(value)/    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
4	[BUG]  [BUGGY]  double  prev  =  Math.abs(x)/  10  +  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.abs(x)/  10  +  Math.pow(10,  exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.abs(x)/  10  +  Math.pow(10,  exp);	  double    prev    =    Math.abs(value)/    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
5	[BUG]  [BUGGY]  double  prev  =  Math.abs(exp)/  10  +  Math.pow(10,  value);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.abs(exp)/  10  +  Math.pow(10,  value);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.abs(exp)/  10  +  Math.pow(10,  value);	  double    prev    =    Math.abs(value)/    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
6	[BUG]  [BUGGY]  double  prev  =  Math.abs(value)/  10  *  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.abs(value)/  10  *  Math.pow(10,  exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.abs(value)/  10  *  Math.pow(10,  exp);	  double    prev    =    Math.abs(value)/    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
7	[BUG]  [BUGGY]  double  prev  =  mantissa.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  mantissa.doubleValue();  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  mantissa.doubleValue();	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	52	None	replace
8	[BUG]  [BUGGY]  double  prev  =  x.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  x.doubleValue();  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  x.doubleValue();	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	52	None	replace
9	[BUG]  [BUGGY]  double  prev  =  value.doubleValue()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  value.doubleValue()  +  1;  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  value.doubleValue()  +  1;	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	52	None	replace
10	[BUG]  [BUGGY]  double  prev  =  value.doubleValue()  /  10;  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  value.doubleValue()  /  10;  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  value.doubleValue()  /  10;	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	52	None	replace
11	[BUG]  [BUGGY]  double  prev  =  value.doubleValue()  /  100.0;  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  value.doubleValue()  /  100.0;  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  value.doubleValue()  /  100.0;	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	52	None	replace
12	[BUG]  [BUGGY]  char  prev  =  value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  char  prev  =  value.doubleValue();  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	char  prev  =  value.doubleValue();	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	52	None	replace
13	[BUG]  [BUGGY]  int  len  =  String.valueOf(x)+  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  len  =  String.valueOf(x)+  1;  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  len  =  String.valueOf(x)+  1;	  int    len    =    String.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	51	None	replace
14	[BUG]  [BUGGY]  int  len  =  String.valueOf(exp);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  len  =  String.valueOf(exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  len  =  String.valueOf(exp);	  int    len    =    String.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	51	None	replace
15	[BUG]  [BUGGY]  int  len  =  String.valueOf(x  +  1);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  len  =  String.valueOf(x  +  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  len  =  String.valueOf(x  +  1);	  int    len    =    String.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	51	None	replace
16	[BUG]  [BUGGY]  int  len  =  String.valueOf(x  -  1);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  len  =  String.valueOf(x  -  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  len  =  String.valueOf(x  -  1);	  int    len    =    String.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	51	None	replace
17	[BUG]  [BUGGY]  int  len  =  String.valueOf(prev);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  len  =  String.valueOf(prev);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  len  =  String.valueOf(prev);	  int    len    =    String.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	51	None	replace
18	[BUG]  [BUGGY]  int  len  =  String.valueOf(len);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  len  =  String.valueOf(len);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  len  =  String.valueOf(len);	  int    len    =    String.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	51	None	replace
19	[BUG]  [BUGGY]  if(exp  >  10  &&  Integer.toString(value)!=  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  Integer.toString(value)!=  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  Integer.toString(value)!=  0)  {	  if(exp    >    10    &&    Integer.toString(exp)!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
20	[BUG]  [BUGGY]  if(x  >  10  &&  Integer.toString(exp)!=  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  Integer.toString(exp)!=  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  Integer.toString(exp)!=  0)  {	  if(exp    >    10    &&    Integer.toString(exp)!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
21	[BUG]  [BUGGY]  if(exp  >=  10  &&  Integer.toString(exp)!=  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  Integer.toString(exp)!=  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  Integer.toString(exp)!=  0)  {	  if(exp    >    10    &&    Integer.toString(exp)!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
22	[BUG]  [BUGGY]  if(exp  >  100  &&  Integer.toString(exp)!=  0)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  Integer.toString(exp)!=  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  Integer.toString(exp)!=  0)  {	  if(exp    >    10    &&    Integer.toString(exp)!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
23	[BUG]  [BUGGY]  if(mantissa  >  10  &&  Integer.toString(exp)!=  0)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(mantissa  >  10  &&  Integer.toString(exp)!=  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(mantissa  >  10  &&  Integer.toString(exp)!=  0)  {	  if(exp    >    10    &&    Integer.toString(exp)!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
24	[BUG]  [BUGGY]  if(exp  >  1000  &&  Integer.toString(exp)!=  0)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  Integer.toString(exp)!=  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  Integer.toString(exp)!=  0)  {	  if(exp    >    10    &&    Integer.toString(exp)!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
25	[BUG]  [BUGGY]  if(x  >  10  &&  value  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  value  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  value  <  Integer.MIN_VALUE)  {	  if(x    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
26	[BUG]  [BUGGY]  if(x  >  10  &&  value  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  value  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  value  <  Long.MIN_VALUE)  {	  if(x    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
27	[BUG]  [BUGGY]  if(x  <  10)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  10)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  10)  {	  if(x    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
28	[BUG]  [BUGGY]  if(x  >  10  &&  exp  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  exp  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  exp  <  Long.MIN_VALUE)  {	  if(x    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
29	[BUG]  [BUGGY]  if(x  >  10  &&  value  <  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  value  <  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  value  <  Long.MAX_VALUE)  {	  if(x    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
30	[BUG]  [BUGGY]  if(x  <=  20)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <=  20)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <=  20)  {	  if(x    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  if(x  >  20  ||  value  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  20  ||  value  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  20  ||  value  <  Integer.MAX_VALUE)  {	  if(x    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  if(x  >  20  ||  exp  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  20  ||  exp  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  20  ||  exp  <  Integer.MAX_VALUE)  {	  if(x    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  if(x  >  20  ||  value  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  20  ||  value  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  20  ||  value  <  Integer.MIN_VALUE)  {	  if(x    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  if(x  >  20  ||  exp  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  20  ||  exp  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  20  ||  exp  <  Integer.MIN_VALUE)  {	  if(x    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  if(Math.abs(x)  <  100)  {  Integer.toString(value));  }  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(x)  <  100)  {  Integer.toString(value));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(x)  <  100)  {  Integer.toString(value));  }	  Integer.toString(value));    	non-compiled	[CE]  ';'  expected	30	None	replace
36	[BUG]  [BUGGY]  if(Math.abs(x)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x));  }  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(x)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(x)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x));  }	  Integer.toString(value));    	non-compiled	[CE]  ';'  expected	30	None	replace
37	[BUG]  [BUGGY]  if(Math.abs(exp)  <  100)  {  Integer.toString(value));  }  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(exp)  <  100)  {  Integer.toString(value));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(exp)  <  100)  {  Integer.toString(value));  }	  Integer.toString(value));    	non-compiled	[CE]  ';'  expected	30	None	replace
38	[BUG]  [BUGGY]  if(Math.abs(exp)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x));  }  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(exp)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(exp)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x));  }	  Integer.toString(value));    	non-compiled	[CE]  ';'  expected	30	None	replace
39	[BUG]  [BUGGY]  if(Math.abs(exp)>  Long.MIN_VALUE)  {  Integer.toString(value));  }  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(exp)>  Long.MIN_VALUE)  {  Integer.toString(value));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(exp)>  Long.MIN_VALUE)  {  Integer.toString(value));  }	  Integer.toString(value));    	non-compiled	[CE]  ';'  expected	30	None	replace
40	[BUG]  [BUGGY]  if(Math.abs(value)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x));  }  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(value)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(value)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x));  }	  Integer.toString(value));    	non-compiled	[CE]  ';'  expected	30	None	replace
41	[BUG]  [BUGGY]  if(value  >  10  &&  exp  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  10  &&  exp  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  10  &&  exp  <=  Long.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
42	[BUG]  [BUGGY]  if(x  >  10  &&  value  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  value  <=  Long.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
43	[BUG]  [BUGGY]  if(exp  >  100  &&  value  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  value  <=  Long.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
44	[BUG]  [BUGGY]  if(exp  >  10  &&  value  >=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  value  >=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  value  >=  Long.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
45	[BUG]  [BUGGY]  if(exp  >  10  &&  value  ==  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  value  ==  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  value  ==  Long.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
46	[BUG]  [BUGGY]  if(exp  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  ==  1)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  ==  1)  {	  if(exp    <=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
47	[BUG]  [BUGGY]  if(exp  <  1  ||  exp  >  Long.parseLong(x))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  1  ||  exp  >  Long.parseLong(x))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  1  ||  exp  >  Long.parseLong(x))  {	  if(exp    <=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
48	[BUG]  [BUGGY]  if(exp!=  1)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp!=  1)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp!=  1)  {	  if(exp    <=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
49	[BUG]  [BUGGY]  if(exp  <  20  ||  exp  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  20  ||  exp  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  20  ||  exp  >  Long.MAX_VALUE)  {	  if(exp    <    20)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
50	[BUG]  [BUGGY]  if(exp  <  20  ||  exp  >  Long.parseLong(x))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  20  ||  exp  >  Long.parseLong(x))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  20  ||  exp  >  Long.parseLong(x))  {	  if(exp    <    20)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
51	[BUG]  [BUGGY]  if(exp  <  20  ||  exp  >  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  20  ||  exp  >  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  20  ||  exp  >  Long.MIN_VALUE)  {	  if(exp    <    20)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
52	[BUG]  [BUGGY]  if(exp  <=  20)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <=  20)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <=  20)  {	  if(exp    <    20)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
53	[BUG]  [BUGGY]  if(x  >  0  ||  exp  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  ||  exp  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  ||  exp  <  Integer.MAX_VALUE)  {	  if(x    >    0    ||    x    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
54	[BUG]  [BUGGY]  if(x  <  0  ||  x  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  0  ||  x  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0  ||  x  <  Integer.MAX_VALUE)  {	  if(x    >    0    ||    x    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
55	[BUG]  [BUGGY]  if(x  >=  0  ||  x  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >=  0  ||  x  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >=  0  ||  x  <=  Integer.MAX_VALUE)  {	  if(x    >    0    ||    x    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
56	[BUG]  [BUGGY]  if(x  >  0  &&  x  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  &&  x  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  x  <=  Integer.MAX_VALUE)  {	  if(x    >    0    ||    x    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
57	[BUG]  [BUGGY]  if(x  <  0  ||  x  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  0  ||  x  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0  ||  x  <=  Integer.MAX_VALUE)  {	  if(x    >    0    ||    x    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
58	[BUG]  [BUGGY]  if(x  ==  0  ||  x  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  ==  0  ||  x  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  ==  0  ||  x  <=  Integer.MAX_VALUE)  {	  if(x    >    0    ||    x    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
59	[BUG]  [BUGGY]  if(x  <=  0  ||  x  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <=  0  ||  x  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <=  0  ||  x  <  Integer.MAX_VALUE)  {	  if(x    >    0    ||    x    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
60	[BUG]  [BUGGY]  if(exp  <  50)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  50)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  50)  {	  if(exp    >    50)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  if(x  >  50)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  50)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  50)  {	  if(exp    >    50)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  if(exp  >=  50)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  50)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  50)  {	  if(exp    >    50)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  if(exp  <  10  ||  exp  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  ||  exp  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  ||  exp  >  Long.MAX_VALUE)  {	  if(exp    <    10)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
64	[BUG]  [BUGGY]  if(exp  <  10  ||  exp  >  Long.parseLong(x))  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  ||  exp  >  Long.parseLong(x))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  ||  exp  >  Long.parseLong(x))  {	  if(exp    <    10)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
65	[BUG]  [BUGGY]  if(value  >  0  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  &&  value  <=  Integer.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
66	[BUG]  [BUGGY]  if(x  >  0  &&  exp  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  &&  exp  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  exp  <=  Integer.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
67	[BUG]  [BUGGY]  if(value  >  0  &&  value  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  &&  value  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  &&  value  <  Integer.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
68	[BUG]  [BUGGY]  if(x  >  0  &&  exp  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  &&  exp  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  exp  <  Integer.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
69	[BUG]  [BUGGY]  if(x  >  0  ||  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  ||  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  ||  value  <=  Integer.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
70	[BUG]  [BUGGY]  if(x  >  0  &&  value  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  &&  value  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  value  <  Integer.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
71	[BUG]  [BUGGY]  if(value  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  ==  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  ==  0)  {	  if(x    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
72	[BUG]  [BUGGY]  if(x  <  0  ||  x  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  0  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0  ||  x  >  Long.MAX_VALUE)  {	  if(x    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
73	[BUG]  [BUGGY]  int  exp  =  Math.max(value,  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.max(value,  mantissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.max(value,  mantissa);	  int    exp    =    Math.max(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
74	[BUG]  [BUGGY]  int  exp  =  Math.max(mantissa,  value  -  1);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.max(mantissa,  value  -  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.max(mantissa,  value  -  1);	  int    exp    =    Math.max(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
75	[BUG]  [BUGGY]  int  exp  =  Math.max(mantissa,  value  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.max(mantissa,  value  +  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.max(mantissa,  value  +  1);	  int    exp    =    Math.max(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
76	[BUG]  [BUGGY]  int  exp  =  Math.max(mantissa,  value  /  10);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.max(mantissa,  value  /  10);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.max(mantissa,  value  /  10);	  int    exp    =    Math.max(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
77	[BUG]  [BUGGY]  int  exp  =  Math.max(mantissa,  value  *  10);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.max(mantissa,  value  *  10);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.max(mantissa,  value  *  10);	  int    exp    =    Math.max(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
78	[BUG]  [BUGGY]  int  exp  =  Math.max(mantissa,  exp);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.max(mantissa,  exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.max(mantissa,  exp);	  int    exp    =    Math.max(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
79	[BUG]  [BUGGY]  int  exp  =  Math.max(mantissa,  value  -  10);  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.max(mantissa,  value  -  10);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.max(mantissa,  value  -  10);	  int    exp    =    Math.max(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
80	[BUG]  [BUGGY]  if(exp  >  100  &&  mantissa  <=  100  &&  exp  <=  100  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  mantissa  <=  100  &&  exp  <=  100  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  mantissa  <=  100  &&  exp  <=  100  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
81	[BUG]  [BUGGY]  if(exp  <  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
82	[BUG]  [BUGGY]  if(exp  >=  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
83	[BUG]  [BUGGY]  if(x  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
84	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value,  Integer.toString(x)))  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value,  Integer.toString(x)))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value,  Integer.toString(x)))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
85	[BUG]  [BUGGY]  if(exp  >  1000  &&  mantissa  <=  1000  &&  exp  <=  1000  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  mantissa  <=  1000  &&  exp  <=  1000  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  mantissa  <=  1000  &&  exp  <=  1000  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
86	[BUG]  [BUGGY]  if(value  >  0  &&  exp  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  &&  exp  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  &&  exp  <=  Integer.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
87	[BUG]  [BUGGY]  if(exp  >  0  &&  value  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  <  Integer.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
88	[BUG]  [BUGGY]  if(exp  >  0  &&  value  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value  ==  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  ==  Integer.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
89	[BUG]  [BUGGY]  if(exp  >  0  &&  value!=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value!=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value!=  Integer.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
90	[BUG]  [BUGGY]  if(exp  >  0  &&  value  >=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value  >=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  >=  Integer.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
91	[BUG]  [BUGGY]  if(exp  <  1  ||  exp  >  2)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  1  ||  exp  >  2)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  1  ||  exp  >  2)  {	  if(exp    <    1    ||    exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
92	[BUG]  [BUGGY]  if(mantissa  <  1  ||  exp  <  2)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(mantissa  <  1  ||  exp  <  2)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(mantissa  <  1  ||  exp  <  2)  {	  if(exp    <    1    ||    exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
93	[BUG]  [BUGGY]  if(x  <  1  ||  exp  <  2)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  1  ||  exp  <  2)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  1  ||  exp  <  2)  {	  if(exp    <    1    ||    exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
94	[BUG]  [BUGGY]  if(exp  <  1  ||  exp  >=  2)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  1  ||  exp  >=  2)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  1  ||  exp  >=  2)  {	  if(exp    <    1    ||    exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
95	[BUG]  [BUGGY]  if(Expression.isEmpty(x)||  exp  <  1  ||  exp  <  2)  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Expression.isEmpty(x)||  exp  <  1  ||  exp  <  2)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Expression.isEmpty(x)||  exp  <  1  ||  exp  <  2)  {	  if(exp    <    1    ||    exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
96	[BUG]  [BUGGY]  if(value  <  1  ||  exp  <  2)  {  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  <  1  ||  exp  <  2)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  <  1  ||  exp  <  2)  {	  if(exp    <    1    ||    exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
97	[BUG]  [BUGGY]  if(!binOp)  {  Integer.toString(exp));  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(!binOp)  {  Integer.toString(exp));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(!binOp)  {  Integer.toString(exp));  }	  Integer.toString(exp));    	non-compiled	[CE]  ';'  expected	27	None	replace
98	[BUG]  [BUGGY]  if(Math.abs(x)  <  100)  {  Integer.toString(exp));  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(x)  <  100)  {  Integer.toString(exp));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(x)  <  100)  {  Integer.toString(exp));  }	  Integer.toString(exp));    	non-compiled	[CE]  ';'  expected	27	None	replace
99	[BUG]  [BUGGY]  if(!binOp)  {  Integer.toString(exp));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(!binOp)  {  Integer.toString(exp));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(!binOp)  {  Integer.toString(exp));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Integer.toString(exp));    	non-compiled	[CE]  	27	None	replace
100	[BUG]  [BUGGY]  if(Math.abs(x)  <  100)  {  Integer.toString(exp));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(x)  <  100)  {  Integer.toString(exp));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(x)  <  100)  {  Integer.toString(exp));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Integer.toString(exp));    	non-compiled	[CE]  	27	None	replace
101	[BUG]  [BUGGY]  if(!binOp)  {  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(!binOp)  {  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(!binOp)  {  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }	  Integer.toString(exp));    	non-compiled	[CE]  ';'  expected	27	None	replace
102	[BUG]  [BUGGY]  if(Math.abs(exp)  <  100)  {  Integer.toString(exp));  }  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(exp)  <  100)  {  Integer.toString(exp));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(exp)  <  100)  {  Integer.toString(exp));  }	  Integer.toString(exp));    	non-compiled	[CE]  ';'  expected	27	None	replace
103	[BUG]  [BUGGY]  if(value  >  0  &&  exp  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  &&  exp  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  &&  exp  <=  Long.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
104	[BUG]  [BUGGY]  if(exp  >  0  &&  value  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  <  Long.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
105	[BUG]  [BUGGY]  if(value  >  0  &&  exp  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  &&  exp  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  &&  exp  <  Long.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
106	[BUG]  [BUGGY]  if(exp  >  0  &&  value  ==  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value  ==  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  ==  Long.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
107	[BUG]  [BUGGY]  if(exp  >  0  &&  value!=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value!=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value!=  Long.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
108	[BUG]  [BUGGY]  if(exp  >  0  &&  value  >=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value  >=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  >=  Long.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
109	[BUG]  [BUGGY]  if(value  >  10  &&  exp  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  10  &&  exp  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  10  &&  exp  <=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
110	[BUG]  [BUGGY]  if(exp  >  10  &&  value  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  value  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  value  <  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
111	[BUG]  [BUGGY]  if(x  >  10  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  value  <=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
112	[BUG]  [BUGGY]  if(exp  >  100  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  value  <=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
113	[BUG]  [BUGGY]  if(exp  >  10  &&  value  >=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  value  >=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  value  >=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
114	[BUG]  [BUGGY]  if(exp  >  10  &&  value  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  value  ==  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  value  ==  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
115	[BUG]  [BUGGY]  if(value  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >=  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >=  0)  {	  if(exp!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
116	[BUG]  [BUGGY]  if(exp  <  1000)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  1000)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  1000)  {	  if(exp    >    1000)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
117	[BUG]  [BUGGY]  if(exp  >  10000)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10000)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10000)  {	  if(exp    >    1000)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
118	[BUG]  [BUGGY]  if(x  >  1000)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  1000)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  1000)  {	  if(exp    >    1000)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
119	[BUG]  [BUGGY]  if(exp  >=  1000)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  1000)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  1000)  {	  if(exp    >    1000)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
120	[BUG]  [BUGGY]  if(value  >  10  &&  exp  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  10  &&  exp  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  10  &&  exp  <  Long.MIN_VALUE)  {	  if(exp    >    10    &&    value    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
121	[BUG]  [BUGGY]  if(exp  >  100  &&  value  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  value  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  value  <  Long.MIN_VALUE)  {	  if(exp    >    10    &&    value    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
122	[BUG]  [BUGGY]  if(exp  <  10  &&  value  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  value  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  value  <  Long.MIN_VALUE)  {	  if(exp    >    10    &&    value    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
123	[BUG]  [BUGGY]  if(exp  >  20  &&  mantissa  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  mantissa  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  mantissa  <=  Integer.MIN_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
124	[BUG]  [BUGGY]  if(exp  >  20  ||  mantissa  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  ||  mantissa  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  mantissa  <  Integer.MIN_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
125	[BUG]  [BUGGY]  if(x  >  20  ||  mantissa  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  20  ||  mantissa  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  20  ||  mantissa  <=  Integer.MIN_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
126	[BUG]  [BUGGY]  if(exp  >  20  ||  mantissa  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  ||  mantissa  ==  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  mantissa  ==  Integer.MIN_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
127	[BUG]  [BUGGY]  if(exp  <  20  ||  mantissa  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  20  ||  mantissa  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  20  ||  mantissa  <=  Integer.MIN_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
128	[BUG]  [BUGGY]  if(exp  <  20  ||  mantissa  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  20  ||  mantissa  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  20  ||  mantissa  <  Integer.MIN_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
129	[BUG]  [BUGGY]  if(exp  >=  1  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  1  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  1  &&  value  <=  Integer.MAX_VALUE)  {	  if(exp    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
130	[BUG]  [BUGGY]  if(x  >  10  &&  Integer.isInfinite(value))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  Integer.isInfinite(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  Integer.isInfinite(value))  {	  if(exp    >    10    &&    Integer.isInfinite(value))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
131	[BUG]  [BUGGY]  if(value  >  10  &&  Integer.isInfinite(exp))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  10  &&  Integer.isInfinite(exp))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  10  &&  Integer.isInfinite(exp))  {	  if(exp    >    10    &&    Integer.isInfinite(value))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
132	[BUG]  [BUGGY]  if(exp  >  10  &&  Integer.isInfinite(value)||  Integer.isInfinite(x))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  Integer.isInfinite(value)||  Integer.isInfinite(x))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  Integer.isInfinite(value)||  Integer.isInfinite(x))  {	  if(exp    >    10    &&    Integer.isInfinite(value))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
133	[BUG]  [BUGGY]  if(exp  >=  10  &&  Integer.isInfinite(value))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  Integer.isInfinite(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  Integer.isInfinite(value))  {	  if(exp    >    10    &&    Integer.isInfinite(value))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
134	[BUG]  [BUGGY]  if(exp  >  100  &&  Integer.isInfinite(value))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  Integer.isInfinite(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  Integer.isInfinite(value))  {	  if(exp    >    10    &&    Integer.isInfinite(value))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
135	[BUG]  [BUGGY]  if(exp  <  10  &&  Integer.isInfinite(value))  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  Integer.isInfinite(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  Integer.isInfinite(value))  {	  if(exp    >    10    &&    Integer.isInfinite(value))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
136	[BUG]  [BUGGY]  if(exp  <  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
137	[BUG]  [BUGGY]  if(exp  >=  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
138	[BUG]  [BUGGY]  if(x  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
139	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value,  Integer.toString(x)))  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value,  Integer.toString(x)))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value,  Integer.toString(x)))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
140	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <  40  &&  exp  <=  40  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  <  40  &&  exp  <=  40  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <  40  &&  exp  <=  40  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
141	[BUG]  [BUGGY]  if(mantissa  >  10  &&  exp  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(mantissa  >  10  &&  exp  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(mantissa  >  10  &&  exp  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
142	[BUG]  [BUGGY]  if(exp  >  10  &&  exp  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  exp  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  exp  <=  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
143	[BUG]  [BUGGY]  if(x  >  10  &&  exp  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  exp  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  exp  <  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
144	[BUG]  [BUGGY]  if(exp  >  100  &&  exp  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  exp  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  exp  <  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
145	[BUG]  [BUGGY]  if(exp  <  10  &&  exp  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  exp  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  exp  <  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
146	[BUG]  [BUGGY]  if(exp  >  1000  &&  exp  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  exp  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  exp  <  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
147	[BUG]  [BUGGY]  if(value  >  10  &&  exp  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  10  &&  exp  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  10  &&  exp  <  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
148	[BUG]  [BUGGY]  if(value  >  20  ||  exp  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  20  ||  exp  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  20  ||  exp  <=  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
149	[BUG]  [BUGGY]  if(exp  >  20  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  value  <=  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
150	[BUG]  [BUGGY]  if(exp  >  20  ||  value  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  ||  value  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  value  <  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
151	[BUG]  [BUGGY]  if(x  >  20  ||  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  20  ||  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  20  ||  value  <=  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
152	[BUG]  [BUGGY]  if(exp  <  20  ||  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  20  ||  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  20  ||  value  <=  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
153	[BUG]  [BUGGY]  if(exp  <  20  ||  value  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  20  ||  value  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  20  ||  value  <  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
154	[BUG]  [BUGGY]  if(exp  >  100  &&  mantissa  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  mantissa  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  mantissa  <=  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
155	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
156	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  ==  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  ==  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
157	[BUG]  [BUGGY]  if(exp  <  10  &&  mantissa  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  mantissa  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  mantissa  <=  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
158	[BUG]  [BUGGY]  if(exp  >  1000  &&  mantissa  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  mantissa  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  mantissa  <=  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
159	[BUG]  [BUGGY]  if(value  >  0  &&  value  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  &&  value  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  &&  value  <  Long.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
160	[BUG]  [BUGGY]  if(value  >  0  &&  value  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  &&  value  <=  Long.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
161	[BUG]  [BUGGY]  if(x  >  0  &&  value  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  &&  value  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  value  <  Long.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
162	[BUG]  [BUGGY]  if(x  >  0  &&  exp  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  &&  exp  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  exp  <  Long.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
163	[BUG]  [BUGGY]  if(x  >  0  ||  value  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  ||  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  ||  value  <=  Long.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
164	[BUG]  [BUGGY]  if(x  >=  0  &&  value  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >=  0  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >=  0  &&  value  <=  Long.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
165	[BUG]  [BUGGY]  if(x  <  0  ||  value  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  0  ||  value  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0  ||  value  >  Long.MAX_VALUE)  {	  if(x    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
166	[BUG]  [BUGGY]  if(x  <  0  ||  exp  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  0  ||  exp  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0  ||  exp  >  Long.MAX_VALUE)  {	  if(x    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
167	[BUG]  [BUGGY]  Integer.toString(value);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  Integer.toString(value);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(value);	  Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	55	None	replace
168	[BUG]  [BUGGY]  Integer.toString(mantissa);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  Integer.toString(mantissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(mantissa);	  Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	55	None	replace
169	[BUG]  [BUGGY]  Integer.toString(x);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  Integer.toString(x);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(x);	  Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	55	None	replace
170	[BUG]  [BUGGY]  Integer.toString(exp  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  Integer.toString(exp  +  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(exp  +  1);	  Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	55	None	replace
171	[BUG]  [BUGGY]  Integer.toString(exp,  value);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  Integer.toString(exp,  value);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(exp,  value);	  Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	55	None	replace
172	[BUG]  [BUGGY]  if(x!=  0)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x!=  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x!=  0)  {	  if(x    <=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
173	[BUG]  [BUGGY]  if(value  <=  0)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  <=  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  <=  0)  {	  if(x    <=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
174	[BUG]  [BUGGY]  if(exp  >=  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
175	[BUG]  [BUGGY]  if(exp  <  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
176	[BUG]  [BUGGY]  if(x  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
177	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  <  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <  40  &&  exp  <=  40  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
178	[BUG]  [BUGGY]  if(value  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
179	[BUG]  [BUGGY]  if(exp  <  10  &&  mantissa  <  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  mantissa  <  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  mantissa  <  40  &&  exp  <=  40  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
180	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  value);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.pow(10,  value);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.pow(10,  value);	  double    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	54	None	replace
181	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.pow(10,  mantissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.pow(10,  mantissa);	  double    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	54	None	replace
182	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  exp  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.pow(10,  exp  +  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.pow(10,  exp  +  1);	  double    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	54	None	replace
183	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  exp  -  1);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.pow(10,  exp  -  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.pow(10,  exp  -  1);	  double    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	54	None	replace
184	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  x);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.pow(10,  x);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.pow(10,  x);	  double    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	54	None	replace
185	[BUG]  [BUGGY]  char  prev  =  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  char  prev  =  Math.pow(10,  exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	char  prev  =  Math.pow(10,  exp);	  double    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	54	None	replace
186	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  exp  -  10);  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.pow(10,  exp  -  10);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.pow(10,  exp  -  10);	  double    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	54	None	replace
187	[BUG]  [BUGGY]  if(value  >  0  &&  exp  <=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  &&  exp  <=  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  &&  exp  <=  Long.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
188	[BUG]  [BUGGY]  if(exp  >  0  &&  value  <  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value  <  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  <  Long.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
189	[BUG]  [BUGGY]  if(value  >  0  &&  exp  <  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  &&  exp  <  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  &&  exp  <  Long.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
190	[BUG]  [BUGGY]  if(exp  >  0  &&  value  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value  ==  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  ==  Long.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
191	[BUG]  [BUGGY]  if(x  >  0  &&  value  <=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  value  <=  Long.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
192	[BUG]  [BUGGY]  if(exp  >  0  &&  value!=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value!=  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value!=  Long.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
193	[BUG]  [BUGGY]  if(exp  <  0  &&  value  <=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  0  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  0  &&  value  <=  Long.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
194	[BUG]  [BUGGY]  if(value  >  10  &&  exp  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  10  &&  exp  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  10  &&  exp  <=  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
195	[BUG]  [BUGGY]  if(exp  >  10  &&  value  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  value  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  value  <  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
196	[BUG]  [BUGGY]  if(x  >  10  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  value  <=  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
197	[BUG]  [BUGGY]  if(exp  >  100  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  value  <=  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
198	[BUG]  [BUGGY]  if(exp  >  10  &&  value  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  value  ==  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  value  ==  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
199	[BUG]  [BUGGY]  if(x  <  100)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  100)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  100)  {	  if(exp    <    100)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
200	[BUG]  [BUGGY]  if(exp  <  100  ||  exp  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  100  ||  exp  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  100  ||  exp  >  Long.MAX_VALUE)  {	  if(exp    <    100)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
201	[BUG]  [BUGGY]  if(exp  <  100  ||  exp  >  Long.parseLong(x))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  100  ||  exp  >  Long.parseLong(x))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  100  ||  exp  >  Long.parseLong(x))  {	  if(exp    <    100)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
202	[BUG]  [BUGGY]  if(exp  <  100  ||  value  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  100  ||  value  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  100  ||  value  >  Long.MAX_VALUE)  {	  if(exp    <    100)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
203	[BUG]  [BUGGY]  if(exp  <  0  ||  binOp)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  0  ||  binOp)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  0  ||  binOp)  {	  if(exp    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
204	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <  Long.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
205	[BUG]  [BUGGY]  if(exp  >  100  &&  mantissa  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  mantissa  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  mantissa  <=  Long.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
206	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  ==  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  ==  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  ==  Long.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
207	[BUG]  [BUGGY]  if(exp  >  1000  &&  mantissa  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  mantissa  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  mantissa  <=  Long.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
208	[BUG]  [BUGGY]  if(x  >  10  &&  mantissa  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  mantissa  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  mantissa  <=  Long.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
209	[BUG]  [BUGGY]  if(exp  <  10  &&  mantissa  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  mantissa  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  mantissa  <=  Long.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
210	[BUG]  [BUGGY]  if(x  ==  100)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  ==  100)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  ==  100)  {	  if(exp    ==    100)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
211	[BUG]  [BUGGY]  if(exp  ==  10  &&  value  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  ==  10  &&  value  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  ==  10  &&  value  <  Integer.MIN_VALUE)  {	  if(exp    ==    100)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
212	[BUG]  [BUGGY]  int  exp  =  Math.min(value,  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.min(value,  mantissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.min(value,  mantissa);	  int    exp    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	62	None	replace
213	[BUG]  [BUGGY]  int  exp  =  Math.min(mantissa,  value  -  1);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.min(mantissa,  value  -  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.min(mantissa,  value  -  1);	  int    exp    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	62	None	replace
214	[BUG]  [BUGGY]  int  exp  =  Math.min(mantissa,  value  /  10);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.min(mantissa,  value  /  10);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.min(mantissa,  value  /  10);	  int    exp    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	62	None	replace
215	[BUG]  [BUGGY]  int  exp  =  Math.min(mantissa,  value  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.min(mantissa,  value  +  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.min(mantissa,  value  +  1);	  int    exp    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	62	None	replace
216	[BUG]  [BUGGY]  if(exp  >=  10  &&  value  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  value  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  value  <  Integer.MIN_VALUE)  {	  if(exp    >=    100)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
217	[BUG]  [BUGGY]  if(exp  >=  10  &&  value  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  value  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  value  <  Integer.MAX_VALUE)  {	  if(exp    >=    100)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
218	[BUG]  [BUGGY]  if(x  <=  1)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <=  1)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <=  1)  {	  if(x    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
219	[BUG]  [BUGGY]  if(value  >  1)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  1)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  1)  {	  if(x    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
220	[BUG]  [BUGGY]  if(x  <  1)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  1)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  1)  {	  if(x    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
221	[BUG]  [BUGGY]  if(value  >  0  ||  value  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  ||  value  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  ||  value  <  Integer.MAX_VALUE)  {	  if(x    >    0    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
222	[BUG]  [BUGGY]  if(exp  >  0  ||  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  ||  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  ||  value  <=  Integer.MAX_VALUE)  {	  if(x    >    0    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
223	[BUG]  [BUGGY]  if(value  >  0  ||  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  ||  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  ||  value  <=  Integer.MAX_VALUE)  {	  if(x    >    0    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
224	[BUG]  [BUGGY]  if(x  <  0  ||  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  0  ||  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0  ||  value  <=  Integer.MAX_VALUE)  {	  if(x    >    0    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
225	[BUG]  [BUGGY]  if(exp  >  0  ||  value  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  ||  value  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  ||  value  <  Integer.MAX_VALUE)  {	  if(x    >    0    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
226	[BUG]  [BUGGY]  if(x  <  0  ||  value  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  0  ||  value  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0  ||  value  <  Integer.MAX_VALUE)  {	  if(x    >    0    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
227	[BUG]  [BUGGY]  if(exp!=  20)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp!=  20)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp!=  20)  {	  if(exp    >=    20)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
228	[BUG]  [BUGGY]  if(x  >=  20)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >=  20)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >=  20)  {	  if(exp    >=    20)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
229	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Math.abs(value));  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Math.abs(value));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Math.abs(value));	  int    exp    =    Integer.toString(Math.abs(x));    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
230	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Math.abs(mantissa));  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Math.abs(mantissa));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Math.abs(mantissa));	  int    exp    =    Integer.toString(Math.abs(x));    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
231	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Math.abs(x)+  1);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Math.abs(x)+  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Math.abs(x)+  1);	  int    exp    =    Integer.toString(Math.abs(x));    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
232	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Math.abs(exp));  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Math.abs(exp));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Math.abs(exp));	  int    exp    =    Integer.toString(Math.abs(x));    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
233	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Math.abs(x  +  1));  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Math.abs(x  +  1));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Math.abs(x  +  1));	  int    exp    =    Integer.toString(Math.abs(x));    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
234	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Math.abs(x)-  1);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Math.abs(x)-  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Math.abs(x)-  1);	  int    exp    =    Integer.toString(Math.abs(x));    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
235	[BUG]  [BUGGY]  double  prev  =  Double.parseDouble(value);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Double.parseDouble(value);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Double.parseDouble(value);	  double    prev    =    Double.parseDouble(x);    	non-compiled	[CE]  cannot  find  symbol  iop	53	None	replace
236	[BUG]  [BUGGY]  double  prev  =  Double.parseDouble(mantissa);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Double.parseDouble(mantissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Double.parseDouble(mantissa);	  double    prev    =    Double.parseDouble(x);    	non-compiled	[CE]  cannot  find  symbol  iop	53	None	replace
237	[BUG]  [BUGGY]  double  prev  =  Double.parseDouble(exp);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Double.parseDouble(exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Double.parseDouble(exp);	  double    prev    =    Double.parseDouble(x);    	non-compiled	[CE]  cannot  find  symbol  iop	53	None	replace
238	[BUG]  [BUGGY]  char  prev  =  Double.parseDouble(x);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  char  prev  =  Double.parseDouble(x);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	char  prev  =  Double.parseDouble(x);	  double    prev    =    Double.parseDouble(x);    	non-compiled	[CE]  cannot  find  symbol  iop	53	None	replace
239	[BUG]  [BUGGY]  double  prev  =  Double.parseDouble(x)+  1;  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Double.parseDouble(x)+  1;  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Double.parseDouble(x)+  1;	  double    prev    =    Double.parseDouble(x);    	non-compiled	[CE]  cannot  find  symbol  iop	53	None	replace
240	[BUG]  [BUGGY]  double  prev  =  Integer.parseDouble(x);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Integer.parseDouble(x);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Integer.parseDouble(x);	  double    prev    =    Double.parseDouble(x);    	non-compiled	[CE]  cannot  find  symbol  iop	53	None	replace
241	[BUG]  [BUGGY]  if(exp  >=  10  &&  value!=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  value!=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  value!=  Integer.MIN_VALUE)  {	  if(exp!=    100)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
242	[BUG]  [BUGGY]  if(exp  >=  10  &&  value!=  Integer.toString(x))  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  value!=  Integer.toString(x))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  value!=  Integer.toString(x))  {	  if(exp!=    100)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
243	[BUG]  [BUGGY]  if(x  >=  100)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >=  100)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >=  100)  {	  if(exp!=    100)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
244	[BUG]  [BUGGY]  if(exp  >  10  &&  exp  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  exp  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  exp  <=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
245	[BUG]  [BUGGY]  if(x  >  10  &&  exp  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  exp  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  exp  <  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
246	[BUG]  [BUGGY]  if(exp  >  100  &&  exp  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  exp  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  exp  <  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
247	[BUG]  [BUGGY]  if(exp  <  10  &&  exp  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  exp  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  exp  <  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
248	[BUG]  [BUGGY]  if(value  >  10  &&  exp  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  10  &&  exp  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  10  &&  exp  <  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
249	[BUG]  [BUGGY]  if(exp  >  20  &&  mantissa  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  mantissa  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  mantissa  >  Long.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
250	[BUG]  [BUGGY]  if(exp  >  20  ||  mantissa  <=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  ||  mantissa  <=  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  mantissa  <=  Long.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
251	[BUG]  [BUGGY]  if(x  >  20  ||  mantissa  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  20  ||  mantissa  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  20  ||  mantissa  >  Long.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
252	[BUG]  [BUGGY]  if(exp  >  20  ||  mantissa  <  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  ||  mantissa  <  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  mantissa  <  Long.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
253	[BUG]  [BUGGY]  if(mantissa  >  20  ||  exp  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(mantissa  >  20  ||  exp  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(mantissa  >  20  ||  exp  >  Long.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
254	[BUG]  [BUGGY]  if(exp  <  20  ||  mantissa  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  20  ||  mantissa  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  20  ||  mantissa  >  Long.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
255	[BUG]  [BUGGY]  if(exp  >  20  ||  value  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  ||  value  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  value  >  Long.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
256	[BUG]  [BUGGY]  int  exp  =  Integer.valueOf(value);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.valueOf(value);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.valueOf(value);	  int    exp    =    Integer.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	28	None	replace
257	[BUG]  [BUGGY]  int  exp  =  Integer.valueOf(mantissa);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.valueOf(mantissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.valueOf(mantissa);	  int    exp    =    Integer.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	28	None	replace
258	[BUG]  [BUGGY]  int  exp  =  Integer.parseInt(value);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.parseInt(value);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.parseInt(value);	  int    exp    =    Integer.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	28	None	replace
259	[BUG]  [BUGGY]  int  exp  =  Integer.parseInt(mantissa);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.parseInt(mantissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.parseInt(mantissa);	  int    exp    =    Integer.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	28	None	replace
260	[BUG]  [BUGGY]  int  exp  =  Integer.valueOf(0);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.valueOf(0);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.valueOf(0);	  int    exp    =    Integer.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	28	None	replace
261	[BUG]  [BUGGY]  int  exp  =  Integer.parseInt(x);  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.parseInt(x);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.parseInt(x);	  int    exp    =    Integer.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	28	None	replace
262	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Expression.valueOf(x)+  1);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Expression.valueOf(x)+  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Expression.valueOf(x)+  1);	  int    exp    =    Integer.toString(Expression.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
263	[BUG]  [BUGGY]  int  exp  =  Integer.toString(String.valueOf(x));  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(String.valueOf(x));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(String.valueOf(x));	  int    exp    =    Integer.toString(Expression.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
264	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Long.valueOf(x));  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Long.valueOf(x));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Long.valueOf(x));	  int    exp    =    Integer.toString(Expression.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
265	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Expression.valueOf(x  +  1));  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Expression.valueOf(x  +  1));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Expression.valueOf(x  +  1));	  int    exp    =    Integer.toString(Expression.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
266	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Short.valueOf(x));  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Short.valueOf(x));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Short.valueOf(x));	  int    exp    =    Integer.toString(Expression.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
267	[BUG]  [BUGGY]  if(exp  >  100  &&  mantissa  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  mantissa  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  mantissa  <=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
268	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
269	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  ==  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  ==  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
270	[BUG]  [BUGGY]  if(exp  <  10  &&  mantissa  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  mantissa  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  mantissa  <=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
271	[BUG]  [BUGGY]  if(x  >  10  &&  mantissa  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  mantissa  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  mantissa  <=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
272	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  >=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  >=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  >=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
273	[BUG]  [BUGGY]  if(exp  <=  10  &&  exp  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <=  10  &&  exp  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <=  10  &&  exp  <=  Integer.MAX_VALUE)  {	  if(exp    <=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
274	[BUG]  [BUGGY]  if(exp  <=  10  &&  exp  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <=  10  &&  exp  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <=  10  &&  exp  <=  Integer.MIN_VALUE)  {	  if(exp    <=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
275	[BUG]  [BUGGY]  if(exp  <=  10  &&  isEmpty(x)||  isEmpty(x))  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <=  10  &&  isEmpty(x)||  isEmpty(x))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <=  10  &&  isEmpty(x)||  isEmpty(x))  {	  if(exp    <=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
276	[BUG]  [BUGGY]  if(x  >  100  ||  value  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  100  ||  value  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  100  ||  value  <  Integer.MAX_VALUE)  {	  if(x    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
277	[BUG]  [BUGGY]  if(value  >  100)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  100)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  100)  {	  if(x    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
278	[BUG]  [BUGGY]  if(x  >  100  ||  value  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  100  ||  value  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  100  ||  value  <  Integer.MIN_VALUE)  {	  if(x    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
279	[BUG]  [BUGGY]  if(value  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  <  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  <  0)  {	  if(value    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
280	[BUG]  [BUGGY]  int  exp  =  Math.pow(10,  value);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.pow(10,  value);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.pow(10,  value);	  int    exp    =    Math.pow(10,    mantissa);    	non-compiled	[CE]  cannot  find  symbol  iop	60	None	replace
281	[BUG]  [BUGGY]  int  exp  =  Math.pow(10,  mantissa  -  1);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.pow(10,  mantissa  -  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.pow(10,  mantissa  -  1);	  int    exp    =    Math.pow(10,    mantissa);    	non-compiled	[CE]  cannot  find  symbol  iop	60	None	replace
282	[BUG]  [BUGGY]  int  exp  =  Math.pow(10,  mantissa  /  10);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.pow(10,  mantissa  /  10);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.pow(10,  mantissa  /  10);	  int    exp    =    Math.pow(10,    mantissa);    	non-compiled	[CE]  cannot  find  symbol  iop	60	None	replace
283	[BUG]  [BUGGY]  int  exp  =  Math.pow(10,  mantissa  +  1);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.pow(10,  mantissa  +  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.pow(10,  mantissa  +  1);	  int    exp    =    Math.pow(10,    mantissa);    	non-compiled	[CE]  cannot  find  symbol  iop	60	None	replace
284	[BUG]  [BUGGY]  int  exp  =  Math.pow(10,  mantissa  -  10);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.pow(10,  mantissa  -  10);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.pow(10,  mantissa  -  10);	  int    exp    =    Math.pow(10,    mantissa);    	non-compiled	[CE]  cannot  find  symbol  iop	60	None	replace
285	[BUG]  [BUGGY]  int  exp  =  Math.pow(10,  mantissa  *  10);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.pow(10,  mantissa  *  10);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.pow(10,  mantissa  *  10);	  int    exp    =    Math.pow(10,    mantissa);    	non-compiled	[CE]  cannot  find  symbol  iop	60	None	replace
286	[BUG]  [BUGGY]  if(x  ==  20)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  ==  20)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  ==  20)  {	  if(exp    ==    20)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
287	[BUG]  [BUGGY]  if(exp  >  100  &&  mantissa  <=  100  &&  exp  <=  100  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  mantissa  <=  100  &&  exp  <=  100  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  mantissa  <=  100  &&  exp  <=  100  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
288	[BUG]  [BUGGY]  if(x  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
289	[BUG]  [BUGGY]  if(exp  <  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
290	[BUG]  [BUGGY]  if(exp  >=  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
291	[BUG]  [BUGGY]  if(exp  >  1000  &&  mantissa  <=  1000  &&  exp  <=  1000  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  mantissa  <=  1000  &&  exp  <=  1000  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  mantissa  <=  1000  &&  exp  <=  1000  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
292	[BUG]  [BUGGY]  if(value  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
293	[BUG]  [BUGGY]  if(exp  >  20  &&  mantissa  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  mantissa  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  mantissa  <=  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
294	[BUG]  [BUGGY]  if(exp  >  20  ||  mantissa  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  ||  mantissa  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  mantissa  <  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
295	[BUG]  [BUGGY]  if(exp  <  20  ||  mantissa  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  20  ||  mantissa  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  20  ||  mantissa  <=  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
296	[BUG]  [BUGGY]  if(x  >  20  ||  mantissa  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  20  ||  mantissa  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  20  ||  mantissa  <=  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
297	[BUG]  [BUGGY]  if(exp  >  20  ||  mantissa  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  ||  mantissa  ==  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  mantissa  ==  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
298	[BUG]  [BUGGY]  int  exp  =  mantissa  /  10  +  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  mantissa  /  10  +  Math.pow(10,  exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  mantissa  /  10  +  Math.pow(10,  exp);	  int    exp    =    value    /    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	61	None	replace
299	[BUG]  [BUGGY]  int  exp  =  value  /  10  +  Math.pow(10,  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  value  /  10  +  Math.pow(10,  mantissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  value  /  10  +  Math.pow(10,  mantissa);	  int    exp    =    value    /    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	61	None	replace
300	[BUG]  [BUGGY]  int  exp  =  value  /  10  +  Math.pow(10,  value);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  value  /  10  +  Math.pow(10,  value);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  value  /  10  +  Math.pow(10,  value);	  int    exp    =    value    /    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	61	None	replace
301	[BUG]  [BUGGY]  int  exp  =  value  *  10  +  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  value  *  10  +  Math.pow(10,  exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  value  *  10  +  Math.pow(10,  exp);	  int    exp    =    value    /    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	61	None	replace
302	[BUG]  [BUGGY]  int  exp  =  value  /  10  +  Math.pow(10,  prev);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  value  /  10  +  Math.pow(10,  prev);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  value  /  10  +  Math.pow(10,  prev);	  int    exp    =    value    /    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	61	None	replace
303	[BUG]  [BUGGY]  int  exp  =  value  /  10  +  Math.pow(10,  ex);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  value  /  10  +  Math.pow(10,  ex);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  value  /  10  +  Math.pow(10,  ex);	  int    exp    =    value    /    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	61	None	replace
304	[BUG]  [BUGGY]  int  exp  =  Integer.toString(value)+  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(value)+  1;  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(value)+  1;	  int    exp    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
305	[BUG]  [BUGGY]  int  exp  =  Integer.toString(value  -  1);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(value  -  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(value  -  1);	  int    exp    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
306	[BUG]  [BUGGY]  int  exp  =  Integer.toString(value)-  1;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(value)-  1;  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(value)-  1;	  int    exp    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
307	[BUG]  [BUGGY]  int  exp  =  Integer.toString(value  /  10);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(value  /  10);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(value  /  10);	  int    exp    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
308	[BUG]  [BUGGY]  int  exp  =  Integer.toString(value  +  1);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(value  +  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(value  +  1);	  int    exp    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
309	[BUG]  [BUGGY]  int  exp  =  Integer.toString(x);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(x);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(x);	  int    exp    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
310	[BUG]  [BUGGY]  if(exp  >  10  &&  exp  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  exp  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  exp  <=  Long.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
311	[BUG]  [BUGGY]  if(exp  >  100  &&  exp  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  exp  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  exp  <  Long.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
312	[BUG]  [BUGGY]  if(exp  >  1000  &&  exp  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  exp  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  exp  <  Long.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
313	[BUG]  [BUGGY]  if(exp  <  10  &&  exp  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  exp  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  exp  <  Long.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
314	[BUG]  [BUGGY]  if(x  <  3)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  3)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  3)  {	  if(x    >    3)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
315	[BUG]  [BUGGY]  if(exp  >=  10  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  value  <=  Integer.MAX_VALUE)  {	  if(exp    >=    10)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
316	[BUG]  [BUGGY]  if(exp  >=  10  &&  value  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  value  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  value  <  Long.MIN_VALUE)  {	  if(exp    >=    10)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
317	[BUG]  [BUGGY]  if(value  >  0  &&  exp  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  &&  exp  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  &&  exp  <=  Integer.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
318	[BUG]  [BUGGY]  if(exp  >  0  &&  value  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  <  Integer.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
319	[BUG]  [BUGGY]  if(x  >  0  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  value  <=  Integer.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
320	[BUG]  [BUGGY]  if(exp  >  0  &&  value  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value  ==  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  ==  Integer.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
321	[BUG]  [BUGGY]  if(exp  >  0  &&  value!=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  value!=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value!=  Integer.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
322	[BUG]  [BUGGY]  if(x  <  0  ||  value  >  Long.parseLong(x))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  0  ||  value  >  Long.parseLong(x))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0  ||  value  >  Long.parseLong(x))  {	  if(x    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
323	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  0  ||  prev  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0  ||  prev  >  Long.MAX_VALUE)  {	  if(x    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
324	[BUG]  [BUGGY]  int  exp  =  Integer.toString(value  -  10);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(value  -  10);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(value  -  10);	  int    exp    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
325	[BUG]  [BUGGY]  if(x  >  20  &&  value  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  20  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  20  &&  value  <=  Long.MIN_VALUE)  {	  if(x    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
326	[BUG]  [BUGGY]  if(x  >  20  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  20  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  20  &&  value  <=  Integer.MIN_VALUE)  {	  if(x    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
327	[BUG]  [BUGGY]  if(x  >  20  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  20  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  20  &&  value  <=  Integer.MAX_VALUE)  {	  if(x    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
328	[BUG]  [BUGGY]  double  prev  =  value.doubleValue()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  value.doubleValue()  -  1;  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  value.doubleValue()  -  1;	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	52	None	replace
329	[BUG]  [BUGGY]  Integer.toString(exp)+   "E "  +  Integer.toString(value);  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  Integer.toString(exp)+   "E "  +  Integer.toString(value);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(exp)+   "E "  +  Integer.toString(value);	  Integer.toString(exp);    	non-compiled	[CE]  not  a  statement	55	None	replace
330	[BUG]  [BUGGY]  Integer.toString(value  -  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  Integer.toString(value  -  mantissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(value  -  mantissa);	  Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	55	None	replace
331	[BUG]  [BUGGY]  Integer.toString(value  /  10  +  Math.pow(10,  exp));  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  Integer.toString(value  /  10  +  Math.pow(10,  exp));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(value  /  10  +  Math.pow(10,  exp));	  Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	55	None	replace
332	[BUG]  [BUGGY]  Integer.toString(value,  exp);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  Integer.toString(value,  exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(value,  exp);	  Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	55	None	replace
333	[BUG]  [BUGGY]  Integer.toString(value  /  10  +  Long.parseLong(x));  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  Integer.toString(value  /  10  +  Long.parseLong(x));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(value  /  10  +  Long.parseLong(x));	  Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	55	None	replace
334	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  >=  40  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  >=  40  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  40  &&  exp  >=  40  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
335	[BUG]  [BUGGY]  if(exp  >  100  &&  mantissa  <=  40  &&  exp  <  100  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  mantissa  <=  40  &&  exp  <  100  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  mantissa  <=  40  &&  exp  <  100  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
336	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualKey(value))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualKey(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualKey(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
337	[BUG]  [BUGGY]  char  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  char  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	char  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp);	  double    prev    =    Math.abs(value)/    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
338	[BUG]  [BUGGY]  double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  value);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  value);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  value);	  double    prev    =    Math.abs(value)/    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
339	[BUG]  [BUGGY]  double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp).charValue();  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp).charValue();  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp).charValue();	  double    prev    =    Math.abs(value)/    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
340	[BUG]  [BUGGY]  int  len  =  String.valueOf(x)+  Integer.toString(exp);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  len  =  String.valueOf(x)+  Integer.toString(exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  len  =  String.valueOf(x)+  Integer.toString(exp);	  int    len    =    String.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	51	None	replace
341	[BUG]  [BUGGY]  int  len  =  String.valueOf(x).length();  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  len  =  String.valueOf(x).length();  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  len  =  String.valueOf(x).length();	  int    len    =    String.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	51	None	replace
342	[BUG]  [BUGGY]  int  len  =  String.valueOf(x)-  1;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  len  =  String.valueOf(x)-  1;  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  len  =  String.valueOf(x)-  1;	  int    len    =    String.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	51	None	replace
343	[BUG]  [BUGGY]  if(exp  >=  20  ||  mantissa  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  20  ||  mantissa  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  20  ||  mantissa  <=  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
344	[BUG]  [BUGGY]  if(Math.abs(x)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x)  +   "E "  +  Integer.toString(exp));  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(x)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x)  +   "E "  +  Integer.toString(exp));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(x)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x)  +   "E "  +  Integer.toString(exp));  }	  Integer.toString(value));    	non-compiled	[CE]  	30	None	replace
345	[BUG]  [BUGGY]  if(exp  >  20  &&  mantissa  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  mantissa  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  mantissa  <=  Long.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
346	[BUG]  [BUGGY]  if(x  <=  0  ||  x  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <=  0  ||  x  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <=  0  ||  x  <=  Integer.MAX_VALUE)  {	  if(x    >    0    ||    x    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
347	[BUG]  [BUGGY]  if(x  >  0  ||  x  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  ||  x  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  ||  x  <  Integer.MAX_VALUE)  {	  if(x    >    0    ||    x    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
348	[BUG]  [BUGGY]  if(x  <  0  ||  prev  >  Long.parseLong(x))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  0  ||  prev  >  Long.parseLong(x))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0  ||  prev  >  Long.parseLong(x))  {	  if(x    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
349	[BUG]  [BUGGY]  if(exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
350	[BUG]  [BUGGY]  if(exp  >  1000  &&  mantissa  <=  1000  &&  exp  <  1000  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  mantissa  <=  1000  &&  exp  <  1000  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  mantissa  <=  1000  &&  exp  <  1000  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
351	[BUG]  [BUGGY]  if(exp  >  0  &&  mantissa  <=  0  &&  exp  <  0  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  mantissa  <=  0  &&  exp  <  0  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  mantissa  <=  0  &&  exp  <  0  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
352	[BUG]  [BUGGY]  if(exp  >  100  ||  mantissa  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  ||  mantissa  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  ||  mantissa  >  Long.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
353	[BUG]  [BUGGY]  if(value  >  20  ||  mantissa  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  20  ||  mantissa  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  20  ||  mantissa  >  Long.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
354	[BUG]  [BUGGY]  int  exp  =  Math.pow(11,  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.pow(11,  mantissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.pow(11,  mantissa);	  int    exp    =    Math.pow(10,    mantissa);    	non-compiled	[CE]  cannot  find  symbol  iop	60	None	replace
355	[BUG]  [BUGGY]  char  exp  =  Math.pow(10,  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  char  exp  =  Math.pow(10,  mantissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	char  exp  =  Math.pow(10,  mantissa);	  int    exp    =    Math.pow(10,    mantissa);    	non-compiled	[CE]  cannot  find  symbol  iop	60	None	replace
356	[BUG]  [BUGGY]  if(x  <=  0  ||  isEmpty(x))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <=  0  ||  isEmpty(x))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <=  0  ||  isEmpty(x))  {	  if(x    <=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
357	[BUG]  [BUGGY]  if(exp  >  1000  &&  Integer.isInfinite(value))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  Integer.isInfinite(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  Integer.isInfinite(value))  {	  if(exp    >    10    &&    Integer.isInfinite(value))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
358	[BUG]  [BUGGY]  if(exp  >  0  &&  Integer.isInfinite(value))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  Integer.isInfinite(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  Integer.isInfinite(value))  {	  if(exp    >    10    &&    Integer.isInfinite(value))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
359	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  >=  40  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  >=  40  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  40  &&  exp  >=  40  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
360	[BUG]  [BUGGY]  if(exp  <  10  &&  mantissa  <=  40  &&  exp  >=  40  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  10  &&  mantissa  <=  40  &&  exp  >=  40  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10  &&  mantissa  <=  40  &&  exp  >=  40  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
361	[BUG]  [BUGGY]  if(exp  >  100  &&  mantissa  <=  40  &&  exp  <  100  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  mantissa  <=  40  &&  exp  <  100  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  mantissa  <=  40  &&  exp  <  100  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
362	[BUG]  [BUGGY]  if(exp  >  1000  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  value  <=  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
363	[BUG]  [BUGGY]  if(exp  >  1000  &&  exp  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  exp  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  exp  <  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
364	[BUG]  [BUGGY]  if(exp  >  20  &&  exp  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  exp  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  exp  <  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
365	[BUG]  [BUGGY]  if(exp  >  10  &&  exp  >=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  exp  >=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  exp  >=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
366	[BUG]  [BUGGY]  if(exp  >  10  &&  exp  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  exp  ==  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  exp  ==  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
367	[BUG]  [BUGGY]  if(exp  >  10  &&  value!=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  value!=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  value!=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
368	[BUG]  [BUGGY]  int  exp  =  Integer.valueOf(x  -  1);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.valueOf(x  -  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.valueOf(x  -  1);	  int    exp    =    Integer.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	28	None	replace
369	[BUG]  [BUGGY]  int  exp  =  Integer.valueOf(x  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.valueOf(x  +  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.valueOf(x  +  1);	  int    exp    =    Integer.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	28	None	replace
370	[BUG]  [BUGGY]  if(value  >  10  &&  Integer.toString(exp)!=  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  10  &&  Integer.toString(exp)!=  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  10  &&  Integer.toString(exp)!=  0)  {	  if(exp    >    10    &&    Integer.toString(exp)!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
371	[BUG]  [BUGGY]  if(exp  <  1  ||  exp  >  1)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  1  ||  exp  >  1)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  1  ||  exp  >  1)  {	  if(exp    <    1    ||    exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
372	[BUG]  [BUGGY]  if(exp  >  20  &&  exp  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  exp  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  exp  <  Long.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
373	[BUG]  [BUGGY]  if(exp  >  100  &&  exp  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  exp  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  exp  <=  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
374	[BUG]  [BUGGY]  if(exp  >  20  &&  exp  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  exp  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  exp  <  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
375	[BUG]  [BUGGY]  if(exp  >  10  &&  exp  >=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  exp  >=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  exp  >=  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
376	[BUG]  [BUGGY]  if(exp  >  10  &&  value!=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  value!=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  value!=  Long.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
377	[BUG]  [BUGGY]  if(exp  >  1000  &&  value  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  value  <=  Long.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
378	[BUG]  [BUGGY]  if(value  >  0  ||  mantissa  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  ||  mantissa  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  ||  mantissa  <=  Integer.MAX_VALUE)  {	  if(x    >    0    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
379	[BUG]  [BUGGY]  if(x  >=  0  ||  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >=  0  ||  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >=  0  ||  value  <=  Integer.MAX_VALUE)  {	  if(x    >    0    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
380	[BUG]  [BUGGY]  if(value!=  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value!=  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value!=  0)  {	  if(exp!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
381	[BUG]  [BUGGY]  if(binOp)  {  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(binOp)  {  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(binOp)  {  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }	  Integer.toString(exp));    	non-compiled	[CE]  ';'  expected	27	None	replace
382	[BUG]  [BUGGY]  if(binOp)  {  Integer.toString(exp));  }  else  {  add(Integer.toString(value));  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(binOp)  {  Integer.toString(exp));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(binOp)  {  Integer.toString(exp));  }  else  {  add(Integer.toString(value));  }	  Integer.toString(exp));    	non-compiled	[CE]  ';'  expected	27	None	replace
383	[BUG]  [BUGGY]  if(binOp)  {  Integer.toString(exp));  }  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(binOp)  {  Integer.toString(exp));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(binOp)  {  Integer.toString(exp));  }	  Integer.toString(exp));    	non-compiled	[CE]  ';'  expected	27	None	replace
384	[BUG]  [BUGGY]  if(binOp)  {  Integer.toString(exp));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(binOp)  {  Integer.toString(exp));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(binOp)  {  Integer.toString(exp));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Integer.toString(exp));    	non-compiled	[CE]  	27	None	replace
385	[BUG]  [BUGGY]  if(x  >  10  &&  mantissa  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  10  &&  mantissa  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10  &&  mantissa  <=  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
386	[BUG]  [BUGGY]  if(exp  <=  127)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <=  127)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <=  127)  {	  if(exp    <=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
387	[BUG]  [BUGGY]  if(exp  <=  10)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <=  10)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <=  10)  {	  if(exp    <=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
388	[BUG]  [BUGGY]  if(x  >=  10)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >=  10)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >=  10)  {	  if(exp    >=    10)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
389	[BUG]  [BUGGY]  if(exp  >=  10  &&  mantissa  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  mantissa  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  mantissa  <=  Integer.MIN_VALUE)  {	  if(exp    >=    10)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
390	[BUG]  [BUGGY]  if(exp  >=  10  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  10  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10  &&  value  <=  Integer.MIN_VALUE)  {	  if(exp    >=    10)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
391	[BUG]  [BUGGY]  if(x  >=  1)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >=  1)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >=  1)  {	  if(x    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
392	[BUG]  [BUGGY]  if(x  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  ==  1)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  ==  1)  {	  if(x    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
393	[BUG]  [BUGGY]  if(value  >  0  &&  value  <=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  &&  value  <=  Long.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
394	[BUG]  [BUGGY]  if(exp  >  1000  &&  mantissa  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  mantissa  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  mantissa  <=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
395	[BUG]  [BUGGY]  if(value  <  100)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  <  100)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  <  100)  {	  if(exp    <    100)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
396	[BUG]  [BUGGY]  if(exp  <  100  ||  binOp)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  100  ||  binOp)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  100  ||  binOp)  {	  if(exp    <    100)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
397	[BUG]  [BUGGY]  if(x  >=  0  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >=  0  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >=  0  &&  value  <=  Integer.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
398	[BUG]  [BUGGY]  if(x  <  0  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  0  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0  &&  value  <=  Integer.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
399	[BUG]  [BUGGY]  if(x  >  0  &&  value!=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  &&  value!=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  value!=  Integer.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
400	[BUG]  [BUGGY]  if(value  >  20  ||  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  20  ||  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  20  ||  value  <=  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
401	[BUG]  [BUGGY]  if(exp  >  20  ||  value  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  ||  value  ==  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  value  ==  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
402	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Expression.valueOf(x  -  1));  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Expression.valueOf(x  -  1));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Expression.valueOf(x  -  1));	  int    exp    =    Integer.toString(Expression.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
403	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Expression.valueOf(x)+  2);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Expression.valueOf(x)+  2);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Expression.valueOf(x)+  2);	  int    exp    =    Integer.toString(Expression.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
404	[BUG]  [BUGGY]  if(x  <  0  &&  value  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  0  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0  &&  value  <=  Long.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
405	[BUG]  [BUGGY]  if(x  >  0  &&  value!=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  &&  value!=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  value!=  Long.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
406	[BUG]  [BUGGY]  int  exp  =  Math.min(value,  manevrissa);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.min(value,  manevrissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.min(value,  manevrissa);	  int    exp    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	62	None	replace
407	[BUG]  [BUGGY]  if(value  >=  100)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >=  100)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >=  100)  {	  if(exp    >=    100)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
408	[BUG]  [BUGGY]  if(exp  >  500)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  500)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  500)  {	  if(exp    >    50)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
409	[BUG]  [BUGGY]  if(exp  >>  0)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >>  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >>  0)  {	  if(exp    <=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
410	[BUG]  [BUGGY]  if(x  <=  100)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <=  100)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <=  100)  {	  if(x    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
411	[BUG]  [BUGGY]  if(x  <  20)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  20)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  20)  {	  if(exp    <    20)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
412	[BUG]  [BUGGY]  if(exp  <  20  ||  binOp)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  20  ||  binOp)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  20  ||  binOp)  {	  if(exp    <    20)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
413	[BUG]  [BUGGY]  if(value  >  0  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  &&  value  <=  Integer.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
414	[BUG]  [BUGGY]  if(exp  >  1000  &&  value  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  value  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  value  <  Long.MIN_VALUE)  {	  if(exp    >    10    &&    value    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
415	[BUG]  [BUGGY]  if(exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
416	[BUG]  [BUGGY]  if(exp  >  0  &&  mantissa  <=  0  &&  exp  <  0  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  mantissa  <=  0  &&  exp  <  0  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  mantissa  <=  0  &&  exp  <  0  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
417	[BUG]  [BUGGY]  if(exp  >  100  &&  mantissa  <=  100  &&  exp  <  100  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  mantissa  <=  100  &&  exp  <  100  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  mantissa  <=  100  &&  exp  <  100  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
418	[BUG]  [BUGGY]  if(exp  >  1000  &&  mantissa  <=  1000  &&  exp  <  1000  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1000  &&  mantissa  <=  1000  &&  exp  <  1000  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000  &&  mantissa  <=  1000  &&  exp  <  1000  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
419	[BUG]  [BUGGY]  double  prev  =  Double.parseDouble(x  +  1);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Double.parseDouble(x  +  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Double.parseDouble(x  +  1);	  double    prev    =    Double.parseDouble(x);    	non-compiled	[CE]  cannot  find  symbol  iop	53	None	replace
420	[BUG]  [BUGGY]  double  prev  =  Double.parseDouble(x  -  1);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  Double.parseDouble(x  -  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Double.parseDouble(x  -  1);	  double    prev    =    Double.parseDouble(x);    	non-compiled	[CE]  cannot  find  symbol  iop	53	None	replace
421	[BUG]  [BUGGY]  if(value  ==  100)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  ==  100)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  ==  100)  {	  if(exp    ==    100)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
422	[BUG]  [BUGGY]  if(x!=  100)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x!=  100)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x!=  100)  {	  if(exp!=    100)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
423	[BUG]  [BUGGY]  if(value!=  100)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value!=  100)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value!=  100)  {	  if(exp!=    100)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
424	[BUG]  [BUGGY]  if(exp  >=  20  ||  mantissa  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >=  20  ||  mantissa  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  20  ||  mantissa  <=  Integer.MIN_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
425	[BUG]  [BUGGY]  if(x  >  9)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  9)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  9)  {	  if(x    >    3)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
426	[BUG]  [BUGGY]  int  exp  =  Math.max(mantissa,  exp  +  1);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.max(mantissa,  exp  +  1);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.max(mantissa,  exp  +  1);	  int    exp    =    Math.max(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
427	[BUG]  [BUGGY]  if(exp  <=  1  ||  exp  <  2)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <=  1  ||  exp  <  2)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <=  1  ||  exp  <  2)  {	  if(exp    <    1    ||    exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
428	[BUG]  [BUGGY]  if(exp  <  0  ||  exp  <  2)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  0  ||  exp  <  2)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  0  ||  exp  <  2)  {	  if(exp    <    1    ||    exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
429	[BUG]  [BUGGY]  if(exp  >  20  ||  mantissa  >=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  ||  mantissa  >=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  mantissa  >=  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
430	[BUG]  [BUGGY]  int  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp);	  double    prev    =    Math.abs(value)/    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
431	[BUG]  [BUGGY]  if(exp  >  0  &&  mantissa  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  mantissa  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  mantissa  <=  Long.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
432	[BUG]  [BUGGY]  if(exp  >  0  ||  value  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  ||  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  ||  value  <=  Long.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
433	[BUG]  [BUGGY]  int  exp  =  Integer.toString(mantissa);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(mantissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(mantissa);	  int    exp    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
434	[BUG]  [BUGGY]  if(x  >  0  &&  mantissa  <=  0  &&  exp  <=  0  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  &&  mantissa  <=  0  &&  exp  <=  0  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  mantissa  <=  0  &&  exp  <=  0  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
435	[BUG]  [BUGGY]  int  exp  =  Math.min(mantissa,  exp);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Math.min(mantissa,  exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.min(mantissa,  exp);	  int    exp    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	62	None	replace
436	[BUG]  [BUGGY]  if(exp  >  100  &&  mantissa  <=  40  &&  exp  <=  100  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  mantissa  <=  40  &&  exp  <=  100  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  mantissa  <=  40  &&  exp  <=  100  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
437	[BUG]  [BUGGY]  if(exp  >  20  &&  mantissa  <=  20  &&  exp  <=  20  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  mantissa  <=  20  &&  exp  <=  20  &&  isEqualValue(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  mantissa  <=  20  &&  exp  <=  20  &&  isEqualValue(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
438	[BUG]  [BUGGY]  if(value  >  0  ||  exp  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  ||  exp  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  ||  exp  <=  Integer.MAX_VALUE)  {	  if(x    >    0    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
439	[BUG]  [BUGGY]  if(value  >  0  ||  exp  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  0  ||  exp  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0  ||  exp  <  Integer.MAX_VALUE)  {	  if(x    >    0    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
440	[BUG]  [BUGGY]  if(x  >  0  ||  exp  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  ||  exp  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  ||  exp  <=  Integer.MAX_VALUE)  {	  if(x    >    0    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
441	[BUG]  [BUGGY]  if(x  >  100  ||  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  100  ||  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  100  ||  value  <=  Integer.MAX_VALUE)  {	  if(x    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
442	[BUG]  [BUGGY]  if(x  >  100  ||  value  >=  Integer.toString(exp))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  100  ||  value  >=  Integer.toString(exp))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  100  ||  value  >=  Integer.toString(exp))  {	  if(x    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
443	[BUG]  [BUGGY]  if(x  >  100  ||  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  100  ||  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  100  ||  value  <=  Integer.MIN_VALUE)  {	  if(x    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
444	[BUG]  [BUGGY]  int  len  =  String.valueOf(x,  value);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  len  =  String.valueOf(x,  value);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  len  =  String.valueOf(x,  value);	  int    len    =    String.valueOf(x);    	non-compiled	[CE]  cannot  find  symbol  iop	51	None	replace
445	[BUG]  [BUGGY]  int  exp  =  mantissa  *  10  +  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  mantissa  *  10  +  Math.pow(10,  exp);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  mantissa  *  10  +  Math.pow(10,  exp);	  int    exp    =    value    /    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	61	None	replace
446	[BUG]  [BUGGY]  if(exp!=  Integer.toString(value))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp!=  Integer.toString(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp!=  Integer.toString(value))  {	  if(exp!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
447	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Expression.valueOf(value));  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Expression.valueOf(value));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Expression.valueOf(value));	  int    exp    =    Integer.toString(Expression.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
448	[BUG]  [BUGGY]  int  exp  =  Integer.toString(value.valueOf(x));  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(value.valueOf(x));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(value.valueOf(x));	  int    exp    =    Integer.toString(Expression.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
449	[BUG]  [BUGGY]  int  exp  =  Integer.toString(value,  Expression.valueOf(x));  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(value,  Expression.valueOf(x));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(value,  Expression.valueOf(x));	  int    exp    =    Integer.toString(Expression.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
450	[BUG]  [BUGGY]  if(exp  >  20  ||  mantissa  >=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  ||  mantissa  >=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  mantissa  >=  Integer.MIN_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
451	[BUG]  [BUGGY]  if(exp  >  20  ||  mantissa!=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  ||  mantissa!=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  mantissa!=  Integer.MIN_VALUE)  {	  if(exp    >    20    ||    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
452	[BUG]  [BUGGY]  if(x  <  0  ||  x  >  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  <  0  ||  x  >  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0  ||  x  >  Integer.MAX_VALUE)  {	  if(x    >    0    ||    x    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
453	[BUG]  [BUGGY]  if(exp  >  0  &&  exp  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  exp  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  exp  <  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
454	[BUG]  [BUGGY]  if(exp  >  1  &&  exp  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1  &&  exp  <  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1  &&  exp  <  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
455	[BUG]  [BUGGY]  if(exp  >  100  &&  mantissa  <=  40  &&  exp  <=  100  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  100  &&  mantissa  <=  40  &&  exp  <=  100  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  100  &&  mantissa  <=  40  &&  exp  <=  100  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
456	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value,  Integer.toString(exp)))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value,  Integer.toString(exp)))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value,  Integer.toString(exp)))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
457	[BUG]  [BUGGY]  if(exp  >  20  &&  mantissa  <=  20  &&  exp  <=  20  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  mantissa  <=  20  &&  exp  <=  20  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  mantissa  <=  20  &&  exp  <=  20  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    40    &&    exp    <=    40    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
458	[BUG]  [BUGGY]  if(exp  >  0  &&  exp  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  exp  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  exp  <  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
459	[BUG]  [BUGGY]  if(exp  >  1  &&  exp  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1  &&  exp  <  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1  &&  exp  <  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
460	[BUG]  [BUGGY]  if(exp  >  20  &&  mantissa  <=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  mantissa  <=  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  mantissa  <=  Long.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
461	[BUG]  [BUGGY]  if(exp  >  20  &&  mantissa  <  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  mantissa  <  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  mantissa  <  Long.MAX_VALUE)  {	  if(exp    >    20    ||    mantissa    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
462	[BUG]  [BUGGY]  if(exp  <  0  ||  value  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  0  ||  value  >  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  0  ||  value  >  Long.MAX_VALUE)  {	  if(exp    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
463	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Math.pow(10,  exp));  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  exp  =  Integer.toString(Math.pow(10,  exp));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Math.pow(10,  exp));	  int    exp    =    Integer.toString(Math.abs(x));    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
464	[BUG]  [BUGGY]  char  exp  =  Integer.toString(Math.abs(x));  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  char  exp  =  Integer.toString(Math.abs(x));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	char  exp  =  Integer.toString(Math.abs(x));	  int    exp    =    Integer.toString(Math.abs(x));    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
465	[BUG]  [BUGGY]  if(value  >  10)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(value  >  10)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  10)  {	  if(x    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
466	[BUG]  [BUGGY]  if(exp  >  1  &&  mantissa  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1  &&  mantissa  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1  &&  mantissa  <=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
467	[BUG]  [BUGGY]  if(exp  >  0  &&  mantissa  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  mantissa  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  mantissa  <=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
468	[BUG]  [BUGGY]  double  x  =  Double.parseDouble(x);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  x  =  Double.parseDouble(x);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  x  =  Double.parseDouble(x);	  double    prev    =    Double.parseDouble(x);    	non-compiled	[CE]  cannot  find  symbol  iop	53	None	replace
469	[BUG]  [BUGGY]  int  prev  =  Double.parseDouble(x);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  int  prev  =  Double.parseDouble(x);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  prev  =  Double.parseDouble(x);	  double    prev    =    Double.parseDouble(x);    	non-compiled	[CE]  cannot  find  symbol  iop	53	None	replace
470	[BUG]  [BUGGY]  double  prev  =  String.parseDouble(x);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  prev  =  String.parseDouble(x);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  String.parseDouble(x);	  double    prev    =    Double.parseDouble(x);    	non-compiled	[CE]  cannot  find  symbol  iop	53	None	replace
471	[BUG]  [BUGGY]  char  prev  =  Double.parseDouble(value);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  char  prev  =  Double.parseDouble(value);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	char  prev  =  Double.parseDouble(value);	  double    prev    =    Double.parseDouble(x);    	non-compiled	[CE]  cannot  find  symbol  iop	53	None	replace
472	[BUG]  [BUGGY]  if(exp  >  1  &&  mantissa  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1  &&  mantissa  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1  &&  mantissa  <=  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
473	[BUG]  [BUGGY]  if(exp  >  1  &&  mantissa  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1  &&  mantissa  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1  &&  mantissa  <=  Long.MIN_VALUE)  {	  if(exp    >    10    &&    mantissa    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
474	[BUG]  [BUGGY]  if(exp  >  0  &&  mantissa  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  mantissa  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  mantissa  <=  Integer.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
475	[BUG]  [BUGGY]  if(exp  >  1  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1  &&  value  <=  Integer.MAX_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
476	[BUG]  [BUGGY]  if(exp  >  1  &&  mantissa  <=  0  &&  exp  <=  0)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1  &&  mantissa  <=  0  &&  exp  <=  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1  &&  mantissa  <=  0  &&  exp  <=  0)  {	  if(exp    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
477	[BUG]  [BUGGY]  if(exp  >  1  &&  mantissa  <=  MAX_EXPR_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1  &&  mantissa  <=  MAX_EXPR_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1  &&  mantissa  <=  MAX_EXPR_VALUE)  {	  if(exp    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
478	[BUG]  [BUGGY]  if(exp  >  1  &&  mantissa  <=  Math.abs(exp))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1  &&  mantissa  <=  Math.abs(exp))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1  &&  mantissa  <=  Math.abs(exp))  {	  if(exp    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
479	[BUG]  [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }	  Integer.toString(exp));    	non-compiled	[CE]  ';'  expected	27	None	replace
480	[BUG]  [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Integer.toString(exp));    	non-compiled	[CE]  	27	None	replace
481	[BUG]  [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp));  }  else  {  add(Integer.toString(value));  }  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp));  }  else  {  add(Integer.toString(value));  }	  Integer.toString(exp));    	non-compiled	[CE]  ';'  expected	27	None	replace
482	[BUG]  [BUGGY]  if(Math.abs(mantissa)>  value)  {  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(mantissa)>  value)  {  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(mantissa)>  value)  {  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }	  Integer.toString(exp));    	non-compiled	[CE]  ';'  expected	27	None	replace
483	[BUG]  [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp);  }  else  {  add(Long.toString(value));  }  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp);  }  else  {  add(Long.toString(value));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp);  }  else  {  add(Long.toString(value));  }	  Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  iop	27	None	replace
484	[BUG]  [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp));  }  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(mantissa)  <  100)  {  Integer.toString(exp));  }	  Integer.toString(exp));    	non-compiled	[CE]  ';'  expected	27	None	replace
485	[BUG]  [BUGGY]  if(exp  >  0  ||  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  ||  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  ||  value  <=  Integer.MIN_VALUE)  {	  if(exp    >    0    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
486	[BUG]  [BUGGY]  if(exp  >  20  &&  value  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  value  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  value  <  Long.MIN_VALUE)  {	  if(exp    >    10    &&    value    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
487	[BUG]  [BUGGY]  if(exp  >  1  &&  mantissa  <=  1  &&  exp  <=  1  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1  &&  mantissa  <=  1  &&  exp  <=  1  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1  &&  mantissa  <=  1  &&  exp  <=  1  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
488	[BUG]  [BUGGY]  if(mantissa  >  0  &&  exp  <=  0  &&  exp  <=  0  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(mantissa  >  0  &&  exp  <=  0  &&  exp  <=  0  &&  isEqualTo(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(mantissa  >  0  &&  exp  <=  0  &&  exp  <=  0  &&  isEqualTo(value))  {	  if(exp    >    10    &&    mantissa    <=    10    &&    exp    <=    10    &&    isEqualTo(value))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
489	[BUG]  [BUGGY]  Integer.toString(value  /  10  +  Math.pow(10,  exp  +  1));  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  Integer.toString(value  /  10  +  Math.pow(10,  exp  +  1));  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(value  /  10  +  Math.pow(10,  exp  +  1));	  Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	55	None	replace
490	[BUG]  [BUGGY]  if(exp  <=  100)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <=  100)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <=  100)  {	  if(exp    <    100)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
491	[BUG]  [BUGGY]  if(exp  >  10  &&  Integer.isEmpty(value))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  Integer.isEmpty(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  Integer.isEmpty(value))  {	  if(exp    >    10    &&    Integer.isInfinite(value))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
492	[BUG]  [BUGGY]  if(exp  >  1  &&  Integer.isInfinite(value))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1  &&  Integer.isInfinite(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1  &&  Integer.isInfinite(value))  {	  if(exp    >    10    &&    Integer.isInfinite(value))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
493	[BUG]  [BUGGY]  if(exp  <=  1  ||  (exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <=  1  ||  (exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <=  1  ||  (exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0))  {	  if(exp    <=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
494	[BUG]  [BUGGY]  if(exp  <=  1  ||  (exp  >  0  &&  mantissa  <=  0))  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <=  1  ||  (exp  >  0  &&  mantissa  <=  0))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <=  1  ||  (exp  >  0  &&  mantissa  <=  0))  {	  if(exp    <=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
495	[BUG]  [BUGGY]  if(exp  <  2  ||  (exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0))  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  2  ||  (exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  2  ||  (exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0))  {	  if(exp    <=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
496	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  value  >=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  value  >=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  value  >=  Long.MIN_VALUE)  {	  if(exp    >=    100)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
497	[BUG]  [BUGGY]  if(exp  >  1  &&  Integer.toString(exp)!=  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  1  &&  Integer.toString(exp)!=  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1  &&  Integer.toString(exp)!=  0)  {	  if(exp    >    10    &&    Integer.toString(exp)!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
498	[BUG]  [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x));  }  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(mantissa)  <  100)  {  Integer.toString(value));  }  else  {  add(Long.toString(x));  }	  Integer.toString(value));    	non-compiled	[CE]  ';'  expected	30	None	replace
499	[BUG]  [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(value));  }  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(value));  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(mantissa)  <  100)  {  Integer.toString(value));  }	  Integer.toString(value));    	non-compiled	[CE]  ';'  expected	30	None	replace
500	[BUG]  [BUGGY]  if(Math.abs(exp)  <  100)  {  Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(exp)  <  100)  {  Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(exp)  <  100)  {  Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Integer.toString(value));    	non-compiled	[CE]  	30	None	replace
501	[BUG]  [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Math.abs(mantissa)  <  100)  {  Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Math.abs(mantissa)  <  100)  {  Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Integer.toString(value));    	non-compiled	[CE]  	30	None	replace
502	[BUG]  [BUGGY]  if(exp  >  20  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  &&  value  <=  Integer.MIN_VALUE)  {	  if(exp    >    10    &&    value    <=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
503	[BUG]  [BUGGY]  if(Expr.abs(value)  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Expr.abs(value)  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Expr.abs(value)  <=  Integer.MIN_VALUE)  {	  if(value    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
504	[BUG]  [BUGGY]  if(Expression.isEmpty(x)&&  value  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(Expression.isEmpty(x)&&  value  >  0)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(Expression.isEmpty(x)&&  value  >  0)  {	  if(value    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
505	[BUG]  [BUGGY]  if(exp  <  20  ||  mantissa  >  Integer.toString(exp))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  20  ||  mantissa  >  Integer.toString(exp))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  20  ||  mantissa  >  Integer.toString(exp))  {	  if(exp    <    20)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
506	[BUG]  [BUGGY]  double  exp  =  Math.pow(10,  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  double  exp  =  Math.pow(10,  mantissa);  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  exp  =  Math.pow(10,  mantissa);	  double    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	54	None	replace
507	[BUG]  [BUGGY]  if(x  >  0  &&  exp  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(x  >  0  &&  exp  <=  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  exp  <=  Long.MIN_VALUE)  {	  if(x    >    0    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
508	[BUG]  [BUGGY]  if(exp  >  0  &&  exp  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  exp  <  Long.MIN_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  exp  <  Long.MIN_VALUE)  {	  if(exp    >    10    &&    exp    <    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
509	[BUG]  [BUGGY]  if(exp  >  20  ||  value  >=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  20  ||  value  >=  Integer.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  value  >=  Integer.MAX_VALUE)  {	  if(exp    >    20    ||    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
510	[BUG]  [BUGGY]  if(exp  <  1  ||  (exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  1  ||  (exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  1  ||  (exp  >  0  &&  mantissa  <=  0  &&  exp  <=  0))  {	  if(exp    <=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
511	[BUG]  [BUGGY]  if(exp  <  1  ||  exp  >  Integer.toString(value))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  <  1  ||  exp  >  Integer.toString(value))  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  1  ||  exp  >  Integer.toString(value))  {	  if(exp    <=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
512	[BUG]  [BUGGY]  if(exp  >  0  &&  mantissa  <=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  &&  mantissa  <=  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  mantissa  <=  Long.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
513	[BUG]  [BUGGY]  if(exp  >  0  ||  value  <=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }      [BUGGY]  if(exp  >  0  ||  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  ||  value  <=  Long.MAX_VALUE)  {	  if(exp    >    0    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
