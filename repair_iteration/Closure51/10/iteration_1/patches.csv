bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(exp  <  20)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  <  20)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  20)  {	  if(exp    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
2	[BUG]  [BUGGY]  if(x  >  20)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(x  >  20)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  20)  {	  if(exp    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  if(exp  >=  20)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >=  20)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  20)  {	  if(exp    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  if(exp  >  50)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  50)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  50)  {	  if(exp    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  if(exp  ==  20)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  ==  20)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  ==  20)  {	  if(exp    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  if(exp  >  10  &&  exp  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  exp  <  Integer.MIN_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  exp  <  Integer.MIN_VALUE)  {	  if(exp    >    3)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  if(exp  >  10  &&  exp  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  exp  <  Integer.MAX_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  exp  <  Integer.MAX_VALUE)  {	  if(exp    >    3)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  if(exp  <  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  <  0)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  0)  {	  if(exp    >    3)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  if(exp  >  10  &&  exp  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  exp  <  Long.MIN_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  exp  <  Long.MIN_VALUE)  {	  if(exp    >    3)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  if(exp  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  ==  0)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  ==  0)  {	  if(exp    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  if(exp  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >=  0)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  0)  {	  if(exp    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  if(exp!=  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp!=  0)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp!=  0)  {	  if(exp    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  if(value  >  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(value  >  0)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(value  >  0)  {	  if(exp    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  if(x  <  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(x  <  0)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <  0)  {	  if(x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  if(x  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(x  ==  0)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  ==  0)  {	  if(x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  if(x  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(x  >=  0)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >=  0)  {	  if(x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  if(x  <=  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(x  <=  0)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  <=  0)  {	  if(x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  if(exp  <  1)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  <  1)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  1)  {	  if(exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  if(exp  <  100)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  <  100)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  100)  {	  if(exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  if(exp  <  1  ||  exp  <  2)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  <  1  ||  exp  <  2)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  1  ||  exp  <  2)  {	  if(exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
21	[BUG]  [BUGGY]  if(exp  <=  2)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  <=  2)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <=  2)  {	  if(exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  if(exp  <  10)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  <  10)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <  10)  {	  if(exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  if(exp  >=  1)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >=  1)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  1)  {	  if(exp    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  int  exp  =  Integer.toString(value);  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  int  exp  =  Integer.toString(value);  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(value);	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
25	[BUG]  [BUGGY]  double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp);  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.abs(value)/  10  +  Math.pow(10,  exp);	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
26	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Math.abs(x));  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  int  exp  =  Integer.toString(Math.abs(x));  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Math.abs(x));	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
27	[BUG]  [BUGGY]  Integer.toString(exp));  [CE]  ';'  expected  [FE]                        ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  Integer.toString(exp));  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(exp));	      	non-compiled	[CE]  ';'  expected	6	None	replace
28	[BUG]  [BUGGY]  int  exp  =  Integer.valueOf(x);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  int  exp  =  Integer.valueOf(x);  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.valueOf(x);	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
29	[BUG]  [BUGGY]  int  exp  =  Integer.toString(Expression.valueOf(x));  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  int  exp  =  Integer.toString(Expression.valueOf(x));  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Integer.toString(Expression.valueOf(x));	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
30	[BUG]  [BUGGY]  Integer.toString(value));  [CE]  ';'  expected  [FE]                              ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  Integer.toString(value));  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(value));	      	non-compiled	[CE]  ';'  expected	6	None	replace
31	[BUG]  [BUGGY]  if(x  >  100)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(x  >  100)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  100)  {	  if(exp    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  if(exp  >=  100)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >=  100)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  100)  {	  if(exp    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  if(exp  >  1000)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  1000)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  1000)  {	  if(exp    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  if(exp  ==  100)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  ==  100)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  ==  100)  {	  if(exp    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  if(exp!=  100)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp!=  100)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp!=  100)  {	  if(exp    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  if(exp  >  10  &&  value  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  value  <  Long.MIN_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  value  <  Long.MIN_VALUE)  {	  if(exp    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  if(exp  >=  10)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >=  10)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >=  10)  {	  if(exp    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  if(exp  <=  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  <=  0)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <=  0)  {	  if(exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  if(exp  <=  1)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  <=  1)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  <=  1)  {	  if(exp    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  if(x  >  3)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(x  >  3)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  3)  {	  if(exp    >    3)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  mantissa  <=  Integer.MIN_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  Integer.MIN_VALUE)  {	  if(exp    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  mantissa  <=  Integer.MAX_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  Integer.MAX_VALUE)  {	  if(exp    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  if(x  >  10)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(x  >  10)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  10)  {	  if(exp    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  if(exp  >  10  &&  value  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  value  <=  Long.MIN_VALUE)  {	  if(exp    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  mantissa  <=  Long.MIN_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  Long.MIN_VALUE)  {	  if(exp    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  if(exp  >  10  &&  Integer.toString(exp)!=  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  Integer.toString(exp)!=  0)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  Integer.toString(exp)!=  0)  {	  if(exp    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  if(exp  >  10  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  value  <=  Integer.MAX_VALUE)  {	  if(exp    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  if(exp  >  10  &&  Integer.isInfinite(value))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  Integer.isInfinite(value))  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  Integer.isInfinite(value))  {	  if(exp    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  if(x  >  0  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(x  >  0  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  value  <=  Integer.MIN_VALUE)  {	  if(x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  if(x  >  0  &&  value  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(x  >  0  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  &&  value  <=  Long.MIN_VALUE)  {	  if(x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  int  len  =  String.valueOf(x);  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  int  len  =  String.valueOf(x);  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  len  =  String.valueOf(x);	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
52	[BUG]  [BUGGY]  double  prev  =  value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  double  prev  =  value.doubleValue();  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  value.doubleValue();	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
53	[BUG]  [BUGGY]  double  prev  =  Double.parseDouble(x);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  double  prev  =  Double.parseDouble(x);  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Double.parseDouble(x);	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
54	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  double  prev  =  Math.pow(10,  exp);  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	double  prev  =  Math.pow(10,  exp);	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
55	[BUG]  [BUGGY]  Integer.toString(exp);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  Integer.toString(exp);  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	Integer.toString(exp);	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
56	[BUG]  [BUGGY]  if(x  >  1)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(x  >  1)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  1)  {	  if(exp    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
57	[BUG]  [BUGGY]  if(exp  >  10  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  value  <=  Integer.MIN_VALUE)  {	  if(exp    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
58	[BUG]  [BUGGY]  if(x  >  0  ||  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(x  >  0  ||  value  <=  Integer.MAX_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  ||  value  <=  Integer.MAX_VALUE)  {	  if(x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
59	[BUG]  [BUGGY]  if(x  >  0  ||  x  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(x  >  0  ||  x  <=  Integer.MAX_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(x  >  0  ||  x  <=  Integer.MAX_VALUE)  {	  if(x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  int  exp  =  Math.pow(10,  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  int  exp  =  Math.pow(10,  mantissa);  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.pow(10,  mantissa);	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
61	[BUG]  [BUGGY]  int  exp  =  value  /  10  +  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  int  exp  =  value  /  10  +  Math.pow(10,  exp);  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  value  /  10  +  Math.pow(10,  exp);	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
62	[BUG]  [BUGGY]  int  exp  =  Math.min(mantissa,  value);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  int  exp  =  Math.min(mantissa,  value);  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.min(mantissa,  value);	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
63	[BUG]  [BUGGY]  int  exp  =  Math.max(mantissa,  value);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  int  exp  =  Math.max(mantissa,  value);  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	int  exp  =  Math.max(mantissa,  value);	      	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
64	[BUG]  [BUGGY]  if(exp  >  0  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  0  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  <=  Integer.MAX_VALUE)  {	  if(exp    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
65	[BUG]  [BUGGY]  if(exp  >  0  &&  value  <=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  0  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  <=  Long.MAX_VALUE)  {	  if(exp    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
66	[BUG]  [BUGGY]  if(exp  >  0  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  0  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  <=  Integer.MIN_VALUE)  {	  if(exp    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
67	[BUG]  [BUGGY]  if(exp  >  0  &&  value  <=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  0  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  0  &&  value  <=  Long.MIN_VALUE)  {	  if(exp    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
68	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualValue(value))  {	  if(exp    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
69	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualValue(value))  {	  if(exp    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
70	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value))  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  10  &&  exp  <=  10  &&  isEqualTo(value))  {	  if(exp    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  10  &&  mantissa  <=  40  &&  exp  <=  40  &&  isEqualTo(value))  {	  if(exp    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
72	[BUG]  [BUGGY]  if(exp  >  20  ||  mantissa  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  20  ||  mantissa  <=  Integer.MAX_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  mantissa  <=  Integer.MAX_VALUE)  {	  if(exp    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
73	[BUG]  [BUGGY]  if(exp  >  20  ||  mantissa  <=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  20  ||  mantissa  <=  Integer.MIN_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  mantissa  <=  Integer.MIN_VALUE)  {	  if(exp    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
74	[BUG]  [BUGGY]  if(exp  >  20  ||  mantissa  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  20  ||  mantissa  >  Long.MAX_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  mantissa  >  Long.MAX_VALUE)  {	  if(exp    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
75	[BUG]  [BUGGY]  if(exp  >  20  ||  value  <=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }    [BUGGY]  if(exp  >  20  ||  value  <=  Integer.MAX_VALUE)  {  [BUGGY]    add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {  add(String.valueOf(x));  }  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	251	251	1	replace	if(exp  >  20  ||  value  <=  Integer.MAX_VALUE)  {	  if(exp    >    20)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
