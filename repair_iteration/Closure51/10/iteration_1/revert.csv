projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>2){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>0){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>1){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>100){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp<2){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>20){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x>0){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>3){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp<20){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x>20){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>=20){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>50){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp==20){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&exp<Integer.MIN_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&exp<Integer.MAX_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp<0){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&exp<Long.MIN_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp==0){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>=0){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp!=0){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(value>0){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x<0){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x==0){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x>=0){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x<=0){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp<1){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp<100){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp<1||exp<2){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp<=2){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp<10){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>=1){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251intexp=Integer.toString(value);
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251doubleprev=Math.abs(value)/10+Math.pow(10,exp);
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251intexp=Integer.toString(Math.abs(x));
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251Integer.toString(exp));
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251intexp=Integer.valueOf(x);
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251intexp=Integer.toString(Expression.valueOf(x));
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251Integer.toString(value));
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x>100){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>=100){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>1000){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp==100){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp!=100){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&value<Long.MIN_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>=10){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp<=0){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp<=1){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x>3){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&mantissa<=Integer.MIN_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&mantissa<=Integer.MAX_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x>10){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&value<=Long.MIN_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&mantissa<=Long.MIN_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&Integer.toString(exp)!=0){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&value<=Integer.MAX_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&Integer.isInfinite(value)){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x>0&&value<=Integer.MIN_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x>0&&value<=Long.MIN_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251intlen=String.valueOf(x);
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251doubleprev=value.doubleValue();
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251doubleprev=Double.parseDouble(x);
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251doubleprev=Math.pow(10,exp);
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251Integer.toString(exp);
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x>1){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&value<=Integer.MIN_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x>0||value<=Integer.MAX_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(x>0||x<=Integer.MAX_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251intexp=Math.pow(10,mantissa);
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251intexp=value/10+Math.pow(10,exp);
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251intexp=Math.min(mantissa,value);
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251intexp=Math.max(mantissa,value);
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>0&&value<=Integer.MAX_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>0&&value<=Long.MAX_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>0&&value<=Integer.MIN_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>0&&value<=Long.MIN_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&mantissa<=10&&exp<=10&&isEqualValue(value)){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&mantissa<=40&&exp<=40&&isEqualValue(value)){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&mantissa<=10&&exp<=10&&isEqualTo(value)){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>10&&mantissa<=40&&exp<=40&&isEqualTo(value)){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>20||mantissa<=Integer.MAX_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>20||mantissa<=Integer.MIN_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>20||mantissa>Long.MAX_VALUE){
projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java251if(exp>20||value<=Integer.MAX_VALUE){
