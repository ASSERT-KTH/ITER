bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(exp  >  100)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  100)  {	  }    else    if(exp    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
2	[BUG]  [BUGGY]  }  else  if(exp  >=  100)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >=  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >=  100)  {	  }    else    if(exp    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
3	[BUG]  [BUGGY]  }  else  if(exp  ==  100)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  ==  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  100)  {	  }    else    if(exp    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
4	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value)&&    isEqualValue(x,    Integer.toString(exp)))    {    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
5	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value)&&    isEqualValue(x,    Integer.toString(exp)))    {    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
6	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)!=  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)!=  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)!=  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value)&&    isEqualValue(x,    Integer.toString(exp)))    {    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
7	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&  isEqualValue(x,  Integer.toString(value)))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&  isEqualValue(x,  Integer.toString(value)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&  isEqualValue(x,  Integer.toString(value)))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value)&&    isEqualValue(x,    Integer.toString(exp)))    {    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
8	[BUG]  [BUGGY]  }  else  if(exp  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  ==  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
9	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  x  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  x  ==  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  ||  x  ==  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
10	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >>  value))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >>  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >>  value))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    >=    value))    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
11	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
12	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  ||  x  <  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  ||  x  <  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  ||  x  <  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
13	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
14	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
15	[BUG]  [BUGGY]  }  else  if(exp  <=  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <=  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <=  Long.parseLong(value))  {	  }    else    if(x    <=    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	108	None	replace
16	[BUG]  [BUGGY]  }  else  if(exp  <=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <=  Long.parseLong(x))  {	  }    else    if(x    <=    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	108	None	replace
17	[BUG]  [BUGGY]  }  else  if(x  <  Long.parseLong(value)||  x  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.parseLong(value)||  x  >  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.parseLong(value)||  x  >  Long.parseLong(value))  {	  }    else    if(x    <=    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	108	None	replace
18	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  2))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  2))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    2))    {    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
19	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  >=  2))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  >=  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  >=  2))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    2))    {    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
20	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  ==  2))  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  ==  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  ==  2))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    2))    {    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
21	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value!=  2))  {  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value!=  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value!=  2))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    2))    {    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
22	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  2))  {  [CE]  'else'  without  'if'  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  2))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    2))    {    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
23	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  2)||  isEmpty(x))  {  [CE]  'else'  without  'if'  [FE]                                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  2)||  isEmpty(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  2)||  isEmpty(x))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    2))    {    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
24	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  128))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  128))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  128))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    128))    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
25	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  128))  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  128))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  128))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    128))    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
26	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  128))  {  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  128))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  128))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    128))    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
27	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  128))  {  [CE]  'else'  without  'if'  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  128))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  128))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    128))    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
28	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  128))  {  [CE]  'else'  without  'if'  [FE]                                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  128))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  128))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    128))    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
29	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >  128))  {  [CE]  'else'  without  'if'  [FE]                                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >  128))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >  128))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    128))    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
30	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  value  +  1);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  Math.pow(10,  value  +  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  Math.pow(10,  value  +  1);	  double    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	117	None	replace
31	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  mantissa  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  Math.pow(10,  mantissa  +  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  Math.pow(10,  mantissa  +  1);	  double    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	117	None	replace
32	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  exp  +  2);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  Math.pow(10,  exp  +  2);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  Math.pow(10,  exp  +  2);	  double    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	117	None	replace
33	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  x  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  Math.pow(10,  x  +  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  Math.pow(10,  x  +  1);	  double    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	117	None	replace
34	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  exp  /  1);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  Math.pow(10,  exp  /  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  Math.pow(10,  exp  /  1);	  double    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	117	None	replace
35	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  exp  -  1);  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  Math.pow(10,  exp  -  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  Math.pow(10,  exp  -  1);	  double    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	117	None	replace
36	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >>  value))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >>  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >>  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)!=    value))    {    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
37	[BUG]  [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)!=  value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)!=  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)!=  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)!=    value))    {    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
38	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)!=  mantissa))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)!=  mantissa))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)!=  mantissa))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)!=    value))    {    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
39	[BUG]  [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)!=  value))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)!=  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)!=  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)!=    value))    {    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
40	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <=  2)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <=  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <=  2)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
41	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  2)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  2)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
42	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  2))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  2))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
43	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  2))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  2))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
44	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  ==  2)  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  ==  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  ==  2)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
45	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)!=  2)  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)!=  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)!=  2)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
46	[BUG]  [BUGGY]  Integer.toString(exp));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer.toString(exp));  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer.toString(exp));	  Integer.toString(value));    	non-compiled	[CE]  ';'  expected	115	None	replace
47	[BUG]  [BUGGY]  Integer.toString(x));  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer.toString(x));  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer.toString(x));	  Integer.toString(value));    	non-compiled	[CE]  ';'  expected	115	None	replace
48	[BUG]  [BUGGY]  int  value  =  Integer.toString(value);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  value  =  Integer.toString(value);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  value  =  Integer.toString(value);	  Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	115	None	replace
49	[BUG]  [BUGGY]  Integer.toString(value  -  1));  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer.toString(value  -  1));  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer.toString(value  -  1));	  Integer.toString(value));    	non-compiled	[CE]  ';'  expected	115	None	replace
50	[BUG]  [BUGGY]  }  else  if(x  ==  1)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  1)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  1)  {	  }    else    if(x    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
51	[BUG]  [BUGGY]  }  else  if(exp  ==  0)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  ==  0)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  0)  {	  }    else    if(x    ==    0)    {    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
52	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  <  100)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  <  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  <  100)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	99	None	replace
53	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  100)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  100)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	99	None	replace
54	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  >  100)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  >  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  >  100)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	99	None	replace
55	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  >=  100)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  >=  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  >=  100)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	99	None	replace
56	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  ==  100)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  ==  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  ==  100)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	99	None	replace
57	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  x  <  100)  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  x  <  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  x  <  100)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	99	None	replace
58	[BUG]  [BUGGY]  }  else  if(exp  <=  0)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <=  0)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <=  0)  {	  }    else    if(x    <=    0)    {    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
59	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)+  1)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)+  1)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)+  1)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1)    {    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
60	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  2)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  2)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1)    {    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
61	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)*  2)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)*  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)*  2)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1)    {    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
62	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)||(exp  >=  Integer.toString(x)))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)||(exp  >=  Integer.toString(x)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)||(exp  >=  Integer.toString(x)))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1)    {    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
63	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)&&  Character.isDigit(x))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)&&  Character.isDigit(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)&&  Character.isDigit(x))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1)    {    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
64	[BUG]  [BUGGY]  }  else  if(exp  <  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  Long.parseLong(x))  {	  }    else    if(exp    >    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
65	[BUG]  [BUGGY]  }  else  if(exp  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >=  Long.parseLong(x))  {	  }    else    if(exp    >    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
66	[BUG]  [BUGGY]  }  else  if(exp  ==  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  ==  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  Long.parseLong(x))  {	  }    else    if(exp    >    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
67	[BUG]  [BUGGY]  }  else  if(x  >  Long.parseLong(exp))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.parseLong(exp))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.parseLong(exp))  {	  }    else    if(exp    >    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
68	[BUG]  [BUGGY]  }  else  if(exp!=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp!=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp!=  Long.parseLong(x))  {	  }    else    if(exp    >    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
69	[BUG]  [BUGGY]  }  else  if(exp  >  Long.parseLong(x)||  exp  <=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.parseLong(x)||  exp  <=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.parseLong(x)||  exp  <=  Long.parseLong(x))  {	  }    else    if(exp    >    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
70	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    prev    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	87	None	replace
71	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    prev    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	87	None	replace
72	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    prev    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	87	None	replace
73	[BUG]  [BUGGY]  }  else  if(exp  >  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    prev    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	87	None	replace
74	[BUG]  [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MIN_VALUE  ||  prev  >=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    prev    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	87	None	replace
75	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    prev    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	87	None	replace
76	[BUG]  [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    prev    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	87	None	replace
77	[BUG]  [BUGGY]  double  x  =  mantissa.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  x  =  mantissa.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  x  =  mantissa.doubleValue();	  double    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	118	None	replace
78	[BUG]  [BUGGY]  double  x  =  prev.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  x  =  prev.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  x  =  prev.doubleValue();	  double    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	118	None	replace
79	[BUG]  [BUGGY]  double  x  =  value.doubleValue()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  x  =  value.doubleValue()  +  1;  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  x  =  value.doubleValue()  +  1;	  double    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	118	None	replace
80	[BUG]  [BUGGY]  double  x  =  this.value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  x  =  this.value.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  x  =  this.value.doubleValue();	  double    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	118	None	replace
81	[BUG]  [BUGGY]  double  x  =  lang.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  x  =  lang.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  x  =  lang.doubleValue();	  double    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	118	None	replace
82	[BUG]  [BUGGY]  double  x  =  last.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  x  =  last.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  x  =  last.doubleValue();	  double    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	118	None	replace
83	[BUG]  [BUGGY]  }  else  if(exp  >=  Long.MIN_VALUE  ||  exp  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >=  Long.MIN_VALUE  ||  exp  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >=  Long.MIN_VALUE  ||  exp  >  Long.MAX_VALUE)  {	  }    else    if(exp!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
84	[BUG]  [BUGGY]  }  else  if(exp  <  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  Long.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  Long.MIN_VALUE)  {	  }    else    if(exp!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
85	[BUG]  [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  ||  exp  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  ||  exp  ==  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  Long.MIN_VALUE  ||  exp  ==  Long.MAX_VALUE)  {	  }    else    if(exp    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
86	[BUG]  [BUGGY]  }  else  if(exp  ==  Integer.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  ==  Integer.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  Integer.MIN_VALUE)  {	  }    else    if(exp    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
87	[BUG]  [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  ||  exp  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  ||  exp  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  Long.MIN_VALUE  ||  exp  >  Long.MAX_VALUE)  {	  }    else    if(exp    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
88	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  127))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  127))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    127))    {    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
89	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  >=  127))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  >=  127))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  >=  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    127))    {    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
90	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  ==  127))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  ==  127))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  ==  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    127))    {    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
91	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value!=  127))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value!=  127))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value!=  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    127))    {    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
92	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <  127))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <  127))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    127))    {    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
93	[BUG]  [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  <=  value))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  <=  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  <=  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    <=    value))    {    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
94	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <=  2))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <=  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <=  2))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    <=    value))    {    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
95	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
96	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
97	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
98	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
99	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
100	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
101	[BUG]  [BUGGY]  }  else  if(!(value  *  10  *  Math.pow(10,  exp  +  1)  ==  mantissa))  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  *  10  *  Math.pow(10,  exp  +  1)  ==  mantissa))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  *  10  *  Math.pow(10,  exp  +  1)  ==  mantissa))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
102	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)!=  value))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)!=  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)!=  value))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
103	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  <=  value))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  <=  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  <=  value))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
104	[BUG]  [BUGGY]  }  else  if(!(x  *  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(x  *  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(x  *  10  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
105	[BUG]  [BUGGY]  }  else  if(x  <  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)||    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
106	[BUG]  [BUGGY]  }  else  if(x  >=  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)||    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
107	[BUG]  [BUGGY]  }  else  if(x  ==  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)||    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
108	[BUG]  [BUGGY]  }  else  if(exp  >  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)||    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
109	[BUG]  [BUGGY]  }  else  if(x!=  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)||    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
110	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  ==  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  ==  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  ==  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	79	None	replace
111	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value!=  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value!=  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value!=  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	79	None	replace
112	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  >=  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  >=  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  >=  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	79	None	replace
113	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	79	None	replace
114	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	79	None	replace
115	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	80	None	replace
116	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	80	None	replace
117	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	80	None	replace
118	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	80	None	replace
119	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	80	None	replace
120	[BUG]  [BUGGY]  int  prev  =  Math.pow(10,  exp  +  1);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  prev  =  Math.pow(10,  exp  +  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  prev  =  Math.pow(10,  exp  +  1);	  long    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	116	None	replace
121	[BUG]  [BUGGY]  long  prev  =  Math.pow(10,  mantissa  +  1);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  long  prev  =  Math.pow(10,  mantissa  +  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	long  prev  =  Math.pow(10,  mantissa  +  1);	  long    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	116	None	replace
122	[BUG]  [BUGGY]  long  prev  =  Math.pow(10,  value  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  long  prev  =  Math.pow(10,  value  +  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	long  prev  =  Math.pow(10,  value  +  1);	  long    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	116	None	replace
123	[BUG]  [BUGGY]  long  prev  =  Math.pow(10,  x  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  long  prev  =  Math.pow(10,  x  +  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	long  prev  =  Math.pow(10,  x  +  1);	  long    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	116	None	replace
124	[BUG]  [BUGGY]  long  prev  =  Math.pow(10,  exp  +  2);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  long  prev  =  Math.pow(10,  exp  +  2);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	long  prev  =  Math.pow(10,  exp  +  2);	  long    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	116	None	replace
125	[BUG]  [BUGGY]  long  prev  =  Math.pow(10,  exp  /  1);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  long  prev  =  Math.pow(10,  exp  /  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	long  prev  =  Math.pow(10,  exp  /  1);	  long    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	116	None	replace
126	[BUG]  [BUGGY]  }  else  if(exp!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp!=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp!=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	44	None	replace
127	[BUG]  [BUGGY]  }  else  if(exp!=  0)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp!=  0)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp!=  0)  {	  }    else    if(exp    >    0)    {    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
128	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  ||  value  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  ||  value  ==  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  ||  value  ==  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	114	None	replace
129	[BUG]  [BUGGY]  }  else  if(exp!=  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp!=  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp!=  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	114	None	replace
130	[BUG]  [BUGGY]  }  else  if(value!=  Long.MIN_VALUE  &&  x  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(value!=  Long.MIN_VALUE  &&  x  ==  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(value!=  Long.MIN_VALUE  &&  x  ==  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	114	None	replace
131	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  value  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  value  ==  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  ||  value  ==  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	114	None	replace
132	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	114	None	replace
133	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa))    {    	non-compiled	[CE]  'else'  without  'if'	61	None	replace
134	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  >=  value))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  >=  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  >=  value))  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa))    {    	non-compiled	[CE]  'else'  without  'if'	61	None	replace
135	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)!=  value))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)!=  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)!=  value))  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa))    {    	non-compiled	[CE]  'else'  without  'if'	61	None	replace
136	[BUG]  [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa))  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa))    {    	non-compiled	[CE]  'else'  without  'if'	61	None	replace
137	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa)    {    	non-compiled	[CE]  'else'  without  'if'	93	None	replace
138	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa)    {    	non-compiled	[CE]  'else'  without  'if'	93	None	replace
139	[BUG]  [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa)    {    	non-compiled	[CE]  'else'  without  'if'	93	None	replace
140	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  >=  value)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  >=  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  >=  value)  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa)    {    	non-compiled	[CE]  'else'  without  'if'	93	None	replace
141	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)!=  value)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)!=  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)!=  value)  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa)    {    	non-compiled	[CE]  'else'  without  'if'	93	None	replace
142	[BUG]  [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa)  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa)    {    	non-compiled	[CE]  'else'  without  'if'	93	None	replace
143	[BUG]  [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa)    {    	non-compiled	[CE]  'else'  without  'if'	93	None	replace
144	[BUG]  [BUGGY]  }  else  if(exp  ==  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  ==  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  Long.parseLong(value))  {	  }    else    if(x    ==    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	52	None	replace
145	[BUG]  [BUGGY]  }  else  if(value  ==  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(value  ==  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(value  ==  Long.parseLong(x))  {	  }    else    if(x    ==    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	52	None	replace
146	[BUG]  [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  >=  value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  >=  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  >=  value))  {	  }    else    if(!(exp    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
147	[BUG]  [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  ==  2)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  ==  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  ==  2)  {	  }    else    if(!(exp    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
148	[BUG]  [BUGGY]  }  else  if(!(exp  *  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(exp  *  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(exp  *  10  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(exp    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
149	[BUG]  [BUGGY]  }  else  if(exp  >=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	112	None	replace
150	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
151	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
152	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
153	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
154	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
155	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE  ||  value  >=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE  ||  value  >=  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE  ||  value  >=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
156	[BUG]  [BUGGY]  Integer  x  =  Integer.toString(value)+  1;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer  x  =  Integer.toString(value)+  1;  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  x  =  Integer.toString(value)+  1;	  Integer    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	64	None	replace
157	[BUG]  [BUGGY]  Integer  x  =  Integer.toString(mantissa);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer  x  =  Integer.toString(mantissa);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  x  =  Integer.toString(mantissa);	  Integer    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	64	None	replace
158	[BUG]  [BUGGY]  Integer  x  =  Integer.toString(value  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer  x  =  Integer.toString(value  +  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  x  =  Integer.toString(value  +  1);	  Integer    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	64	None	replace
159	[BUG]  [BUGGY]  Integer  x  =  Integer.toString(value,  exp);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer  x  =  Integer.toString(value,  exp);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  x  =  Integer.toString(value,  exp);	  Integer    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	64	None	replace
160	[BUG]  [BUGGY]  Integer  x  =  Integer.toString(value)-  1;  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer  x  =  Integer.toString(value)-  1;  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  x  =  Integer.toString(value)-  1;	  Integer    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	64	None	replace
161	[BUG]  [BUGGY]  }  else  if(exp  <  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  Long.parseLong(value))  {	  }    else    if(exp    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
162	[BUG]  [BUGGY]  }  else  if(exp  >=  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >=  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >=  Long.parseLong(value))  {	  }    else    if(exp    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
163	[BUG]  [BUGGY]  }  else  if(exp!=  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp!=  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp!=  Long.parseLong(value))  {	  }    else    if(exp    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
164	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
165	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
166	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
167	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
168	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
169	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE  ||  value  >=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE  ||  value  >=  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE  ||  value  >=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
170	[BUG]  [BUGGY]  }  else  if(x  <  10  ||  value  >  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  10  ||  value  >  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10  ||  value  >  Long.parseLong(x))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	124	None	replace
171	[BUG]  [BUGGY]  }  else  if(x  <  100  ||  x  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  100  ||  x  >  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  100  ||  x  >  Long.parseLong(value))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	124	None	replace
172	[BUG]  [BUGGY]  }  else  if(x  <  10  ||  exp  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  10  ||  exp  >  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10  ||  exp  >  Long.parseLong(value))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	124	None	replace
173	[BUG]  [BUGGY]  }  else  if(x  >=  10  ||  x  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  10  ||  x  >  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  10  ||  x  >  Long.parseLong(value))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	124	None	replace
174	[BUG]  [BUGGY]  }  else  if(exp  <  10  ||  x  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  10  ||  x  >  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  10  ||  x  >  Long.parseLong(value))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	124	None	replace
175	[BUG]  [BUGGY]  }  else  if(x  <  1  ||  x  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  1  ||  x  >  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  1  ||  x  >  Long.parseLong(value))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	124	None	replace
176	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  >=  mantissa))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  >=  mantissa))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  >=  mantissa))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    >=    value))    {    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
177	[BUG]  [BUGGY]  }  else  if(x  <  10  ||  prev  >  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  10  ||  prev  >  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10  ||  prev  >  Long.parseLong(x))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
178	[BUG]  [BUGGY]  }  else  if(x  <  100  ||  x  >  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  100  ||  x  >  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  100  ||  x  >  Long.parseLong(prev))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
179	[BUG]  [BUGGY]  }  else  if(x  >=  10  ||  x  >  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  10  ||  x  >  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  10  ||  x  >  Long.parseLong(prev))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
180	[BUG]  [BUGGY]  }  else  if(x  <  1  ||  x  >  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  1  ||  x  >  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  1  ||  x  >  Long.parseLong(prev))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
181	[BUG]  [BUGGY]  }  else  if(x  <  10  ||  x  >=  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  10  ||  x  >=  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10  ||  x  >=  Long.parseLong(prev))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
182	[BUG]  [BUGGY]  }  else  if(x  <  2  ||  x  >  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  2  ||  x  >  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  2  ||  x  >  Long.parseLong(prev))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
183	[BUG]  [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  exp  <  127)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  exp  <  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.parseLong(value)&&  exp  <  127)  {	  }    else    if(x    >    Long.parseLong(value)&&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
184	[BUG]  [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  mantissa  <=  127)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  mantissa  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.parseLong(value)&&  mantissa  <=  127)  {	  }    else    if(x    >    Long.parseLong(value)&&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
185	[BUG]  [BUGGY]  }  else  if(x  >=  Long.parseLong(value)&&  mantissa  <=  127)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.parseLong(value)&&  mantissa  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.parseLong(value)&&  mantissa  <=  127)  {	  }    else    if(x    >    Long.parseLong(value)&&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
186	[BUG]  [BUGGY]  }  else  if(exp  >  Long.parseLong(value)&&  mantissa  <=  127)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.parseLong(value)&&  mantissa  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.parseLong(value)&&  mantissa  <=  127)  {	  }    else    if(x    >    Long.parseLong(value)&&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
187	[BUG]  [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  exp  <  127)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  exp  <  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.parseLong(value)&&  exp  <  127)  {	  }    else    if(x    >    Long.parseLong(value)&&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
188	[BUG]  [BUGGY]  }  else  if(x  ==  Long.parseLong(value)&&  mantissa  <=  127)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.parseLong(value)&&  mantissa  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.parseLong(value)&&  mantissa  <=  127)  {	  }    else    if(x    >    Long.parseLong(value)&&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
189	[BUG]  [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  exp  <=  127)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  exp  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.parseLong(value)&&  exp  <=  127)  {	  }    else    if(x    >    Long.parseLong(value)&&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
190	[BUG]  [BUGGY]  }  else  if(exp  <  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  Long.MAX_VALUE)  {	  }    else    if(x    <    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	40	None	replace
191	[BUG]  [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    <    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	40	None	replace
192	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)!=  value))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)!=  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)!=  value))  {	  }    else    if(!(mantissa    %    100    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
193	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  >=  value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  >=  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  >=  value))  {	  }    else    if(!(mantissa    %    100    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
194	[BUG]  [BUGGY]  }  else  if(!(exp  %  100  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(exp  %  100  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(exp  %  100  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(mantissa    %    100    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
195	[BUG]  [BUGGY]  }  else  if(!(value  %  100  *  Math.pow(10,  exp  +  1)  ==  mantissa))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  100  *  Math.pow(10,  exp  +  1)  ==  mantissa))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  100  *  Math.pow(10,  exp  +  1)  ==  mantissa))  {	  }    else    if(!(mantissa    %    100    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
196	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  <=  value))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  <=  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  <=  value))  {	  }    else    if(!(mantissa    %    100    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
197	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  x))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  x))  {	  }    else    if(!(x    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	95	None	replace
198	[BUG]  [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  >=  value))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  >=  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  >=  value))  {	  }    else    if(!(x    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	95	None	replace
199	[BUG]  [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {	  }    else    if(x    <    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
200	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	45	None	replace
201	[BUG]  [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  &&  value  <  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  &&  value  <  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MAX_VALUE  &&  value  <  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	45	None	replace
202	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	45	None	replace
203	[BUG]  [BUGGY]  }  else  if(exp  >  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	45	None	replace
204	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  value  ==  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	45	None	replace
205	[BUG]  [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	45	None	replace
206	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  ||  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  ||  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  ||  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	45	None	replace
207	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  ==  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  ==  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  ==  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
208	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value!=  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value!=  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value!=  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
209	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  >=  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  >=  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  >=  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
210	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
211	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
212	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
213	[BUG]  [BUGGY]  }  else  if(exp  >  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
214	[BUG]  [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
215	[BUG]  [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  ||  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  ||  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MIN_VALUE  ||  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
216	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  ||  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  ||  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  ||  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
217	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
218	[BUG]  [BUGGY]  double  prev  =  mantissa.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  mantissa.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  mantissa.doubleValue();	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	82	None	replace
219	[BUG]  [BUGGY]  double  prev  =  x.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  x.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  x.doubleValue();	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	82	None	replace
220	[BUG]  [BUGGY]  double  prev  =  this.value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  this.value.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  this.value.doubleValue();	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	82	None	replace
221	[BUG]  [BUGGY]  double  prev  =  value.doubleValue()  /  2;  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  value.doubleValue()  /  2;  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  value.doubleValue()  /  2;	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	82	None	replace
222	[BUG]  [BUGGY]  double  prev  =  value.doubleValue()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  value.doubleValue()  +  1;  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  value.doubleValue()  +  1;	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	82	None	replace
223	[BUG]  [BUGGY]  double  prev  =  value.doubleValue()  /  10;  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  value.doubleValue()  /  10;  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  value.doubleValue()  /  10;	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	82	None	replace
224	[BUG]  [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  ||  x  >  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  ||  x  >  Long.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MIN_VALUE  ||  x  >  Long.MIN_VALUE)  {	  }    else    if(x    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	102	None	replace
225	[BUG]  [BUGGY]  }  else  if(exp  <=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <=  Long.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <=  Long.MIN_VALUE)  {	  }    else    if(x    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	102	None	replace
226	[BUG]  [BUGGY]  }  else  if(x  <  10  ||  value  >  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  10  ||  value  >  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10  ||  value  >  Integer.toString(x))  {	  }    else    if(x    <    10    ||    x    >    Integer.toString(value))    {    	non-compiled	[CE]  'else'  without  'if'	92	None	replace
227	[BUG]  [BUGGY]  }  else  if(x  <  10  ||  exp  >  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  10  ||  exp  >  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10  ||  exp  >  Integer.toString(x))  {	  }    else    if(x    <    10    ||    x    >    Integer.toString(value))    {    	non-compiled	[CE]  'else'  without  'if'	92	None	replace
228	[BUG]  [BUGGY]  }  else  if(x  <  100  ||  x  >  Integer.toString(value))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  100  ||  x  >  Integer.toString(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  100  ||  x  >  Integer.toString(value))  {	  }    else    if(x    <    10    ||    x    >    Integer.toString(value))    {    	non-compiled	[CE]  'else'  without  'if'	92	None	replace
229	[BUG]  [BUGGY]  }  else  if(x  <  1  ||  x  >  Integer.toString(value))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  1  ||  x  >  Integer.toString(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  1  ||  x  >  Integer.toString(value))  {	  }    else    if(x    <    10    ||    x    >    Integer.toString(value))    {    	non-compiled	[CE]  'else'  without  'if'	92	None	replace
230	[BUG]  [BUGGY]  }  else  if(x  <  10  ||  x  >  Long.toString(value))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  10  ||  x  >  Long.toString(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10  ||  x  >  Long.toString(value))  {	  }    else    if(x    <    10    ||    x    >    Integer.toString(value))    {    	non-compiled	[CE]  'else'  without  'if'	92	None	replace
231	[BUG]  [BUGGY]  }  else  if(x  >=  10  ||  x  >  Integer.toString(value))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  10  ||  x  >  Integer.toString(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  10  ||  x  >  Integer.toString(value))  {	  }    else    if(x    <    10    ||    x    >    Integer.toString(value))    {    	non-compiled	[CE]  'else'  without  'if'	92	None	replace
232	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <  2)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <  2)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    <    value))    {    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
233	[BUG]  [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
234	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
235	[BUG]  [BUGGY]  }  else  if(exp  >  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
236	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
237	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  <  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  <  Long.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  value  <  Long.MIN_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
238	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  ==  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  ==  Long.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  value  ==  Long.MIN_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
239	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  value);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  Math.pow(10,  value);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  Math.pow(10,  value);	  double    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	69	None	replace
240	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  x);  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  Math.pow(10,  x);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  Math.pow(10,  x);	  double    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	69	None	replace
241	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  Math.pow(10,  mantissa);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  Math.pow(10,  mantissa);	  double    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	69	None	replace
242	[BUG]  [BUGGY]  char  prev  =  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  char  prev  =  Math.pow(10,  exp);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	char  prev  =  Math.pow(10,  exp);	  double    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	69	None	replace
243	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <  2)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <  2)  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    <    value))    {    	non-compiled	[CE]  'else'  without  'if'	106	None	replace
244	[BUG]  [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  <  value))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  <  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  <  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    <    value))    {    	non-compiled	[CE]  'else'  without  'if'	106	None	replace
245	[BUG]  [BUGGY]  }  else  if(exp  <=  2)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <=  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <=  2)  {	  }    else    if(x    <=    2)    {    	non-compiled	[CE]  'else'  without  'if'	90	None	replace
246	[BUG]  [BUGGY]  }  else  if(x  <  10  ||  exp  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  10  ||  exp  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10  ||  exp  >  Long.MAX_VALUE)  {	  }    else    if(x    <    10    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	123	None	replace
247	[BUG]  [BUGGY]  }  else  if(x  <  100  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  100  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  100  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    <    10    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	123	None	replace
248	[BUG]  [BUGGY]  }  else  if(x  <  1  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  1  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  1  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    <    10    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	123	None	replace
249	[BUG]  [BUGGY]  }  else  if(x  <  2  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  2  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  2  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    <    10    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	123	None	replace
250	[BUG]  [BUGGY]  }  else  if(x  >=  10  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  10  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  10  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    <    10    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	123	None	replace
251	[BUG]  [BUGGY]  }  else  if(x  <  10  ||  value  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  10  ||  value  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10  ||  value  >  Long.MAX_VALUE)  {	  }    else    if(x    <    10    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	123	None	replace
252	[BUG]  [BUGGY]  int  x  =  Integer.toString(mantissa);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Integer.toString(mantissa);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Integer.toString(mantissa);	  int    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
253	[BUG]  [BUGGY]  int  x  =  Integer.toString(value)+  1;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Integer.toString(value)+  1;  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Integer.toString(value)+  1;	  int    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
254	[BUG]  [BUGGY]  double  x  =  Integer.toString(value);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  x  =  Integer.toString(value);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  x  =  Integer.toString(value);	  int    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
255	[BUG]  [BUGGY]  int  x  =  Integer.toString(value)-  1;  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Integer.toString(value)-  1;  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Integer.toString(value)-  1;	  int    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
256	[BUG]  [BUGGY]  long  x  =  Integer.toString(value);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  long  x  =  Integer.toString(value);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	long  x  =  Integer.toString(value);	  int    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
257	[BUG]  [BUGGY]  int  x  =  Integer.toString(value  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Integer.toString(value  +  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Integer.toString(value  +  1);	  int    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
258	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  ||  value  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  ||  value  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  ||  value  >=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	113	None	replace
259	[BUG]  [BUGGY]  }  else  if(value!=  Long.MIN_VALUE  &&  x  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(value!=  Long.MIN_VALUE  &&  x  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(value!=  Long.MIN_VALUE  &&  x  >=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	113	None	replace
260	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	113	None	replace
261	[BUG]  [BUGGY]  }  else  if(exp  >=  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >=  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >=  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	113	None	replace
262	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    mantissa    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	103	None	replace
263	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  ||  mantissa  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  ||  mantissa  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  ||  mantissa  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    mantissa    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	103	None	replace
264	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    mantissa    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	103	None	replace
265	[BUG]  [BUGGY]  }  else  if(exp  >  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    mantissa    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	103	None	replace
266	[BUG]  [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  ||  mantissa  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  ||  mantissa  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MIN_VALUE  ||  mantissa  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    mantissa    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	103	None	replace
267	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  exp  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  exp  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  &&  exp  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    mantissa    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	103	None	replace
268	[BUG]  [BUGGY]  }  else  if(exp  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <=  Long.MAX_VALUE)  {	  }    else    if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	119	None	replace
269	[BUG]  [BUGGY]  int  x  =  Math.pow(10,  value);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Math.pow(10,  value);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Math.pow(10,  value);	  int    x    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	66	None	replace
270	[BUG]  [BUGGY]  int  x  =  Math.pow(10,  exp  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Math.pow(10,  exp  +  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Math.pow(10,  exp  +  1);	  int    x    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	66	None	replace
271	[BUG]  [BUGGY]  int  x  =  Math.pow(10,  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Math.pow(10,  mantissa);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Math.pow(10,  mantissa);	  int    x    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	66	None	replace
272	[BUG]  [BUGGY]  int  x  =  Math.pow(10,  prev);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Math.pow(10,  prev);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Math.pow(10,  prev);	  int    x    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	66	None	replace
273	[BUG]  [BUGGY]  double  x  =  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  x  =  Math.pow(10,  exp);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  x  =  Math.pow(10,  exp);	  int    x    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	66	None	replace
274	[BUG]  [BUGGY]  int  x  =  Math.pow(10,  exp  -  1);  [CE]  cannot  find  symbol  iop  [FE]                                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Math.pow(10,  exp  -  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Math.pow(10,  exp  -  1);	  int    x    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	66	None	replace
275	[BUG]  [BUGGY]  int  x  =  Math.pow(10,  1);  [CE]  cannot  find  symbol  iop  [FE]                                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Math.pow(10,  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Math.pow(10,  1);	  int    x    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	66	None	replace
276	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  value!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  value!=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  ||  value!=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    &&    value!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
277	[BUG]  [BUGGY]  }  else  if(value  ==  Long.MIN_VALUE  &&  x!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(value  ==  Long.MIN_VALUE  &&  x!=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(value  ==  Long.MIN_VALUE  &&  x!=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    &&    value!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
278	[BUG]  [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    &&    value!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
279	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  ||  value!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  ||  value!=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  ||  value!=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    &&    value!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
280	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  ||  value!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  ||  value!=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MIN_VALUE  ||  value!=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    &&    value!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
281	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    &&    value!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
282	[BUG]  [BUGGY]  }  else  if(exp  <  2  ||  exp  <  1)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  2  ||  exp  <  1)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  2  ||  exp  <  1)  {	  }    else    if(exp    <    1)    {    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
283	[BUG]  [BUGGY]  }  else  if(exp  <  2  ||  exp  >  Integer.toString(value))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  2  ||  exp  >  Integer.toString(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  2  ||  exp  >  Integer.toString(value))  {	  }    else    if(exp    <    2    ||    exp    >    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
284	[BUG]  [BUGGY]  }  else  if(x  <  2  ||  exp  >  Integer.toString(exp))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  2  ||  exp  >  Integer.toString(exp))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  2  ||  exp  >  Integer.toString(exp))  {	  }    else    if(exp    <    2    ||    exp    >    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
285	[BUG]  [BUGGY]  }  else  if(exp  <  2  ||  exp  >=  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  2  ||  exp  >=  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  2  ||  exp  >=  Integer.toString(x))  {	  }    else    if(exp    <    2    ||    exp    >    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
286	[BUG]  [BUGGY]  }  else  if(exp  <  1  ||  exp  >  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  1  ||  exp  >  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  1  ||  exp  >  Integer.toString(x))  {	  }    else    if(exp    <    2    ||    exp    >    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
287	[BUG]  [BUGGY]  }  else  if(exp  <  2  ||  exp  >  Long.toString(x))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  2  ||  exp  >  Long.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  2  ||  exp  >  Long.toString(x))  {	  }    else    if(exp    <    2    ||    exp    >    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
288	[BUG]  [BUGGY]  }  else  if(exp  <  2  ||  exp  ==  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  2  ||  exp  ==  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  2  ||  exp  ==  Integer.toString(x))  {	  }    else    if(exp    <    2    ||    exp    >    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
289	[BUG]  [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  exp  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  exp  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.parseLong(value)&&  exp  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)&&    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
290	[BUG]  [BUGGY]  }  else  if(x  >=  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)&&    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
291	[BUG]  [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)&&    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
292	[BUG]  [BUGGY]  }  else  if(x  ==  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)&&    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
293	[BUG]  [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  exp  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  exp  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.parseLong(value)&&  exp  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)&&    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
294	[BUG]  [BUGGY]  }  else  if(exp  >  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)&&    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
295	[BUG]  [BUGGY]  }  else  if(x!=  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)&&    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
296	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  ||  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  ||  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MIN_VALUE  ||  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >=    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	122	None	replace
297	[BUG]  [BUGGY]  }  else  if(x!=  100)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  100)  {	  }    else    if(x    ==    100)    {    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
298	[BUG]  [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  &&  mantissa  <=  127)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  &&  mantissa  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MAX_VALUE  &&  mantissa  <=  127)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	121	None	replace
299	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  mantissa  <  127)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  mantissa  <  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  mantissa  <  127)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	121	None	replace
300	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  exp  <  127)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  exp  <  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  exp  <  127)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	121	None	replace
301	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  <=  127)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  value  <=  127)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	121	None	replace
302	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MAX_VALUE  &&  mantissa  <=  127)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MAX_VALUE  &&  mantissa  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MAX_VALUE  &&  mantissa  <=  127)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	121	None	replace
303	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  exp  <=  127)  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  exp  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  exp  <=  127)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	121	None	replace
304	[BUG]  [BUGGY]  }  else  if(exp  >  Long.MAX_VALUE  &&  mantissa  <=  127)  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.MAX_VALUE  &&  mantissa  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.MAX_VALUE  &&  mantissa  <=  127)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	121	None	replace
305	[BUG]  [BUGGY]  }  else  if(exp  >  Long.MIN_VALUE  ||  exp  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.MIN_VALUE  ||  exp  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.MIN_VALUE  ||  exp  >  Long.MAX_VALUE)  {	  }    else    if(exp    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
306	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <=  x))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <=  x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <=  x))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    x))    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
307	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)&&!BinOp.equals(value))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)&&!BinOp.equals(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)&&!BinOp.equals(value))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    x))    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
308	[BUG]  [BUGGY]  }  else  if(exp  >  0  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  0  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  0  &&  value  <=  Integer.MAX_VALUE)  {	  }    else    if(x    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
309	[BUG]  [BUGGY]  }  else  if(x  <  0  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  0  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  0  &&  value  <=  Integer.MAX_VALUE)  {	  }    else    if(x    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
310	[BUG]  [BUGGY]  }  else  if(x  >  0  &&  exp  <=  Integer.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  0  &&  exp  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  0  &&  exp  <=  Integer.MAX_VALUE)  {	  }    else    if(x    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
311	[BUG]  [BUGGY]  }  else  if(x  >  0  &&  value  ==  Integer.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  0  &&  value  ==  Integer.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  0  &&  value  ==  Integer.MAX_VALUE)  {	  }    else    if(x    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
312	[BUG]  [BUGGY]  }  else  if(x  >  0  &&  value!=  Integer.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  0  &&  value!=  Integer.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  0  &&  value!=  Integer.MAX_VALUE)  {	  }    else    if(x    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
313	[BUG]  [BUGGY]  }  else  if(x  >=  0  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  0  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  0  &&  value  <=  Integer.MAX_VALUE)  {	  }    else    if(x    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
314	[BUG]  [BUGGY]  }  else  if(x  >  0  &&  value  <  Integer.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  0  &&  value  <  Integer.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  0  &&  value  <  Integer.MAX_VALUE)  {	  }    else    if(x    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
315	[BUG]  [BUGGY]  Integer  value  =  Integer.toString(exp);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer  value  =  Integer.toString(exp);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  value  =  Integer.toString(exp);	  Integer    x    =    Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	67	None	replace
316	[BUG]  [BUGGY]  Integer  x  =  Integer.toString(exp  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer  x  =  Integer.toString(exp  +  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  x  =  Integer.toString(exp  +  1);	  Integer    x    =    Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	67	None	replace
317	[BUG]  [BUGGY]  Integer  x  =  Long.toString(exp);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer  x  =  Long.toString(exp);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  x  =  Long.toString(exp);	  Integer    x    =    Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	67	None	replace
318	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  127))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  127))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    127))    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
319	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  127))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  127))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    127))    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
320	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  127))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  127))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    127))    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
321	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  127))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  127))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    127))    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
322	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  <  127))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  <  127))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  <  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    127))    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
323	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  ||  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
324	[BUG]  [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
325	[BUG]  [BUGGY]  }  else  if(value  ==  Long.MIN_VALUE  &&  x  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(value  ==  Long.MIN_VALUE  &&  x  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(value  ==  Long.MIN_VALUE  &&  x  <=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
326	[BUG]  [BUGGY]  }  else  if(x  >=  1)  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  1)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  1)  {	  }    else    if(x    >    1)    {    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
327	[BUG]  [BUGGY]  }  else  if(x!=  1)  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  1)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  1)  {	  }    else    if(x    >    1)    {    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
328	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  x  <  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  x  <  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  ||  x  <  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	72	None	replace
329	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	72	None	replace
330	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  x  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  x  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  ||  x  >=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	72	None	replace
331	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  2))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  2))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
332	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <=  2)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <=  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <=  2)  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
333	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >=  2)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >=  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >=  2)  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
334	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >=  2))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >=  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >=  2))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
335	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
336	[BUG]  [BUGGY]  }  else  if(exp  >  0  &&  value  <=  Double.POSITIVE_INFINITY)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  0  &&  value  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  0  &&  value  <=  Double.POSITIVE_INFINITY)  {	  }    else    if(x    >    0    &&    value    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
337	[BUG]  [BUGGY]  }  else  if(x  >  0  &&  value  ==  Double.POSITIVE_INFINITY)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  0  &&  value  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  0  &&  value  ==  Double.POSITIVE_INFINITY)  {	  }    else    if(x    >    0    &&    value    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
338	[BUG]  [BUGGY]  }  else  if(value  >  0  &&  value  <=  Double.POSITIVE_INFINITY)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(value  >  0  &&  value  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(value  >  0  &&  value  <=  Double.POSITIVE_INFINITY)  {	  }    else    if(x    >    0    &&    value    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
339	[BUG]  [BUGGY]  }  else  if(x  >  0  &&  value!=  Double.POSITIVE_INFINITY)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  0  &&  value!=  Double.POSITIVE_INFINITY)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  0  &&  value!=  Double.POSITIVE_INFINITY)  {	  }    else    if(x    >    0    &&    value    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
340	[BUG]  [BUGGY]  }  else  if(x  <  0  &&  value  <=  Double.POSITIVE_INFINITY)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  0  &&  value  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  0  &&  value  <=  Double.POSITIVE_INFINITY)  {	  }    else    if(x    >    0    &&    value    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
341	[BUG]  [BUGGY]  }  else  if(x  >=  0  &&  value  <=  Double.POSITIVE_INFINITY)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  0  &&  value  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  0  &&  value  <=  Double.POSITIVE_INFINITY)  {	  }    else    if(x    >    0    &&    value    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
342	[BUG]  [BUGGY]  }  else  if(x  >  0  &&  value  <  Double.POSITIVE_INFINITY)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  0  &&  value  <  Double.POSITIVE_INFINITY)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  0  &&  value  <  Double.POSITIVE_INFINITY)  {	  }    else    if(x    >    0    &&    value    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
343	[BUG]  [BUGGY]  }  else  if(exp  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >=  Long.MAX_VALUE)  {	  }    else    if(x    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	43	None	replace
344	[BUG]  [BUGGY]  }  else  if(exp  >  10)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  10)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  10)  {	  }    else    if(x    >    10)    {    	non-compiled	[CE]  'else'  without  'if'	70	None	replace
345	[BUG]  [BUGGY]  }  else  if(x  <  10)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  10)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10)  {	  }    else    if(x    >    10)    {    	non-compiled	[CE]  'else'  without  'if'	70	None	replace
346	[BUG]  [BUGGY]  }  else  if(x  ==  10)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  10)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  10)  {	  }    else    if(x    >    10)    {    	non-compiled	[CE]  'else'  without  'if'	70	None	replace
347	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >=  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >=  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >=  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value)&&    isEqualValue(x,    Integer.toString(exp)))    {    	non-compiled	[CE]  'else'  without  'if'	107	None	replace
348	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)!=  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)!=  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)!=  value)  &&  isEqualValue(x,  Integer.toString(exp)))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value)&&    isEqualValue(x,    Integer.toString(exp)))    {    	non-compiled	[CE]  'else'  without  'if'	107	None	replace
349	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&  isEqualValue(x,  Integer.toString(value)))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&  isEqualValue(x,  Integer.toString(value)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&  isEqualValue(x,  Integer.toString(value)))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value)&&    isEqualValue(x,    Integer.toString(exp)))    {    	non-compiled	[CE]  'else'  without  'if'	107	None	replace
350	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa)&&  isEqualValue(x,  Integer.toString(exp)))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa)&&  isEqualValue(x,  Integer.toString(exp)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa)&&  isEqualValue(x,  Integer.toString(exp)))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value)&&    isEqualValue(x,    Integer.toString(exp)))    {    	non-compiled	[CE]  'else'  without  'if'	107	None	replace
351	[BUG]  [BUGGY]  int  prev  =  Math.pow(10,  value);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  prev  =  Math.pow(10,  value);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  prev  =  Math.pow(10,  value);	  int    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	68	None	replace
352	[BUG]  [BUGGY]  int  prev  =  Math.pow(10,  x);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  prev  =  Math.pow(10,  x);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  prev  =  Math.pow(10,  x);	  int    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	68	None	replace
353	[BUG]  [BUGGY]  int  prev  =  Math.pow(10,  exp  -  1);  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  prev  =  Math.pow(10,  exp  -  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  prev  =  Math.pow(10,  exp  -  1);	  int    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	68	None	replace
354	[BUG]  [BUGGY]  int  prev  =  Math.pow(10,  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  prev  =  Math.pow(10,  mantissa);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  prev  =  Math.pow(10,  mantissa);	  int    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	68	None	replace
355	[BUG]  [BUGGY]  int  prev  =  Math.pow(10,  length);  [CE]  cannot  find  symbol  iop  [FE]                                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  prev  =  Math.pow(10,  length);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  prev  =  Math.pow(10,  length);	  int    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	68	None	replace
356	[BUG]  [BUGGY]  }  else  if(value!=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(value!=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(value!=  Long.parseLong(x))  {	  }    else    if(x!=    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
357	[BUG]  [BUGGY]  add(Integer.toString(x));  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  add(Integer.toString(x));  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	add(Integer.toString(x));	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
358	[BUG]  [BUGGY]  if(binOp)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(x));  }  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  if(binOp)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(x));  }  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	if(binOp)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(x));  }	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
359	[BUG]  [BUGGY]  if(!binOp)  {  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  if(!binOp)  {  add(Integer.toString(value));  }  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	if(!binOp)  {  add(Integer.toString(value));  }	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
360	[BUG]  [BUGGY]  if(binOp)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  if(binOp)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	if(binOp)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
361	[BUG]  [BUGGY]  if(binOp)  {  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  if(binOp)  {  add(Integer.toString(value));  }  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	if(binOp)  {  add(Integer.toString(value));  }	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
362	[BUG]  [BUGGY]  if(!binOp)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  if(!binOp)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	if(!binOp)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
363	[BUG]  [BUGGY]  if(!binOp)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(x));  }  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  if(!binOp)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(x));  }  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	if(!binOp)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(x));  }	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
364	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  <=  value)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  <=  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  <=  value)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    >    value)    {    	non-compiled	[CE]  'else'  without  'if'	101	None	replace
365	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  <=  value)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  <=  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  <=  value)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    >    value)    {    	non-compiled	[CE]  'else'  without  'if'	101	None	replace
366	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  ==  value)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  ==  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  ==  value)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    >    value)    {    	non-compiled	[CE]  'else'  without  'if'	101	None	replace
367	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  >=  value)  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  >=  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  >=  value)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    >    value)    {    	non-compiled	[CE]  'else'  without  'if'	101	None	replace
368	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  2)  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  2)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    >    value)    {    	non-compiled	[CE]  'else'  without  'if'	101	None	replace
369	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  100)  {  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  100)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    >    value)    {    	non-compiled	[CE]  'else'  without  'if'	101	None	replace
370	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  Long.MAX_VALUE)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    >    value)    {    	non-compiled	[CE]  'else'  without  'if'	101	None	replace
371	[BUG]  [BUGGY]  int  x  =  mantissa.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  mantissa.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  mantissa.doubleValue();	  int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	65	None	replace
372	[BUG]  [BUGGY]  int  x  =  prev.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  prev.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  prev.doubleValue();	  int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	65	None	replace
373	[BUG]  [BUGGY]  long  x  =  value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  long  x  =  value.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	long  x  =  value.doubleValue();	  int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	65	None	replace
374	[BUG]  [BUGGY]  int  x  =  this.mantissa.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  this.mantissa.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  this.mantissa.doubleValue();	  int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	65	None	replace
375	[BUG]  [BUGGY]  char  x  =  value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  char  x  =  value.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	char  x  =  value.doubleValue();	  int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	65	None	replace
376	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&(value  <  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&(value  <  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&(value  <  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value)&&(value    <=    Long.MIN_VALUE    ||    value    >    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
377	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  value)  &&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  value)  &&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  value)  &&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value)&&(value    <=    Long.MIN_VALUE    ||    value    >    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
378	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  value)  &&(value  <  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  value)  &&(value  <  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  value)  &&(value  <  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value)&&(value    <=    Long.MIN_VALUE    ||    value    >    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
379	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)!=  value)  &&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)!=  value)  &&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)!=  value)  &&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value)&&(value    <=    Long.MIN_VALUE    ||    value    >    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
380	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value)&&(value    <=    Long.MIN_VALUE    ||    value    >    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
381	[BUG]  [BUGGY]  }  else  if(x  <  2  ||  prev  >=  Integer.toString(value))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  2  ||  prev  >=  Integer.toString(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  2  ||  prev  >=  Integer.toString(value))  {	  }    else    if(x    <    2    ||    prev    >=    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
382	[BUG]  [BUGGY]  }  else  if(x  <  2  ||  prev  >  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  2  ||  prev  >  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  2  ||  prev  >  Integer.toString(x))  {	  }    else    if(x    <    2    ||    prev    >=    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
383	[BUG]  [BUGGY]  }  else  if(exp  <  2  ||  prev  >=  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  2  ||  prev  >=  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  2  ||  prev  >=  Integer.toString(x))  {	  }    else    if(x    <    2    ||    prev    >=    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
384	[BUG]  [BUGGY]  }  else  if(x  <  0  ||  prev  >=  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  0  ||  prev  >=  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  0  ||  prev  >=  Integer.toString(x))  {	  }    else    if(x    <    2    ||    prev    >=    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
385	[BUG]  [BUGGY]  }  else  if(x  <  2  ||  prev  ==  Integer.toString(value))  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  2  ||  prev  ==  Integer.toString(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  2  ||  prev  ==  Integer.toString(value))  {	  }    else    if(x    <    2    ||    prev    >=    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
386	[BUG]  [BUGGY]  }  else  if(x  <  1  ||  prev  >=  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  1  ||  prev  >=  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  1  ||  prev  >=  Integer.toString(x))  {	  }    else    if(x    <    2    ||    prev    >=    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
387	[BUG]  [BUGGY]  }  else  if(x  >=  2  ||  prev  >=  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  2  ||  prev  >=  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  2  ||  prev  >=  Integer.toString(x))  {	  }    else    if(x    <    2    ||    prev    >=    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
388	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
389	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
390	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
391	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
392	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Integer.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Integer.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <  Integer.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
393	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  Integer.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  Integer.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  Integer.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
394	[BUG]  [BUGGY]  }  else  if(exp  >>  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >>  Long.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >>  Long.MIN_VALUE)  {	  }    else    if(exp    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
395	[BUG]  [BUGGY]  }  else  if(x  <  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.parseLong(prev))  {	  }    else    if(x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	96	None	replace
396	[BUG]  [BUGGY]  }  else  if(x  ==  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.parseLong(prev))  {	  }    else    if(x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	96	None	replace
397	[BUG]  [BUGGY]  }  else  if(x  >=  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.parseLong(prev))  {	  }    else    if(x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	96	None	replace
398	[BUG]  [BUGGY]  }  else  if(x!=  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.parseLong(prev))  {	  }    else    if(x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	96	None	replace
399	[BUG]  [BUGGY]  }  else  if(exp  >  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.parseLong(prev))  {	  }    else    if(x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	96	None	replace
400	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  2))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  2))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
401	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)*  2))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)*  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)*  2))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
402	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  <  100))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  <  100))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  <  100))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
403	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)&&  value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)&&  value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)&&  value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
404	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)&&  value  <=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)&&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)&&  value  <=  Long.MIN_VALUE)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
405	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)*  2))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)*  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)*  2))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
406	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)+  2))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)+  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)+  2))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
407	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)/  2))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)/  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)/  2))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
408	[BUG]  [BUGGY]  }  else  if(!(x  *  10  *  Math.pow(10,  exp  +  1)+  1))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(x  *  10  *  Math.pow(10,  exp  +  1)+  1))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(x  *  10  *  Math.pow(10,  exp  +  1)+  1))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
409	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
410	[BUG]  [BUGGY]  }  else  if(exp  <  1000)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  1000)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  1000)  {	  }    else    if(x    <    1000)    {    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
411	[BUG]  [BUGGY]  }  else  if(x  >  1000)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  1000)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  1000)  {	  }    else    if(x    <    1000)    {    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
412	[BUG]  [BUGGY]  }  else  if(x  <  10000)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  10000)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10000)  {	  }    else    if(x    <    1000)    {    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
413	[BUG]  [BUGGY]  }  else  if(x  >=  1000)  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  1000)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  1000)  {	  }    else    if(x    <    1000)    {    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
414	[BUG]  [BUGGY]  }  else  if(x  ==  1000)  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  1000)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  1000)  {	  }    else    if(x    <    1000)    {    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
415	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  x  >  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	120	None	replace
416	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	120	None	replace
417	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	120	None	replace
418	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  ||  x  <  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  ||  x  <  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  ||  x  <  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	120	None	replace
419	[BUG]  [BUGGY]  }  else  if(x!=  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	120	None	replace
420	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  value)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  value)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    >    value)    {    	non-compiled	[CE]  'else'  without  'if'	101	None	replace
421	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  x  >  value)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  x  >  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  x  >  value)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    >    value)    {    	non-compiled	[CE]  'else'  without  'if'	101	None	replace
422	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  length)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  length)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  x  >  length)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    >    value)    {    	non-compiled	[CE]  'else'  without  'if'	101	None	replace
423	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  x  <  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  x  <  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  &&  x  <  Long.MAX_VALUE)  {	  }    else    if(x    <    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
424	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)&&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)&&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)&&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
425	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
426	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)||(value  <=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)||(value  <=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)||(value  <=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
427	[BUG]  [BUGGY]  }  else  if(x  >>  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >>  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >>  Long.parseLong(prev))  {	  }    else    if(x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	96	None	replace
428	[BUG]  [BUGGY]  }  else  if(x  <  0  ||  x  >  Integer.toString(value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  0  ||  x  >  Integer.toString(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  0  ||  x  >  Integer.toString(value))  {	  }    else    if(x    <    10    ||    x    >    Integer.toString(value))    {    	non-compiled	[CE]  'else'  without  'if'	92	None	replace
429	[BUG]  [BUGGY]  }  else  if(x  <=  10  ||  x  >  Integer.toString(value))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <=  10  ||  x  >  Integer.toString(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  10  ||  x  >  Integer.toString(value))  {	  }    else    if(x    <    10    ||    x    >    Integer.toString(value))    {    	non-compiled	[CE]  'else'  without  'if'	92	None	replace
430	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
431	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MIN_VALUE  ||  value  >=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MIN_VALUE  ||  value  >=  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MIN_VALUE  ||  value  >=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
432	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE  &&  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE  &&  value  >  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE  &&  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
433	[BUG]  [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  mantissa  <  127)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  mantissa  <  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.parseLong(value)&&  mantissa  <  127)  {	  }    else    if(x    >    Long.parseLong(value)&&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
434	[BUG]  [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  mantissa  <  127)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  mantissa  <  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.parseLong(value)&&  mantissa  <  127)  {	  }    else    if(x    >    Long.parseLong(value)&&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
435	[BUG]  [BUGGY]  }  else  if(x!=  Long.parseLong(value)&&  mantissa  <=  127)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.parseLong(value)&&  mantissa  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.parseLong(value)&&  mantissa  <=  127)  {	  }    else    if(x    >    Long.parseLong(value)&&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
436	[BUG]  [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  mantissa  <  128)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  mantissa  <  128)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.parseLong(value)&&  mantissa  <  128)  {	  }    else    if(x    >    Long.parseLong(value)&&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
437	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  128))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  128))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  128))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    128))    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
438	[BUG]  [BUGGY]  }  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  mantissa  <=  128))  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  mantissa  <=  128))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  mantissa  <=  128))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    128))    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
439	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  <  128))  {  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  <  128))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  <  128))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    128))    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
440	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  exp  +  1  -  value);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  Math.pow(10,  exp  +  1  -  value);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  Math.pow(10,  exp  +  1  -  value);	  double    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	117	None	replace
441	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  x  <  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  x  <  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  x  <  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	120	None	replace
442	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
443	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
444	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	113	None	replace
445	[BUG]  [BUGGY]  }  else  if(value!=  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(value!=  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(value!=  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	113	None	replace
446	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  >=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  >=  Long.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  value  >=  Long.MIN_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
447	[BUG]  [BUGGY]  }  else  if(value  ==  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(value  ==  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(value  ==  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    &&    value!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
448	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    &&    value!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
449	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  <  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  <  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  value  <  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	45	None	replace
450	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  value  >=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	45	None	replace
451	[BUG]  [BUGGY]  int  x  =  Math.pow(10,  exp  +  2);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Math.pow(10,  exp  +  2);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Math.pow(10,  exp  +  2);	  int    x    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	66	None	replace
452	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	114	None	replace
453	[BUG]  [BUGGY]  }  else  if(!(value  %  100  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  100  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  100  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa))    {    	non-compiled	[CE]  'else'  without  'if'	61	None	replace
454	[BUG]  [BUGGY]  Integer  value  =  Integer.toString(value);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer  value  =  Integer.toString(value);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  value  =  Integer.toString(value);	  Integer    x    =    Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	67	None	replace
455	[BUG]  [BUGGY]  }  else  if(x  >>  0)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >>  0)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >>  0)  {	  }    else    if(x    <=    0)    {    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
456	[BUG]  [BUGGY]  }  else  if(x  [Delete]  0)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  [Delete]  0)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  [Delete]  0)  {	  }    else    if(x    <=    0)    {    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
457	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)+  1)||(exp  >  Integer.toString(x)))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)+  1)||(exp  >  Integer.toString(x)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)+  1)||(exp  >  Integer.toString(x)))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
458	[BUG]  [BUGGY]  }  else  if(x  <  0  ||  x  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  0  ||  x  >  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  0  ||  x  >  Long.parseLong(value))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	124	None	replace
459	[BUG]  [BUGGY]  }  else  if(x  <=  10  ||  x  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <=  10  ||  x  >  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  10  ||  x  >  Long.parseLong(value))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	124	None	replace
460	[BUG]  [BUGGY]  }  else  if(x  <  1000  ||  x  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  1000  ||  x  >  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  1000  ||  x  >  Long.parseLong(value))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	124	None	replace
461	[BUG]  [BUGGY]  }  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  mantissa  <=  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  mantissa  <=  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  mantissa  <=  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	80	None	replace
462	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  ==  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  ==  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  ==  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	80	None	replace
463	[BUG]  [BUGGY]  int  prev  =  Math.pow(10,  exp  +  2);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  prev  =  Math.pow(10,  exp  +  2);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  prev  =  Math.pow(10,  exp  +  2);	  int    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	68	None	replace
464	[BUG]  [BUGGY]  }  else  if(x  <=  2  ||  prev  >=  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <=  2  ||  prev  >=  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  2  ||  prev  >=  Integer.toString(x))  {	  }    else    if(x    <    2    ||    prev    >=    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
465	[BUG]  [BUGGY]  }  else  if(x  <  0  ||  prev  >=  Integer.toString(value))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  0  ||  prev  >=  Integer.toString(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  0  ||  prev  >=  Integer.toString(value))  {	  }    else    if(x    <    2    ||    prev    >=    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
466	[BUG]  [BUGGY]  Integer  x  =  Integer.toString(value  /  10);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer  x  =  Integer.toString(value  /  10);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  x  =  Integer.toString(value  /  10);	  Integer    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	64	None	replace
467	[BUG]  [BUGGY]  Integer  x  =  Integer.toString(value  -  1);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer  x  =  Integer.toString(value  -  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  x  =  Integer.toString(value  -  1);	  Integer    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	64	None	replace
468	[BUG]  [BUGGY]  }  else  if(!(prev  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(prev  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(prev  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(x    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	95	None	replace
469	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  <=  mantissa))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  <=  mantissa))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  <=  mantissa))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    <=    value))    {    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
470	[BUG]  [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  <=  value))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  <=  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  <=  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    <=    value))    {    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
471	[BUG]  [BUGGY]  }  else  if(x  >=  10)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  10)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  10)  {	  }    else    if(x    >    10)    {    	non-compiled	[CE]  'else'  without  'if'	70	None	replace
472	[BUG]  [BUGGY]  }  else  if(!(value  %  100  *  Math.pow(10,  exp  +  1)  ==  mantissa)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  100  *  Math.pow(10,  exp  +  1)  ==  mantissa)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  100  *  Math.pow(10,  exp  +  1)  ==  mantissa)  {	  }    else    if(!(mantissa    %    100    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
473	[BUG]  [BUGGY]  }  else  if(!(x  %  100  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(x  %  100  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(x  %  100  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(mantissa    %    100    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
474	[BUG]  [BUGGY]  int  x  =  Integer.toString(value  -  1);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Integer.toString(value  -  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Integer.toString(value  -  1);	  int    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
475	[BUG]  [BUGGY]  int  x  =  Integer.toString(value  /  10);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Integer.toString(value  /  10);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Integer.toString(value  /  10);	  int    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
476	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  x  <  100)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  x  <  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  x  <  100)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	99	None	replace
477	[BUG]  [BUGGY]  double  x  =  str.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  x  =  str.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  x  =  str.doubleValue();	  double    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	118	None	replace
478	[BUG]  [BUGGY]  double  x  =  length.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  x  =  length.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  x  =  length.doubleValue();	  double    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	118	None	replace
479	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	72	None	replace
480	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  &&  x  >  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	72	None	replace
481	[BUG]  [BUGGY]  }  else  if(x  <=  1)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <=  1)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  1)  {	  }    else    if(x    <    1)    {    	non-compiled	[CE]  'else'  without  'if'	47	None	replace
482	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value!=  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value!=  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value!=  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
483	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  ==  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  ==  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  ==  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
484	[BUG]  [BUGGY]  }  else  if(x  <  0  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  0  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  0  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    <    10    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	123	None	replace
485	[BUG]  [BUGGY]  }  else  if(x  <=  10  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <=  10  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  10  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    <    10    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	123	None	replace
486	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
487	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE  &&  value  <=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE  &&  value  <=  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE  &&  value  <=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
488	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MAX_VALUE  ||  value  >=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MAX_VALUE  ||  value  >=  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MAX_VALUE  ||  value  >=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
489	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  >=  mantissa)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  >=  mantissa)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  >=  mantissa)  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    >=    value))    {    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
490	[BUG]  [BUGGY]  }  else  if(value  >=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(value  >=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(value  >=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >=    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	122	None	replace
491	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  0))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  0))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  0))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    2))    {    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
492	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  2))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  2))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  2))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    2))    {    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
493	[BUG]  [BUGGY]  }  else  if(!(value  *  10  *  Math.pow(10,  exp  +  1)  >=  mantissa)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  *  10  *  Math.pow(10,  exp  +  1)  >=  mantissa)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  *  10  *  Math.pow(10,  exp  +  1)  >=  mantissa)  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)    >=    value))    {    	non-compiled	[CE]  'else'  without  'if'	88	None	replace
494	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  >>  value))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  >>  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  >>  value))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)    >=    value))    {    	non-compiled	[CE]  'else'  without  'if'	88	None	replace
495	[BUG]  [BUGGY]  }  else  if(x  >  10  &&  Character.isDigit(prev))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  10  &&  Character.isDigit(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  10  &&  Character.isDigit(prev))  {	  }    else    if(x    >    100)    {    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
496	[BUG]  [BUGGY]  }  else  if(x  ==  Long.parseLong(value)||  x  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.parseLong(value)||  x  >  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.parseLong(value)||  x  >  Long.parseLong(value))  {	  }    else    if(x    ==    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	52	None	replace
497	[BUG]  [BUGGY]  }  else  if(x  >=  10  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  10  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  10  &&  value  <=  Integer.MAX_VALUE)  {	  }    else    if(x    >=    100)    {    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
498	[BUG]  [BUGGY]  }  else  if(value!=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(value!=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(value!=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	112	None	replace
499	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  1)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  1)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  1)  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
500	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)!=  2)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)!=  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)!=  2)  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
501	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  ==  2)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  ==  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  ==  2)  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
502	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >>  2)  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >>  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >>  2)  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
503	[BUG]  [BUGGY]  }  else  if(exp!=  100)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp!=  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp!=  100)  {	  }    else    if(exp    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
504	[BUG]  [BUGGY]  }  else  if(x  ==  0  &&  value  <=  Double.POSITIVE_INFINITY)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  0  &&  value  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  0  &&  value  <=  Double.POSITIVE_INFINITY)  {	  }    else    if(x    >    0    &&    value    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
505	[BUG]  [BUGGY]  }  else  if(x!=  2  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  2  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  2  &&  value  <=  Integer.MIN_VALUE)  {	  }    else    if(x!=    2)    {    	non-compiled	[CE]  'else'  without  'if'	71	None	replace
506	[BUG]  [BUGGY]  }  else  if(!(exp  %  2  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(exp  %  2  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(exp  %  2  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(exp    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
507	[BUG]  [BUGGY]  char  prev  =  value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  char  prev  =  value.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	char  prev  =  value.doubleValue();	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	82	None	replace
508	[BUG]  [BUGGY]  double  prev  =  value.doubleValue()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  double  prev  =  value.doubleValue()  -  1;  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  value.doubleValue()  -  1;	  double    prev    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	82	None	replace
509	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&(value  <=  Long.MIN_VALUE  ||  value  >=  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&(value  <=  Long.MIN_VALUE  ||  value  >=  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&(value  <=  Long.MIN_VALUE  ||  value  >=  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value)&&(value    <=    Long.MIN_VALUE    ||    value    >    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
510	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&(value!=  Long.MIN_VALUE  ||  value  >=  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&(value!=  Long.MIN_VALUE  ||  value  >=  Long.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&(value!=  Long.MIN_VALUE  ||  value  >=  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value)&&(value    <=    Long.MIN_VALUE    ||    value    >    Long.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
511	[BUG]  [BUGGY]  }  else  if(x  ==  0  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  0  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  0  &&  value  <=  Integer.MAX_VALUE)  {	  }    else    if(x    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
512	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Integer.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
513	[BUG]  [BUGGY]  }  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  mantissa  <=  Integer.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  mantissa  <=  Integer.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  mantissa  <=  Integer.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
514	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
515	[BUG]  [BUGGY]  add(Long.toString(x));  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  add(Long.toString(x));  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	add(Long.toString(x));	  Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	115	None	replace
516	[BUG]  [BUGGY]  Integer.toString(value)  +  1;  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer.toString(value)  +  1;  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer.toString(value)  +  1;	  Integer.toString(value));    	non-compiled	[CE]  not  a  statement	115	None	replace
517	[BUG]  [BUGGY]  char  prev  =  Math.pow(10,  exp  +  1);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  char  prev  =  Math.pow(10,  exp  +  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	char  prev  =  Math.pow(10,  exp  +  1);	  long    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	116	None	replace
518	[BUG]  [BUGGY]  long  prev  =  Math.pow(10,  exp  -  1);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  long  prev  =  Math.pow(10,  exp  -  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	long  prev  =  Math.pow(10,  exp  -  1);	  long    prev    =    Math.pow(10,    exp    +    1);    	non-compiled	[CE]  cannot  find  symbol  iop	116	None	replace
519	[BUG]  [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  &&  mantissa  <  127)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  &&  mantissa  <  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MAX_VALUE  &&  mantissa  <  127)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	121	None	replace
520	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MAX_VALUE  &&  mantissa  <=  127)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  Long.MAX_VALUE  &&  mantissa  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MAX_VALUE  &&  mantissa  <=  127)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	121	None	replace
521	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  mantissa  <  128)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  mantissa  <  128)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  mantissa  <  128)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    mantissa    <=    127)    {    	non-compiled	[CE]  'else'  without  'if'	121	None	replace
522	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)*  1)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)*  1)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)*  1)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1)    {    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
523	[BUG]  [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  prev  ==  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  prev  ==  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.parseLong(value)&&  prev  ==  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)&&    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
524	[BUG]  [BUGGY]  }  else  if(!(value  %  100  *  Math.pow(10,  exp  +  1)  ==  value)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  100  *  Math.pow(10,  exp  +  1)  ==  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  100  *  Math.pow(10,  exp  +  1)  ==  value)  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa)    {    	non-compiled	[CE]  'else'  without  'if'	93	None	replace
525	[BUG]  [BUGGY]  int  x  =  str.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  str.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  str.doubleValue();	  int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	65	None	replace
526	[BUG]  [BUGGY]  int  x  =  this.value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  this.value.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  this.value.doubleValue();	  int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	65	None	replace
527	[BUG]  [BUGGY]  int  x  =  string.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  string.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  string.doubleValue();	  int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	65	None	replace
528	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  <  mantissa))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  <  mantissa))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  <  mantissa))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    <    value))    {    	non-compiled	[CE]  'else'  without  'if'	106	None	replace
529	[BUG]  [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  <  value))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  <  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  <  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    <    value))    {    	non-compiled	[CE]  'else'  without  'if'	106	None	replace
530	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  1)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  1)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  1)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
531	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  >=  2)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  >=  2)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  >=  2)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    2)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
532	[BUG]  [BUGGY]  }  else  if(exp  >  Long.parseLong(x)&&  prev  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.parseLong(x)&&  prev  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.parseLong(x)&&  prev  >=  Long.parseLong(x))  {	  }    else    if(exp    >    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
533	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value!=  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value!=  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value!=  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	79	None	replace
534	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  ==  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  ==  Long.MIN_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  ==  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    Long.MIN_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	79	None	replace
535	[BUG]  [BUGGY]  }  else  if(exp  <  0  ||  exp  >  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <  0  ||  exp  >  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  0  ||  exp  >  Integer.toString(x))  {	  }    else    if(exp    <    2    ||    exp    >    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
536	[BUG]  [BUGGY]  }  else  if(x  <  2  ||  exp  >  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  2  ||  exp  >  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  2  ||  exp  >  Integer.toString(x))  {	  }    else    if(exp    <    2    ||    exp    >    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
537	[BUG]  [BUGGY]  }  else  if(exp  <=  2  ||  exp  >  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  <=  2  ||  exp  >  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <=  2  ||  exp  >  Integer.toString(x))  {	  }    else    if(exp    <    2    ||    exp    >    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
538	[BUG]  [BUGGY]  }  else  if(exp  >=  2  ||  exp  >  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >=  2  ||  exp  >  Integer.toString(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >=  2  ||  exp  >  Integer.toString(x))  {	  }    else    if(exp    <    2    ||    exp    >    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
539	[BUG]  [BUGGY]  }  else  if(x  <  2  ||  exp  >  Integer.toString(value))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  2  ||  exp  >  Integer.toString(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  2  ||  exp  >  Integer.toString(value))  {	  }    else    if(exp    <    2    ||    exp    >    Integer.toString(x))    {    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
540	[BUG]  [BUGGY]  }  else  if(!(value  *  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  *  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  *  10  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
541	[BUG]  [BUGGY]  }  else  if(!(value  *  10  *  Math.pow(10,  exp  +  1)  ==  mantissa)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  *  10  *  Math.pow(10,  exp  +  1)  ==  mantissa)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  *  10  *  Math.pow(10,  exp  +  1)  ==  mantissa)  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
542	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  100  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  100  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  100  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
543	[BUG]  [BUGGY]  if(binOp)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(x));  }  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  if(binOp)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(x));  }  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	if(binOp)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(x));  }	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
544	[BUG]  [BUGGY]  if(binOp)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(exp));  }  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  if(binOp)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(exp));  }  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	if(binOp)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(exp));  }	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
545	[BUG]  [BUGGY]  if(binOp)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(x)+  1);  }  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  if(binOp)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(x)+  1);  }  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	if(binOp)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(x)+  1);  }	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
546	[BUG]  [BUGGY]  }  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  mantissa  <=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  mantissa  <=  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  mantissa  <=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
547	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  128))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  128))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <  128))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)&&    value    <=    127))    {    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
548	[BUG]  [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    mantissa    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	103	None	replace
549	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    mantissa    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	103	None	replace
550	[BUG]  [BUGGY]  }  else  if(x  <  0  ||  x  >  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  0  ||  x  >  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  0  ||  x  >  Long.parseLong(prev))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
551	[BUG]  [BUGGY]  }  else  if(x  <=  10  ||  x  >  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <=  10  ||  x  >  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  10  ||  x  >  Long.parseLong(prev))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
552	[BUG]  [BUGGY]  }  else  if(x  <  1000  ||  x  >  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  1000  ||  x  >  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  1000  ||  x  >  Long.parseLong(prev))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
553	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  127))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  127))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)&&  value  <=  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    127))    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
554	[BUG]  [BUGGY]  }  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  127))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  127))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    127))    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
555	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.cos(mantissa,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.cos(mantissa,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.cos(mantissa,  exp  +  1)  ==  value))  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa))    {    	non-compiled	[CE]  'else'  without  'if'	61	None	replace
556	[BUG]  [BUGGY]  }  else  if(x  ==  '.')  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  ==  '.')  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  '.')  {	  }    else    if(x!=    2)    {    	non-compiled	[CE]  'else'  without  'if'	71	None	replace
557	[BUG]  [BUGGY]  x  =  mantissa.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  x  =  mantissa.doubleValue();  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	x  =  mantissa.doubleValue();	  int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	65	None	replace
558	[BUG]  [BUGGY]  }  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {	  }    else    if(!(value    %    10    *    Math.pow(10,    exp    +    1)    ==    mantissa)    {    	non-compiled	[CE]  'else'  without  'if'	93	None	replace
559	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  100  <=  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  100  <=  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  100  <=  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(mantissa    %    100    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
560	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  100  ==  value)&&!(exp  %  100  ==  value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  100  ==  value)&&!(exp  %  100  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  100  ==  value)&&!(exp  %  100  ==  value))  {	  }    else    if(!(mantissa    %    100    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
561	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  <  value))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  <  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  <  value))  {	  }    else    if(!(mantissa    %    100    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
562	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  ||  isEqualValue(x,  Integer.toString(exp)))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  ||  isEqualValue(x,  Integer.toString(exp)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  ||  isEqualValue(x,  Integer.toString(exp)))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value)&&    isEqualValue(x,    Integer.toString(exp)))    {    	non-compiled	[CE]  'else'  without  'if'	107	None	replace
563	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&  isEqualValue(x,  Long.toString(exp)))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&  isEqualValue(x,  Long.toString(exp)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)  &&  isEqualValue(x,  Long.toString(exp)))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value)&&    isEqualValue(x,    Integer.toString(exp)))    {    	non-compiled	[CE]  'else'  without  'if'	107	None	replace
564	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >  value))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    >=    value))    {    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
565	[BUG]  [BUGGY]  }  else  if(exp!=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp!=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp!=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(exp!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
566	[BUG]  [BUGGY]  }  else  if(exp!=  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp!=  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp!=  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {	  }    else    if(exp!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
567	[BUG]  [BUGGY]  }  else  if(exp!=  Long.MIN_VALUE  &&  mantissa  <=  127)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp!=  Long.MIN_VALUE  &&  mantissa  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp!=  Long.MIN_VALUE  &&  mantissa  <=  127)  {	  }    else    if(exp!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
568	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)*  1)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)*  1)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)*  1)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1)    {    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
569	[BUG]  [BUGGY]  }  else  if(x  >  10  ||  x  >  Integer.toString(value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  10  ||  x  >  Integer.toString(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  10  ||  x  >  Integer.toString(value))  {	  }    else    if(x    <    10    ||    x    >    Integer.toString(value))    {    	non-compiled	[CE]  'else'  without  'if'	92	None	replace
570	[BUG]  [BUGGY]  }  else  if(x  >=  Long.parseLong(value)&&  exp  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.parseLong(value)&&  exp  >=  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.parseLong(value)&&  exp  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)&&    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
571	[BUG]  [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  exp  <  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  exp  <  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.parseLong(value)&&  exp  <  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value)&&    prev    >=    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
572	[BUG]  [BUGGY]  }  else  if(exp  >=  Long.MIN_VALUE  &&  mantissa  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >=  Long.MIN_VALUE  &&  mantissa  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >=  Long.MIN_VALUE  &&  mantissa  >  Long.MAX_VALUE)  {	  }    else    if(exp    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
573	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  exp  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  exp  ==  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  &&  exp  ==  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	114	None	replace
574	[BUG]  [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	114	None	replace
575	[BUG]  [BUGGY]  }  else  if(x  <=  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <=  Long.parseLong(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  Long.parseLong(prev))  {	  }    else    if(x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	96	None	replace
576	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  x)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  x)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  x)  {	  }    else    if(!(x    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	95	None	replace
577	[BUG]  [BUGGY]  }  else  if(x!=  Long.MAX_VALUE  &&  mantissa  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MAX_VALUE  &&  mantissa  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MAX_VALUE  &&  mantissa  >  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	44	None	replace
578	[BUG]  [BUGGY]  }  else  if(x!=  Long.MAX_VALUE  &&  value  <=  127)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MAX_VALUE  &&  value  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MAX_VALUE  &&  value  <=  127)  {	  }    else    if(x!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	44	None	replace
579	[BUG]  [BUGGY]  }  else  if(x!=  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	44	None	replace
580	[BUG]  [BUGGY]  Integer.toString(exp);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer.toString(exp);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer.toString(exp);	  Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	115	None	replace
581	[BUG]  [BUGGY]  Integer.toString(value  -  1);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer.toString(value  -  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer.toString(value  -  1);	  Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	115	None	replace
582	[BUG]  [BUGGY]  Integer.toString(exp  +  1);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer.toString(exp  +  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer.toString(exp  +  1);	  Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	115	None	replace
583	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <=  1)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <=  1)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <=  1)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
584	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  <  value))  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  <  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  <  value))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
585	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MIN_VALUE  ||  value  ==  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MIN_VALUE  ||  value  ==  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  >=  Integer.MIN_VALUE  ||  value  ==  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
586	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE  ||  value  ==  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE  ||  value  ==  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE  ||  value  ==  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
587	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MIN_VALUE  ||  value  >=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MIN_VALUE  ||  value  >=  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value!=  Integer.MIN_VALUE  ||  value  >=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MIN_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
588	[BUG]  [BUGGY]  }  else  if(x  <=  Long.parseLong(value)||  x  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <=  Long.parseLong(value)||  x  >  Long.parseLong(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  Long.parseLong(value)||  x  >  Long.parseLong(value))  {	  }    else    if(x    <=    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	108	None	replace
589	[BUG]  [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.parseLong(value)&&!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(x    <=    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	108	None	replace
590	[BUG]  [BUGGY]  }  else  if(x  <=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    <    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
591	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  x  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  x  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  &&  x  <=  Long.MAX_VALUE)  {	  }    else    if(x    <    Long.MIN_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
592	[BUG]  [BUGGY]  }  else  if(x  >  0  &&  value  >=  Integer.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  0  &&  value  >=  Integer.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  0  &&  value  >=  Integer.MAX_VALUE)  {	  }    else    if(x    >    0    &&    value    <=    Integer.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
593	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MAX_VALUE  ||  value  <=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MAX_VALUE  ||  value  <=  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  ==  Integer.MAX_VALUE  ||  value  <=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE    ||    value    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
594	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value!=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  value!=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	45	None	replace
595	[BUG]  [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {	  }    else    if(exp    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
596	[BUG]  [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  &&  mantissa  <=  127)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE  &&  mantissa  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  Long.MIN_VALUE  &&  mantissa  <=  127)  {	  }    else    if(exp    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
597	[BUG]  [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  value  <=  127)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.parseLong(value)&&  value  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.parseLong(value)&&  value  <=  127)  {	  }    else    if(x    <    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	50	None	replace
598	[BUG]  [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {	  }    else    if(x    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	102	None	replace
599	[BUG]  [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  &&  mantissa  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  &&  mantissa  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MIN_VALUE  &&  mantissa  >  Long.MAX_VALUE)  {	  }    else    if(x    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	102	None	replace
600	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  exp  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  exp  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MIN_VALUE  &&  exp  <=  Long.MAX_VALUE)  {	  }    else    if(x    >=    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	122	None	replace
601	[BUG]  [BUGGY]  }  else  if(x  >  0  &&  exp  <=  Double.POSITIVE_INFINITY)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  0  &&  exp  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  0  &&  exp  <=  Double.POSITIVE_INFINITY)  {	  }    else    if(x    >    0    &&    value    <=    Double.POSITIVE_INFINITY)    {    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
602	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  exp  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  exp  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  &&  exp  >=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    prev    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	87	None	replace
603	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  exp  <  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  exp  <  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  &&  exp  <  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE    &&    prev    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	87	None	replace
604	[BUG]  [BUGGY]  Integer  x  =  Integer.toString(doubleValue);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer  x  =  Integer.toString(doubleValue);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  x  =  Integer.toString(doubleValue);	  Integer    x    =    Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	67	None	replace
605	[BUG]  [BUGGY]  Integer  xx  =  Integer.toString(value);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  Integer  xx  =  Integer.toString(value);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  xx  =  Integer.toString(value);	  Integer    x    =    Integer.toString(exp);    	non-compiled	[CE]  cannot  find  symbol  iop	67	None	replace
606	[BUG]  [BUGGY]  }  else  if(!(exp  %  2  ==  value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(exp  %  2  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(exp  %  2  ==  value))  {	  }    else    if(!(exp    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
607	[BUG]  [BUGGY]  }  else  if(!(exp  %  10  <=  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(exp  %  10  <=  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(exp  %  10  <=  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(exp    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
608	[BUG]  [BUGGY]  }  else  if(!(exp  %  10  *  Math.cos(mantissa,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(exp  %  10  *  Math.cos(mantissa,  exp  +  1)  ==  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(exp  %  10  *  Math.cos(mantissa,  exp  +  1)  ==  value))  {	  }    else    if(!(exp    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
609	[BUG]  [BUGGY]  }  else  if(x  >  10  ||  x  <  100)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  10  ||  x  <  100)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  10  ||  x  <  100)  {	  }    else    if(x    >    100)    {    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
610	[BUG]  [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  &&  mantissa  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  Long.MAX_VALUE  &&  mantissa  >  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MAX_VALUE  &&  mantissa  >  Long.MAX_VALUE)  {	  }    else    if(x    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	119	None	replace
611	[BUG]  [BUGGY]  }  else  if(exp  >  Long.parseLong(x)&&  exp  <=  127)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.parseLong(x)&&  exp  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.parseLong(x)&&  exp  <=  127)  {	  }    else    if(exp    >    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
612	[BUG]  [BUGGY]  }  else  if(exp  >  Long.parseLong(x)&&  value  <=  127)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(exp  >  Long.parseLong(x)&&  value  <=  127)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.parseLong(x)&&  value  <=  127)  {	  }    else    if(exp    >    Long.parseLong(x))    {    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
613	[BUG]  [BUGGY]  }  else  if(x  <  1  ||  x  >  Character.toLowerCase(prev))  {  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  1  ||  x  >  Character.toLowerCase(prev))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  1  ||  x  >  Character.toLowerCase(prev))  {	  }    else    if(x    >    1)    {    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
614	[BUG]  [BUGGY]  }  else  if(x  <  1  ||  x  >  Integer.toString(exp))  {  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  <  1  ||  x  >  Integer.toString(exp))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  1  ||  x  >  Integer.toString(exp))  {	  }    else    if(x    >    1)    {    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
615	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >  value))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >  value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >  value))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    >=    value))    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
616	[BUG]  [BUGGY]  int  exp  =  Math.pow(10,  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  exp  =  Math.pow(10,  mantissa);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  exp  =  Math.pow(10,  mantissa);	  int    prev    =    Math.pow(10,    exp);    	non-compiled	[CE]  cannot  find  symbol  iop	68	None	replace
617	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  exp  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  exp  >=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  &&  exp  >=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	113	None	replace
618	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value!=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value!=  Long.MIN_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  value!=  Long.MIN_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    &&    value    <=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
619	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)&&!Character.isLetter(exp)&&!Character.isDigit(exp))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)&&!Character.isLetter(exp)&&!Character.isDigit(exp))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)&&!Character.isLetter(exp)&&!Character.isDigit(exp))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    x))    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
620	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <  length))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <  length))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <  length))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    <    value))    {    	non-compiled	[CE]  'else'  without  'if'	106	None	replace
621	[BUG]  [BUGGY]  }  else  if(x  >  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.parseLong(x))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.parseLong(x))  {	  }    else    if(x    <    10    ||    x    >    Long.parseLong(prev))    {    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
622	[BUG]  [BUGGY]  add(Integer.toString(value)+  1);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  add(Integer.toString(value)+  1);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	add(Integer.toString(value)+  1);	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
623	[BUG]  [BUGGY]  add(Integer.toString(exp));  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  add(Integer.toString(exp));  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	add(Integer.toString(exp));	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
624	[BUG]  [BUGGY]  add(Integer.toString(y));  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  add(Integer.toString(y));  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	add(Integer.toString(y));	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
625	[BUG]  [BUGGY]  add(Integer.toString(value)+  Integer.toString(x));  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  add(Integer.toString(value)+  Integer.toString(x));  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	add(Integer.toString(value)+  Integer.toString(x));	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  iop	81	None	replace
626	[BUG]  [BUGGY]  add(Integer.toString(double));  [CE]  '.class'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  add(Integer.toString(double));  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	add(Integer.toString(double));	  add(Integer.toString(value));    	non-compiled	[CE]  '.class'  expected	81	None	replace
627	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  <=  1)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  <=  1)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  <=  1)  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
628	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)*  1))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)*  1))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)*  1))  {	  }    else    if(!(mantissa    *    10    *    Math.pow(10,    exp    +    1)+    1))    {    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
629	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  ||  isEqualValue(x,  Integer.toString(exp)))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  ||  isEqualValue(x,  Integer.toString(exp)))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  ||  isEqualValue(x,  Integer.toString(exp)))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value)&&    isEqualValue(x,    Integer.toString(exp)))    {    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
630	[BUG]  [BUGGY]  }  else  if(x  >  1  &&  mantissa  <=  0  &&  exp  <=  10  &&  mantissa.charAt(0)  ==  '-')  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  1  &&  mantissa  <=  0  &&  exp  <=  10  &&  mantissa.charAt(0)  ==  '-')  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  1  &&  mantissa  <=  0  &&  exp  <=  10  &&  mantissa.charAt(0)  ==  '-')  {	  }    else    if(x    <    1)    {    	non-compiled	[CE]  'else'  without  'if'	47	None	replace
631	[BUG]  [BUGGY]  }  else  if(x  >  1  &&  mantissa.charAt(x)  <=  '0'  &&  isEmpty(value))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  1  &&  mantissa.charAt(x)  <=  '0'  &&  isEmpty(value))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  1  &&  mantissa.charAt(x)  <=  '0'  &&  isEmpty(value))  {	  }    else    if(x    <    1)    {    	non-compiled	[CE]  'else'  without  'if'	47	None	replace
632	[BUG]  [BUGGY]  }  else  if(x  >  1  &&  mantissa  <=  0  &&  exp  <=  10  &&  mantissa.compareTo( "0 ")>  0)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  1  &&  mantissa  <=  0  &&  exp  <=  10  &&  mantissa.compareTo( "0 ")>  0)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  1  &&  mantissa  <=  0  &&  exp  <=  10  &&  mantissa.compareTo( "0 ")>  0)  {	  }    else    if(x    <    1)    {    	non-compiled	[CE]  	47	None	replace
633	[BUG]  [BUGGY]  }  else  if(x  >  1  &&  mantissa  <=  0  &&  exp  <=  10  &&  mantissa.compareTo( "- ")>  0)  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  1  &&  mantissa  <=  0  &&  exp  <=  10  &&  mantissa.compareTo( "- ")>  0)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  1  &&  mantissa  <=  0  &&  exp  <=  10  &&  mantissa.compareTo( "- ")>  0)  {	  }    else    if(x    <    1)    {    	non-compiled	[CE]  	47	None	replace
634	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  x  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  x  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  x  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE    ||    x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	120	None	replace
635	[BUG]  [BUGGY]  int  x  =  Integer.toString(exp);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  int  x  =  Integer.toString(exp);  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Integer.toString(exp);	  int    x    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	63	None	replace
636	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE))  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)||    value    <=    Integer.MAX_VALUE))    {    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
637	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  exp  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }      [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  exp  <=  Long.MAX_VALUE)  {  [BUGGY]      add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  &&  exp  <=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE    &&    value    <=    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	112	None	replace
