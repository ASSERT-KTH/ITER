bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(exp  >  2)  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(exp  >  2)  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  2)  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
2	[BUG]  [BUGGY]  }  else  if(exp  <  2)  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(exp  <  2)  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  2)  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
3	[BUG]  [BUGGY]  }  else  if(x  <  100)  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(x  <  100)  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  100)  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
4	[BUG]  [BUGGY]  }  else  if(x  <  2)  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(x  <  2)  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  2)  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
5	[BUG]  [BUGGY]  }  else  if(exp  >=  2)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(exp  >=  2)  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >=  2)  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
6	[BUG]  [BUGGY]  }  else  if(x  >  2)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(x  >  2)  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  2)  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
7	[BUG]  [BUGGY]  }  else  if(exp  >  1)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(exp  >  1)  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  1)  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
8	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]    [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	  	}  else  {  	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
9	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE)  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE)  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
10	[BUG]  [BUGGY]  }  else  if(x  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(x  >  Long.parseLong(value))  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.parseLong(value))  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
11	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE)  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE)  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
12	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE)  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MIN_VALUE)  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
13	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE)  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE)  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
14	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE)  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE)  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
15	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value))  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
16	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
17	[BUG]  [BUGGY]  }  else  if(x  >  0)  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(x  >  0)  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  0)  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
18	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)))  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure  [CONTEXT]  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)))  {  [BUGGY]  add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)))  {	}  else  {  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
