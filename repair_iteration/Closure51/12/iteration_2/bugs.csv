bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
2	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  127))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  127))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
3	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
4	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
5	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Integer.MAX_VALUE  ||  value  >  Integer.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
6	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  2))  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  2))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  2))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
7	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  128))  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  128))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  128))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
8	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
9	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  value))  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  >=  value))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
10	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <=  value))  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <=  value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <=  value))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
11	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)!=  value))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)!=  value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)!=  value))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
12	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  x))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  x))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  x))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
13	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  2)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  2)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  2)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
14	[BUG]  [BUGGY]  }  else  if(exp  ==  1)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  ==  1)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  1)  {	  }    else    if(exp    >    1)    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
15	[BUG]  [BUGGY]  }  else  if(exp  <  1)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  <  1)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  1)  {	  }    else    if(exp    >    1)    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
16	[BUG]  [BUGGY]  }  else  if(exp  >=  1)  {  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  >=  1)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >=  1)  {	  }    else    if(exp    >    1)    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
17	[BUG]  [BUGGY]  }  else  if(x  >  1)  {  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  1)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  1)  {	  }    else    if(exp    >    1)    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
18	[BUG]  [BUGGY]  }  else  if(exp!=  1)  {  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp!=  1)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp!=  1)  {	  }    else    if(exp    >    1)    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
19	[BUG]  [BUGGY]  }  else  if(exp  >  0)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  >  0)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  0)  {	  }    else    if(x    >    0)    {    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
20	[BUG]  [BUGGY]  }  else  if(x  <  0)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <  0)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  0)  {	  }    else    if(x    >    0)    {    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
21	[BUG]  [BUGGY]  }  else  if(x  ==  0)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  ==  0)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  0)  {	  }    else    if(x    >    0)    {    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
22	[BUG]  [BUGGY]  }  else  if(x  >=  0)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >=  0)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  0)  {	  }    else    if(x    >    0)    {    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
23	[BUG]  [BUGGY]  }  else  if(x!=  0)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x!=  0)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  0)  {	  }    else    if(x    >    0)    {    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
24	[BUG]  [BUGGY]  }  else  if(exp  <  0)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  <  0)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  0)  {	  }    else    if(x    >    0)    {    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
25	[BUG]  [BUGGY]  }  else  if(exp  ==  2)  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  ==  2)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  2)  {	  }    else    if(exp    <    2)    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
26	[BUG]  [BUGGY]  }  else  if(exp  <  2  ||  exp  >  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  <  2  ||  exp  >  Integer.toString(x))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  2  ||  exp  >  Integer.toString(x))  {	  }    else    if(exp    <    2)    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
27	[BUG]  [BUGGY]  }  else  if(exp  >=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  >=  Long.MIN_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >=  Long.MIN_VALUE)  {	  }    else    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
28	[BUG]  [BUGGY]  }  else  if(x  <  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <  Long.MIN_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MIN_VALUE)  {	  }    else    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
29	[BUG]  [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
30	[BUG]  [BUGGY]  }  else  if(exp!=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp!=  Long.MIN_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp!=  Long.MIN_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
31	[BUG]  [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  ==  Long.MIN_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  ==  Long.MIN_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
32	[BUG]  [BUGGY]  }  else  if(exp!=  2)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp!=  2)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp!=  2)  {	  }    else    if(exp    >=    2)    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
33	[BUG]  [BUGGY]  }  else  if(exp  >  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  >  Long.MIN_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.MIN_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
34	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
35	[BUG]  [BUGGY]  }  else  if(exp  <  100)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  <  100)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  <  100)  {	  }    else    if(x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
36	[BUG]  [BUGGY]  }  else  if(x  >  100)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  100)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  100)  {	  }    else    if(x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
37	[BUG]  [BUGGY]  }  else  if(x  >=  100)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >=  100)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  100)  {	  }    else    if(x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
38	[BUG]  [BUGGY]  }  else  if(x  ==  100)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  ==  100)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  100)  {	  }    else    if(x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
39	[BUG]  [BUGGY]  }  else  if(x  <  1000)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <  1000)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  1000)  {	  }    else    if(x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
40	[BUG]  [BUGGY]  }  else  if(x  <  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
41	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  ==  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
42	[BUG]  [BUGGY]  }  else  if(exp  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  >  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
43	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >=  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
44	[BUG]  [BUGGY]  }  else  if(x!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x!=  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
45	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
46	[BUG]  [BUGGY]  }  else  if(x  >=  2)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >=  2)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  2)  {	  }    else    if(x    <    2)    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
47	[BUG]  [BUGGY]  }  else  if(x  <  1)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <  1)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  1)  {	  }    else    if(x    <    2)    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
48	[BUG]  [BUGGY]  }  else  if(x  ==  2)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  ==  2)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  2)  {	  }    else    if(x    <    2)    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
49	[BUG]  [BUGGY]  }  else  if(x  <  2  ||  prev  >=  Integer.toString(x))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <  2  ||  prev  >=  Integer.toString(x))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  2  ||  prev  >=  Integer.toString(x))  {	  }    else    if(x    <    2)    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
50	[BUG]  [BUGGY]  }  else  if(x  <  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <  Long.parseLong(value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  Long.parseLong(value))  {	  }    else    if(x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
51	[BUG]  [BUGGY]  }  else  if(x  >=  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >=  Long.parseLong(value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.parseLong(value))  {	  }    else    if(x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
52	[BUG]  [BUGGY]  }  else  if(x  ==  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  ==  Long.parseLong(value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.parseLong(value))  {	  }    else    if(x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
53	[BUG]  [BUGGY]  }  else  if(exp  >  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  >  Long.parseLong(x))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
54	[BUG]  [BUGGY]  }  else  if(exp  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  >  Long.parseLong(value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >  Long.parseLong(value))  {	  }    else    if(x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
55	[BUG]  [BUGGY]  }  else  if(x!=  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x!=  Long.parseLong(value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.parseLong(value))  {	  }    else    if(x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
56	[BUG]  [BUGGY]  }  else  if(x  >  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.parseLong(value)||  prev  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
57	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >=  value))  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >=  value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  >=  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
58	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)!=  value))  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)!=  value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)!=  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
59	[BUG]  [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(exp  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
60	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <=  value))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <=  value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <=  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
61	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
62	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  2)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  2)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  2)  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
63	[BUG]  [BUGGY]  int  x  =  Integer.toString(value);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  int  x  =  Integer.toString(value);  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Integer.toString(value);	      	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
64	[BUG]  [BUGGY]  Integer  x  =  Integer.toString(value);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  Integer  x  =  Integer.toString(value);  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  x  =  Integer.toString(value);	      	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
65	[BUG]  [BUGGY]  int  x  =  value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  int  x  =  value.doubleValue();  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  value.doubleValue();	      	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
66	[BUG]  [BUGGY]  int  x  =  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  int  x  =  Math.pow(10,  exp);  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  x  =  Math.pow(10,  exp);	      	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
67	[BUG]  [BUGGY]  Integer  x  =  Integer.toString(exp);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  Integer  x  =  Integer.toString(exp);  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer  x  =  Integer.toString(exp);	      	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
68	[BUG]  [BUGGY]  int  prev  =  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  int  prev  =  Math.pow(10,  exp);  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	int  prev  =  Math.pow(10,  exp);	      	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
69	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  exp);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  double  prev  =  Math.pow(10,  exp);  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  Math.pow(10,  exp);	      	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
70	[BUG]  [BUGGY]  }  else  if(x  >  10)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  10)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  10)  {	  }    else    if(x    >    2)    {    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
71	[BUG]  [BUGGY]  }  else  if(x!=  2)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x!=  2)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  2)  {	  }    else    if(x    >    2)    {    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
72	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
73	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
74	[BUG]  [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  ==  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  ==  Long.MIN_VALUE  &&  value!=  Long.MAX_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
75	[BUG]  [BUGGY]  }  else  if(x  <=  0)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <=  0)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  0)  {	  }    else    if(x    >    2)    {    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
76	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)+  1))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)+  1))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)+  1))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
77	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1))  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
78	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Long.MAX_VALUE))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
79	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Long.MIN_VALUE))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
80	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Long.MIN_VALUE))  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Long.MIN_VALUE))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  value  <=  Long.MIN_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
81	[BUG]  [BUGGY]  add(Integer.toString(value));  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  add(Integer.toString(value));  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	add(Integer.toString(value));	      	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
82	[BUG]  [BUGGY]  double  prev  =  value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  double  prev  =  value.doubleValue();  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  value.doubleValue();	      	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
83	[BUG]  [BUGGY]  }  else  if(exp  >=  0)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(exp  >=  0)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(exp  >=  0)  {	  }    else    if(exp    >=    2)    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
84	[BUG]  [BUGGY]  }  else  if(x  >>  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >>  Long.MIN_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >>  Long.MIN_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
85	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  value  <=  Long.MIN_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
86	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
87	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  &&  prev  >=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
88	[BUG]  [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  >=  value))  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  >=  value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  *  10  *  Math.pow(10,  exp  +  1)  >=  value))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
89	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)&&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)&&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)&&(value  <=  Long.MIN_VALUE  ||  value  >  Long.MAX_VALUE))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
90	[BUG]  [BUGGY]  }  else  if(x  <=  2)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <=  2)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  2)  {	  }    else    if(x    <    2)    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
91	[BUG]  [BUGGY]  }  else  if(x  <  10  ||  x  >  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <  10  ||  x  >  Long.parseLong(prev))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10  ||  x  >  Long.parseLong(prev))  {	  }    else    if(x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
92	[BUG]  [BUGGY]  }  else  if(x  <  10  ||  x  >  Integer.toString(value))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <  10  ||  x  >  Integer.toString(value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10  ||  x  >  Integer.toString(value))  {	  }    else    if(x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
93	[BUG]  [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa)  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(value  %  10  *  Math.pow(10,  exp  +  1)  ==  mantissa)  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
94	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  100  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
95	[BUG]  [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(x  %  10  *  Math.pow(10,  exp  +  1)  ==  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
96	[BUG]  [BUGGY]  }  else  if(x  >  Long.parseLong(prev))  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  Long.parseLong(prev))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.parseLong(prev))  {	  }    else    if(x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
97	[BUG]  [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.parseLong(value)&&  prev  >=  Long.parseLong(x))  {	  }    else    if(x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
98	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)+  1)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
99	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  <  100)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  <  100)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  <  100)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
100	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  127))  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  127))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)&&  value  <=  127))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
101	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  >  value)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  >  value)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)||  x  >  value)  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)))    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
102	[BUG]  [BUGGY]  }  else  if(x  <=  Long.MIN_VALUE)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <=  Long.MIN_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  Long.MIN_VALUE)  {	  }    else    if(x    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
103	[BUG]  [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MIN_VALUE  &&  mantissa  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
104	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <  value))  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <  value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  <  value))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
105	[BUG]  [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)&&  isEqualValue(x,  Integer.toString(exp)))  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)&&  isEqualValue(x,  Integer.toString(exp)))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)&&  isEqualValue(x,  Integer.toString(exp)))  {	  }    else    if(!(mantissa    /    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
106	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <  value))  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <  value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  <  value))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
107	[BUG]  [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)&&  isEqualValue(x,  Integer.toString(exp)))  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)&&  isEqualValue(x,  Integer.toString(exp)))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(!(mantissa  %  10  *  Math.pow(10,  exp  +  1)  ==  value)&&  isEqualValue(x,  Integer.toString(exp)))  {	  }    else    if(!(mantissa    %    10    *    Math.pow(10,    exp    +    1)    ==    value))    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
108	[BUG]  [BUGGY]  }  else  if(x  <=  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <=  Long.parseLong(value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  Long.parseLong(value))  {	  }    else    if(x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
109	[BUG]  [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  mantissa  <=  127)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  Long.parseLong(value)&&  mantissa  <=  127)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.parseLong(value)&&  mantissa  <=  127)  {	  }    else    if(x    >    Long.parseLong(value))    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
110	[BUG]  [BUGGY]  }  else  if(x  >  0  &&  value  <=  Double.POSITIVE_INFINITY)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  0  &&  value  <=  Double.POSITIVE_INFINITY)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  0  &&  value  <=  Double.POSITIVE_INFINITY)  {	  }    else    if(x    >    0)    {    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
111	[BUG]  [BUGGY]  }  else  if(x  >  0  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  0  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  0  &&  value  <=  Integer.MAX_VALUE)  {	  }    else    if(x    >    0)    {    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
112	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
113	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  &&  value  >=  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
114	[BUG]  [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x!=  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x!=  Long.MIN_VALUE  &&  value  ==  Long.MAX_VALUE)  {	  }    else    if(x!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
115	[BUG]  [BUGGY]  Integer.toString(value));  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  Integer.toString(value));  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	Integer.toString(value));	      	non-compiled	[CE]  ';'  expected	8	None	replace
116	[BUG]  [BUGGY]  long  prev  =  Math.pow(10,  exp  +  1);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  long  prev  =  Math.pow(10,  exp  +  1);  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	long  prev  =  Math.pow(10,  exp  +  1);	      	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
117	[BUG]  [BUGGY]  double  prev  =  Math.pow(10,  exp  +  1);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  double  prev  =  Math.pow(10,  exp  +  1);  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  prev  =  Math.pow(10,  exp  +  1);	      	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
118	[BUG]  [BUGGY]  double  x  =  value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  double  x  =  value.doubleValue();  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	double  x  =  value.doubleValue();	      	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
119	[BUG]  [BUGGY]  }  else  if(x  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <=  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <=  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
120	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
121	[BUG]  [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  mantissa  <=  127)  {  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >  Long.MAX_VALUE  &&  mantissa  <=  127)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >  Long.MAX_VALUE  &&  mantissa  <=  127)  {	  }    else    if(x    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
122	[BUG]  [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  >=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  >=  Long.MIN_VALUE  &&  value  <=  Long.MAX_VALUE)  {	  }    else    if(x    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
123	[BUG]  [BUGGY]  }  else  if(x  <  10  ||  x  >  Long.MAX_VALUE)  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <  10  ||  x  >  Long.MAX_VALUE)  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10  ||  x  >  Long.MAX_VALUE)  {	  }    else    if(x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
124	[BUG]  [BUGGY]  }  else  if(x  <  10  ||  x  >  Long.parseLong(value))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }    [BUGGY]  }  else  if(x  <  10  ||  x  >  Long.parseLong(value))  {  [BUGGY]    add(String.valueOf(x));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	256	256	1	replace	}  else  if(x  <  10  ||  x  >  Long.parseLong(value))  {	  }    else    if(x    <    100)    {    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
