bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  appendBinOp(op,  binOp);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  appendBinOp(op,  binOp);  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  append(op.toLowerCase()  +  binOp.toLowerCase());  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binOp.toLowerCase());	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  append(op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  append(op.toLowerCase());  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase());	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  appendSemiColon(op,  binOp);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  appendSemiColon(op,  binOp);  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  appendFunction(op,  binOp);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  appendFunction(op,  binOp);  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  append(op.toLowerCase(),  binOp.toLowerCase());  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp.toLowerCase());	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  appendStatement(op,  binOp);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  appendStatement(op,  binOp);  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]    [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  append(binOp);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  append(binOp);  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  append(op,  binOp);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  append(op,  binOp);  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  appendSemiColon(binOp);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  appendSemiColon(binOp);  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(binOp);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  appendSemiColon(op);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  appendSemiColon(op);  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  appendColumn(op,  binOp);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  appendColumn(op,  binOp);  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
14	[BUG]  [BUGGY]  appendBinary(op,  binOp);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  appendBinary(op,  binOp);  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  append(op);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  void  appendOp(String  op,  boolean  binOp)  {  append(op);  [BUGGY]  append(op);  [BUGGY]    [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
