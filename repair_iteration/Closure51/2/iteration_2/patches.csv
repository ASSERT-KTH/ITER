bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  append(op.toLowerCase()  *  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  *  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  *  binOp.toLowerCase());	  append(op.toLowerCase()    /    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
2	[BUG]  [BUGGY]  append(bbinOp.toLowerCase()  /  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(bbinOp.toLowerCase()  /  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(bbinOp.toLowerCase()  /  op.toLowerCase());	  append(op.toLowerCase()    /    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
3	[BUG]  [BUGGY]  append(binOp.toLowerCase()  *  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase()  *  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase()  *  op.toLowerCase());	  append(op.toLowerCase()    /    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
4	[BUG]  [BUGGY]  append(op.toUpperCase()  *  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  *  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  *  binOp.toLowerCase());	  append(op.toLowerCase()    /    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
5	[BUG]  [BUGGY]  appendSemiColon(bbinOp,  op);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(bbinOp,  op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(bbinOp,  op);	  appendSemiColon(bbinOp);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
6	[BUG]  [BUGGY]  appendSemi(bbinOp,  op);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemi(bbinOp,  op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemi(bbinOp,  op);	  appendSemiColon(bbinOp);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
7	[BUG]  [BUGGY]  appendMutator(bbinOp);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendMutator(bbinOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendMutator(bbinOp);	  appendSemiColon(bbinOp);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
8	[BUG]  [BUGGY]  appendSemiColon(bbinOp,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(bbinOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(bbinOp,  false);	  appendSemiColon(bbinOp);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
9	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp.toLowerCase(),  true);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  binOp.toLowerCase(),  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp.toLowerCase(),  true);	  append(op.toLowerCase(),    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
10	[BUG]  [BUGGY]  append(binOp.toLowerCase(),  op.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase(),  op.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase(),  op.toLowerCase(),  false);	  append(op.toLowerCase(),    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
11	[BUG]  [BUGGY]  append(op.toUpperCase(),  binOp.toUpperCase(),  true);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase(),  binOp.toUpperCase(),  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase(),  binOp.toUpperCase(),  true);	  append(op.toLowerCase(),    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
12	[BUG]  [BUGGY]  append(op.toUpperCase(),  binOp.toLowerCase(),  true);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase(),  binOp.toLowerCase(),  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase(),  binOp.toLowerCase(),  true);	  append(op.toLowerCase(),    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
13	[BUG]  [BUGGY]  appendOp(op.toLowerCase(),  binOp.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase(),  binOp.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase(),  binOp.toLowerCase(),  false);	  append(op.toLowerCase(),    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
14	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp.toUpperCase(),  true);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  binOp.toUpperCase(),  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp.toUpperCase(),  true);	  append(op.toLowerCase(),    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
15	[BUG]  [BUGGY]  append(binOp.toUpperCase(),  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toUpperCase(),  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toUpperCase(),  op.toUpperCase());	  append(op.toUpperCase(),    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
16	[BUG]  [BUGGY]  append(op.toUpperCase(),  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase(),  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase(),  binOp.toLowerCase());	  append(op.toUpperCase(),    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
17	[BUG]  [BUGGY]  appendOp(op.toUpperCase(),  binOp.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toUpperCase(),  binOp.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toUpperCase(),  binOp.toUpperCase());	  append(op.toUpperCase(),    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
18	[BUG]  [BUGGY]  append(op.toUpperCase(),  binOp.toUpperCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase(),  binOp.toUpperCase()  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase(),  binOp.toUpperCase()  +  1);	  append(op.toUpperCase(),    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
19	[BUG]  [BUGGY]  appendStatement(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  true);	  appendStatement(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
20	[BUG]  [BUGGY]  appendStatement(op,  op,  false);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  op,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  op,  false);	  appendStatement(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
21	[BUG]  [BUGGY]  appendStatement(op,  null,  false);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  null,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  null,  false);	  appendStatement(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
22	[BUG]  [BUGGY]  appendStatement(op,  BinOp,  true);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  BinOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  BinOp,  true);	  appendStatement(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
23	[BUG]  [BUGGY]  appendStatement(op,  false,  binOp);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  false,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  false,  binOp);	  appendStatement(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
24	[BUG]  [BUGGY]  appendStatement(op,  0,  false);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  0,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  0,  false);	  appendStatement(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
25	[BUG]  [BUGGY]  appendStatement(op,  binOp,  false,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  false,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  false,  statementStarted);	  appendStatement(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
26	[BUG]  [BUGGY]  appendOp(binOp);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(binOp);	  appendMutator(binOp);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
27	[BUG]  [BUGGY]  appendFunction(binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(binOp);	  appendMutator(binOp);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
28	[BUG]  [BUGGY]  appendDelimiter(binOp);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendDelimiter(binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDelimiter(binOp);	  appendMutator(binOp);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
29	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp,  false);	  append(op.toLowerCase(),    binOp);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp,  0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  binOp,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp,  0);	  append(op.toLowerCase(),    binOp);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  binOp,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp,  this.statementStarted);	  append(op.toLowerCase(),    binOp);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp,  true);	  append(op.toLowerCase(),    binOp);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  append(binOp.toLowerCase(),  op);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase(),  op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase(),  op);	  append(op.toLowerCase(),    binOp);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  appendOp(op.toLowerCase(),  binOp);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase(),  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase(),  binOp);	  append(op.toLowerCase(),    binOp);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  statementNeedsEnded);	  appendBinOp(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
36	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  this.statementNeedsEnded);	  appendBinOp(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
37	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  conditionStarted);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  conditionStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  conditionStarted);	  appendBinOp(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  count);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  count);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  count);	  appendBinOp(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  appendMutator(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendMutator(op,  binOp,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendMutator(op,  binOp,  this.statementStarted);	  appendMutator(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
40	[BUG]  [BUGGY]  appendMutator(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendMutator(op,  binOp,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendMutator(op,  binOp,  0);	  appendMutator(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
41	[BUG]  [BUGGY]  appendMutator(op,  binOp,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendMutator(op,  binOp,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendMutator(op,  binOp,  statementStarted);	  appendMutator(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
42	[BUG]  [BUGGY]  appendMutator(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendMutator(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendMutator(op,  binOp,  false);	  appendMutator(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
43	[BUG]  [BUGGY]  appendMutator(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendMutator(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendMutator(op,  binOp,  true);	  appendMutator(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
44	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binOp.toUpperCase(),  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  binOp.toUpperCase(),  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binOp.toUpperCase(),  op.toUpperCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
45	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp.toLowerCase(),  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  binOp.toLowerCase(),  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp.toLowerCase(),  op.toUpperCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
46	[BUG]  [BUGGY]  append(binOp.toLowerCase()  +  op.toLowerCase(),  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase()  +  op.toLowerCase(),  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase()  +  op.toLowerCase(),  op.toUpperCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
47	[BUG]  [BUGGY]  append(op.toLowerCase()  *  binOp.toLowerCase(),  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  *  binOp.toLowerCase(),  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  *  binOp.toLowerCase(),  op.toUpperCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
48	[BUG]  [BUGGY]  append(op.toLowerCase()  /  binOp.toLowerCase(),  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  /  binOp.toLowerCase(),  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  /  binOp.toLowerCase(),  op.toUpperCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
49	[BUG]  [BUGGY]  append(op.toLowerCase()  +  op.toLowerCase(),  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  op.toLowerCase(),  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  op.toLowerCase(),  op.toUpperCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
50	[BUG]  [BUGGY]  appendBinary(op,  BinOp,  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  BinOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  BinOp,  false);	  appendBinary(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
51	[BUG]  [BUGGY]  AppendBinary(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendBinary(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendBinary(op,  binOp,  false);	  appendBinary(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
52	[BUG]  [BUGGY]  appendBinary(op,  binaryOp,  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binaryOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binaryOp,  false);	  appendBinary(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
53	[BUG]  [BUGGY]  appendBinary(op,  binOp,  true,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  true,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  true,  false);	  appendBinary(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
54	[BUG]  [BUGGY]  appendBinary(op,  op,  true);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  op,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  op,  true);	  appendBinary(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
55	[BUG]  [BUGGY]  appendColon(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColon(op,  binOp,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColon(op,  binOp,  0);	  appendColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
56	[BUG]  [BUGGY]  appendColon(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColon(op,  binOp,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColon(op,  binOp,  this.statementStarted);	  appendColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
57	[BUG]  [BUGGY]  appendColon(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColon(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColon(op,  binOp,  false);	  appendColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
58	[BUG]  [BUGGY]  appendColon(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColon(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColon(op,  binOp,  true);	  appendColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
59	[BUG]  [BUGGY]  appendColon(op,  binOp,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColon(op,  binOp,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColon(op,  binOp,  statementStarted);	  appendColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
60	[BUG]  [BUGGY]  append(binOp.toUpperCase()  +  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toUpperCase()  +  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toUpperCase()  +  op.toUpperCase());	  append(op.toUpperCase()    +    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
61	[BUG]  [BUGGY]  append(op.toUpperCase()  +  binOp.toUpperCase(),  false);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  binOp.toUpperCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  binOp.toUpperCase(),  false);	  append(op.toUpperCase()    +    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
62	[BUG]  [BUGGY]  append(op.toUpperCase()  /  binOp.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  /  binOp.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  /  binOp.toUpperCase());	  append(op.toUpperCase()    +    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
63	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binOp.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  binOp.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binOp.toUpperCase());	  append(op.toUpperCase()    +    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
64	[BUG]  [BUGGY]  append(binOp,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp,  op.toLowerCase());	  append(binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
65	[BUG]  [BUGGY]  appendBoolean(binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBoolean(binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBoolean(binOp.toLowerCase());	  append(binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
66	[BUG]  [BUGGY]  appendOp(binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(binOp.toLowerCase());	  append(binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
67	[BUG]  [BUGGY]  append0(binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(binOp.toLowerCase());	  append(binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
68	[BUG]  [BUGGY]  appendBinOp(op,  binOp  +  1,  op.toString());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp  +  1,  op.toString());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp  +  1,  op.toString());	  appendBinOp(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
69	[BUG]  [BUGGY]  appendBinOp(op,  binOp  +  1,  op.length);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp  +  1,  op.length);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp  +  1,  op.length);	  appendBinOp(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
70	[BUG]  [BUGGY]  appendBinOp(op,  binOp  +  2);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp  +  2);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp  +  2);	  appendBinOp(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
71	[BUG]  [BUGGY]  appendBinOp(op,  binOp  +  1,  0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp  +  1,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp  +  1,  0);	  appendBinOp(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
72	[BUG]  [BUGGY]  appendBinOp(op,  binOp  +  3);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp  +  3);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp  +  3);	  appendBinOp(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
73	[BUG]  [BUGGY]  appendBinOp(op,  binOp  +  1,  op.hashCode());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp  +  1,  op.hashCode());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp  +  1,  op.hashCode());	  appendBinOp(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
74	[BUG]  [BUGGY]  append0(op);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op);	  append0(binOp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
75	[BUG]  [BUGGY]  append0(op.toLowerCase(),  binOp);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op.toLowerCase(),  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op.toLowerCase(),  binOp);	  append0(binOp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
76	[BUG]  [BUGGY]  append0(Op.toLowerCase(binOp));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(Op.toLowerCase(binOp));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(Op.toLowerCase(binOp));	  append0(binOp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
77	[BUG]  [BUGGY]  append1(binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append1(binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append1(binOp);	  append0(binOp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
78	[BUG]  [BUGGY]  appendOp(op.toLowerCase()  +  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase()  +  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase()  +  op.toLowerCase());	  appendOp(binOp.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
79	[BUG]  [BUGGY]  appendOp(op,  binOp.toLowerCase()  +  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  binOp.toLowerCase()  +  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  binOp.toLowerCase()  +  op.toLowerCase());	  appendOp(binOp.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
80	[BUG]  [BUGGY]  appendOp(op.toUpperCase()  +  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toUpperCase()  +  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toUpperCase()  +  binOp.toLowerCase());	  appendOp(binOp.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
81	[BUG]  [BUGGY]  appendOp(op.toLowerCase()  +  binaryOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase()  +  binaryOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase()  +  binaryOp.toLowerCase());	  appendOp(binOp.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
82	[BUG]  [BUGGY]  appendOp(op.toLowerCase()  +  b.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase()  +  b.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase()  +  b.toLowerCase());	  appendOp(binOp.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
83	[BUG]  [BUGGY]  appendFunction(op,  binOp,  statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  statementNeedsEnded);	  appendFunction(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
84	[BUG]  [BUGGY]  appendFunction(op,  binOp,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  this.statementNeedsEnded);	  appendFunction(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
85	[BUG]  [BUGGY]  appendFunction(op,  binOp,  conditionNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  conditionNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  conditionNeedsEnded);	  appendFunction(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
86	[BUG]  [BUGGY]  appendFunction(op,  binOp,  count);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  count);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  count);	  appendFunction(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
87	[BUG]  [BUGGY]  appendFunction(op,  this.statementStarted,  binOp);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  this.statementStarted,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  this.statementStarted,  binOp);	  appendFunction(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
88	[BUG]  [BUGGY]  appendFunction(op,  this.statementContext,  binOp);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  this.statementContext,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  this.statementContext,  binOp);	  appendFunction(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
89	[BUG]  [BUGGY]  appendFunction(op,  op,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  op,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  op,  this.statementStarted);	  appendFunction(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
90	[BUG]  [BUGGY]  appendFunction(op,  binOp,  this.statementStarted,  this.shouldSemiColon);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  this.statementStarted,  this.shouldSemiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  this.statementStarted,  this.shouldSemiColon);	  appendFunction(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
91	[BUG]  [BUGGY]  appendFunction(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  this.statementStarted,  this.shouldEndLine);	  appendFunction(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
92	[BUG]  [BUGGY]  appendFunction(op,  this.statementNeedsEnded,  binOp);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  this.statementNeedsEnded,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  this.statementNeedsEnded,  binOp);	  appendFunction(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
93	[BUG]  [BUGGY]  appendBinary(op,  op,  false);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  op,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  op,  false);	  appendBinary(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
94	[BUG]  [BUGGY]  appendBinary(op,  BinOp,  true);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  BinOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  BinOp,  true);	  appendBinary(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
95	[BUG]  [BUGGY]  appendBinary(op,  false,  binOp);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  false,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  false,  binOp);	  appendBinary(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
96	[BUG]  [BUGGY]  appendBinary(op,  null,  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  null,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  null,  false);	  appendBinary(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
97	[BUG]  [BUGGY]  AppendBinary(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendBinary(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendBinary(op,  binOp,  true);	  appendBinary(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
98	[BUG]  [BUGGY]  appendBinOp(op.toLowerCase(),  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op.toLowerCase(),  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op.toLowerCase(),  binOp);	  appendBinOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
99	[BUG]  [BUGGY]  appendBinOp(op,  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp.toLowerCase());	  appendBinOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
100	[BUG]  [BUGGY]  appendBinOp(op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op.toUpperCase());	  appendBinOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
101	[BUG]  [BUGGY]  appendBinOp(binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(binOp.toLowerCase());	  appendBinOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
102	[BUG]  [BUGGY]  appendBinOp(bbinOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(bbinOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(bbinOp.toLowerCase());	  appendBinOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
103	[BUG]  [BUGGY]  appendBinOp(op.toLowerCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op.toLowerCase()  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op.toLowerCase()  +  1);	  appendBinOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
104	[BUG]  [BUGGY]  appendStatement(op,  this.statementStarted,  binOp);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  this.statementStarted,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  this.statementStarted,  binOp);	  appendStatement(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
105	[BUG]  [BUGGY]  appendStatement(op,  op,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  op,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  op,  this.statementStarted);	  appendStatement(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
106	[BUG]  [BUGGY]  appendStatement(op,  binOp,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  this.statementNeedsEnded);	  appendStatement(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
107	[BUG]  [BUGGY]  appendStatement(op,  this.statementNeedsEnded,  binOp);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  this.statementNeedsEnded,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  this.statementNeedsEnded,  binOp);	  appendStatement(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
108	[BUG]  [BUGGY]  appendStatement(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  this.statementStarted,  this.shouldEndLine);	  appendStatement(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
109	[BUG]  [BUGGY]  appendStatement(this.statementStarted,  binOp);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(this.statementStarted,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(this.statementStarted,  binOp);	  appendStatement(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
110	[BUG]  [BUGGY]  appendStatement(op,  this.statementContext,  binOp);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  this.statementContext,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  this.statementContext,  binOp);	  appendStatement(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
111	[BUG]  [BUGGY]  appendSemiColon(buffOp,  op);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(buffOp,  op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(buffOp,  op);	  appendSemiColon(buffOp);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
112	[BUG]  [BUGGY]  appendSemiColon(buffOp,  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(buffOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(buffOp,  false);	  appendSemiColon(buffOp);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
113	[BUG]  [BUGGY]  appendSemiColon(semiColon);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(semiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(semiColon);	  appendSemiColon(buffOp);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
114	[BUG]  [BUGGY]  appendSemiColon(buffOp,  binOp);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(buffOp,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(buffOp,  binOp);	  appendSemiColon(buffOp);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
115	[BUG]  [BUGGY]  appendSemiColon(buffOp,  statementContext);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(buffOp,  statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(buffOp,  statementContext);	  appendSemiColon(buffOp);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
116	[BUG]  [BUGGY]  appendColumn(op,  this.statementStarted,  binOp);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  this.statementStarted,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  this.statementStarted,  binOp);	  appendColumn(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
117	[BUG]  [BUGGY]  appendColumn(op,  binOp,  this.statementStarted,  this.shouldSemiColon);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  this.statementStarted,  this.shouldSemiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  this.statementStarted,  this.shouldSemiColon);	  appendColumn(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
118	[BUG]  [BUGGY]  appendColumn(op,  this.statementContext,  binOp);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  this.statementContext,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  this.statementContext,  binOp);	  appendColumn(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
119	[BUG]  [BUGGY]  appendColumn(op,  binOp,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  this.statementNeedsEnded);	  appendColumn(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
120	[BUG]  [BUGGY]  appendColumn(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  this.statementStarted,  this.shouldEndLine);	  appendColumn(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
121	[BUG]  [BUGGY]  appendColumn(op,  binOp,  this.statementStarted,  this.semiColon);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  this.statementStarted,  this.semiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  this.statementStarted,  this.semiColon);	  appendColumn(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
122	[BUG]  [BUGGY]  appendColumn(op,  binOp,  this.statementStarted,  0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  this.statementStarted,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  this.statementStarted,  0);	  appendColumn(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
123	[BUG]  [BUGGY]  appendBinary(op,  0,  binOp);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  0,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  0,  binOp);	  appendBinary(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
124	[BUG]  [BUGGY]  appendBinary(op,  binOp,  0,  0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  0,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  0,  0);	  appendBinary(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
125	[BUG]  [BUGGY]  appendBinary(op,  binOp,  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  1);	  appendBinary(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
126	[BUG]  [BUGGY]  appendBinary(op,  binOp,  0,  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  0,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  0,  false);	  appendBinary(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
127	[BUG]  [BUGGY]  appendBinary(op,  0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  0);	  appendBinary(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
128	[BUG]  [BUGGY]  appendBinary(op,  binOp,  0,  true);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  0,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  0,  true);	  appendBinary(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
129	[BUG]  [BUGGY]  if(binOp)  {  appendStatement(op,  binOp);  }  else  {  appendStatement(op,  binOp);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  if(binOp)  {  appendStatement(op,  binOp);  }  else  {  appendStatement(op,  binOp);  }  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	if(binOp)  {  appendStatement(op,  binOp);  }  else  {  appendStatement(op,  binOp);  }	  appendStatement(op,    op);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
130	[BUG]  [BUGGY]  if(binOp)  {  appendStatement(op,  op);  }  else  {  appendStatement(op,  binOp);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  if(binOp)  {  appendStatement(op,  op);  }  else  {  appendStatement(op,  binOp);  }  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	if(binOp)  {  appendStatement(op,  op);  }  else  {  appendStatement(op,  binOp);  }	  appendStatement(op,    op);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
131	[BUG]  [BUGGY]  if(binOp)  {  appendStatement(op,  binOp);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  if(binOp)  {  appendStatement(op,  binOp);  }  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	if(binOp)  {  appendStatement(op,  binOp);  }	  appendStatement(op,    op);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
132	[BUG]  [BUGGY]  if(binOp)  {  appendStatement(op,  binOp);  }  else  {  appendBinOp(op,  binOp);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  if(binOp)  {  appendStatement(op,  binOp);  }  else  {  appendBinOp(op,  binOp);  }  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	if(binOp)  {  appendStatement(op,  binOp);  }  else  {  appendBinOp(op,  binOp);  }	  appendStatement(op,    op);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
133	[BUG]  [BUGGY]  appendStatement(op,  op,  this);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  op,  this);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  op,  this);	  appendStatement(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
134	[BUG]  [BUGGY]  appendStatement(op,  binOp,  this,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  this,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  this,  statementStarted);	  appendStatement(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
135	[BUG]  [BUGGY]  appendStatement(op,  binOp,  this,  statementContext);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  this,  statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  this,  statementContext);	  appendStatement(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
136	[BUG]  [BUGGY]  appendStatement(op,  null,  this);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  null,  this);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  null,  this);	  appendStatement(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
137	[BUG]  [BUGGY]  appendStatement(op,  this,  binOp);  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  this,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  this,  binOp);	  appendStatement(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
138	[BUG]  [BUGGY]  appendStatement(op,  binOp,  null);  [CE]  illegal  start  of  expression  [FE]                                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  null);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  null);	  appendStatement(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
139	[BUG]  [BUGGY]  append(op.toLowerCase()  /  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  /  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  /  op.toLowerCase());	  append(op.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
140	[BUG]  [BUGGY]  append(op.toLowerCase()  *  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  *  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  *  op.toLowerCase());	  append(op.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
141	[BUG]  [BUGGY]  append(op.toUpperCase()  +  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  binOp.toLowerCase());	  append(op.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
142	[BUG]  [BUGGY]  append(op,  binOp.toLowerCase()  +  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp.toLowerCase()  +  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp.toLowerCase()  +  op.toLowerCase());	  append(op.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
143	[BUG]  [BUGGY]  appendSemi(op,  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemi(op,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemi(op,  binOp);	  appendSemi(binOp,    op);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
144	[BUG]  [BUGGY]  appendSemi(op,  binaryOp);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemi(op,  binaryOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemi(op,  binaryOp);	  appendSemi(binOp,    op);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
145	[BUG]  [BUGGY]  appendSemiColon(op,  this.statementContext,  binOp);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  this.statementContext,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  this.statementContext,  binOp);	  appendSemiColon(op,    binOp,    this.statementContext);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
146	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.statementContext,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.statementContext,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.statementContext,  this.statementNeedsEnded);	  appendSemiColon(op,    binOp,    this.statementContext);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
147	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.statementContext,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.statementContext,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.statementContext,  this.statementStarted);	  appendSemiColon(op,    binOp,    this.statementContext);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
148	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.statementContext,  this.statementEnd);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.statementContext,  this.statementEnd);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.statementContext,  this.statementEnd);	  appendSemiColon(op,    binOp,    this.statementContext);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
149	[BUG]  [BUGGY]  appendColon(op,  this.statementContext,  binOp);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColon(op,  this.statementContext,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColon(op,  this.statementContext,  binOp);	  appendSemiColon(op,    binOp,    this.statementContext);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
150	[BUG]  [BUGGY]  appendSemiColon(op,  binaryOp,  this.statementContext);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binaryOp,  this.statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binaryOp,  this.statementContext);	  appendSemiColon(op,    binOp,    this.statementContext);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
151	[BUG]  [BUGGY]  appendRaw(op);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRaw(op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRaw(op);	  appendColon(binOp);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
152	[BUG]  [BUGGY]  appendOp(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));	  append(op,    binOp    &&    isEnabled(Feature.QUOTE_FIELD_NAMES));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
153	[BUG]  [BUGGY]  append(op,  binOp  ||  isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp  ||  isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp  ||  isEnabled(Feature.QUOTE_FIELD_NAMES));	  append(op,    binOp    &&    isEnabled(Feature.QUOTE_FIELD_NAMES));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
154	[BUG]  [BUGGY]  appendSemiColon(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));	  append(op,    binOp    &&    isEnabled(Feature.QUOTE_FIELD_NAMES));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
155	[BUG]  [BUGGY]  append(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES),  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES),  false);	  append(op,    binOp    &&    isEnabled(Feature.QUOTE_FIELD_NAMES));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
156	[BUG]  [BUGGY]  append(op,  isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  isEnabled(Feature.QUOTE_FIELD_NAMES));	  append(op,    binOp    &&    isEnabled(Feature.QUOTE_FIELD_NAMES));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
157	[BUG]  [BUGGY]  append(op,  BinOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  BinOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  BinOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));	  append(op,    binOp    &&    isEnabled(Feature.QUOTE_FIELD_NAMES));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
158	[BUG]  [BUGGY]  append(binOp.toLowerCase()  +  op.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase()  +  op.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase()  +  op.toLowerCase(),  false);	  append(op.toLowerCase()    +    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
159	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binOp.toLowerCase(),  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  binOp.toLowerCase(),  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binOp.toLowerCase(),  true);	  append(op.toLowerCase()    +    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
160	[BUG]  [BUGGY]  append(op.toLowerCase()  /  binOp.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  /  binOp.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  /  binOp.toLowerCase(),  false);	  append(op.toLowerCase()    +    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
161	[BUG]  [BUGGY]  append(op.toLowerCase()  *  binOp.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  *  binOp.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  *  binOp.toLowerCase(),  false);	  append(op.toLowerCase()    +    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
162	[BUG]  [BUGGY]  append(op.toUpperCase()  +  binOp.toLowerCase(),  true);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  binOp.toLowerCase(),  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  binOp.toLowerCase(),  true);	  append(op.toLowerCase()    +    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
163	[BUG]  [BUGGY]  appendBinOp(op,  BinOp);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  BinOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  BinOp);	  appendBinOp(op);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
164	[BUG]  [BUGGY]  appendDelimiter(op,  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendDelimiter(op,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDelimiter(op,  binOp);	  appendBinOp(op);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
165	[BUG]  [BUGGY]  AppendSemiColon(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendSemiColon(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendSemiColon(op,  binOp,  false);	  appendSemiColon(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
166	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  true,  false);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  true,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  true,  false);	  appendSemiColon(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
167	[BUG]  [BUGGY]  appendSemiColon(op,  binaryOp,  false);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binaryOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binaryOp,  false);	  appendSemiColon(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
168	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  null);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  null);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  null);	  appendSemiColon(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
169	[BUG]  [BUGGY]  appendSemiColon(op,  BinOp,  false);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  BinOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  BinOp,  false);	  appendSemiColon(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
170	[BUG]  [BUGGY]  append(op,  0,  binOp);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  0,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  0,  binOp);	  append(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
171	[BUG]  [BUGGY]  appendOp(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  binOp,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  binOp,  0);	  append(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
172	[BUG]  [BUGGY]  append(op,  binOp,  0,  0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp,  0,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  0,  0);	  append(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
173	[BUG]  [BUGGY]  appendOp(op,  binOp,  0,  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  binOp,  0,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  binOp,  0,  0);	  append(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
174	[BUG]  [BUGGY]  append(op,  binOp,  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp,  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  1);	  append(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
175	[BUG]  [BUGGY]  append0(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op,  binOp,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op,  binOp,  0);	  append(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
176	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binaryOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  binaryOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binaryOp.toLowerCase());	  append(binOp.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
177	[BUG]  [BUGGY]  append(Op.toLowerCase()  +  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(Op.toLowerCase()  +  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(Op.toLowerCase()  +  op.toLowerCase());	  append(binOp.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
178	[BUG]  [BUGGY]  append(op,  binOp.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp.toLowerCase(),  false);	  append(op,    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
179	[BUG]  [BUGGY]  appendOp(op,  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  binOp.toLowerCase());	  append(op,    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
180	[BUG]  [BUGGY]  append(op,  binOp.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp.toUpperCase());	  append(op,    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
181	[BUG]  [BUGGY]  append(op,  binOp.toLowerCase(),  true);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp.toLowerCase(),  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp.toLowerCase(),  true);	  append(op,    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
182	[BUG]  [BUGGY]  append(op,  binOp.toLowerCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp.toLowerCase()  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp.toLowerCase()  +  1);	  append(op,    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
183	[BUG]  [BUGGY]  append0(op,  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op,  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op,  binOp.toLowerCase());	  append(op,    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
184	[BUG]  [BUGGY]  appendColumn(op,  binOp  +  1,  op.toString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp  +  1,  op.toString());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp  +  1,  op.toString());	  appendColumn(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
185	[BUG]  [BUGGY]  appendColumn(op,  binOp  +  2);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp  +  2);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp  +  2);	  appendColumn(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
186	[BUG]  [BUGGY]  appendColumn(op,  binOp  -  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp  -  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp  -  1);	  appendColumn(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
187	[BUG]  [BUGGY]  appendColumn(op,  binOp  +  1,  0);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp  +  1,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp  +  1,  0);	  appendColumn(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
188	[BUG]  [BUGGY]  appendRange(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRange(op,  binOp  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRange(op,  binOp  +  1);	  appendColumn(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
189	[BUG]  [BUGGY]  appendRaw(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRaw(op,  binOp  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRaw(op,  binOp  +  1);	  appendColumn(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
190	[BUG]  [BUGGY]  append(op.toUpperCase()  +  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  op.toLowerCase());	  append(binOp.toUpperCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
191	[BUG]  [BUGGY]  append(op,  binOp.toUpperCase()  +  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp.toUpperCase()  +  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp.toUpperCase()  +  op.toLowerCase());	  append(binOp.toUpperCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
192	[BUG]  [BUGGY]  append(Op.toUpperCase()  +  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(Op.toUpperCase()  +  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(Op.toUpperCase()  +  op.toLowerCase());	  append(binOp.toUpperCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
193	[BUG]  [BUGGY]  append(op.toLowerCase()  /  binaryOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  /  binaryOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  /  binaryOp.toLowerCase());	  append(binOp.toLowerCase()    /    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
194	[BUG]  [BUGGY]  append(op.toUpperCase()  /  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  /  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  /  binOp.toLowerCase());	  append(binOp.toLowerCase()    /    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
195	[BUG]  [BUGGY]  append(Op.toLowerCase()  /  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(Op.toLowerCase()  /  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(Op.toLowerCase()  /  binOp.toLowerCase());	  append(binOp.toLowerCase()    /    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
196	[BUG]  [BUGGY]  appendSemiColon(op,  this.statementStarted,  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  this.statementStarted,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  this.statementStarted,  binOp);	  appendSemiColon(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
197	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.statementNeedsEnded);	  appendSemiColon(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
198	[BUG]  [BUGGY]  appendSemiColon(op,  this.statementNeedsEnded,  binOp);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  this.statementNeedsEnded,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  this.statementNeedsEnded,  binOp);	  appendSemiColon(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
199	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.statementStarted,  this.shouldEndLine);	  appendSemiColon(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
200	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.statementEnd);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.statementEnd);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.statementEnd);	  appendSemiColon(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
201	[BUG]  [BUGGY]  appendSemiColon(op,  op,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  op,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  op,  this.statementStarted);	  appendSemiColon(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
202	[BUG]  [BUGGY]  appendSemiColon(op,  binOp  +  1,  op.toString());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp  +  1,  op.toString());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp  +  1,  op.toString());	  appendSemiColon(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
203	[BUG]  [BUGGY]  appendSemiColon(op,  binOp  +  2);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp  +  2);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp  +  2);	  appendSemiColon(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
204	[BUG]  [BUGGY]  appendSemiColon(op,  binOp  -  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp  -  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp  -  1);	  appendSemiColon(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
205	[BUG]  [BUGGY]  appendSemiColon(op,  binOp  +  1,  op.length);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp  +  1,  op.length);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp  +  1,  op.length);	  appendSemiColon(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
206	[BUG]  [BUGGY]  appendSemiColon(op,  binOp  +  1,  statementContext);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp  +  1,  statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp  +  1,  statementContext);	  appendSemiColon(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
207	[BUG]  [BUGGY]  appendColon(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColon(op,  binOp  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColon(op,  binOp  +  1);	  appendSemiColon(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
208	[BUG]  [BUGGY]  append0(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op,  binOp,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op,  binOp,  this.statementStarted);	  append0(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
209	[BUG]  [BUGGY]  append0(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op,  binOp,  false);	  append0(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
210	[BUG]  [BUGGY]  append0(op,  binOp,  getSemiColon());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op,  binOp,  getSemiColon());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op,  binOp,  getSemiColon());	  append0(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
211	[BUG]  [BUGGY]  append0(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op,  binOp,  true);	  append0(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
212	[BUG]  [BUGGY]  append0(op,  binOp,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op,  binOp,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op,  binOp,  statementStarted);	  append0(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
213	[BUG]  [BUGGY]  append0(op,  binOp,  0,  0);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op,  binOp,  0,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op,  binOp,  0,  0);	  append0(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
214	[BUG]  [BUGGY]  appendStatement(op);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op);	  appendColon(op);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
215	[BUG]  [BUGGY]  appendStatement(op,  binOp,  this.declarationStarted);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  this.declarationStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  this.declarationStarted);	  appendStatement(op,    binOp,    declarationStarted);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
216	[BUG]  [BUGGY]  appendStatement(op,  binOp,  declarationStarted,  false);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  declarationStarted,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  declarationStarted,  false);	  appendStatement(op,    binOp,    declarationStarted);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
217	[BUG]  [BUGGY]  appendStatement(op,  binOp,  statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  statementNeedsEnded);	  appendStatement(op,    binOp,    declarationStarted);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
218	[BUG]  [BUGGY]  appendStatement(op,  op,  declarationStarted);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  op,  declarationStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  op,  declarationStarted);	  appendStatement(op,    binOp,    declarationStarted);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
219	[BUG]  [BUGGY]  appendSemiColon(op,  this.semiColon,  binOp);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  this.semiColon,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  this.semiColon,  binOp);	  appendSemiColon(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
220	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.semiColon,  this.statementStarted);	  appendSemiColon(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
221	[BUG]  [BUGGY]  appendSemiColon(this.semiColon,  binOp,  this.semiColon);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(this.semiColon,  binOp,  this.semiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(this.semiColon,  binOp,  this.semiColon);	  appendSemiColon(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
222	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.semiColon,  this.statementNeedsEnded);	  appendSemiColon(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
223	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon,  this.statementContext);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon,  this.statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.semiColon,  this.statementContext);	  appendSemiColon(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
224	[BUG]  [BUGGY]  appendStatement(op,  binOp,  this.statementContext);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  this.statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  this.statementContext);	  appendStatement(op,    binOp,    statementContext);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
225	[BUG]  [BUGGY]  appendStatement(op,  binOp,  context);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  context);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  context);	  appendStatement(op,    binOp,    statementContext);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
226	[BUG]  [BUGGY]  appendStatement(op,  binOp,  statementsContext);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  statementsContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  statementsContext);	  appendStatement(op,    binOp,    statementContext);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
227	[BUG]  [BUGGY]  appendStatement(op,  binOp,  statementContext,  false);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  statementContext,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  statementContext,  false);	  appendStatement(op,    binOp,    statementContext);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
228	[BUG]  [BUGGY]  appendStatement(op,  op,  statementContext);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  op,  statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  op,  statementContext);	  appendStatement(op,    binOp,    statementContext);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
229	[BUG]  [BUGGY]  appendStatement(op,  binOp,  declarationContext);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  declarationContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  declarationContext);	  appendStatement(op,    binOp,    statementContext);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
230	[BUG]  [BUGGY]  appendDescriptor(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendDescriptor(op,  binOp,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDescriptor(op,  binOp,  0);	  appendDescriptor(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
231	[BUG]  [BUGGY]  appendDescriptor(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendDescriptor(op,  binOp,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDescriptor(op,  binOp,  this.statementStarted);	  appendDescriptor(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
232	[BUG]  [BUGGY]  appendDescriptor(op,  binOp,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendDescriptor(op,  binOp,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDescriptor(op,  binOp,  statementStarted);	  appendDescriptor(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
233	[BUG]  [BUGGY]  appendDescriptor(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendDescriptor(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDescriptor(op,  binOp,  false);	  appendDescriptor(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
234	[BUG]  [BUGGY]  appendDescriptor(op,  binOp,  declarationStarted);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendDescriptor(op,  binOp,  declarationStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDescriptor(op,  binOp,  declarationStarted);	  appendDescriptor(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
235	[BUG]  [BUGGY]  appendDescriptor(op,  op);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendDescriptor(op,  op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDescriptor(op,  op);	  appendDescriptor(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
236	[BUG]  [BUGGY]  append(binOp.toLowerCase(),  op.toLowerCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase(),  op.toLowerCase()  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase(),  op.toLowerCase()  +  1);	  append(op.toLowerCase(),    binOp.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
237	[BUG]  [BUGGY]  append(op.toLowerCase()  +  1,  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  1,  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  1,  binOp.toLowerCase());	  append(op.toLowerCase(),    binOp.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
238	[BUG]  [BUGGY]  append(bbinOp.toLowerCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(bbinOp.toLowerCase(),  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(bbinOp.toLowerCase(),  op.toLowerCase());	  append(op.toLowerCase(),    binOp.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
239	[BUG]  [BUGGY]  append0(op.toLowerCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op.toLowerCase()  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op.toLowerCase()  +  1);	  append0(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
240	[BUG]  [BUGGY]  append0(op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op.toUpperCase());	  append0(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
241	[BUG]  [BUGGY]  append0(op.toLowerCase()  +  binOp);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op.toLowerCase()  +  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op.toLowerCase()  +  binOp);	  append0(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
242	[BUG]  [BUGGY]  appendBinary(op,  binOp  +  1,  op.toString());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp  +  1,  op.toString());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp  +  1,  op.toString());	  appendBinary(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
243	[BUG]  [BUGGY]  appendBinary(op,  binOp  +  2);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp  +  2);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp  +  2);	  appendBinary(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
244	[BUG]  [BUGGY]  appendBinary(op,  binOp  +  1,  op.length);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp  +  1,  op.length);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp  +  1,  op.length);	  appendBinary(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
245	[BUG]  [BUGGY]  appendBinary(op,  binOp  +  1,  op.charAt(binOp));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp  +  1,  op.charAt(binOp));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp  +  1,  op.charAt(binOp));	  appendBinary(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
246	[BUG]  [BUGGY]  appendBinary(op,  binOp  +  1,  op.hashCode());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp  +  1,  op.hashCode());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp  +  1,  op.hashCode());	  appendBinary(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
247	[BUG]  [BUGGY]  appendBinary(op,  binOp  +  1,  op.getLineno());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp  +  1,  op.getLineno());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp  +  1,  op.getLineno());	  appendBinary(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
248	[BUG]  [BUGGY]  appendOp(op,  BinOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  BinOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  BinOp);	  appendOp(op);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
249	[BUG]  [BUGGY]  append(binOp.toLowerCase()  +  op.toLowerCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase()  +  op.toLowerCase(),  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase()  +  op.toLowerCase(),  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
250	[BUG]  [BUGGY]  append(op.toLowerCase()  /  binOp.toLowerCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  /  binOp.toLowerCase(),  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  /  binOp.toLowerCase(),  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
251	[BUG]  [BUGGY]  append(op.toLowerCase()  *  binOp.toLowerCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  *  binOp.toLowerCase(),  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  *  binOp.toLowerCase(),  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
252	[BUG]  [BUGGY]  append(op.toLowerCase()  +  op.toLowerCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  op.toLowerCase(),  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  op.toLowerCase(),  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
253	[BUG]  [BUGGY]  append(op.toUpperCase()  +  binOp.toLowerCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  binOp.toLowerCase(),  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  binOp.toLowerCase(),  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
254	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  0,  0);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  0,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  0,  0);	  appendBinOp(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
255	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  1);	  appendBinOp(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
256	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  0,  false);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  0,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  0,  false);	  appendBinOp(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
257	[BUG]  [BUGGY]  appendBinOp(op,  0,  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  0,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  0,  binOp);	  appendBinOp(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
258	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  0,  true);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  0,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  0,  true);	  appendBinOp(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
259	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  0,  null);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  0,  null);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  0,  null);	  appendBinOp(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
260	[BUG]  [BUGGY]  appendStatement(op,  op,  binOp);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  op,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  op,  binOp);	  appendStatement(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
261	[BUG]  [BUGGY]  appendStatement(op,  binOp,  conditionStarted);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  conditionStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  conditionStarted);	  appendStatement(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
262	[BUG]  [BUGGY]  appendOp(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  binOp,  true);	  appendBinOp(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
263	[BUG]  [BUGGY]  AppendBinOp(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendBinOp(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendBinOp(op,  binOp,  false);	  appendBinOp(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
264	[BUG]  [BUGGY]  appendBinOp(op,  BinOp,  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  BinOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  BinOp,  false);	  appendBinOp(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
265	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  null);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  null);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  null);	  appendBinOp(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
266	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  true,  false);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  true,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  true,  false);	  appendBinOp(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
267	[BUG]  [BUGGY]  appendRaw(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRaw(op,  binOp,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRaw(op,  binOp,  0);	  appendRaw(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
268	[BUG]  [BUGGY]  appendRaw(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRaw(op,  binOp,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRaw(op,  binOp,  this.statementStarted);	  appendRaw(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
269	[BUG]  [BUGGY]  appendRaw(op,  0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRaw(op,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRaw(op,  0);	  appendRaw(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
270	[BUG]  [BUGGY]  appendRaw(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRaw(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRaw(op,  binOp,  false);	  appendRaw(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
271	[BUG]  [BUGGY]  appendRaw(op,  0,  binOp);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRaw(op,  0,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRaw(op,  0,  binOp);	  appendRaw(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
272	[BUG]  [BUGGY]  appendSemiColumn(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColumn(op,  binOp,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColumn(op,  binOp,  this.statementStarted);	  appendSemiColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
273	[BUG]  [BUGGY]  appendSemiColumn(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColumn(op,  binOp,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColumn(op,  binOp,  0);	  appendSemiColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
274	[BUG]  [BUGGY]  appendSemiColumn(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColumn(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColumn(op,  binOp,  false);	  appendSemiColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
275	[BUG]  [BUGGY]  appendSemiColumn(op,  binOp,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColumn(op,  binOp,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColumn(op,  binOp,  statementStarted);	  appendSemiColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
276	[BUG]  [BUGGY]  appendSemiColumn(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColumn(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColumn(op,  binOp,  true);	  appendSemiColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
277	[BUG]  [BUGGY]  appendSemiColumn(op,  binOp,  this.statementContext);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColumn(op,  binOp,  this.statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColumn(op,  binOp,  this.statementContext);	  appendSemiColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
278	[BUG]  [BUGGY]  AppendSemiColon(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendSemiColon(op,  binOp,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendSemiColon(op,  binOp,  this.statementStarted);	  AppendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
279	[BUG]  [BUGGY]  AppendSemiColon(op,  binOp,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendSemiColon(op,  binOp,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendSemiColon(op,  binOp,  statementStarted);	  AppendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
280	[BUG]  [BUGGY]  AppendSemiColon(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendSemiColon(op,  binOp,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendSemiColon(op,  binOp,  0);	  AppendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
281	[BUG]  [BUGGY]  AppendSemiColon(op,  binOp,  statementContext);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendSemiColon(op,  binOp,  statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendSemiColon(op,  binOp,  statementContext);	  AppendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
282	[BUG]  [BUGGY]  AppendSemiColon(op,  binOp,  this.statementContext);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendSemiColon(op,  binOp,  this.statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendSemiColon(op,  binOp,  this.statementContext);	  AppendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
283	[BUG]  [BUGGY]  AppendSemiColon(op,  binOp,  this);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendSemiColon(op,  binOp,  this);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendSemiColon(op,  binOp,  this);	  AppendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
284	[BUG]  [BUGGY]  appendBinary(op,!binOp,  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,!binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,!binOp,  false);	  appendBinary(op,!binOp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
285	[BUG]  [BUGGY]  appendBinary(op,!this.binOp);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,!this.binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,!this.binOp);	  appendBinary(op,!binOp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
286	[BUG]  [BUGGY]  appendBinary(op,!binOp  +  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,!binOp  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,!binOp  +  1);	  appendBinary(op,!binOp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
287	[BUG]  [BUGGY]  appendBinary(op,!binOp,  true);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,!binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,!binOp,  true);	  appendBinary(op,!binOp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
288	[BUG]  [BUGGY]  appendBinary(op,!binOp  + ", ");  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,!binOp  + ", ");  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,!binOp  + ", ");	  appendBinary(op,!binOp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
289	[BUG]  [BUGGY]  appendBinOp(op,  this.statementStarted,  binOp);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  this.statementStarted,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  this.statementStarted,  binOp);	  appendBinOp(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
290	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  this.statementStarted,  this.shouldSemiColon);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  this.statementStarted,  this.shouldSemiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  this.statementStarted,  this.shouldSemiColon);	  appendBinOp(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
291	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  this.statementStarted,  this.shouldEndLine);	  appendBinOp(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
292	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  this.statementStarted,  this.semiColon);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  this.statementStarted,  this.semiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  this.statementStarted,  this.semiColon);	  appendBinOp(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
293	[BUG]  [BUGGY]  appendBinOp(op,  op,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  op,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  op,  this.statementStarted);	  appendBinOp(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
294	[BUG]  [BUGGY]  appendBinary(op,  this.statementStarted,  binOp);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  this.statementStarted,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  this.statementStarted,  binOp);	  appendBinary(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
295	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.statementNeedsEnded);	  appendBinary(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
296	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.statementStarted,  this.shouldSemiColon);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.statementStarted,  this.shouldSemiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.statementStarted,  this.shouldSemiColon);	  appendBinary(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
297	[BUG]  [BUGGY]  appendBinary(op,  op,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  op,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  op,  this.statementStarted);	  appendBinary(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
298	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.statementStarted,  this.shouldEndLine);	  appendBinary(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
299	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.statementStarted,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.statementStarted,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.statementStarted,  false);	  appendBinary(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
300	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.statementStarted,  0);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.statementStarted,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.statementStarted,  0);	  appendBinary(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
301	[BUG]  [BUGGY]  append(op.toUpperCase(),  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase(),  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase(),  binOp);	  append(op.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
302	[BUG]  [BUGGY]  append(op.toUpperCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  1);	  append(op.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
303	[BUG]  [BUGGY]  append(op.toUpperCase()  +  binOp);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  binOp);	  append(op.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
304	[BUG]  [BUGGY]  appendBinary(op,  binOp,  statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  statementNeedsEnded);	  appendBinary(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
305	[BUG]  [BUGGY]  appendBinary(op,  binOp,  conditionStarted);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  conditionStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  conditionStarted);	  appendBinary(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
306	[BUG]  [BUGGY]  appendBinary(op,  binOp,  count);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  count);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  count);	  appendBinary(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
307	[BUG]  [BUGGY]  Append(op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  Append(op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	Append(op.toLowerCase());	  append(op.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
308	[BUG]  [BUGGY]  appendRaw(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRaw(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRaw(op,  binOp,  true);	  appendColumn(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
309	[BUG]  [BUGGY]  appendRange(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRange(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRange(op,  binOp,  true);	  appendColumn(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
310	[BUG]  [BUGGY]  appendColumn(op,  BinOp,  false);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  BinOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  BinOp,  false);	  appendColumn(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
311	[BUG]  [BUGGY]  AppendColumn(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendColumn(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendColumn(op,  binOp,  false);	  appendColumn(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
312	[BUG]  [BUGGY]  appendColumn(op,  binOp,  true,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  true,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  true,  false);	  appendColumn(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
313	[BUG]  [BUGGY]  appendColumn(op,  binOp,  null);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  null);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  null);	  appendColumn(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
314	[BUG]  [BUGGY]  appendFunction(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  true);	  appendFunction(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
315	[BUG]  [BUGGY]  appendOp(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  binOp,  false);	  appendFunction(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
316	[BUG]  [BUGGY]  appendFunction(op,  op,  false);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  op,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  op,  false);	  appendFunction(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
317	[BUG]  [BUGGY]  appendFunction(op,  BinOp,  true);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  BinOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  BinOp,  true);	  appendFunction(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
318	[BUG]  [BUGGY]  appendFunction(op,  false,  binOp);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  false,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  false,  binOp);	  appendFunction(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
319	[BUG]  [BUGGY]  appendFunction(op,  binOp,  false,  statementContext);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  false,  statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  false,  statementContext);	  appendFunction(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
320	[BUG]  [BUGGY]  appendFunction(op,  null,  false);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  null,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  null,  false);	  appendFunction(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
321	[BUG]  [BUGGY]  appendColumn(op,  BinOp,  true);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  BinOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  BinOp,  true);	  appendColumn(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
322	[BUG]  [BUGGY]  appendColumn(op,  null,  false);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  null,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  null,  false);	  appendColumn(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
323	[BUG]  [BUGGY]  appendRange(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRange(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRange(op,  binOp,  false);	  appendColumn(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
324	[BUG]  [BUGGY]  appendColumn(op,  false,  binOp);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  false,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  false,  binOp);	  appendColumn(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
325	[BUG]  [BUGGY]  appendColumn(op,  0,  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  0,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  0,  false);	  appendColumn(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
326	[BUG]  [BUGGY]  appendStatement(op,  binOp  +  1,  op.toString());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp  +  1,  op.toString());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp  +  1,  op.toString());	  appendStatement(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
327	[BUG]  [BUGGY]  appendStatement(op,  binOp  +  1,  op.length);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp  +  1,  op.length);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp  +  1,  op.length);	  appendStatement(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
328	[BUG]  [BUGGY]  appendStatement(op,  binOp  +  1,  statementContext);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp  +  1,  statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp  +  1,  statementContext);	  appendStatement(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
329	[BUG]  [BUGGY]  appendStatement(op,  binOp  +  1,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp  +  1,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp  +  1,  op.toLowerCase());	  appendStatement(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
330	[BUG]  [BUGGY]  appendStatement(op,  binOp  +  1,  op.getLineno());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp  +  1,  op.getLineno());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp  +  1,  op.getLineno());	  appendStatement(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
331	[BUG]  [BUGGY]  appendStatement(op,  binOp  +  2);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp  +  2);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp  +  2);	  appendStatement(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
332	[BUG]  [BUGGY]  appendBoolean(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBoolean(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBoolean(op,  binOp,  false);	  appendBoolean(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
333	[BUG]  [BUGGY]  appendBoolean(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBoolean(op,  binOp,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBoolean(op,  binOp,  0);	  appendBoolean(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
334	[BUG]  [BUGGY]  appendBoolean(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBoolean(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBoolean(op,  binOp,  true);	  appendBoolean(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
335	[BUG]  [BUGGY]  appendBoolean(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBoolean(op,  binOp,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBoolean(op,  binOp,  this.statementStarted);	  appendBoolean(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
336	[BUG]  [BUGGY]  appendBoolean(op,  binOp,  0,  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBoolean(op,  binOp,  0,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBoolean(op,  binOp,  0,  0);	  appendBoolean(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
337	[BUG]  [BUGGY]  append(op.toLowerCase()  +  bbinOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  bbinOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  bbinOp.toLowerCase());	  append(bbinOp.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
338	[BUG]  [BUGGY]  append(op.toUpperCase()  +  bbinOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  bbinOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  bbinOp.toLowerCase());	  append(bbinOp.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
339	[BUG]  [BUGGY]  appendOp(op.toLowerCase()  +  binOp.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase()  +  binOp.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase()  +  binOp.toLowerCase(),  false);	  appendOp(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
340	[BUG]  [BUGGY]  appendOp(op.toLowerCase()  /  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase()  /  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase()  /  binOp.toLowerCase());	  appendOp(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
341	[BUG]  [BUGGY]  appendOp(op.toLowerCase()  *  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase()  *  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase()  *  binOp.toLowerCase());	  appendOp(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
342	[BUG]  [BUGGY]  AppendSemiColon(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendSemiColon(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendSemiColon(op,  binOp,  true);	  appendSemiColon(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
343	[BUG]  [BUGGY]  appendSemiColon(op,  BinOp,  true);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  BinOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  BinOp,  true);	  appendSemiColon(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
344	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  false,  statementContext);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  false,  statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  false,  statementContext);	  appendSemiColon(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
345	[BUG]  [BUGGY]  appendSemiColon(op,  null,  false);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  null,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  null,  false);	  appendSemiColon(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
346	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  false,  true);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  false,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  false,  true);	  appendSemiColon(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
347	[BUG]  [BUGGY]  append(op,  BinOp,  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  BinOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  BinOp,  true);	  append(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
348	[BUG]  [BUGGY]  append(op,  null,  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  null,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  null,  false);	  append(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
349	[BUG]  [BUGGY]  append(op,  false,  binOp);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  false,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  false,  binOp);	  append(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
350	[BUG]  [BUGGY]  append(op,  op,  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  op,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  op,  false);	  append(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
351	[BUG]  [BUGGY]  append(op,  this.statementStarted,  binOp);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  this.statementStarted,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  this.statementStarted,  binOp);	  append(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
352	[BUG]  [BUGGY]  append(op,  binOp,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  this.statementNeedsEnded);	  append(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
353	[BUG]  [BUGGY]  append(op,  binOp,  this.statementStarted,  this.shouldSemiColon);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp,  this.statementStarted,  this.shouldSemiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  this.statementStarted,  this.shouldSemiColon);	  append(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
354	[BUG]  [BUGGY]  append(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp,  this.statementStarted,  this.shouldEndLine);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  this.statementStarted,  this.shouldEndLine);	  append(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
355	[BUG]  [BUGGY]  appendOp(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  binOp,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  binOp,  this.statementStarted);	  append(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
356	[BUG]  [BUGGY]  append(op,  binOp,  this.statementStarted,  0);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp,  this.statementStarted,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  this.statementStarted,  0);	  append(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
357	[BUG]  [BUGGY]  append(op,  binOp,  this.statementStarted,  false);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp,  this.statementStarted,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  this.statementStarted,  false);	  append(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
358	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  context);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  context);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  context);	  appendSemiColon(op,    binOp,    statementContext);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
359	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  statementNeedsEnded);	  appendSemiColon(op,    binOp,    statementContext);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
360	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  declarationContext);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  declarationContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  declarationContext);	  appendSemiColon(op,    binOp,    statementContext);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
361	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  statementsContext);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  statementsContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  statementsContext);	  appendSemiColon(op,    binOp,    statementContext);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
362	[BUG]  [BUGGY]  append0(op.toUpperCase(),  binOp.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op.toUpperCase(),  binOp.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op.toUpperCase(),  binOp.toUpperCase());	  append0(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
363	[BUG]  [BUGGY]  append0(op.toLowerCase(),  binOp.toLowerCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op.toLowerCase(),  binOp.toLowerCase()  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op.toLowerCase(),  binOp.toLowerCase()  +  1);	  append0(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
364	[BUG]  [BUGGY]  append0(op.toLowerCase(),  binOp.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op.toLowerCase(),  binOp.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op.toLowerCase(),  binOp.toLowerCase(),  false);	  append0(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
365	[BUG]  [BUGGY]  append0(binOp.toLowerCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(binOp.toLowerCase(),  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(binOp.toLowerCase(),  op.toLowerCase());	  append0(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
366	[BUG]  [BUGGY]  append(op,  BinOp,  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  BinOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  BinOp,  false);	  append(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
367	[BUG]  [BUGGY]  append(op,  binOp,  null);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp,  null);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  null);	  append(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
368	[BUG]  [BUGGY]  append(op,  null,  true);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  null,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  null,  true);	  append(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
369	[BUG]  [BUGGY]  append(op,  binaryOp,  false);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binaryOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binaryOp,  false);	  append(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
370	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.semiColon,  this.statementStarted);	  appendBinary(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
371	[BUG]  [BUGGY]  appendBinary(op,  this.semiColon,  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  this.semiColon,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  this.semiColon,  binOp);	  appendBinary(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
372	[BUG]  [BUGGY]  appendBinary(op,  op,  this.semiColon);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  op,  this.semiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  op,  this.semiColon);	  appendBinary(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
373	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.semiColon,  this.statementNeedsEnded);	  appendBinary(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
374	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.semiColon);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.semiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.semiColon,  this.semiColon);	  appendBinary(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
375	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.descriptionStarted);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.descriptionStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.semiColon,  this.descriptionStarted);	  appendBinary(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
376	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.statementEndLine);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.statementEndLine);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.semiColon,  this.statementEndLine);	  appendBinary(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
377	[BUG]  [BUGGY]  appendBinOp(op,  BinOp,  true);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  BinOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  BinOp,  true);	  appendBinOp(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
378	[BUG]  [BUGGY]  AppendBinOp(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendBinOp(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendBinOp(op,  binOp,  true);	  appendBinOp(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
379	[BUG]  [BUGGY]  appendBinOp(op,  op,  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  op,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  op,  false);	  appendBinOp(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
380	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  false,  statementContext);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  false,  statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  false,  statementContext);	  appendBinOp(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
381	[BUG]  [BUGGY]  appendOp(op.toLowerCase(),  binOp.toLowerCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase(),  binOp.toLowerCase()  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase(),  binOp.toLowerCase()  +  1);	  appendOp(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
382	[BUG]  [BUGGY]  appendOp(binOp.toLowerCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(binOp.toLowerCase(),  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(binOp.toLowerCase(),  op.toLowerCase());	  appendOp(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
383	[BUG]  [BUGGY]  appendOp(op.toLowerCase(),  binOp.toLowerCase(),  true);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase(),  binOp.toLowerCase(),  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase(),  binOp.toLowerCase(),  true);	  appendOp(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
384	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binOp,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  binOp,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binOp,  op.toLowerCase());	  append(op.toLowerCase()    +    binOp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
385	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binOp,  false);	  append(op.toLowerCase()    +    binOp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
386	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binOp,  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  binOp,  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binOp,  op.toUpperCase());	  append(op.toLowerCase()    +    binOp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
387	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binOp,  0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  binOp,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binOp,  0);	  append(op.toLowerCase()    +    binOp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
388	[BUG]  [BUGGY]  append(binOp.toLowerCase()  +  op);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase()  +  op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase()  +  op);	  append(op.toLowerCase()    +    binOp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
389	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binOp,  true);	  append(op.toLowerCase()    +    binOp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
390	[BUG]  [BUGGY]  appendOp(op,  binOp,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  binOp,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  binOp,  statementStarted);	  appendOp(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
391	[BUG]  [BUGGY]  appendOp(op,  binOp,  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  binOp,  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  binOp,  1);	  appendOp(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
392	[BUG]  [BUGGY]  appendRange(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRange(op,  binOp,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRange(op,  binOp,  0);	  appendRange(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
393	[BUG]  [BUGGY]  appendRange(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRange(op,  binOp,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRange(op,  binOp,  this.statementStarted);	  appendRange(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
394	[BUG]  [BUGGY]  appendRange(op,  binOp,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRange(op,  binOp,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRange(op,  binOp,  statementStarted);	  appendRange(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
395	[BUG]  [BUGGY]  appendSemi(op);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemi(op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemi(op);	  appendSemi(binOp);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
396	[BUG]  [BUGGY]  appendFunction(op,  0,  binOp);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  0,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  0,  binOp);	  appendFunction(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
397	[BUG]  [BUGGY]  appendFunction(op,  binOp,  0,  0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  0,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  0,  0);	  appendFunction(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
398	[BUG]  [BUGGY]  appendFunction(op,  binOp,  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  1);	  appendFunction(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
399	[BUG]  [BUGGY]  appendFunction(op,  binOp,  0,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  0,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  0,  false);	  appendFunction(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
400	[BUG]  [BUGGY]  appendFunction(op,  0);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  0);	  appendFunction(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
401	[BUG]  [BUGGY]  appendStatement(op,  0,  binOp);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  0,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  0,  binOp);	  appendStatement(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
402	[BUG]  [BUGGY]  appendStatement(op,  binOp,  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  1);	  appendStatement(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
403	[BUG]  [BUGGY]  appendStatement(op,  binOp,  0,  0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  0,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  0,  0);	  appendStatement(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
404	[BUG]  [BUGGY]  appendStatement(op,  0);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  0);	  appendStatement(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
405	[BUG]  [BUGGY]  appendStatement(op,  binOp,  0,  false);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  0,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  0,  false);	  appendStatement(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
406	[BUG]  [BUGGY]  appendStatement(op,  null,  0);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  null,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  null,  0);	  appendStatement(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
407	[BUG]  [BUGGY]  appendOp(op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toUpperCase());	  appendOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
408	[BUG]  [BUGGY]  appendOp(op.toLowerCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase()  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase()  +  1);	  appendOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
409	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  1);	  appendSemiColon(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
410	[BUG]  [BUGGY]  appendSemiColon(op,  0,  binOp);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  0,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  0,  binOp);	  appendSemiColon(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
411	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  0,  0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  0,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  0,  0);	  appendSemiColon(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
412	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  0,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  0,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  0,  false);	  appendSemiColon(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
413	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  0,  true);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  0,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  0,  true);	  appendSemiColon(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
414	[BUG]  [BUGGY]  appendSemiColon(op,  0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  0);	  appendSemiColon(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
415	[BUG]  [BUGGY]  append(op.toLowerCase(),  binaryOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  binaryOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binaryOp.toLowerCase());	  append(binOp.toLowerCase(),    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
416	[BUG]  [BUGGY]  append(op.toLowerCase()  +  1,  binOp,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  1,  binOp,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  1,  binOp,  op.toLowerCase());	  append(op.toLowerCase()    +    1,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
417	[BUG]  [BUGGY]  append(op.toLowerCase()  +  1,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  1,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  1,  binOp,  false);	  append(op.toLowerCase()    +    1,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
418	[BUG]  [BUGGY]  append(op.toLowerCase()  +  1,  binOp,  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  1,  binOp,  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  1,  binOp,  op.toUpperCase());	  append(op.toLowerCase()    +    1,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
419	[BUG]  [BUGGY]  append(op.toLowerCase()  +  1,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  1,  binOp,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  1,  binOp,  0);	  append(op.toLowerCase()    +    1,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
420	[BUG]  [BUGGY]  append(op.toLowerCase()  +  1,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  1,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  1,  binOp,  true);	  append(op.toLowerCase()    +    1,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
421	[BUG]  [BUGGY]  appendOp(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  binOp  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  binOp  +  1);	  append(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
422	[BUG]  [BUGGY]  append(op,  binOp  +  1,  op.toString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp  +  1,  op.toString());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp  +  1,  op.toString());	  append(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
423	[BUG]  [BUGGY]  append(op,  binOp  +  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp  +  2);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp  +  2);	  append(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
424	[BUG]  [BUGGY]  append(op,  binOp  +  1,  op.length);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp  +  1,  op.length);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp  +  1,  op.length);	  append(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
425	[BUG]  [BUGGY]  append0(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op,  binOp  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op,  binOp  +  1);	  append(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
426	[BUG]  [BUGGY]  append(op,  binOp  +  1,  0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp  +  1,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp  +  1,  0);	  append(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
427	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this,  statementContext);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this,  statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this,  statementContext);	  appendSemiColon(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
428	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this,  statementStarted);	  appendSemiColon(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
429	[BUG]  [BUGGY]  appendSemiColon(op,  this,  binOp);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  this,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  this,  binOp);	  appendSemiColon(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
430	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this,  statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this,  statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this,  statementNeedsEnded);	  appendSemiColon(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
431	[BUG]  [BUGGY]  appendColumn(op,  0,  binOp);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  0,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  0,  binOp);	  appendColumn(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
432	[BUG]  [BUGGY]  appendColumn(op,  binOp,  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  1);	  appendColumn(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
433	[BUG]  [BUGGY]  appendColumn(op,  binOp,  0,  0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  0,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  0,  0);	  appendColumn(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
434	[BUG]  [BUGGY]  appendColumn(op,  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  0);	  appendColumn(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
435	[BUG]  [BUGGY]  appendColumn(op,  null,  0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  null,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  null,  0);	  appendColumn(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
436	[BUG]  [BUGGY]  appendColumn(op,  binOp,  0,  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  0,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  0,  false);	  appendColumn(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
437	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  count);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  count);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  count);	  appendSemiColon(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
438	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  declarationNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  declarationNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  declarationNeedsEnded);	  appendSemiColon(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
439	[BUG]  [BUGGY]  appendFunction(op,  binOp  +  1,  op.toString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp  +  1,  op.toString());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp  +  1,  op.toString());	  appendFunction(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
440	[BUG]  [BUGGY]  appendFunction(op,  binOp  +  2);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp  +  2);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp  +  2);	  appendFunction(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
441	[BUG]  [BUGGY]  appendFunction(op,  binOp  +  1,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp  +  1,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp  +  1,  op.toLowerCase());	  appendFunction(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
442	[BUG]  [BUGGY]  appendFunction(op,  binOp  +  1,  op.length);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp  +  1,  op.length);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp  +  1,  op.length);	  appendFunction(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
443	[BUG]  [BUGGY]  appendFunction(op,  binOp  +  1,  op.getLineno());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp  +  1,  op.getLineno());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp  +  1,  op.getLineno());	  appendFunction(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
444	[BUG]  [BUGGY]  appendFunction(op);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op);	  appendMutator(op);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
445	[BUG]  [BUGGY]  appendDelimiter(op);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendDelimiter(op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDelimiter(op);	  appendMutator(op);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
446	[BUG]  [BUGGY]  appendMutator(op,  BinOp);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendMutator(op,  BinOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendMutator(op,  BinOp);	  appendMutator(op);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
447	[BUG]  [BUGGY]  append(binOp.toLowerCase(),  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase(),  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase(),  op.toUpperCase());	  append(op.toLowerCase(),    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
448	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp.toUpperCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  binOp.toUpperCase()  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp.toUpperCase()  +  1);	  append(op.toLowerCase(),    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
449	[BUG]  [BUGGY]  appendOp(op.toLowerCase(),  binOp.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase(),  binOp.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase(),  binOp.toUpperCase());	  append(op.toLowerCase(),    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
450	[BUG]  [BUGGY]  appendSemi(op,  binOp,  this.statementContext);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemi(op,  binOp,  this.statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemi(op,  binOp,  this.statementContext);	  appendSemiColon(op,    binOp,    this.statementContext);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
451	[BUG]  [BUGGY]  appendColumn(op,  this.statementNeedsEnded,  binOp);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  this.statementNeedsEnded,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  this.statementNeedsEnded,  binOp);	  appendColumn(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
452	[BUG]  [BUGGY]  appendColumn(op,  binOp,  this.statementEnded);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  this.statementEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  this.statementEnded);	  appendColumn(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
453	[BUG]  [BUGGY]  append(op,  binOp  +  1).append('n');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp  +  1).append('n');  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp  +  1).append('n');	  append(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
454	[BUG]  [BUGGY]  append(op,  binOp  +  1).append( ", ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp  +  1).append( ", ");  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp  +  1).append( ", ");	  append(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
455	[BUG]  [BUGGY]  append(binOp.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toUpperCase());	  append(op.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
456	[BUG]  [BUGGY]  appendColumn(op,  binOp,  2);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  2);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  2);	  appendColumn(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
457	[BUG]  [BUGGY]  appendColumn(op,  binOp,  0,  true);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  0,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  0,  true);	  appendColumn(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
458	[BUG]  [BUGGY]  appendFunction(op,  binOp,  this.statementStarted,  this.lastModified);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  this.statementStarted,  this.lastModified);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  this.statementStarted,  this.lastModified);	  appendFunction(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
459	[BUG]  [BUGGY]  appendLine(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendLine(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendLine(op,  binOp,  true);	  appendColumn(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
460	[BUG]  [BUGGY]  appendBinOp(binOp,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(binOp,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(binOp,  op.toLowerCase());	  appendBinOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
461	[BUG]  [BUGGY]  appendBinary(op,  binOp,  0,  null);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  0,  null);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  0,  null);	  appendBinary(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
462	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.statementEnded);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.statementEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.statementEnded);	  appendSemiColon(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
463	[BUG]  [BUGGY]  append0(op.toLowerCase(),  binOp.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op.toLowerCase(),  binOp.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op.toLowerCase(),  binOp.toUpperCase());	  append0(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
464	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon,  this.semiColon);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon,  this.semiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.semiColon,  this.semiColon);	  appendSemiColon(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
465	[BUG]  [BUGGY]  appendRaw(binOp);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendRaw(binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRaw(binOp);	  appendColon(binOp);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
466	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp.toUpperCase(),  false);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  binOp.toUpperCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp.toUpperCase(),  false);	  append(op.toLowerCase(),    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
467	[BUG]  [BUGGY]  appendStatement(op,  binOp,  2);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  2);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  2);	  appendStatement(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
468	[BUG]  [BUGGY]  appendStatement(op,  binOp  +  1,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp  +  1,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp  +  1,  this.statementStarted);	  appendStatement(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
469	[BUG]  [BUGGY]  appendStatement(op,  binOp  +  1,  0);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp  +  1,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp  +  1,  0);	  appendStatement(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
470	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  2);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  2);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  2);	  appendSemiColon(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
471	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  3);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  3);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  3);	  appendSemiColon(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
472	[BUG]  [BUGGY]  appendBinary(op,  binOp,  expectedEndLine);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  expectedEndLine);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  expectedEndLine);	  appendBinary(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
473	[BUG]  [BUGGY]  appendBinary(op,  binOp,  conditionNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  conditionNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  conditionNeedsEnded);	  appendBinary(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
474	[BUG]  [BUGGY]  appendBoolean(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBoolean(op,  binOp  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBoolean(op,  binOp  +  1);	  appendBoolean(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
475	[BUG]  [BUGGY]  appendBoolean(op,  BinOp.booleanValue());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBoolean(op,  BinOp.booleanValue());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBoolean(op,  BinOp.booleanValue());	  appendBoolean(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
476	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  expectedEndLine);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  expectedEndLine);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  expectedEndLine);	  appendBinOp(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
477	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  conditionNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  conditionNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  conditionNeedsEnded);	  appendBinOp(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
478	[BUG]  [BUGGY]  appendBinOp(binOp);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(binOp);	  appendBinOp(op);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
479	[BUG]  [BUGGY]  append(op.toUpperCase()  +  binOp.toLowerCase(),  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  binOp.toLowerCase(),  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  binOp.toLowerCase(),  op.toUpperCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
480	[BUG]  [BUGGY]  if(binOp)  {  appendBinOp(op,  binOp,  false);  }  else  {  appendBinOp(op,  binOp,  false);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  if(binOp)  {  appendBinOp(op,  binOp,  false);  }  else  {  appendBinOp(op,  binOp,  false);  }  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	if(binOp)  {  appendBinOp(op,  binOp,  false);  }  else  {  appendBinOp(op,  binOp,  false);  }	  appendBinOp(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
481	[BUG]  [BUGGY]  if(binOp)  {  appendBinOp(op,  binOp,  false);  }  else  {  appendBinOp(op,  binOp,  true);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  if(binOp)  {  appendBinOp(op,  binOp,  false);  }  else  {  appendBinOp(op,  binOp,  true);  }  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	if(binOp)  {  appendBinOp(op,  binOp,  false);  }  else  {  appendBinOp(op,  binOp,  true);  }	  appendBinOp(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
482	[BUG]  [BUGGY]  if(binOp)  {  appendBinOp(op,  binOp,  false);  }  else  {  appendBinOp(op,  binOp);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  if(binOp)  {  appendBinOp(op,  binOp,  false);  }  else  {  appendBinOp(op,  binOp);  }  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	if(binOp)  {  appendBinOp(op,  binOp,  false);  }  else  {  appendBinOp(op,  binOp);  }	  appendBinOp(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
483	[BUG]  [BUGGY]  if(binOp)  {  appendBinOp(op,  binOp,  false);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  if(binOp)  {  appendBinOp(op,  binOp,  false);  }  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	if(binOp)  {  appendBinOp(op,  binOp,  false);  }	  appendBinOp(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
484	[BUG]  [BUGGY]  if(binOp)  {  appendBinOp(op,  binOp,  false);  }  else  {  appendBinOp(op,  null);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  if(binOp)  {  appendBinOp(op,  binOp,  false);  }  else  {  appendBinOp(op,  null);  }  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	if(binOp)  {  appendBinOp(op,  binOp,  false);  }  else  {  appendBinOp(op,  null);  }	  appendBinOp(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
485	[BUG]  [BUGGY]  append(binOp.toLowerCase(),  binOp);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase(),  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase(),  binOp);	  append(binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
486	[BUG]  [BUGGY]  append(binOp.toLowerCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase()  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase()  +  1);	  append(binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
487	[BUG]  [BUGGY]  appendStatement(this.statementStarted,  binOp,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(this.statementStarted,  binOp,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(this.statementStarted,  binOp,  this.statementNeedsEnded);	  appendStatement(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
488	[BUG]  [BUGGY]  appendStatement(op,  this.statementStart,  binOp);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  this.statementStart,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  this.statementStart,  binOp);	  appendStatement(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
489	[BUG]  [BUGGY]  appendStatement(op,  binOp,  0,  this);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  0,  this);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  0,  this);	  appendStatement(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
490	[BUG]  [BUGGY]  append(binOp.toLowerCase()  +  1,  op);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase()  +  1,  op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase()  +  1,  op);	  append(op.toLowerCase()    +    1,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
491	[BUG]  [BUGGY]  append(op.toUpperCase()  +  1,  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  1,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  1,  binOp);	  append(op.toLowerCase()    +    1,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
492	[BUG]  [BUGGY]  append(op,  binOp.toLowerCase(),  binOp);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp.toLowerCase(),  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp.toLowerCase(),  binOp);	  append(op.toLowerCase()    +    1,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
493	[BUG]  [BUGGY]  appendSemiColumn(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColumn(op,  binOp  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColumn(op,  binOp  +  1);	  appendSemiColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
494	[BUG]  [BUGGY]  appendOp(op.toLowerCase()  +  binOp.toLowerCase(),  binOp);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase()  +  binOp.toLowerCase(),  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase()  +  binOp.toLowerCase(),  binOp);	  appendOp(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
495	[BUG]  [BUGGY]  append0(op.toLowerCase()  +  1,  binOp);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op.toLowerCase()  +  1,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op.toLowerCase()  +  1,  binOp);	  append0(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
496	[BUG]  [BUGGY]  appendStatement(op,  binOp,  conditionNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  conditionNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  conditionNeedsEnded);	  appendStatement(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
497	[BUG]  [BUGGY]  appendStatement(op,  binOp,  requiredEndLine);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  requiredEndLine);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  requiredEndLine);	  appendStatement(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
498	[BUG]  [BUGGY]  appendStatement(op,  binOp,  count);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  count);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  count);	  appendStatement(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
499	[BUG]  [BUGGY]  append(binOp.toLowerCase()  +  1,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase()  +  1,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase()  +  1,  op.toLowerCase());	  append(op.toLowerCase(),    binOp.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
500	[BUG]  [BUGGY]  appendOp(binOp.toUpperCase()  +  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(binOp.toUpperCase()  +  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(binOp.toUpperCase()  +  op.toUpperCase());	  append(op.toUpperCase()    +    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
501	[BUG]  [BUGGY]  append(binOp.toLowerCase()  +  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toLowerCase()  +  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase()  +  op.toUpperCase());	  append(op.toUpperCase()    +    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
502	[BUG]  [BUGGY]  appendOp(op.toUpperCase()  +  binOp.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toUpperCase()  +  binOp.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toUpperCase()  +  binOp.toUpperCase());	  append(op.toUpperCase()    +    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
503	[BUG]  [BUGGY]  appendSemiColon(op,  binaryOp,  true);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binaryOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binaryOp,  true);	  appendSemiColon(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
504	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  lineNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  lineNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  lineNeedsEnded);	  appendSemiColon(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
505	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  expectedEndLine);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  expectedEndLine);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  expectedEndLine);	  appendSemiColon(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
506	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  this.statementEnded);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  this.statementEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  this.statementEnded);	  appendBinOp(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
507	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  this.statementEnd);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  this.statementEnd);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  this.statementEnd);	  appendBinOp(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
508	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  this.statementStarted  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  this.statementStarted  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  this.statementStarted  +  1);	  appendBinOp(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
509	[BUG]  [BUGGY]  append0(Op.valueOf(binOp));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(Op.valueOf(binOp));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(Op.valueOf(binOp));	  append0(binOp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
510	[BUG]  [BUGGY]  append0(binOp,  op);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(binOp,  op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(binOp,  op);	  append0(binOp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
511	[BUG]  [BUGGY]  append0(Op.toString(binOp));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(Op.toString(binOp));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(Op.toString(binOp));	  append0(binOp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
512	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp.toLowerCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  binOp.toLowerCase(),  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp.toLowerCase(),  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
513	[BUG]  [BUGGY]  append(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  |  Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  |  Feature.QUOTE_FIELD_NAMES));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  |  Feature.QUOTE_FIELD_NAMES));	  append(op,    binOp    &&    isEnabled(Feature.QUOTE_FIELD_NAMES));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
514	[BUG]  [BUGGY]  append0(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));	  append(op,    binOp    &&    isEnabled(Feature.QUOTE_FIELD_NAMES));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
515	[BUG]  [BUGGY]  appendBinary(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));	  append(op,    binOp    &&    isEnabled(Feature.QUOTE_FIELD_NAMES));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
516	[BUG]  [BUGGY]  appendBinOp(op,  binOp  +  1).append('n');  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp  +  1).append('n');  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp  +  1).append('n');	  appendBinOp(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
517	[BUG]  [BUGGY]  appendBinOp(op,  binOp  +  1).append( ", ");  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp  +  1).append( ", ");  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp  +  1).append( ", ");	  appendBinOp(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
518	[BUG]  [BUGGY]  appendSemiColon(op,  binOp  +  1  -  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp  +  1  -  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp  +  1  -  1);	  appendSemiColon(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
519	[BUG]  [BUGGY]  appendSemiColon(op,  binOp  +  1).append('n');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp  +  1).append('n');  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp  +  1).append('n');	  appendSemiColon(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
520	[BUG]  [BUGGY]  appendSemiColon(op,  binOp  +  1).append( ", ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp  +  1).append( ", ");  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp  +  1).append( ", ");	  appendSemiColon(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
521	[BUG]  [BUGGY]  appendOp(binOp.toUpperCase()  +  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(binOp.toUpperCase()  +  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(binOp.toUpperCase()  +  op.toLowerCase());	  append(binOp.toUpperCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
522	[BUG]  [BUGGY]  appendStatement(op,  binOp,  expectedDeclarationStarted);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  expectedDeclarationStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  expectedDeclarationStarted);	  appendStatement(op,    binOp,    declarationStarted);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
523	[BUG]  [BUGGY]  AppendFunction(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendFunction(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendFunction(op,  binOp,  true);	  appendFunction(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
524	[BUG]  [BUGGY]  appendField(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendField(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendField(op,  binOp,  true);	  appendFunction(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
525	[BUG]  [BUGGY]  AppendStatement(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendStatement(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendStatement(op,  binOp,  true);	  appendStatement(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
526	[BUG]  [BUGGY]  appendStatement(op,  binaryOp,  true);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binaryOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binaryOp,  true);	  appendStatement(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
527	[BUG]  [BUGGY]  appendOp(binOp.toLowerCase()  +  op.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(binOp.toLowerCase()  +  op.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(binOp.toLowerCase()  +  op.toLowerCase(),  false);	  append(op.toLowerCase()    +    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
528	[BUG]  [BUGGY]  append(binOp.toUpperCase()  +  op.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(binOp.toUpperCase()  +  op.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toUpperCase()  +  op.toLowerCase(),  false);	  append(op.toLowerCase()    +    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
529	[BUG]  [BUGGY]  append(op.toUpperCase(),  binOp.toUpperCase(),  false);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase(),  binOp.toUpperCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase(),  binOp.toUpperCase(),  false);	  append(op.toLowerCase(),    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
530	[BUG]  [BUGGY]  AppendColumn(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendColumn(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendColumn(op,  binOp,  true);	  appendColumn(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
531	[BUG]  [BUGGY]  appendColumn(op,  binOp  +  1  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp  +  1  -  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp  +  1  -  1);	  appendColumn(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
532	[BUG]  [BUGGY]  appendColumn(op,  binOp  +  1).append('n');  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp  +  1).append('n');  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp  +  1).append('n');	  appendColumn(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
533	[BUG]  [BUGGY]  appendColumn(op,  binOp  +  1).append( ", ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp  +  1).append( ", ");  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp  +  1).append( ", ");	  appendColumn(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
534	[BUG]  [BUGGY]  AppendSemiColon(op,  binOp,  this.semiColon);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendSemiColon(op,  binOp,  this.semiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendSemiColon(op,  binOp,  this.semiColon);	  AppendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
535	[BUG]  [BUGGY]  appendFunction(op,  binOp  +  1).append('n');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp  +  1).append('n');  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp  +  1).append('n');	  appendFunction(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
536	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.statementEnded);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.statementEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.statementEnded);	  appendBinary(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
537	[BUG]  [BUGGY]  appendBinary(op,  this.statementNeedsEnded,  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  this.statementNeedsEnded,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  this.statementNeedsEnded,  binOp);	  appendBinary(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
538	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.semiEndLine);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.semiEndLine);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.semiColon,  this.semiEndLine);	  appendBinary(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
539	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.needSemiColon);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.needSemiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.semiColon,  this.needSemiColon);	  appendBinary(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
540	[BUG]  [BUGGY]  appendBinary(op,  binaryOp,  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binaryOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binaryOp,  true);	  appendBinary(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
541	[BUG]  [BUGGY]  appendDescriptor(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendDescriptor(op,  binOp  +  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDescriptor(op,  binOp  +  1);	  appendDescriptor(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
542	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  2);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  2);	  appendBinOp(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
543	[BUG]  [BUGGY]  appendBinary(op,  binOp,  null);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  null);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  null);	  appendBinary(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
544	[BUG]  [BUGGY]  appendBinary(op,  binOp  +  1).append('n');  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp  +  1).append('n');  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp  +  1).append('n');	  appendBinary(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
545	[BUG]  [BUGGY]  appendBinary(op,  binOp  +  1,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp  +  1,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp  +  1,  this.statementStarted);	  appendBinary(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
546	[BUG]  [BUGGY]  appendBinary(op,  binOp  +  1,  0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp  +  1,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp  +  1,  0);	  appendBinary(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
547	[BUG]  [BUGGY]  appendBinary(op,  binOp  +  1).append( ", ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp  +  1).append( ", ");  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp  +  1).append( ", ");	  appendBinary(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
548	[BUG]  [BUGGY]  appendFunction(op,  binOp,  lineNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  lineNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  lineNeedsEnded);	  appendFunction(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
549	[BUG]  [BUGGY]  append(null,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(null,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(null,  op.toLowerCase());	  append(op.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
550	[BUG]  [BUGGY]  append(this.statementStarted,  binOp,  op);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(this.statementStarted,  binOp,  op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(this.statementStarted,  binOp,  op);	  append(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
551	[BUG]  [BUGGY]  appendFunction(op,  binOp,  2);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  2);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  2);	  appendFunction(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
552	[BUG]  [BUGGY]  appendBinary(op,!binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,!binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,!binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));	  appendBinary(op,!binOp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
553	[BUG]  [BUGGY]  appendBinary(op,!binOp  &&  binOp);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,!binOp  &&  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,!binOp  &&  binOp);	  appendBinary(op,!binOp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
554	[BUG]  [BUGGY]  appendBinary(op,!binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAME));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,!binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAME));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,!binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAME));	  appendBinary(op,!binOp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
555	[BUG]  [BUGGY]  appendBinary(op,!binOp  &&  BooleanUtils.isEmpty(binOp));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,!binOp  &&  BooleanUtils.isEmpty(binOp));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,!binOp  &&  BooleanUtils.isEmpty(binOp));	  appendBinary(op,!binOp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
556	[BUG]  [BUGGY]  append0(op,  binOp,  this.semiColon);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op,  binOp,  this.semiColon);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op,  binOp,  this.semiColon);	  append0(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
557	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this,  false);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this,  false);	  appendSemiColon(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
558	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this,  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this,  0);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this,  0);	  appendSemiColon(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
559	[BUG]  [BUGGY]  appendStatement(op,  BinOp);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  BinOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  BinOp);	  appendStatement(op,    op);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
560	[BUG]  [BUGGY]  appendSemi(op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemi(op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemi(op.toLowerCase());	  appendSemi(binOp);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
561	[BUG]  [BUGGY]  appendSemi(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemi(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemi(op,  binOp,  false);	  appendSemiColon(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
562	[BUG]  [BUGGY]  appendStatement(op,  binOp,  this,  statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  this,  statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  this,  statementNeedsEnded);	  appendStatement(op,    binOp,    this);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
563	[BUG]  [BUGGY]  append(op,  binOp,  0,  op.length);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp,  0,  op.length);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  0,  op.length);	  append(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
564	[BUG]  [BUGGY]  appendFunction(op,  binOp,  false,  true);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  false,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  false,  true);	  appendFunction(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
565	[BUG]  [BUGGY]  AppendSemiColon(op,  binOp,  null);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  AppendSemiColon(op,  binOp,  null);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendSemiColon(op,  binOp,  null);	  AppendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
566	[BUG]  [BUGGY]  appendBinary(op,  binOp,  0,  op.length);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  0,  op.length);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  0,  op.length);	  appendBinary(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
567	[BUG]  [BUGGY]  appendBinary(op,  binOp,  2);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  2);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  2);	  appendBinary(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
568	[BUG]  [BUGGY]  append(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES));	  append(op,    binOp    &&    isEnabled(Feature.QUOTE_FIELD_NAMES));    	non-compiled	[CE]  ')'  expected	75	None	replace
569	[BUG]  [BUGGY]  appendFunction(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));	  append(op,    binOp    &&    isEnabled(Feature.QUOTE_FIELD_NAMES));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
570	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  binOp,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp,  op.toLowerCase());	  append(op.toLowerCase(),    binOp);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
571	[BUG]  [BUGGY]  appendStatement(op,  binOp,  false,  true);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  false,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  false,  true);	  appendStatement(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
572	[BUG]  [BUGGY]  appendStatement(op,  binOp,  false,  null);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  false,  null);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  false,  null);	  appendStatement(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
573	[BUG]  [BUGGY]  append(op.toUpperCase()  +  binOp.toUpperCase(),  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  binOp.toUpperCase(),  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  binOp.toUpperCase(),  op.toUpperCase());	  append(op.toUpperCase()    +    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
574	[BUG]  [BUGGY]  append(op.toUpperCase()  +  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  op.toUpperCase());	  append(op.toUpperCase()    +    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
575	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  0,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  0,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  0,  statementStarted);	  appendBinOp(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
576	[BUG]  [BUGGY]  appendFunction(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);	  appendFunction(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
577	[BUG]  [BUGGY]  appendFunction(op,  binOp,  this.statementEnded);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  this.statementEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  this.statementEnded);	  appendFunction(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
578	[BUG]  [BUGGY]  appendOp(op.toLowerCase()  +  binOp.toLowerCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase()  +  binOp.toLowerCase(),  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase()  +  binOp.toLowerCase(),  op.toLowerCase());	  appendOp(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
579	[BUG]  [BUGGY]  appendOp(op.toLowerCase()  +  binOp.toLowerCase(),  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase()  +  binOp.toLowerCase(),  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase()  +  binOp.toLowerCase(),  op.toUpperCase());	  appendOp(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
580	[BUG]  [BUGGY]  append(op.toUpperCase()  +  binaryOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  binaryOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  binaryOp.toLowerCase());	  append(binOp.toUpperCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
581	[BUG]  [BUGGY]  appendFunction(op,  binOp  +  1).append( ", ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp  +  1).append( ", ");  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp  +  1).append( ", ");	  appendFunction(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
582	[BUG]  [BUGGY]  appendFunction(op,  binOp  +  1,  op.cloneTree());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp  +  1,  op.cloneTree());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp  +  1,  op.cloneTree());	  appendFunction(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
583	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon,  this.statementEnd);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon,  this.statementEnd);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.semiColon,  this.statementEnd);	  appendSemiColon(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
584	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon,  this.statementEnded);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon,  this.statementEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.semiColon,  this.statementEnded);	  appendSemiColon(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
585	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  0,  op.length);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  0,  op.length);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  0,  op.length);	  appendSemiColon(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
586	[BUG]  [BUGGY]  appendFunction(op,  binOp,  0,  op.length);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  0,  op.length);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  0,  op.length);	  appendFunction(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
587	[BUG]  [BUGGY]  appendFunction(op,  binOp,  0,  op.toString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendFunction(op,  binOp,  0,  op.toString());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  0,  op.toString());	  appendFunction(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
588	[BUG]  [BUGGY]  append(op.toLowerCase()  +  op.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  op.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  op.toLowerCase(),  false);	  append(op.toLowerCase()    +    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
589	[BUG]  [BUGGY]  append(op.toLowerCase()  +  this.binOp.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  this.binOp.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  this.binOp.toLowerCase(),  false);	  append(op.toLowerCase()    +    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
590	[BUG]  [BUGGY]  append(op.toUpperCase()  +  binOp.toUpperCase(),  true);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  binOp.toUpperCase(),  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  binOp.toUpperCase(),  true);	  append(op.toLowerCase()    +    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
591	[BUG]  [BUGGY]  appendStatement(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);	  appendStatement(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
592	[BUG]  [BUGGY]  appendStatement(op,  binOp,  this.statementEnded);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  this.statementEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  this.statementEnded);	  appendStatement(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
593	[BUG]  [BUGGY]  appendBinary(op,  binOp  +  1,  op.cloneTree());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp  +  1,  op.cloneTree());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp  +  1,  op.cloneTree());	  appendBinary(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
594	[BUG]  [BUGGY]  append0(op,  binOp,  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op,  binOp,  1);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op,  binOp,  1);	  append0(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
595	[BUG]  [BUGGY]  append0(op.toUpperCase(),  binOp);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(op.toUpperCase(),  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op.toUpperCase(),  binOp);	  append0(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
596	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  0,  op.length);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  0,  op.length);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  0,  op.length);	  appendBinOp(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
597	[BUG]  [BUGGY]  appendStatement(op,  binOp,  0,  op.length);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  0,  op.length);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  0,  op.length);	  appendStatement(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
598	[BUG]  [BUGGY]  append0(Op.toUpperCase(binOp));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append0(Op.toUpperCase(binOp));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(Op.toUpperCase(binOp));	  append0(binOp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
599	[BUG]  [BUGGY]  appendBinary(op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op.toLowerCase());	  append(binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
600	[BUG]  [BUGGY]  appendDescriptor(op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendDescriptor(op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDescriptor(op.toLowerCase());	  append(binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
601	[BUG]  [BUGGY]  append(op.toLowerCase()  +  1,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  1,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  1,  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
602	[BUG]  [BUGGY]  append(op.toUpperCase()  +  op.toLowerCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  op.toLowerCase(),  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  op.toLowerCase(),  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
603	[BUG]  [BUGGY]  appendColumn(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);	  appendColumn(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
604	[BUG]  [BUGGY]  appendColumn(op,  binOp,  this.statementStarted,  this.lastModified);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  this.statementStarted,  this.lastModified);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  this.statementStarted,  this.lastModified);	  appendColumn(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
605	[BUG]  [BUGGY]  appendColumn(op,  0,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  0,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  0,  this.statementStarted);	  appendColumn(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
606	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);	  appendBinOp(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
607	[BUG]  [BUGGY]  appendBinOp(op,  binOp  +  1,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp  +  1,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp  +  1,  op.toLowerCase());	  appendBinOp(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
608	[BUG]  [BUGGY]  appendBinary(op,  binOp,  false,  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  false,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  false,  true);	  appendBinary(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
609	[BUG]  [BUGGY]  append(op.toUpperCase()  +  binOp,  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase()  +  binOp,  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  binOp,  op.toUpperCase());	  append(op.toLowerCase()    +    binOp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
610	[BUG]  [BUGGY]  append(op.toLowerCase()  /  binOp);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  /  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  /  binOp);	  append(op.toLowerCase()    +    binOp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
611	[BUG]  [BUGGY]  append1(op.toLowerCase(),  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append1(op.toLowerCase(),  binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append1(op.toLowerCase(),  binOp.toLowerCase());	  append0(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
612	[BUG]  [BUGGY]  appendBinary(op,  binOp,  0,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  0,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  0,  statementStarted);	  appendBinary(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
613	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.statementEnded);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.semiColon,  this.statementEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.semiColon,  this.statementEnded);	  appendBinary(op,    binOp,    this.semiColon);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
614	[BUG]  [BUGGY]  appendStatement(op,  binOp  +  1,  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp  +  1,  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp  +  1,  op.toUpperCase());	  appendStatement(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
615	[BUG]  [BUGGY]  appendStatement(op,  binOp  +  1,  op.toCharArray());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp  +  1,  op.toCharArray());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp  +  1,  op.toCharArray());	  appendStatement(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
616	[BUG]  [BUGGY]  appendColumn(op,  binOp  +  1,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp  +  1,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp  +  1,  op.toLowerCase());	  appendColumn(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
617	[BUG]  [BUGGY]  appendColumn(op,  binOp,  0,  op.length);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  0,  op.length);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  0,  op.length);	  appendColumn(op,    binOp,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
618	[BUG]  [BUGGY]  append(op,  binOp  +  1,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp  +  1,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp  +  1,  op.toLowerCase());	  append(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
619	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);	  appendSemiColon(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
620	[BUG]  [BUGGY]  append(op,  binOp.toLowerCase()  +  bbinOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp.toLowerCase()  +  bbinOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp.toLowerCase()  +  bbinOp.toLowerCase());	  append(bbinOp.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
621	[BUG]  [BUGGY]  appendOp(op.toLowerCase()  +  bbinOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toLowerCase()  +  bbinOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase()  +  bbinOp.toLowerCase());	  append(bbinOp.toLowerCase()    +    op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
622	[BUG]  [BUGGY]  appendColumn(op);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op);	  appendMutator(op);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
623	[BUG]  [BUGGY]  appendBinOp(op.toUpperCase(),  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op.toUpperCase(),  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op.toUpperCase(),  binOp);	  appendBinOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
624	[BUG]  [BUGGY]  appendBinOp(op,  binOp.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op,  binOp.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp.toUpperCase());	  appendBinOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
625	[BUG]  [BUGGY]  appendBinOp(op.toLowerCase()  +  1,  binOp);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinOp(op.toLowerCase()  +  1,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op.toLowerCase()  +  1,  binOp);	  appendBinOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
626	[BUG]  [BUGGY]  appendBinary(op,!binOp  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,!binOp  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE));  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,!binOp  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE));	  appendBinary(op,!binOp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
627	[BUG]  [BUGGY]  appendSemiColon(op,  binOp  +  1,  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp  +  1,  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp  +  1,  op.toLowerCase());	  appendSemiColon(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
628	[BUG]  [BUGGY]  appendSemiColon(op,  binOp  +  1,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp  +  1,  this.statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp  +  1,  this.statementStarted);	  appendSemiColon(op,    binOp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
629	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendBinary(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);	  appendBinary(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
630	[BUG]  [BUGGY]  appendLine(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendLine(op,  binOp,  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendLine(op,  binOp,  false);	  appendColumn(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
631	[BUG]  [BUGGY]  appendColumn(op,  binOp,  false,  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendColumn(op,  binOp,  false,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  false,  true);	  appendColumn(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
632	[BUG]  [BUGGY]  appendStart(op,  binOp);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStart(op,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStart(op,  binOp);	  appendStatement(op,    op);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
633	[BUG]  [BUGGY]  appendOp(op,  binOp,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  binOp,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  binOp,  this.statementNeedsEnded);	  append(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
634	[BUG]  [BUGGY]  append(op,  binOp,  this.statementEnded);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp,  this.statementEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  this.statementEnded);	  append(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
635	[BUG]  [BUGGY]  append(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  this.statementStarted,  this.statementNeedsEnded);	  append(op,    binOp,    this.statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
636	[BUG]  [BUGGY]  append(op.toLowerCase(),  op.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  op.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  op.toLowerCase(),  false);	  append(op.toLowerCase(),    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
637	[BUG]  [BUGGY]  append(op.toUpperCase(),  op.toUpperCase(),  false);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase(),  op.toUpperCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase(),  op.toUpperCase(),  false);	  append(op.toLowerCase(),    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
638	[BUG]  [BUGGY]  append(op.toUpperCase(),  op.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toUpperCase(),  op.toLowerCase(),  false);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase(),  op.toLowerCase(),  false);	  append(op.toLowerCase(),    binOp.toLowerCase(),    false);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
639	[BUG]  [BUGGY]  appendOp(op,  BinOp,  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op,  BinOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  BinOp,  true);	  append(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
640	[BUG]  [BUGGY]  append(op,  binOp,  false,  true);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op,  binOp,  false,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  false,  true);	  append(op,    binOp,    false);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
641	[BUG]  [BUGGY]  appendStatement(op,  binOp,  0,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  0,  statementStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  0,  statementStarted);	  appendStatement(op,    binOp,    statementStarted);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
642	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  stateContext);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendSemiColon(op,  binOp,  stateContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  stateContext);	  appendSemiColon(op,    binOp,    statementContext);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
643	[BUG]  [BUGGY]  append(op.toLowerCase()  +  op.toUpperCase(),  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  op.toUpperCase(),  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  op.toUpperCase(),  op.toUpperCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
644	[BUG]  [BUGGY]  append(op.toLowerCase()  +  1,  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  +  1,  op.toUpperCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  1,  op.toUpperCase());	  append(op.toLowerCase()    +    binOp.toLowerCase(),    op.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
645	[BUG]  [BUGGY]  appendStatement(op,  binOp,  stateContext);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  stateContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  stateContext);	  appendStatement(op,    binOp,    statementContext);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
646	[BUG]  [BUGGY]  appendStatement(op,  binOp,  0,  statementContext);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  0,  statementContext);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  0,  statementContext);	  appendStatement(op,    binOp,    statementContext);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
647	[BUG]  [BUGGY]  appendLong(op,  binOp);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendLong(op,  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendLong(op,  binOp);	  appendRange(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
648	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp.toUpperCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase(),  binOp.toUpperCase(),  op.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp.toUpperCase(),  op.toLowerCase());	  append(op.toLowerCase(),    binOp.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
649	[BUG]  [BUGGY]  appendDescriptor(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendDescriptor(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDescriptor(op,  binOp,  true);	  append(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
650	[BUG]  [BUGGY]  appendPath(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendPath(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendPath(op,  binOp,  true);	  append(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
651	[BUG]  [BUGGY]  appendLong(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendLong(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendLong(op,  binOp,  true);	  append(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
652	[BUG]  [BUGGY]  appendStatement(op,  binOp,  0,  declarationStarted);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendStatement(op,  binOp,  0,  declarationStarted);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  0,  declarationStarted);	  appendStatement(op,    binOp,    declarationStarted);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
653	[BUG]  [BUGGY]  append(op.toLowerCase()  /  this.binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  append(op.toLowerCase()  /  this.binOp.toLowerCase());  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  /  this.binOp.toLowerCase());	  append(op.toLowerCase()    /    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
654	[BUG]  [BUGGY]  appendMutableSemiColon(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendMutableSemiColon(op,  binOp,  true);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendMutableSemiColon(op,  binOp,  true);	  appendSemiColon(op,    binOp,    true);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
655	[BUG]  [BUGGY]  appendOp(op.toUpperCase(),  binOp);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendOp(op.toUpperCase(),  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toUpperCase(),  binOp);	  appendOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
656	[BUG]  [BUGGY]  appendDescriptor(op.toLowerCase(),  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  appendOp(String  op,  boolean  binOp)  {  append(op);      [BUGGY]  appendDescriptor(op.toLowerCase(),  binOp);  [BUGGY]        [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDescriptor(op.toLowerCase(),  binOp);	  appendOp(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
