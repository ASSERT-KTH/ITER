bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  appendOp(op,  binOp);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendOp(op,  binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op,  binOp);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toLowerCase(),  binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  appendColumn(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendColumn(op,  binOp,  this.statementStarted);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  this.statementStarted);	  appendColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
4	[BUG]  [BUGGY]  appendColumn(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendColumn(op,  binOp,  0);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  0);	  appendColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]  appendColumn(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendColumn(op,  binOp,  false);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  false);	  appendColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  appendColumn(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendColumn(op,  binOp,  true);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp,  true);	  appendColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  appendColumn(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendColumn(op,  binOp  +  1);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColumn(op,  binOp  +  1);	  appendColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  appendRange(op,  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendRange(op,  binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRange(op,  binOp);	  appendColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinOp(op,  binOp,  0);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  0);	  appendBinOp(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinOp(op,  binOp,  this.statementStarted);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  this.statementStarted);	  appendBinOp(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinOp(op,  binOp,  false);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  false);	  appendBinOp(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  statementStarted);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinOp(op,  binOp,  statementStarted);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  statementStarted);	  appendBinOp(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  appendBinOp(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinOp(op,  binOp,  true);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp,  true);	  appendBinOp(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  appendFunction(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendFunction(op,  binOp,  0);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  0);	  appendFunction(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  appendFunction(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendFunction(op,  binOp,  this.statementStarted);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  this.statementStarted);	  appendFunction(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  appendFunction(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendFunction(op,  binOp,  false);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  false);	  appendFunction(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  appendFunction(op,  binOp,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendFunction(op,  binOp,  statementStarted);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp,  statementStarted);	  appendFunction(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  appendMutator(op,  binOp);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendMutator(op,  binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendMutator(op,  binOp);	  appendFunction(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  appendBinary(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinary(op,  binOp,  0);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  0);	  appendBinary(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinary(op,  binOp,  this.statementStarted);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.statementStarted);	  appendBinary(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  appendBinary(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinary(op,  binOp,  false);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  false);	  appendBinary(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
22	[BUG]  [BUGGY]  appendBinary(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinary(op,  binOp,  true);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  true);	  appendBinary(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
23	[BUG]  [BUGGY]  appendBinary(op,  binOp,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinary(op,  binOp,  statementStarted);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  statementStarted);	  appendBinary(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
24	[BUG]  [BUGGY]  appendBinary(op,!binOp);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinary(op,!binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,!binOp);	  appendBinary(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
25	[BUG]  [BUGGY]  append(op.toLowerCase()  +  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toLowerCase()  +  1);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  1);	  append(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  append(op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toUpperCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase());	  append(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  append(op,  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op,  binOp.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp.toLowerCase());	  append(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  append(binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(binOp.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase());	  append(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binOp);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toLowerCase()  +  binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binOp);	  append(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  appendMutator(binOp);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendMutator(binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendMutator(binOp);	  appendSemiColon(binOp);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  appendSemi(binOp,  op);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemi(binOp,  op);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemi(binOp,  op);	  appendSemiColon(binOp);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  AppendSemiColon(op,  binOp);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  AppendSemiColon(op,  binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	AppendSemiColon(op,  binOp);	  appendSemiColon(binOp);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  appendColon(op);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendColon(op);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColon(op);	  appendSemiColon(binOp);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
34	[BUG]  [BUGGY]  append(binOp.toLowerCase()  +  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(binOp.toLowerCase()  +  op.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase()  +  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binOp.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toLowerCase()  +  binOp.toLowerCase(),  false);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binOp.toLowerCase(),  false);	  append(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  append(op.toLowerCase()  /  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toLowerCase()  /  binOp.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  /  binOp.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  append(bbinOp.toLowerCase()  +  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(bbinOp.toLowerCase()  +  op.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(bbinOp.toLowerCase()  +  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
38	[BUG]  [BUGGY]  appendBinOp(op);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinOp(op);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op);	  append(op);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  appendOp(op);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendOp(op);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op);	  append(op);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
40	[BUG]  [BUGGY]  append(binOp.toLowerCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(binOp.toLowerCase(),  op.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase(),  op.toLowerCase());	  append(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  append(op.toUpperCase(),  binOp.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toUpperCase(),  binOp.toUpperCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase(),  binOp.toUpperCase());	  append(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp.toLowerCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toLowerCase(),  binOp.toLowerCase()  +  1);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp.toLowerCase()  +  1);	  append(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  appendOp(op.toLowerCase(),  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendOp(op.toLowerCase(),  binOp.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase(),  binOp.toLowerCase());	  append(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toLowerCase(),  binOp.toLowerCase(),  false);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp.toLowerCase(),  false);	  append(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  appendStatement(op,  binOp,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendStatement(op,  binOp,  statementStarted);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  statementStarted);	  appendStatement(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  appendStatement(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendStatement(op,  binOp,  0);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  0);	  appendStatement(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  appendStatement(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendStatement(op,  binOp,  this.statementStarted);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  this.statementStarted);	  appendStatement(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  appendStatement(op,  binOp,  statementContext);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendStatement(op,  binOp,  statementContext);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  statementContext);	  appendStatement(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  appendStatement(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendStatement(op,  binOp,  false);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  false);	  appendStatement(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  appendStatement(op,  binOp,  declarationStarted);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendStatement(op,  binOp,  declarationStarted);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  declarationStarted);	  appendStatement(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
51	[BUG]  [BUGGY]  appendStatement(op,  binOp,  this);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendStatement(op,  binOp,  this);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp,  this);	  appendStatement(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  appendBoolean(op,  binOp);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBoolean(op,  binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBoolean(op,  binOp);	  append(binOp);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
53	[BUG]  [BUGGY]  appendSemiColon(buffOp);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColon(buffOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(buffOp);	  appendSemiColon(op);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
54	[BUG]  [BUGGY]  appendSemiColon(bbinOp);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColon(bbinOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(bbinOp);	  appendSemiColon(op);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
55	[BUG]  [BUGGY]  appendColon(op,  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendColon(op,  binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColon(op,  binOp);	  appendSemiColon(op);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
56	[BUG]  [BUGGY]  append(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op,  binOp,  0);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  0);	  append(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  append(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op,  binOp,  this.statementStarted);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  this.statementStarted);	  append(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  append(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op,  binOp,  false);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  false);	  append(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  append(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op,  binOp  +  1);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp  +  1);	  append(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  append0(op,  binOp);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append0(op,  binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op,  binOp);	  append(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  append(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op,  binOp,  true);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp,  true);	  append(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
62	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.statementStarted);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColon(op,  binOp,  this.statementStarted);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.statementStarted);	  appendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColon(op,  binOp,  0);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  0);	  appendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  false);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColon(op,  binOp,  false);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  false);	  appendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  statementStarted);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColon(op,  binOp,  statementStarted);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  statementStarted);	  appendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
66	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  true);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColon(op,  binOp,  true);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  true);	  appendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  statementContext);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColon(op,  binOp,  statementContext);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  statementContext);	  appendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
68	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.statementContext);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColon(op,  binOp,  this.statementContext);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.statementContext);	  appendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
69	[BUG]  [BUGGY]  appendFunction(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendFunction(op,  binOp  +  1);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendFunction(op,  binOp  +  1);	  appendFunction(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
70	[BUG]  [BUGGY]  appendSemiColumn(op,  binOp);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColumn(op,  binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColumn(op,  binOp);	  appendColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
71	[BUG]  [BUGGY]  appendOp(op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendOp(op.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase());	  append(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
72	[BUG]  [BUGGY]  appendBinOp(op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinOp(op.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op.toLowerCase());	  append(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
73	[BUG]  [BUGGY]  append0(op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append0(op.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op.toLowerCase());	  append(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
74	[BUG]  [BUGGY]  appendDescriptor(op,  binOp);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendDescriptor(op,  binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendDescriptor(op,  binOp);	  append(op);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
75	[BUG]  [BUGGY]  append(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op,  binOp  &&  isEnabled(Feature.QUOTE_FIELD_NAMES));	  append(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
76	[BUG]  [BUGGY]  appendSemiColon(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColon(op,  binOp  +  1);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp  +  1);	  appendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
77	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColon(op,  binOp,  this.semiColon);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this.semiColon);	  appendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
78	[BUG]  [BUGGY]  appendBinary(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinary(op,  binOp  +  1);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp  +  1);	  appendBinary(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
79	[BUG]  [BUGGY]  appendBinary(op,  binOp,  this.semiColon);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinary(op,  binOp,  this.semiColon);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinary(op,  binOp,  this.semiColon);	  appendBinary(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
80	[BUG]  [BUGGY]  appendOp(op.toLowerCase()  +  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendOp(op.toLowerCase()  +  binOp.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(op.toLowerCase()  +  binOp.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
81	[BUG]  [BUGGY]  appendOp(binOp.toLowerCase()  +  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendOp(binOp.toLowerCase()  +  op.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendOp(binOp.toLowerCase()  +  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
82	[BUG]  [BUGGY]  append(binOp.toUpperCase()  +  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(binOp.toUpperCase()  +  op.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toUpperCase()  +  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
83	[BUG]  [BUGGY]  append(binOp.toLowerCase()  /  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(binOp.toLowerCase()  /  op.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(binOp.toLowerCase()  /  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
84	[BUG]  [BUGGY]  appendBinOp(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendBinOp(op,  binOp  +  1);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendBinOp(op,  binOp  +  1);	  appendBinOp(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
85	[BUG]  [BUGGY]  appendStatement(op,  binOp  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendStatement(op,  binOp  +  1);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  binOp  +  1);	  appendStatement(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  appendSemiColon(binOp,  op);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColon(binOp,  op);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(binOp,  op);	  appendSemiColon(binOp);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
87	[BUG]  [BUGGY]  appendColon(binOp,  op);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendColon(binOp,  op);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColon(binOp,  op);	  appendSemiColon(binOp);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  append0(binOp);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append0(binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(binOp);	  append(binOp);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
89	[BUG]  [BUGGY]  append0(op.toLowerCase(),  binOp.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append0(op.toLowerCase(),  binOp.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append0(op.toLowerCase(),  binOp.toLowerCase());	  append(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
90	[BUG]  [BUGGY]  appendSemi(binOp);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemi(binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemi(binOp);	  appendSemiColon(op);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
91	[BUG]  [BUGGY]  appendColon(binOp);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendColon(binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendColon(binOp);	  appendSemiColon(op);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
92	[BUG]  [BUGGY]  append(op.toLowerCase()  +  1,  binOp);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toLowerCase()  +  1,  binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  1,  binOp);	  append(op.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
93	[BUG]  [BUGGY]  appendRaw(op,  binOp);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendRaw(op,  binOp);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendRaw(op,  binOp);	  appendColumn(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
94	[BUG]  [BUGGY]  appendStatement(op,  op);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendStatement(op,  op);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendStatement(op,  op);	  appendStatement(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
95	[BUG]  [BUGGY]  append(op.toLowerCase(),  binOp.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toLowerCase(),  binOp.toUpperCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase(),  binOp.toUpperCase());	  append(op.toLowerCase(),    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
96	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binOp.toLowerCase(),  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toLowerCase()  +  binOp.toLowerCase(),  op.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binOp.toLowerCase(),  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
97	[BUG]  [BUGGY]  append(op.toUpperCase()  +  binOp.toUpperCase());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toUpperCase()  +  binOp.toUpperCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toUpperCase()  +  binOp.toUpperCase());	  append(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
98	[BUG]  [BUGGY]  append(op.toLowerCase()  +  binOp.toLowerCase(),  op.toUpperCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toLowerCase()  +  binOp.toLowerCase(),  op.toUpperCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  binOp.toLowerCase(),  op.toUpperCase());	  append(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
99	[BUG]  [BUGGY]  append(op.toLowerCase()  +  op.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  append(op.toLowerCase()  +  op.toLowerCase());  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	append(op.toLowerCase()  +  op.toLowerCase());	  append(op.toLowerCase()    +    binOp.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
100	[BUG]  [BUGGY]  appendMutator(op);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendMutator(op);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendMutator(op);	  appendSemiColon(op);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
101	[BUG]  [BUGGY]  appendSemiColon(op,  binOp,  this);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  appendOp(String  op,  boolean  binOp)  {  append(op);    [BUGGY]  appendSemiColon(op,  binOp,  this);  [BUGGY]      [CLASS]  CodeConsumer  [METHOD]  appendOp  [RETURN_TYPE]  void  String  op  boolean  binOp  [VARIABLES]  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  String  op  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20851441405707477	201	201	1	replace	appendSemiColon(op,  binOp,  this);	  appendSemiColon(op,    binOp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
