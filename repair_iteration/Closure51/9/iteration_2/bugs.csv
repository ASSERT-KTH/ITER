bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (Math.abs(value)>  100)  {  [CE]  cannot  find  symbol  iop  [FE]          ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(value)>  100)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)>  100)  {	  if    (Math.abs(value)    >=    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	2	None	replace
2	[BUG]  [BUGGY]  if  (Math.abs(value)  <  1000)  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(value)  <  1000)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  1000)  {	  if    (Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
3	[BUG]  [BUGGY]  if  (Math.abs(value)  <  100  ||  Math.abs(exp)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(value)  <  100  ||  Math.abs(exp)  <  100)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  100  ||  Math.abs(exp)  <  100)  {	  if    (Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
4	[BUG]  [BUGGY]  if(Math.abs(value)  >>  100)  {  [CE]  cannot  find  symbol  iop  [FE]        ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if(Math.abs(value)  >>  100)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if(Math.abs(value)  >>  100)  {	  if(Math.abs(mantissa)    >=    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
5	[BUG]  [BUGGY]  int  mantissa  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  int  mantissa  =  getLastChar();  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  getLastChar();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  int  mantissa  =  Integer.toString(value);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  int  mantissa  =  Integer.toString(value);  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Integer.toString(value);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(value);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  int  mantissa  =  Character.toLowerCase(value);  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(value);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  int  mantissa  =  Math.pow(10,  exp);  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Math.pow(10,  exp);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  char  prev  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  char  prev  =  getLastChar();  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	char  prev  =  getLastChar();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(x);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  int  mantissa  =  Character.toLowerCase(x);  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(x);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(getLastChar());  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  int  mantissa  =  Character.toLowerCase(getLastChar());  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(getLastChar());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  1000)  {  [CE]  cannot  find  symbol  iop  [FE]        ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(mantissa)  <  1000)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  1000)  {	  if    (Math.abs(mantissa)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
13	[BUG]  [BUGGY]  if  (Math.abs(exp)>  100)  {  [CE]  cannot  find  symbol  iop  [FE]          ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(exp)>  100)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)>  100)  {	  if    (Math.abs(exp)    >=    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
14	[BUG]  [BUGGY]  if  (Math.abs(x)  <  1000)  {  [CE]  cannot  find  symbol  iop  [FE]        ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(x)  <  1000)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(x)  <  1000)  {	  if    (Math.abs(x)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
15	[BUG]  [BUGGY]  if  (Math.abs(exp)  <  1000)  {  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(exp)  <  1000)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)  <  1000)  {	  if    (Math.abs(exp)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
16	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  100  ||  Math.abs(exp)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(mantissa)  <  100  ||  Math.abs(exp)  <  100)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  100  ||  Math.abs(exp)  <  100)  {	  if    (Math.abs(exp)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
17	[BUG]  [BUGGY]  if  (Math.abs(x)>  100)  {  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(x)>  100)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(x)>  100)  {	  if    (Math.abs(mantissa)>    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
18	[BUG]  [BUGGY]  if  (Math.abs(mantissa)>  10)  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(mantissa)>  10)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)>  10)  {	  if    (Math.abs(mantissa)>    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
19	[BUG]  [BUGGY]  if  (Math.abs(prev)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]        ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(prev)  <  100)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(prev)  <  100)  {	  if    (Math.abs(mantissa)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
20	[BUG]  [BUGGY]  if  (Math.abs(x)  <  10  &&  value  <=  Math.abs(mantissa))  {  [CE]  cannot  find  symbol  iop  [FE]        ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(x)  <  10  &&  value  <=  Math.abs(mantissa))  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(x)  <  10  &&  value  <=  Math.abs(mantissa))  {	  if    (Math.abs(x)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
21	[BUG]  [BUGGY]  if  (Math.abs(x)  <  10  &&  Math.abs(value)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]          ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(x)  <  10  &&  Math.abs(value)  <  100)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(x)  <  10  &&  Math.abs(value)  <  100)  {	  if    (Math.abs(x)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
22	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  binOp)  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(value)  <  10  &&  binOp)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  binOp)  {	  if    (Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
23	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  Math.abs(mantissa)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(value)  <  10  &&  Math.abs(mantissa)  <  100)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  Math.abs(mantissa)  <  100)  {	  if    (Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
24	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  Math.abs(exp)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(value)  <  10  &&  Math.abs(exp)  <  100)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  Math.abs(exp)  <  100)  {	  if    (Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
25	[BUG]  [BUGGY]  if  (Math.abs(exp)  <  10  &&  binOp)  {  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(exp)  <  10  &&  binOp)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)  <  10  &&  binOp)  {	  if    (Math.abs(exp)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
26	[BUG]  [BUGGY]  if  (Math.abs(mantissa)>  1000)  {  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(mantissa)>  1000)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)>  1000)  {	  if    (Math.abs(mantissa)>    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
27	[BUG]  [BUGGY]  if  (Math.abs(value)  >=  10  &&  Math.abs(mantissa)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]          ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(value)  >=  10  &&  Math.abs(mantissa)  <  100)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  >=  10  &&  Math.abs(mantissa)  <  100)  {	  if    (Math.abs(value)    >=    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	2	None	replace
28	[BUG]  [BUGGY]  int  mantissa  =  value  -(int)Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  int  mantissa  =  value  -(int)Math.pow(10,  exp);  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  value  -(int)Math.pow(10,  exp);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  int  mantissa  =  value  /  10  +  Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  int  mantissa  =  value  /  10  +  Math.pow(10,  exp);  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  value  /  10  +  Math.pow(10,  exp);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  value);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  int  mantissa  =  Math.pow(10,  value);  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Math.pow(10,  value);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  if  (Math.abs(mentissa)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(mentissa)  <  100)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mentissa)  <  100)  {	  if    (Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
32	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10)  {  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  if  (Math.abs(mantissa)  <  10)  {  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10)  {	  if    (Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
33	[BUG]  [BUGGY]  double  mantissa  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  double  mantissa  =  getLastChar();  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	double  mantissa  =  getLastChar();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  Integer  mantissa  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]      char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;    [BUGGY]  Integer  mantissa  =  getLastChar();  [BUGGY]    while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Integer  mantissa  =  getLastChar();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
