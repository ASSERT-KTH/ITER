bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  prev  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  String  prev  =  getLastChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	String  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  Character  prev  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Character  prev  =  getLastChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Character  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  Integer  prev  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Integer  prev  =  getLastChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Integer  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  Number  prev  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Number  prev  =  getLastChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Number  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  Char  prev  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Char  prev  =  getLastChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Char  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  String  prev  =  getLastCHAR();  [CE]  illegal  start  of  type  [FE]                                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  String  prev  =  getLastCHAR();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	String  prev  =  getLastCHAR();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  Math.abs(exp)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  Math.abs(exp)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  Math.abs(exp)  <  100)  {	  if    (Math.abs(x)    <    10    &&    Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
8	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  Math.abs(value)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  Math.abs(value)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  Math.abs(value)  <  100)  {	  if    (Math.abs(x)    <    10    &&    Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
9	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  Math.abs(value)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  Math.abs(value)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  Math.abs(value)  <  100)  {	  if    (Math.abs(x)    <    10    &&    Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
10	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  Math.abs(x)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  Math.abs(x)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  Math.abs(x)  <  100)  {	  if    (Math.abs(x)    <    10    &&    Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
11	[BUG]  [BUGGY]  if  (Math.abs(exp)  <  10  &&  Math.abs(value)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(exp)  <  10  &&  Math.abs(value)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)  <  10  &&  Math.abs(value)  <  100)  {	  if    (Math.abs(x)    <    10    &&    Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
12	[BUG]  [BUGGY]  long  mantissa  =  Integer.toString(value);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  long  mantissa  =  Integer.toString(value);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	long  mantissa  =  Integer.toString(value);	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  char  mantissa  =  Integer.toString(value);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  char  mantissa  =  Integer.toString(value);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	char  mantissa  =  Integer.toString(value);	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  int  mantissa  =  Integer.toString(value)+  1;  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Integer.toString(value)+  1;  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Integer.toString(value)+  1;	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  int  mantissa  =  Integer.toString(value  -  1);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Integer.toString(value  -  1);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Integer.toString(value  -  1);	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  double  mantissa  =  Integer.toString(value);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  double  mantissa  =  Integer.toString(value);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	double  mantissa  =  Integer.toString(value);	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  int  mantissa  =  Integer.toString(value  /  10);  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Integer.toString(value  /  10);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Integer.toString(value  /  10);	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  Integer  mantissa  =  getFirstChild();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Integer  mantissa  =  getFirstChild();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Integer  mantissa  =  getFirstChild();	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
19	[BUG]  [BUGGY]  Integer  mantissa  =  getLastChar()  +  1;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Integer  mantissa  =  getLastChar()  +  1;  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Integer  mantissa  =  getLastChar()  +  1;	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
20	[BUG]  [BUGGY]  Integer  mantissa  =  getLastChar()  -  1;  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Integer  mantissa  =  getLastChar()  -  1;  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Integer  mantissa  =  getLastChar()  -  1;	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
21	[BUG]  [BUGGY]  Integer  mantissa  =  getFirstChar();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Integer  mantissa  =  getFirstChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Integer  mantissa  =  getFirstChar();	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
22	[BUG]  [BUGGY]  Integer  mantissa  =  getLastInt();  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Integer  mantissa  =  getLastInt();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Integer  mantissa  =  getLastInt();	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
23	[BUG]  [BUGGY]  long  mantissa  =  Character.toLowerCase(x);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  long  mantissa  =  Character.toLowerCase(x);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	long  mantissa  =  Character.toLowerCase(x);	  int    mantissa    =    Character.toLowerCase(x);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  char  mantissa  =  Character.toLowerCase(x);  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  char  mantissa  =  Character.toLowerCase(x);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	char  mantissa  =  Character.toLowerCase(x);	  int    mantissa    =    Character.toLowerCase(x);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  double  mantissa  =  Character.toLowerCase(x);  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  double  mantissa  =  Character.toLowerCase(x);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	double  mantissa  =  Character.toLowerCase(x);	  int    mantissa    =    Character.toLowerCase(x);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
26	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(prev);  [CE]  illegal  start  of  type  [FE]                                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Character.toLowerCase(prev);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(prev);	  int    mantissa    =    Character.toLowerCase(x);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
27	[BUG]  [BUGGY]  int  mantissa  =  Character.toUpperCase(prev);  [CE]  illegal  start  of  type  [FE]                                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Character.toUpperCase(prev);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toUpperCase(prev);	  int    mantissa    =    Character.toLowerCase(x);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
28	[BUG]  [BUGGY]  if  (Math.abs(value)  <  100  ||  Math.abs(mantissa)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  100  ||  Math.abs(mantissa)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  100  ||  Math.abs(mantissa)  <  100)  {	  if    (Math.abs(value)    <    100    ||    Math.abs(exp)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
29	[BUG]  [BUGGY]  if  (Math.abs(value)  <  1000  ||  Math.abs(exp)  <  1000)  {  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  1000  ||  Math.abs(exp)  <  1000)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  1000  ||  Math.abs(exp)  <  1000)  {	  if    (Math.abs(value)    <    100    ||    Math.abs(exp)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
30	[BUG]  [BUGGY]  if  (Math.abs(value)  <  100  &&  Math.abs(exp)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  100  &&  Math.abs(exp)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  100  &&  Math.abs(exp)  <  100)  {	  if    (Math.abs(value)    <    100    ||    Math.abs(exp)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
31	[BUG]  [BUGGY]  if  (Math.abs(value)>  10)  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)>  10)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)>  10)  {	  if    (Math.abs(mantissa)>    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
32	[BUG]  [BUGGY]  if  (Math.abs(exp)>  10)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(exp)>  10)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)>  10)  {	  if    (Math.abs(mantissa)>    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
33	[BUG]  [BUGGY]  if  (Math.abs(mantissa)>  10  &&  value  <=  Integer.MAX_VALUE)  {  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)>  10  &&  value  <=  Integer.MAX_VALUE)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)>  10  &&  value  <=  Integer.MAX_VALUE)  {	  if    (Math.abs(mantissa)>    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
34	[BUG]  [BUGGY]  if  (Math.abs(mantissa)>  10  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)>  10  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)>  10  &&  value  <=  Integer.MIN_VALUE)  {	  if    (Math.abs(mantissa)>    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
35	[BUG]  [BUGGY]  if  (Math.abs(value)>  1000)  {  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)>  1000)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)>  1000)  {	  if    (Math.abs(mantissa)>    1000)    {    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
36	[BUG]  [BUGGY]  if  (Math.abs(exp)>  1000)  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(exp)>  1000)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)>  1000)  {	  if    (Math.abs(mantissa)>    1000)    {    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
37	[BUG]  [BUGGY]  if  (Math.abs(mantissa)>  10000)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)>  10000)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)>  10000)  {	  if    (Math.abs(mantissa)>    1000)    {    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
38	[BUG]  [BUGGY]  if  (Math.abs(x)>  1000)  {  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(x)>  1000)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(x)>  1000)  {	  if    (Math.abs(mantissa)>    1000)    {    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
39	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  ||  Math.abs(exp)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  ||  Math.abs(exp)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  ||  Math.abs(exp)  <  100)  {	  if    (Math.abs(value)    <    10    &&    Math.abs(exp)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
40	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  ||  Math.abs(exp)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  ||  Math.abs(exp)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  ||  Math.abs(exp)  <  100)  {	  if    (Math.abs(value)    <    10    &&    Math.abs(exp)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
41	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10000)  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10000)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10000)  {	  if    (Math.abs(value)    <    1000)    {    	non-compiled	[CE]  cannot  find  symbol  iop	2	None	replace
42	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10000)  {  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10000)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10000)  {	  if    (Math.abs(mantissa)    <    1000)    {    	non-compiled	[CE]  cannot  find  symbol  iop	12	None	replace
43	[BUG]  [BUGGY]  if  (Math.abs(value)  >=  10  &&  Math.abs(exp)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  >=  10  &&  Math.abs(exp)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  >=  10  &&  Math.abs(exp)  <  100)  {	  if    (Math.abs(value)    >=    10    &&    Math.abs(mantissa)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	27	None	replace
44	[BUG]  [BUGGY]  if  (Math.abs(value)>  10  &&  Math.abs(mantissa)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)>  10  &&  Math.abs(mantissa)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)>  10  &&  Math.abs(mantissa)  <  100)  {	  if    (Math.abs(value)    >=    10    &&    Math.abs(mantissa)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	27	None	replace
45	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  >=  10  &&  Math.abs(exp)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  >=  10  &&  Math.abs(exp)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  >=  10  &&  Math.abs(exp)  <  100)  {	  if    (Math.abs(value)    >=    10    &&    Math.abs(mantissa)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	27	None	replace
46	[BUG]  [BUGGY]  if  (Math.abs(exp)  >=  10  &&  Math.abs(mantissa)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(exp)  >=  10  &&  Math.abs(mantissa)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)  >=  10  &&  Math.abs(mantissa)  <  100)  {	  if    (Math.abs(value)    >=    10    &&    Math.abs(mantissa)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	27	None	replace
47	[BUG]  [BUGGY]  if  (Math.abs(exp)  <  10000)  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(exp)  <  10000)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)  <  10000)  {	  if    (Math.abs(exp)    <    1000)    {    	non-compiled	[CE]  cannot  find  symbol  iop	15	None	replace
48	[BUG]  [BUGGY]  long  mantissa  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  long  mantissa  =  getLastChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	long  mantissa  =  getLastChar();	  double    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
49	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  +  1;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  double  mantissa  =  getLastChar()  +  1;  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	double  mantissa  =  getLastChar()  +  1;	  double    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
50	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  -  1;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  double  mantissa  =  getLastChar()  -  1;  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	double  mantissa  =  getLastChar()  -  1;	  double    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
51	[BUG]  [BUGGY]  char  mantissa  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  char  mantissa  =  getLastChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	char  mantissa  =  getLastChar();	  double    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
52	[BUG]  [BUGGY]  double  mantissa  =  getFirstChar();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  double  mantissa  =  getFirstChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	double  mantissa  =  getFirstChar();	  double    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
53	[BUG]  [BUGGY]  int  mantissa  =  getLastChar()  -  1;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  getLastChar()  -  1;  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  getLastChar()  -  1;	  int    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
54	[BUG]  [BUGGY]  int  mantissa  =  getFirstChar();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  getFirstChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  getFirstChar();	  int    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
55	[BUG]  [BUGGY]  int  mantissa  =  getLastChar()  +  1;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  getLastChar()  +  1;  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  getLastChar()  +  1;	  int    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  long  mantissa  =  Character.toLowerCase(value);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  long  mantissa  =  Character.toLowerCase(value);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	long  mantissa  =  Character.toLowerCase(value);	  int    mantissa    =    Character.toLowerCase(value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
57	[BUG]  [BUGGY]  char  mantissa  =  Character.toLowerCase(value);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  char  mantissa  =  Character.toLowerCase(value);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	char  mantissa  =  Character.toLowerCase(value);	  int    mantissa    =    Character.toLowerCase(value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
58	[BUG]  [BUGGY]  double  mantissa  =  Character.toLowerCase(value);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  double  mantissa  =  Character.toLowerCase(value);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	double  mantissa  =  Character.toLowerCase(value);	  int    mantissa    =    Character.toLowerCase(value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
59	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(value,  prev);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Character.toLowerCase(value,  prev);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(value,  prev);	  int    mantissa    =    Character.toLowerCase(value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
60	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(value)+  1;  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Character.toLowerCase(value)+  1;  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(value)+  1;	  int    mantissa    =    Character.toLowerCase(value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
61	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(value,  x);  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Character.toLowerCase(value,  x);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(value,  x);	  int    mantissa    =    Character.toLowerCase(value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
62	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  ||  Math.abs(mantissa)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  ||  Math.abs(mantissa)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  ||  Math.abs(mantissa)  <  100)  {	  if    (Math.abs(value)    <    10    &&    Math.abs(mantissa)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
63	[BUG]  [BUGGY]  if  (Math.abs(exp)  <  10  &&  Math.abs(mantissa)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(exp)  <  10  &&  Math.abs(mantissa)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)  <  10  &&  Math.abs(mantissa)  <  100)  {	  if    (Math.abs(value)    <    10    &&    Math.abs(mantissa)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
64	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  exp  +  1);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Math.pow(10,  exp  +  1);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Math.pow(10,  exp  +  1);	  int    mantissa    =    Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
65	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  exp  -  1);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Math.pow(10,  exp  -  1);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Math.pow(10,  exp  -  1);	  int    mantissa    =    Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
66	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Math.pow(10,  prev);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Math.pow(10,  prev);	  int    mantissa    =    Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
67	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  char  mantissa  =  Math.pow(10,  exp);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	char  mantissa  =  Math.pow(10,  exp);	  int    mantissa    =    Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
68	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  long  mantissa  =  Math.pow(10,  exp);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	long  mantissa  =  Math.pow(10,  exp);	  int    mantissa    =    Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
69	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  exp  -  10);  [CE]  illegal  start  of  type  [FE]                                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Math.pow(10,  exp  -  10);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Math.pow(10,  exp  -  10);	  int    mantissa    =    Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
70	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  value  -  1);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Math.pow(10,  value  -  1);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Math.pow(10,  value  -  1);	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
71	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  value  +  1);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Math.pow(10,  value  +  1);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Math.pow(10,  value  +  1);	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
72	[BUG]  [BUGGY]  long  mantissa  =  Math.pow(10,  value);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  long  mantissa  =  Math.pow(10,  value);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	long  mantissa  =  Math.pow(10,  value);	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
73	[BUG]  [BUGGY]  char  mantissa  =  Math.pow(10,  value);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  char  mantissa  =  Math.pow(10,  value);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	char  mantissa  =  Math.pow(10,  value);	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
74	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  value  /  10);  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Math.pow(10,  value  /  10);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Math.pow(10,  value  /  10);	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
75	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  value  -  10);  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Math.pow(10,  value  -  10);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Math.pow(10,  value  -  10);	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
76	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  100  ||  Math.abs(value)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  100  ||  Math.abs(value)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  100  ||  Math.abs(value)  <  100)  {	  if    (Math.abs(mantissa)    <    100    ||    Math.abs(exp)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	16	None	replace
77	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  100  &&  Math.abs(exp)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  100  &&  Math.abs(exp)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  100  &&  Math.abs(exp)  <  100)  {	  if    (Math.abs(mantissa)    <    100    ||    Math.abs(exp)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	16	None	replace
78	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  1000  ||  Math.abs(exp)  <  1000)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  1000  ||  Math.abs(exp)  <  1000)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  1000  ||  Math.abs(exp)  <  1000)  {	  if    (Math.abs(mantissa)    <    100    ||    Math.abs(exp)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	16	None	replace
79	[BUG]  [BUGGY]  if(Math.abs(mantissa)  >>  100)  {  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if(Math.abs(mantissa)  >>  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if(Math.abs(mantissa)  >>  100)  {	  if(Math.abs(value)    >>    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
80	[BUG]  [BUGGY]  if(Math.abs(mantissa)!=  100)  {  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if(Math.abs(mantissa)!=  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if(Math.abs(mantissa)!=  100)  {	  if(Math.abs(value)    >>    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
81	[BUG]  [BUGGY]  if  (Math.abs(x)  <  10000)  {  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(x)  <  10000)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(x)  <  10000)  {	  if    (Math.abs(x)    <    1000)    {    	non-compiled	[CE]  cannot  find  symbol  iop	14	None	replace
82	[BUG]  [BUGGY]  long  mantissa  =  Character.toLowerCase(getLastChar());  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  long  mantissa  =  Character.toLowerCase(getLastChar());  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	long  mantissa  =  Character.toLowerCase(getLastChar());	  int    mantissa    =    Character.toLowerCase(getLastChar());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
83	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(getLastChar(),  value);  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Character.toLowerCase(getLastChar(),  value);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(getLastChar(),  value);	  int    mantissa    =    Character.toLowerCase(getLastChar());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
84	[BUG]  [BUGGY]  char  mantissa  =  Character.toLowerCase(getLastChar());  [CE]  illegal  start  of  type  [FE]                                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  char  mantissa  =  Character.toLowerCase(getLastChar());  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	char  mantissa  =  Character.toLowerCase(getLastChar());	  int    mantissa    =    Character.toLowerCase(getLastChar());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
85	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(getLastChar()  +  1);  [CE]  illegal  start  of  type  [FE]                                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Character.toLowerCase(getLastChar()  +  1);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(getLastChar()  +  1);	  int    mantissa    =    Character.toLowerCase(getLastChar());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
86	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(getLastChar(),  prev);  [CE]  illegal  start  of  type  [FE]                                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Character.toLowerCase(getLastChar(),  prev);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(getLastChar(),  prev);	  int    mantissa    =    Character.toLowerCase(getLastChar());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
87	[BUG]  [BUGGY]  double  mantissa  =  Character.toLowerCase(getLastChar());  [CE]  illegal  start  of  type  [FE]                                            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  double  mantissa  =  Character.toLowerCase(getLastChar());  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	double  mantissa  =  Character.toLowerCase(getLastChar());	  int    mantissa    =    Character.toLowerCase(getLastChar());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
88	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(getLastChar()  -  1);  [CE]  illegal  start  of  type  [FE]                                              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Character.toLowerCase(getLastChar()  -  1);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(getLastChar()  -  1);	  int    mantissa    =    Character.toLowerCase(getLastChar());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
89	[BUG]  [BUGGY]  if  (Math.abs(exp)  <  10  &&  mantissa)  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(exp)  <  10  &&  mantissa)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)  <  10  &&  mantissa)  {	  if    (Math.abs(exp)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
90	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  binOp)  {  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  binOp)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  binOp)  {	  if    (Math.abs(exp)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
91	[BUG]  [BUGGY]  if  (Math.abs(exp)  <  10  &&  value)  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(exp)  <  10  &&  value)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)  <  10  &&  value)  {	  if    (Math.abs(exp)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
92	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  exp)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  exp)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  exp)  {	  if    (Math.abs(exp)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
93	[BUG]  [BUGGY]  if  (Math.abs(exp)  <  10  ||  binOp)  {  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(exp)  <  10  ||  binOp)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)  <  10  ||  binOp)  {	  if    (Math.abs(exp)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
94	[BUG]  [BUGGY]  if  (Math.abs(x)  <  10  &&  binOp)  {  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(x)  <  10  &&  binOp)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(x)  <  10  &&  binOp)  {	  if    (Math.abs(exp)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
95	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  value  <=  Math.abs(mantissa))  {  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  value  <=  Math.abs(mantissa))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  value  <=  Math.abs(mantissa))  {	  if    (Math.abs(x)    <    10    &&    value    <=    Math.abs(mantissa))    {    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
96	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  mantissa  <=  Math.abs(value))  {  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  mantissa  <=  Math.abs(value))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  mantissa  <=  Math.abs(value))  {	  if    (Math.abs(x)    <    10    &&    value    <=    Math.abs(mantissa))    {    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
97	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  mantissa  <=  Math.abs(mantissa))  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  mantissa  <=  Math.abs(mantissa))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  mantissa  <=  Math.abs(mantissa))  {	  if    (Math.abs(x)    <    10    &&    value    <=    Math.abs(mantissa))    {    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
98	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  exp  <=  Math.abs(value))  {  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  exp  <=  Math.abs(value))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  exp  <=  Math.abs(value))  {	  if    (Math.abs(x)    <    10    &&    value    <=    Math.abs(mantissa))    {    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
99	[BUG]  [BUGGY]  if  (Math.abs(exp)  <  10  &&  value  <=  Math.abs(mantissa))  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(exp)  <  10  &&  value  <=  Math.abs(mantissa))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)  <  10  &&  value  <=  Math.abs(mantissa))  {	  if    (Math.abs(x)    <    10    &&    value    <=    Math.abs(mantissa))    {    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
100	[BUG]  [BUGGY]  if  (Math.abs(x)  <  10  &&  exp  <=  Math.abs(mantissa))  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(x)  <  10  &&  exp  <=  Math.abs(mantissa))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(x)  <  10  &&  exp  <=  Math.abs(mantissa))  {	  if    (Math.abs(x)    <    10    &&    value    <=    Math.abs(mantissa))    {    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
101	[BUG]  [BUGGY]  int  mantissa  =  value  /  10  +  Math.pow(10,  exp  +  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  value  /  10  +  Math.pow(10,  exp  +  1);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  value  /  10  +  Math.pow(10,  exp  +  1);	  int    mantissa    =    value    /    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
102	[BUG]  [BUGGY]  int  mantissa  =  value  *  10  +  Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  value  *  10  +  Math.pow(10,  exp);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  value  *  10  +  Math.pow(10,  exp);	  int    mantissa    =    value    /    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
103	[BUG]  [BUGGY]  int  mantissa  =  prev  /  10  +  Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  prev  /  10  +  Math.pow(10,  exp);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  prev  /  10  +  Math.pow(10,  exp);	  int    mantissa    =    value    /    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
104	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  +  Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  long  mantissa  =  value  /  10  +  Math.pow(10,  exp);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	long  mantissa  =  value  /  10  +  Math.pow(10,  exp);	  int    mantissa    =    value    /    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
105	[BUG]  [BUGGY]  int  mantissa  =  value  /  10  +  Math.pow(10,  prev);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  value  /  10  +  Math.pow(10,  prev);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  value  /  10  +  Math.pow(10,  prev);	  int    mantissa    =    value    /    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
106	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  mantissa)  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  mantissa)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  mantissa)  {	  if    (Math.abs(value)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
107	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  value  >  binOp)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  value  >  binOp)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  value  >  binOp)  {	  if    (Math.abs(value)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
108	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  ||  binOp)  {  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  ||  binOp)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  ||  binOp)  {	  if    (Math.abs(value)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
109	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  exp  >  binOp)  {  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  exp  >  binOp)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  exp  >  binOp)  {	  if    (Math.abs(value)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
110	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  binOp  &&  mantissa  >  10)  {  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  binOp  &&  mantissa  >  10)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  binOp  &&  mantissa  >  10)  {	  if    (Math.abs(value)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
111	[BUG]  [BUGGY]  int  mantissa  =  value  -(int)Math.pow(10,  exp  +  1);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  value  -(int)Math.pow(10,  exp  +  1);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  value  -(int)Math.pow(10,  exp  +  1);	  int    mantissa    =    value    -(int)Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
112	[BUG]  [BUGGY]  long  mantissa  =  value  -(long)Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  long  mantissa  =  value  -(long)Math.pow(10,  exp);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	long  mantissa  =  value  -(long)Math.pow(10,  exp);	  int    mantissa    =    value    -(int)Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
113	[BUG]  [BUGGY]  int  mantissa  =  value  /(int)Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  value  /(int)Math.pow(10,  exp);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  value  /(int)Math.pow(10,  exp);	  int    mantissa    =    value    -(int)Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
114	[BUG]  [BUGGY]  int  mantissa  =  prev  -(int)Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  prev  -(int)Math.pow(10,  exp);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  prev  -(int)Math.pow(10,  exp);	  int    mantissa    =    value    -(int)Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
115	[BUG]  [BUGGY]  int  mantissa  =  value  -(int)Math.pow(10,  exp  -  1);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  value  -(int)Math.pow(10,  exp  -  1);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  value  -(int)Math.pow(10,  exp  -  1);	  int    mantissa    =    value    -(int)Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
116	[BUG]  [BUGGY]  char  mantissa  =  value  -(char)Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  char  mantissa  =  value  -(char)Math.pow(10,  exp);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	char  mantissa  =  value  -(char)Math.pow(10,  exp);	  int    mantissa    =    value    -(int)Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
117	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10)  {	  if    (Math.abs(mantissa)    <    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
118	[BUG]  [BUGGY]  if  (Math.abs(exp)  <  10)  {  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(exp)  <  10)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)  <  10)  {	  if    (Math.abs(mantissa)    <    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
119	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  1)  {  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  1)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  1)  {	  if    (Math.abs(mantissa)    <    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
120	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  ||  Math.abs(exp)  <  10)  {  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  ||  Math.abs(exp)  <  10)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  ||  Math.abs(exp)  <  10)  {	  if    (Math.abs(mantissa)    <    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
121	[BUG]  [BUGGY]  Integer  mantissa  =  getLastChar().intValue();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Integer  mantissa  =  getLastChar().intValue();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Integer  mantissa  =  getLastChar().intValue();	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
122	[BUG]  [BUGGY]  Long  mantissa  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Long  mantissa  =  getLastChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Long  mantissa  =  getLastChar();	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
123	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  x);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Math.pow(10,  x);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Math.pow(10,  x);	  int    mantissa    =    Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
124	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(getFirstChar());  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Character.toLowerCase(getFirstChar());  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(getFirstChar());	  int    mantissa    =    Character.toLowerCase(getLastChar());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
125	[BUG]  [BUGGY]  if  (Math.abs(x)>  10  &&  Math.abs(mantissa)  <=  Math.abs(exp))  {  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(x)>  10  &&  Math.abs(mantissa)  <=  Math.abs(exp))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(x)>  10  &&  Math.abs(mantissa)  <=  Math.abs(exp))  {	  if    (Math.abs(x)>    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	17	None	replace
126	[BUG]  [BUGGY]  if  (Math.abs(x)>  10  &&  value  <=  Math.abs(mantissa))  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(x)>  10  &&  value  <=  Math.abs(mantissa))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(x)>  10  &&  value  <=  Math.abs(mantissa))  {	  if    (Math.abs(x)>    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	17	None	replace
127	[BUG]  [BUGGY]  int  mantissa  =  value  /  10  +  Math.pow(10,  exp  -  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  value  /  10  +  Math.pow(10,  exp  -  1);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  value  /  10  +  Math.pow(10,  exp  -  1);	  int    mantissa    =    value    /    10    +    Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
128	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  mantissa  <=  Math.abs(exp))  {  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  mantissa  <=  Math.abs(exp))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  mantissa  <=  Math.abs(exp))  {	  if    (Math.abs(x)    <    10    &&    value    <=    Math.abs(mantissa))    {    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
129	[BUG]  [BUGGY]  if  (Math.abs(x)  <  10  &&  value  <=  Math.abs(value))  {  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(x)  <  10  &&  value  <=  Math.abs(value))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(x)  <  10  &&  value  <=  Math.abs(value))  {	  if    (Math.abs(x)    <    10    &&    value    <=    Math.abs(mantissa))    {    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
130	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  mantissa  <=  Math.abs(maximumFractionDigits))  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  mantissa  <=  Math.abs(maximumFractionDigits))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  mantissa  <=  Math.abs(maximumFractionDigits))  {	  if    (Math.abs(x)    <    10    &&    value    <=    Math.abs(mantissa))    {    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
131	[BUG]  [BUGGY]  double  prev  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  double  prev  =  getLastChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	double  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
132	[BUG]  [BUGGY]  String  prev  =  getLastString();  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  String  prev  =  getLastString();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	String  prev  =  getLastString();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
133	[BUG]  [BUGGY]  if  (Math.abs(exp)  <  10  &&  binOp  &&  value  <=  Integer.MIN_VALUE)  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(exp)  <  10  &&  binOp  &&  value  <=  Integer.MIN_VALUE)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(exp)  <  10  &&  binOp  &&  value  <=  Integer.MIN_VALUE)  {	  if    (Math.abs(exp)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
134	[BUG]  [BUGGY]  int  mantissa  =  Integer.toString(value  +  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Integer.toString(value  +  1);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Integer.toString(value  +  1);	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
135	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  value  <=  Long.MAX_VALUE)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  value  <=  Long.MAX_VALUE)  {	  if    (Math.abs(mantissa)    <    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
136	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  value  <=  Long.MIN_VALUE)  {  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  value  <=  Long.MIN_VALUE)  {	  if    (Math.abs(mantissa)    <    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
137	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  *  Math.pow(10,  exp))  {  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  *  Math.pow(10,  exp))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  *  Math.pow(10,  exp))  {	  if    (Math.abs(mantissa)    <    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
138	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  value  <=  127)  {  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  value  <=  127)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  value  <=  127)  {	  if    (Math.abs(mantissa)    <    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
139	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(x,  prev);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Character.toLowerCase(x,  prev);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(x,  prev);	  int    mantissa    =    Character.toLowerCase(x);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
140	[BUG]  [BUGGY]  int  mantissa  =  value  -(int)Math.pow(10,  prev);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  value  -(int)Math.pow(10,  prev);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  value  -(int)Math.pow(10,  prev);	  int    mantissa    =    value    -(int)Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
141	[BUG]  [BUGGY]  if  (Math.abs(value)  <  100  &&  Math.abs(mantissa)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  100  &&  Math.abs(mantissa)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  100  &&  Math.abs(mantissa)  <  100)  {	  if    (Math.abs(value)    <    10    &&    Math.abs(mantissa)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
142	[BUG]  [BUGGY]  double  mantissa  =  Math.pow(10,  value);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  double  mantissa  =  Math.pow(10,  value);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	double  mantissa  =  Math.pow(10,  value);	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
143	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  prev)  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  prev)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  prev)  {	  if    (Math.abs(value)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
144	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  binOp  &&  mantissa  >  0)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  binOp  &&  mantissa  >  0)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  binOp  &&  mantissa  >  0)  {	  if    (Math.abs(value)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
145	[BUG]  [BUGGY]  if  (Math.abs(mantissa)>  10  &&  value  <=  Long.MIN_VALUE)  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)>  10  &&  value  <=  Long.MIN_VALUE)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)>  10  &&  value  <=  Long.MIN_VALUE)  {	  if    (Math.abs(mantissa)>    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
146	[BUG]  [BUGGY]  if  (Math.abs(mantissa)>  10  &&  value  <=  Long.MAX_VALUE)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)>  10  &&  value  <=  Long.MAX_VALUE)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)>  10  &&  value  <=  Long.MAX_VALUE)  {	  if    (Math.abs(mantissa)>    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
147	[BUG]  [BUGGY]  if  (Math.abs(mantissa)>  10  &&  Math.abs(exp)  <=  Math.abs(value))  {  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)>  10  &&  Math.abs(exp)  <=  Math.abs(value))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)>  10  &&  Math.abs(exp)  <=  Math.abs(value))  {	  if    (Math.abs(mantissa)>    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
148	[BUG]  [BUGGY]  if  (Math.abs(value)>  10  &&  Math.abs(mantissa)  <=  Math.abs(exp))  {  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)>  10  &&  Math.abs(mantissa)  <=  Math.abs(exp))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)>  10  &&  Math.abs(mantissa)  <=  Math.abs(exp))  {	  if    (Math.abs(value)>    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
149	[BUG]  [BUGGY]  if  (Math.abs(value)>  10  &&  mantissa  <=  Long.MIN_VALUE)  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)>  10  &&  mantissa  <=  Long.MIN_VALUE)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)>  10  &&  mantissa  <=  Long.MIN_VALUE)  {	  if    (Math.abs(value)>    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
150	[BUG]  [BUGGY]  if(Math.abs(value)  ==  100)  {  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if(Math.abs(value)  ==  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if(Math.abs(value)  ==  100)  {	  if(Math.abs(value)    >>    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
151	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  Math.abs(prev)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  Math.abs(prev)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  Math.abs(prev)  <  100)  {	  if    (Math.abs(prev)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	19	None	replace
152	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  Math.abs(exp  +  1)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  Math.abs(exp  +  1)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  Math.abs(exp  +  1)  <  100)  {	  if    (Math.abs(value)    <    10    &&    Math.abs(exp)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
153	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  exp  >  1)  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  exp  >  1)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  exp  >  1)  {	  if    (Math.abs(value)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
154	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  exp  >  1)  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  exp  >  1)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  exp  >  1)  {	  if    (Math.abs(value)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
155	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  exp  >  2)  {  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  exp  >  2)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  exp  >  2)  {	  if    (Math.abs(value)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
156	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  value  <=  Math.abs(mantissa))  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  value  <=  Math.abs(mantissa))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  value  <=  Math.abs(mantissa))  {	  if    (Math.abs(mantissa)    <    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
157	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  value  <=  MAX_VALUE)  {  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  value  <=  MAX_VALUE)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  value  <=  MAX_VALUE)  {	  if    (Math.abs(mantissa)    <    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
158	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  20)  {  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  20)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  20)  {	  if    (Math.abs(mantissa)    <    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
159	[BUG]  [BUGGY]  if  (Math.abs(mantissa)>  10  &&  value  <=  Math.abs(mantissa))  {  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)>  10  &&  value  <=  Math.abs(mantissa))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)>  10  &&  value  <=  Math.abs(mantissa))  {	  if    (Math.abs(mantissa)>    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
160	[BUG]  [BUGGY]  if  (Math.abs(mantissa)>  10  &&  Math.abs(exp)  <=  Math.abs(mantissa))  {  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)>  10  &&  Math.abs(exp)  <=  Math.abs(mantissa))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)>  10  &&  Math.abs(exp)  <=  Math.abs(mantissa))  {	  if    (Math.abs(mantissa)>    10)    {    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
161	[BUG]  [BUGGY]  int  mantissa  =  Character.toLowerCase(value  -  1);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Character.toLowerCase(value  -  1);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toLowerCase(value  -  1);	  int    mantissa    =    Character.toLowerCase(value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
162	[BUG]  [BUGGY]  int  mantissa  =  Character.toUpperCase(x);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  Character.toUpperCase(x);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  Character.toUpperCase(x);	  int    mantissa    =    Character.toLowerCase(x);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
163	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  exp  +  1)  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  exp  +  1)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  exp  +  1)  {	  if    (Math.abs(exp)    <    10    &&    binOp)    {    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
164	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  100  ||  Math.abs(exp  +  1)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  100  ||  Math.abs(exp  +  1)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  100  ||  Math.abs(exp  +  1)  <  100)  {	  if    (Math.abs(mantissa)    <    100    ||    Math.abs(exp)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	16	None	replace
165	[BUG]  [BUGGY]  Integer  mantissa  =  getFirstElement();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Integer  mantissa  =  getFirstElement();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Integer  mantissa  =  getFirstElement();	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
166	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  Math.abs(exp  +  100)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  Math.abs(exp  +  100)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  Math.abs(exp  +  100)  <  100)  {	  if    (Math.abs(x)    <    10    &&    Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
167	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  ||  Math.abs(value)  <  100)  {  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  ||  Math.abs(value)  <  100)  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  ||  Math.abs(value)  <  100)  {	  if    (Math.abs(x)    <    10    &&    Math.abs(value)    <    100)    {    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
168	[BUG]  [BUGGY]  Double  prev  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Double  prev  =  getLastChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Double  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
169	[BUG]  [BUGGY]  Long  prev  =  getLastChar();  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  Long  prev  =  getLastChar();  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	Long  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
170	[BUG]  [BUGGY]  if  (Math.abs(value)  <  10  &&  exp  <=  Math.abs(mantissa))  {  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(value)  <  10  &&  exp  <=  Math.abs(mantissa))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(value)  <  10  &&  exp  <=  Math.abs(mantissa))  {	  if    (Math.abs(x)    <    10    &&    value    <=    Math.abs(mantissa))    {    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
171	[BUG]  [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  exp  <=  Math.abs(mantissa))  {  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  if  (Math.abs(mantissa)  <  10  &&  exp  <=  Math.abs(mantissa))  {  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	if  (Math.abs(mantissa)  <  10  &&  exp  <=  Math.abs(mantissa))  {	  if    (Math.abs(x)    <    10    &&    value    <=    Math.abs(mantissa))    {    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
172	[BUG]  [BUGGY]  double  mantissa  =  value  -(double)Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  double  mantissa  =  value  -(double)Math.pow(10,  exp);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	double  mantissa  =  value  -(double)Math.pow(10,  exp);	  int    mantissa    =    value    -(int)Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
173	[BUG]  [BUGGY]  int  mantissa  =  x  -(int)Math.pow(10,  exp);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]        char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;      [BUGGY]  int  mantissa  =  x  -(int)Math.pow(10,  exp);  [BUGGY]      while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	245	245	1	replace	int  mantissa  =  x  -(int)Math.pow(10,  exp);	  int    mantissa    =    value    -(int)Math.pow(10,    exp);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
