bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  mantissa  =  value  +  10;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  +  10;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  +  10;	  long    mantissa    =    value    +    10;    	non-compiled	[CE]  cannot  find  symbol  iop	35	None	replace
2	[BUG]  [BUGGY]  long  mantissa  =  prev  +  10;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  +  10;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  +  10;	  long    mantissa    =    value    +    10;    	non-compiled	[CE]  cannot  find  symbol  iop	35	None	replace
3	[BUG]  [BUGGY]  int  mantissa  =  value  /  2  +  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  2  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  2  +  1;	  int    mantissa    =    value    /    2;    	non-compiled	[CE]  cannot  find  symbol  iop	47	None	replace
4	[BUG]  [BUGGY]  int  mantissa  =  value  /  1;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  1;	  int    mantissa    =    value    /    2;    	non-compiled	[CE]  cannot  find  symbol  iop	47	None	replace
5	[BUG]  [BUGGY]  int  mantissa  =  value  /  4;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  4;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  4;	  int    mantissa    =    value    /    2;    	non-compiled	[CE]  cannot  find  symbol  iop	47	None	replace
6	[BUG]  [BUGGY]  int  mantissa  =  value  /  3;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  3;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  3;	  int    mantissa    =    value    /    2;    	non-compiled	[CE]  cannot  find  symbol  iop	47	None	replace
7	[BUG]  [BUGGY]  int  mantissa  =  value  *  2;  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  *  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  *  2;	  int    mantissa    =    value    /    2;    	non-compiled	[CE]  cannot  find  symbol  iop	47	None	replace
8	[BUG]  [BUGGY]  Integer  mantissa  =  getLastInt();  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  Integer  mantissa  =  getLastInt();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	Integer  mantissa  =  getLastInt();	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	44	None	replace
9	[BUG]  [BUGGY]  Integer  mantissa  =  getLastChar()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  Integer  mantissa  =  getLastChar()  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	Integer  mantissa  =  getLastChar()  +  1;	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	44	None	replace
10	[BUG]  [BUGGY]  Integer  mantissa  =  getLastChar()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  Integer  mantissa  =  getLastChar()  -  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	Integer  mantissa  =  getLastChar()  -  1;	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	44	None	replace
11	[BUG]  [BUGGY]  Integer  mantissa  =  getLastIntChar();  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  Integer  mantissa  =  getLastIntChar();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	Integer  mantissa  =  getLastIntChar();	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	44	None	replace
12	[BUG]  [BUGGY]  Integer  mantissa  =  getFirstChar();  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  Integer  mantissa  =  getFirstChar();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	Integer  mantissa  =  getFirstChar();	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	44	None	replace
13	[BUG]  [BUGGY]  Integer  mantissa  =  getLastChar().intValue();  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  Integer  mantissa  =  getLastChar().intValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	Integer  mantissa  =  getLastChar().intValue();	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	44	None	replace
14	[BUG]  [BUGGY]  long  mantissa  =  value  /  8  +  1;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  8  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  8  +  1;	  long    mantissa    =    value    /    8;    	non-compiled	[CE]  cannot  find  symbol  iop	42	None	replace
15	[BUG]  [BUGGY]  int  mantissa  =  Math.min(value,  mantissa);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.min(value,  mantissa);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.min(value,  mantissa);	  int    mantissa    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
16	[BUG]  [BUGGY]  int  mantissa  =  Math.min(mantissa,  value  -  1);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.min(mantissa,  value  -  1);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.min(mantissa,  value  -  1);	  int    mantissa    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
17	[BUG]  [BUGGY]  int  mantissa  =  Math.min(mantissa,  value  /  10);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.min(mantissa,  value  /  10);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.min(mantissa,  value  /  10);	  int    mantissa    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
18	[BUG]  [BUGGY]  int  mantissa  =  Math.min(mantissa,  value  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.min(mantissa,  value  +  1);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.min(mantissa,  value  +  1);	  int    mantissa    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
19	[BUG]  [BUGGY]  int  mantissa  =  Math.min(mantissa,  prev);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.min(mantissa,  prev);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.min(mantissa,  prev);	  int    mantissa    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
20	[BUG]  [BUGGY]  int  mantissa  =  Math.min(mantissa,  value  /  2);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.min(mantissa,  value  /  2);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.min(mantissa,  value  /  2);	  int    mantissa    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
21	[BUG]  [BUGGY]  int  mantissa  =  prev.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  prev.doubleValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  prev.doubleValue();	  int    mantissa    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	30	None	replace
22	[BUG]  [BUGGY]  long  mantissa  =  value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value.doubleValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value.doubleValue();	  int    mantissa    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	30	None	replace
23	[BUG]  [BUGGY]  int  mantissa  =  value.doubleValue()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value.doubleValue()  -  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value.doubleValue()  -  1;	  int    mantissa    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	30	None	replace
24	[BUG]  [BUGGY]  double  mantissa  =  value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  double  mantissa  =  value.doubleValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	double  mantissa  =  value.doubleValue();	  int    mantissa    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	30	None	replace
25	[BUG]  [BUGGY]  int  mantissa  =  value.doubleValue()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value.doubleValue()  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value.doubleValue()  +  1;	  int    mantissa    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	30	None	replace
26	[BUG]  [BUGGY]  char  mantissa  =  value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  char  mantissa  =  value.doubleValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	char  mantissa  =  value.doubleValue();	  int    mantissa    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	30	None	replace
27	[BUG]  [BUGGY]  long  mantissa  =  prev  /  2  *  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  /  2  *  10  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  /  2  *  10  +  1;	  long    mantissa    =    value    /    2    *    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
28	[BUG]  [BUGGY]  long  mantissa  =  value  /  2  *  8  +  1;  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  2  *  8  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  2  *  8  +  1;	  long    mantissa    =    value    /    2    *    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
29	[BUG]  [BUGGY]  long  mantissa  =  value  *  2  *  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  2  *  10  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  2  *  10  +  1;	  long    mantissa    =    value    /    2    *    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
30	[BUG]  [BUGGY]  int  mantissa  =  value  /  2  *  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  2  *  10  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  2  *  10  +  1;	  long    mantissa    =    value    /    2    *    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
31	[BUG]  [BUGGY]  long  mantissa  =  value  /  3  +  1;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  3  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  3  +  1;	  long    mantissa    =    value    /    3;    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
32	[BUG]  [BUGGY]  int  mantissa  =  value  -  2;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  -  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  -  2;	  long    mantissa    =    value    -    2;    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
33	[BUG]  [BUGGY]  long  mantissa  =  value  *  2;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  2;	  long    mantissa    =    value    -    2;    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
34	[BUG]  [BUGGY]  int  mantissa  =  prev  /  100.0;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  prev  /  100.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  prev  /  100.0;	  long    mantissa    =    prev    /    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
35	[BUG]  [BUGGY]  double  mantissa  =  prev  /  100.0;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  double  mantissa  =  prev  /  100.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	double  mantissa  =  prev  /  100.0;	  long    mantissa    =    prev    /    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
36	[BUG]  [BUGGY]  Long  mantissa  =  value  /  100.0;  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  Long  mantissa  =  value  /  100.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	Long  mantissa  =  value  /  100.0;	  long    mantissa    =    prev    /    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
37	[BUG]  [BUGGY]  int  mantissa  =  prev.longValue();  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  prev.longValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  prev.longValue();	  int    mantissa    =    value.longValue();    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
38	[BUG]  [BUGGY]  long  mantissa  =  value.longValue();  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value.longValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value.longValue();	  int    mantissa    =    value.longValue();    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
39	[BUG]  [BUGGY]  int  mantissa  =  value.longValue()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value.longValue()  -  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value.longValue()  -  1;	  int    mantissa    =    value.longValue();    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
40	[BUG]  [BUGGY]  int  mantissa  =  value.longValue()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value.longValue()  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value.longValue()  +  1;	  int    mantissa    =    value.longValue();    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
41	[BUG]  [BUGGY]  int  mantissa  =  value.intValue();  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value.intValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value.intValue();	  int    mantissa    =    value.longValue();    	non-compiled	[CE]  cannot  find  symbol  iop	29	None	replace
42	[BUG]  [BUGGY]  int  mantissa  =  value  -  1L;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  -  1L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  -  1L;	  int    mantissa    =    value    -    1;    	non-compiled	[CE]  cannot  find  symbol  iop	17	None	replace
43	[BUG]  [BUGGY]  int  mantissa  =  prev  -  1;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  prev  -  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  prev  -  1;	  int    mantissa    =    value    -    1;    	non-compiled	[CE]  cannot  find  symbol  iop	17	None	replace
44	[BUG]  [BUGGY]  int  mantissa  =  value  -  1  +  1;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  -  1  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  -  1  +  1;	  int    mantissa    =    value    -    1;    	non-compiled	[CE]  cannot  find  symbol  iop	17	None	replace
45	[BUG]  [BUGGY]  int  mantissa  =  prev  /  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  prev  /  10  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  prev  /  10  +  1;	  long    mantissa    =    prev    /    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	33	None	replace
46	[BUG]  [BUGGY]  double  mantissa  =  prev  /  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  double  mantissa  =  prev  /  10  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	double  mantissa  =  prev  /  10  +  1;	  long    mantissa    =    prev    /    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	33	None	replace
47	[BUG]  [BUGGY]  Long  mantissa  =  value  /  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  Long  mantissa  =  value  /  10  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	Long  mantissa  =  value  /  10  +  1;	  long    mantissa    =    prev    /    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	33	None	replace
48	[BUG]  [BUGGY]  long  mantissa  =  value  /  1L;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  1L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  1L;	  long    mantissa    =    value    /    1;    	non-compiled	[CE]  cannot  find  symbol  iop	2	None	replace
49	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  *  2;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0  *  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  *  2;	  long    mantissa    =    value    /    100.0    +    2;    	non-compiled	[CE]  cannot  find  symbol  iop	41	None	replace
50	[BUG]  [BUGGY]  int  mantissa  =  value  /  100.0  +  2;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  100.0  +  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  100.0  +  2;	  long    mantissa    =    value    /    100.0    +    2;    	non-compiled	[CE]  cannot  find  symbol  iop	41	None	replace
51	[BUG]  [BUGGY]  long  mantissa  =  value  *  100.0  +  2;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  100.0  +  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  100.0  +  2;	  long    mantissa    =    value    /    100.0    +    2;    	non-compiled	[CE]  cannot  find  symbol  iop	41	None	replace
52	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  /  2;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0  /  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  /  2;	  long    mantissa    =    value    /    100.0    +    2;    	non-compiled	[CE]  cannot  find  symbol  iop	41	None	replace
53	[BUG]  [BUGGY]  long  mantissa  =  prev  *  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  *  10  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  *  10  +  1;	  long    mantissa    =    value    *    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	34	None	replace
54	[BUG]  [BUGGY]  long  mantissa  =  value  *  10  /  1;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  10  /  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  10  /  1;	  long    mantissa    =    value    *    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	34	None	replace
55	[BUG]  [BUGGY]  int  mantissa  =  value  *  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  *  10  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  *  10  +  1;	  long    mantissa    =    value    *    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	34	None	replace
56	[BUG]  [BUGGY]  long  mantissa  =  value  *  10  +  2;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  10  +  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  10  +  2;	  long    mantissa    =    value    *    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	34	None	replace
57	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  *  1;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0  *  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  *  1;	  long    mantissa    =    value    /    100.0    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
58	[BUG]  [BUGGY]  long  mantissa  =  prev  /  100.0  +  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  /  100.0  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  /  100.0  +  1;	  long    mantissa    =    value    /    100.0    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
59	[BUG]  [BUGGY]  int  mantissa  =  value  /  100.0  +  1;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  100.0  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  100.0  +  1;	  long    mantissa    =    value    /    100.0    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
60	[BUG]  [BUGGY]  long  mantissa  =  value  *  100.0  +  1;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  100.0  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  100.0  +  1;	  long    mantissa    =    value    /    100.0    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
61	[BUG]  [BUGGY]  long  mantissa  =  value  /  1024;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  1024;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  1024;	  long    mantissa    =    value    /    10L;    	non-compiled	[CE]  cannot  find  symbol  iop	13	None	replace
62	[BUG]  [BUGGY]  long  mantissa  =  value  /  1024L;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  1024L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  1024L;	  long    mantissa    =    value    /    10L;    	non-compiled	[CE]  cannot  find  symbol  iop	13	None	replace
63	[BUG]  [BUGGY]  long  mantissa  =  value  /  10L  +  1;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  10L  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10L  +  1;	  long    mantissa    =    value    /    10L;    	non-compiled	[CE]  cannot  find  symbol  iop	13	None	replace
64	[BUG]  [BUGGY]  int  mantissa  =  value  +  2;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  +  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  +  2;	  long    mantissa    =    value    +    2;    	non-compiled	[CE]  cannot  find  symbol  iop	36	None	replace
65	[BUG]  [BUGGY]  long  mantissa  =  prev  +  2;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  +  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  +  2;	  long    mantissa    =    value    +    2;    	non-compiled	[CE]  cannot  find  symbol  iop	36	None	replace
66	[BUG]  [BUGGY]  int  mantissa  =  value  /  10L;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  10L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  10L;	  int    mantissa    =    value    /    10;    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
67	[BUG]  [BUGGY]  int  mantissa  =  value  /  10  +  2;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  10  +  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  10  +  2;	  int    mantissa    =    value    /    10;    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
68	[BUG]  [BUGGY]  int  mantissa  =  value  *  10;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  *  10;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  *  10;	  int    mantissa    =    value    /    10;    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
69	[BUG]  [BUGGY]  int  mantissa  =  prev  /  10;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  prev  /  10;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  prev  /  10;	  int    mantissa    =    value    /    10;    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
70	[BUG]  [BUGGY]  int  mantissa  =  value  +  1L;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  +  1L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  +  1L;	  long    mantissa    =    value    +    1L;    	non-compiled	[CE]  cannot  find  symbol  iop	38	None	replace
71	[BUG]  [BUGGY]  long  mantissa  =  value  +  10L;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  +  10L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  +  10L;	  long    mantissa    =    value    +    1L;    	non-compiled	[CE]  cannot  find  symbol  iop	38	None	replace
72	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  *  10.0;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0  *  10.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  *  10.0;	  long    mantissa    =    value    /    100.0    +    10.0;    	non-compiled	[CE]  cannot  find  symbol  iop	40	None	replace
73	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  +  20.0;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0  +  20.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  +  20.0;	  long    mantissa    =    value    /    100.0    +    10.0;    	non-compiled	[CE]  cannot  find  symbol  iop	40	None	replace
74	[BUG]  [BUGGY]  long  mantissa  =  prev  /  100.0  +  10.0;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  /  100.0  +  10.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  /  100.0  +  10.0;	  long    mantissa    =    value    /    100.0    +    10.0;    	non-compiled	[CE]  cannot  find  symbol  iop	40	None	replace
75	[BUG]  [BUGGY]  long  mantissa  =  value  *  100.0  +  10.0;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  100.0  +  10.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  100.0  +  10.0;	  long    mantissa    =    value    /    100.0    +    10.0;    	non-compiled	[CE]  cannot  find  symbol  iop	40	None	replace
76	[BUG]  [BUGGY]  int  mantissa  =  value  /  100.0  +  10.0;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  100.0  +  10.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  100.0  +  10.0;	  long    mantissa    =    value    /    100.0    +    10.0;    	non-compiled	[CE]  cannot  find  symbol  iop	40	None	replace
77	[BUG]  [BUGGY]  long  mantissa  =  value  *  10  +  1L;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  10  +  1L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  10  +  1L;	  long    mantissa    =    value    /    10    +    1L;    	non-compiled	[CE]  cannot  find  symbol  iop	39	None	replace
78	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  *  1L;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  10  *  1L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  *  1L;	  long    mantissa    =    value    /    10    +    1L;    	non-compiled	[CE]  cannot  find  symbol  iop	39	None	replace
79	[BUG]  [BUGGY]  int  mantissa  =  value  /  10  +  1L;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  10  +  1L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  10  +  1L;	  long    mantissa    =    value    /    10    +    1L;    	non-compiled	[CE]  cannot  find  symbol  iop	39	None	replace
80	[BUG]  [BUGGY]  char  mantissa  =  prev;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  char  mantissa  =  prev;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	char  mantissa  =  prev;	  int    mantissa    =    prev;    	non-compiled	[CE]  cannot  find  symbol  iop	28	None	replace
81	[BUG]  [BUGGY]  double  mantissa  =  prev;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  double  mantissa  =  prev;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	double  mantissa  =  prev;	  int    mantissa    =    prev;    	non-compiled	[CE]  cannot  find  symbol  iop	28	None	replace
82	[BUG]  [BUGGY]  long  mantissa  =  prev;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev;	  int    mantissa    =    prev;    	non-compiled	[CE]  cannot  find  symbol  iop	28	None	replace
83	[BUG]  [BUGGY]  int  mantissa  =  x;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  x;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  x;	  int    mantissa    =    prev;    	non-compiled	[CE]  cannot  find  symbol  iop	28	None	replace
84	[BUG]  [BUGGY]  Integer  mantissa  =  prev;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  Integer  mantissa  =  prev;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	Integer  mantissa  =  prev;	  int    mantissa    =    prev;    	non-compiled	[CE]  cannot  find  symbol  iop	28	None	replace
85	[BUG]  [BUGGY]  int  mantissa  =  Integer.toString(value  -  1);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Integer.toString(value  -  1);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Integer.toString(value  -  1);	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
86	[BUG]  [BUGGY]  int  mantissa  =  Integer.toString(value)+  1;  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Integer.toString(value)+  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Integer.toString(value)+  1;	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
87	[BUG]  [BUGGY]  int  mantissa  =  Integer.toString(value  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Integer.toString(value  +  1);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Integer.toString(value  +  1);	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
88	[BUG]  [BUGGY]  int  mantissa  =  Integer.toString(value  /  10);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Integer.toString(value  /  10);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Integer.toString(value  /  10);	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
89	[BUG]  [BUGGY]  long  mantissa  =  Integer.toString(value);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  Integer.toString(value);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  Integer.toString(value);	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
90	[BUG]  [BUGGY]  int  mantissa  =  Integer.toString(value)-  1;  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Integer.toString(value)-  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Integer.toString(value)-  1;	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
91	[BUG]  [BUGGY]  long  mantissa  =  value  /  1  +  1;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  1  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  1  +  1;	  long    mantissa    =    value    -    1    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	48	None	replace
92	[BUG]  [BUGGY]  long  mantissa  =  value  -  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  -  10  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  -  10  +  1;	  long    mantissa    =    value    -    1    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	48	None	replace
93	[BUG]  [BUGGY]  long  mantissa  =  prev  -  1  +  1;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  -  1  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  -  1  +  1;	  long    mantissa    =    value    -    1    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	48	None	replace
94	[BUG]  [BUGGY]  long  mantissa  =  value  -  1L  +  1;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  -  1L  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  -  1L  +  1;	  long    mantissa    =    value    -    1    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	48	None	replace
95	[BUG]  [BUGGY]  int  mantissa  =  getLastChar()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  getLastChar()  -  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  getLastChar()  -  1;	  int    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
96	[BUG]  [BUGGY]  int  mantissa  =  getLastChar()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  getLastChar()  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  getLastChar()  +  1;	  int    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
97	[BUG]  [BUGGY]  long  mantissa  =  getLastChar();  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  getLastChar();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  getLastChar();	  int    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
98	[BUG]  [BUGGY]  char  mantissa  =  getLastChar();  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  char  mantissa  =  getLastChar();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	char  mantissa  =  getLastChar();	  int    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
99	[BUG]  [BUGGY]  int  mantissa  =  getLastChar()  -  value;  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  getLastChar()  -  value;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  getLastChar()  -  value;	  int    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
100	[BUG]  [BUGGY]  int  mantissa  =  Math.abs(value  /  10);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.abs(value  /  10);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.abs(value  /  10);	  int    mantissa    =    Math.abs(value);    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
101	[BUG]  [BUGGY]  int  mantissa  =  Math.abs(value  -  1);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.abs(value  -  1);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.abs(value  -  1);	  int    mantissa    =    Math.abs(value);    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
102	[BUG]  [BUGGY]  int  mantissa  =  Math.abs(value  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.abs(value  +  1);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.abs(value  +  1);	  int    mantissa    =    Math.abs(value);    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
103	[BUG]  [BUGGY]  long  mantissa  =  Math.abs(value);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  Math.abs(value);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  Math.abs(value);	  int    mantissa    =    Math.abs(value);    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
104	[BUG]  [BUGGY]  int  mantissa  =  Math.abs(value  /  2);  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.abs(value  /  2);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.abs(value  /  2);	  int    mantissa    =    Math.abs(value);    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
105	[BUG]  [BUGGY]  int  mantissa  =  Math.abs(value  /  10  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.abs(value  /  10  +  1);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.abs(value  /  10  +  1);	  int    mantissa    =    Math.abs(value);    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
106	[BUG]  [BUGGY]  int  mantissa  =  Math.abs(value  -  10);  [CE]  cannot  find  symbol  iop  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.abs(value  -  10);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.abs(value  -  10);	  int    mantissa    =    Math.abs(value);    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
107	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  double  mantissa  =  getLastChar()  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	double  mantissa  =  getLastChar()  +  1;	  double    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	11	None	replace
108	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  -  value;  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  double  mantissa  =  getLastChar()  -  value;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	double  mantissa  =  getLastChar()  -  value;	  double    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	11	None	replace
109	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  double  mantissa  =  getLastChar()  -  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	double  mantissa  =  getLastChar()  -  1;	  double    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	11	None	replace
110	[BUG]  [BUGGY]  double  mantissa  =  getFirstChar();  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  double  mantissa  =  getFirstChar();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	double  mantissa  =  getFirstChar();	  double    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	11	None	replace
111	[BUG]  [BUGGY]  long  mantissa  =  value  *  100.0  /  100.0;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  100.0  /  100.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  100.0  /  100.0;	  long    mantissa    =    value    *    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
112	[BUG]  [BUGGY]  int  mantissa  =  value  *  100.0;  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  *  100.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  *  100.0;	  long    mantissa    =    value    *    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
113	[BUG]  [BUGGY]  long  mantissa  =  prev  *  100.0;  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  *  100.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  *  100.0;	  long    mantissa    =    value    *    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
114	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  *  2;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  10  *  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  *  2;	  long    mantissa    =    value    /    10    *    1;    	non-compiled	[CE]  cannot  find  symbol  iop	31	None	replace
115	[BUG]  [BUGGY]  long  mantissa  =  value  /  10L  *  1;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  10L  *  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10L  *  1;	  long    mantissa    =    value    /    10    *    1;    	non-compiled	[CE]  cannot  find  symbol  iop	31	None	replace
116	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  *  4;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  10  *  4;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  *  4;	  long    mantissa    =    value    /    10    *    1;    	non-compiled	[CE]  cannot  find  symbol  iop	31	None	replace
117	[BUG]  [BUGGY]  long  mantissa  =  prev  /  10  *  1;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  /  10  *  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  /  10  *  1;	  long    mantissa    =    value    /    10    *    1;    	non-compiled	[CE]  cannot  find  symbol  iop	31	None	replace
118	[BUG]  [BUGGY]  int  mantissa  =  value  /  100.0  *  2;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  100.0  *  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  100.0  *  2;	  int    mantissa    =    value    /    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
119	[BUG]  [BUGGY]  int  mantissa  =  value  /  100.0L;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  100.0L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  100.0L;	  int    mantissa    =    value    /    100.0;    	non-compiled	[CE]  ';'  expected	22	None	replace
120	[BUG]  [BUGGY]  int  mantissa  =(int)Math.floor(value  /  10);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.floor(value  /  10);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.floor(value  /  10);	  int    mantissa    =(int)Math.floor(value);    	non-compiled	[CE]  cannot  find  symbol  iop	46	None	replace
121	[BUG]  [BUGGY]  int  mantissa  =(int)Math.floor(value  -  1);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.floor(value  -  1);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.floor(value  -  1);	  int    mantissa    =(int)Math.floor(value);    	non-compiled	[CE]  cannot  find  symbol  iop	46	None	replace
122	[BUG]  [BUGGY]  int  mantissa  =(int)Math.floor(value,  value);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.floor(value,  value);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.floor(value,  value);	  int    mantissa    =(int)Math.floor(value);    	non-compiled	[CE]  cannot  find  symbol  iop	46	None	replace
123	[BUG]  [BUGGY]  int  mantissa  =(int)Math.floor(value  +  1);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.floor(value  +  1);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.floor(value  +  1);	  int    mantissa    =(int)Math.floor(value);    	non-compiled	[CE]  cannot  find  symbol  iop	46	None	replace
124	[BUG]  [BUGGY]  int  mantissa  =(int)Math.ceil(value);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.ceil(value);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.ceil(value);	  int    mantissa    =(int)Math.floor(value);    	non-compiled	[CE]  cannot  find  symbol  iop	46	None	replace
125	[BUG]  [BUGGY]  int  mantissa  =(int)Math.floor(value  -  value);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.floor(value  -  value);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.floor(value  -  value);	  int    mantissa    =(int)Math.floor(value);    	non-compiled	[CE]  cannot  find  symbol  iop	46	None	replace
126	[BUG]  [BUGGY]  long  mantissa  =  prev  *  10;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  *  10;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  *  10;	  long    mantissa    =    value    *    10;    	non-compiled	[CE]  cannot  find  symbol  iop	15	None	replace
127	[BUG]  [BUGGY]  long  mantissa  =  value  *  10L;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  10L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  10L;	  long    mantissa    =    value    *    10;    	non-compiled	[CE]  cannot  find  symbol  iop	15	None	replace
128	[BUG]  [BUGGY]  int  mantissa  =  prev  +  1;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  prev  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  prev  +  1;	  int    mantissa    =    value    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	27	None	replace
129	[BUG]  [BUGGY]  int  mantissa  =  value  +  3;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  +  3;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  +  3;	  int    mantissa    =    value    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	27	None	replace
130	[BUG]  [BUGGY]  int  mantissa  =  value  /  10  *  1;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  10  *  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  10  *  1;	  int    mantissa    =    value    /    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
131	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  +  4;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  10  +  4;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  +  4;	  long    mantissa    =    value    /    10    +    2;    	non-compiled	[CE]  cannot  find  symbol  iop	14	None	replace
132	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  +  3;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  10  +  3;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  +  3;	  long    mantissa    =    value    /    10    +    2;    	non-compiled	[CE]  cannot  find  symbol  iop	14	None	replace
133	[BUG]  [BUGGY]  long  mantissa  =  value  /  4  +  1;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  4  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  4  +  1;	  long    mantissa    =    value    /    4;    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
134	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0f;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0f;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0f;	  long    mantissa    =    value    /    100.0L;    	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
135	[BUG]  [BUGGY]  long  mantissa  =  value  /  2  *  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  2  *  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  2  *  1;	  long    mantissa    =    value    /    2    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
136	[BUG]  [BUGGY]  long  mantissa  =  value  *  2  +  1;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  2  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  2  +  1;	  long    mantissa    =    value    /    2    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
137	[BUG]  [BUGGY]  long  mantissa  =  prev  /  2  +  1;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  /  2  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  /  2  +  1;	  long    mantissa    =    value    /    2    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
138	[BUG]  [BUGGY]  long  mantissa  =  value  /  2  *  1  +  1;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  2  *  1  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  2  *  1  +  1;	  long    mantissa    =    value    /    2    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
139	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  value  -  1);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.pow(10,  value  -  1);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.pow(10,  value  -  1);	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
140	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  value  +  1);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.pow(10,  value  +  1);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.pow(10,  value  +  1);	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
141	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  value  /  10);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.pow(10,  value  /  10);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.pow(10,  value  /  10);	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
142	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  value  -  10);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.pow(10,  value  -  10);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.pow(10,  value  -  10);	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
143	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  prev);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.pow(10,  prev);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.pow(10,  prev);	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
144	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  value  *  10);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.pow(10,  value  *  10);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.pow(10,  value  *  10);	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
145	[BUG]  [BUGGY]  long  mantissa  =  value  *  3;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  3;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  3;	  long    mantissa    =    value    +    3;    	non-compiled	[CE]  cannot  find  symbol  iop	43	None	replace
146	[BUG]  [BUGGY]  long  mantissa  =  prev  +  3;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  +  3;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  +  3;	  long    mantissa    =    value    +    3;    	non-compiled	[CE]  cannot  find  symbol  iop	43	None	replace
147	[BUG]  [BUGGY]  long  mantissa  =  value  +  4;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  +  4;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  +  4;	  long    mantissa    =    value    +    3;    	non-compiled	[CE]  cannot  find  symbol  iop	43	None	replace
148	[BUG]  [BUGGY]  double  mantissa  =  prev  -  1;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  double  mantissa  =  prev  -  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	double  mantissa  =  prev  -  1;	  long    mantissa    =    prev    -    1;    	non-compiled	[CE]  cannot  find  symbol  iop	19	None	replace
149	[BUG]  [BUGGY]  char  mantissa  =  prev  -  1;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  char  mantissa  =  prev  -  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	char  mantissa  =  prev  -  1;	  long    mantissa    =    prev    -    1;    	non-compiled	[CE]  cannot  find  symbol  iop	19	None	replace
150	[BUG]  [BUGGY]  Long  mantissa  =  value  -  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  Long  mantissa  =  value  -  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	Long  mantissa  =  value  -  1;	  long    mantissa    =    prev    -    1;    	non-compiled	[CE]  cannot  find  symbol  iop	19	None	replace
151	[BUG]  [BUGGY]  int  mantissa  =  getFirstChar()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  getFirstChar()  -  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  getFirstChar()  -  1;	  int    mantissa    =    getFirstChar();    	non-compiled	[CE]  cannot  find  symbol  iop	12	None	replace
152	[BUG]  [BUGGY]  char  mantissa  =  getFirstChar();  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  char  mantissa  =  getFirstChar();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	char  mantissa  =  getFirstChar();	  int    mantissa    =    getFirstChar();    	non-compiled	[CE]  cannot  find  symbol  iop	12	None	replace
153	[BUG]  [BUGGY]  long  mantissa  =  getFirstChar();  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  getFirstChar();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  getFirstChar();	  int    mantissa    =    getFirstChar();    	non-compiled	[CE]  cannot  find  symbol  iop	12	None	replace
154	[BUG]  [BUGGY]  int  mantissa  =  getFirstChar()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  getFirstChar()  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  getFirstChar()  +  1;	  int    mantissa    =    getFirstChar();    	non-compiled	[CE]  cannot  find  symbol  iop	12	None	replace
155	[BUG]  [BUGGY]  int  mantissa  =  value  -  10;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  -  10;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  -  10;	  long    mantissa    =    value    -    10;    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
156	[BUG]  [BUGGY]  double  mantissa  =  prev  +  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  double  mantissa  =  prev  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	double  mantissa  =  prev  +  1;	  long    mantissa    =    prev    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	37	None	replace
157	[BUG]  [BUGGY]  char  mantissa  =  prev  +  1;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  char  mantissa  =  prev  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	char  mantissa  =  prev  +  1;	  long    mantissa    =    prev    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	37	None	replace
158	[BUG]  [BUGGY]  int  mantissa  =(int)Math.pow(10,  value  -  1);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.pow(10,  value  -  1);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.pow(10,  value  -  1);	  int    mantissa    =(int)Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	45	None	replace
159	[BUG]  [BUGGY]  int  mantissa  =(int)Math.pow(10,  value  +  1);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.pow(10,  value  +  1);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.pow(10,  value  +  1);	  int    mantissa    =(int)Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	45	None	replace
160	[BUG]  [BUGGY]  int  mantissa  =(int)Math.pow(10,  value  /  10);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.pow(10,  value  /  10);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.pow(10,  value  /  10);	  int    mantissa    =(int)Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	45	None	replace
161	[BUG]  [BUGGY]  int  mantissa  =(int)Math.pow(10,  prev);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.pow(10,  prev);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.pow(10,  prev);	  int    mantissa    =(int)Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	45	None	replace
162	[BUG]  [BUGGY]  int  mantissa  =(int)Math.pow(10,  value  -  10);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.pow(10,  value  -  10);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.pow(10,  value  -  10);	  int    mantissa    =(int)Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	45	None	replace
163	[BUG]  [BUGGY]  int  mantissa  =(int)Math.pow(10,  value  *  10);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.pow(10,  value  *  10);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.pow(10,  value  *  10);	  int    mantissa    =(int)Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	45	None	replace
164	[BUG]  [BUGGY]  double  mantissa  =  getLastChar().doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  double  mantissa  =  getLastChar().doubleValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	double  mantissa  =  getLastChar().doubleValue();	  double    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	11	None	replace
165	[BUG]  [BUGGY]  double  mantissa  =  getLastChar()  +  value;  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  double  mantissa  =  getLastChar()  +  value;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	double  mantissa  =  getLastChar()  +  value;	  double    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	11	None	replace
166	[BUG]  [BUGGY]  long  mantissa  =  prev  +  1L;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  +  1L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  +  1L;	  long    mantissa    =    prev    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	37	None	replace
167	[BUG]  [BUGGY]  long  mantissa  =  prev  +  1  -  value;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  +  1  -  value;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  +  1  -  value;	  long    mantissa    =    prev    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	37	None	replace
168	[BUG]  [BUGGY]  Long  mantissa  =  value  +  1;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  Long  mantissa  =  value  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	Long  mantissa  =  value  +  1;	  long    mantissa    =    prev    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	37	None	replace
169	[BUG]  [BUGGY]  int  mantissa  =(int)Math.pow(10,  value  -  prev);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.pow(10,  value  -  prev);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.pow(10,  value  -  prev);	  int    mantissa    =(int)Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	45	None	replace
170	[BUG]  [BUGGY]  int  mantissa  =(int)Math.pow(10,  x);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.pow(10,  x);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.pow(10,  x);	  int    mantissa    =(int)Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	45	None	replace
171	[BUG]  [BUGGY]  int  mantissa  =  x.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  x.doubleValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  x.doubleValue();	  int    mantissa    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	30	None	replace
172	[BUG]  [BUGGY]  int  mantissa  =  value  /  100.0  +  4;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  100.0  +  4;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  100.0  +  4;	  int    mantissa    =    value    /    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
173	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  +  8;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  10  +  8;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  +  8;	  long    mantissa    =    value    /    10    +    2;    	non-compiled	[CE]  cannot  find  symbol  iop	14	None	replace
174	[BUG]  [BUGGY]  long  mantissa  =  value  /  2  *  4  +  1;  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  2  *  4  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  2  *  4  +  1;	  long    mantissa    =    value    /    2    *    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
175	[BUG]  [BUGGY]  long  mantissa  =  value  /  2  *  1000  +  1;  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  2  *  1000  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  2  *  1000  +  1;	  long    mantissa    =    value    /    2    *    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
176	[BUG]  [BUGGY]  long  mantissa  =  value  /  2  *  12  +  1;  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  2  *  12  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  2  *  12  +  1;	  long    mantissa    =    value    /    2    *    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
177	[BUG]  [BUGGY]  int  mantissa  =  Math.abs(value  -  prev);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.abs(value  -  prev);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.abs(value  -  prev);	  int    mantissa    =    Math.abs(value);    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
178	[BUG]  [BUGGY]  long  mantissa  =  value  *  100.0  -  1;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  100.0  -  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  100.0  -  1;	  long    mantissa    =    value    *    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
179	[BUG]  [BUGGY]  int  mantissa  =(int)Math.floor(value  /  value);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.floor(value  /  value);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.floor(value  /  value);	  int    mantissa    =(int)Math.floor(value);    	non-compiled	[CE]  cannot  find  symbol  iop	46	None	replace
180	[BUG]  [BUGGY]  int  mantissa  =(int)Math.floor(value,  x);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =(int)Math.floor(value,  x);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.floor(value,  x);	  int    mantissa    =(int)Math.floor(value);    	non-compiled	[CE]  cannot  find  symbol  iop	46	None	replace
181	[BUG]  [BUGGY]  int  mantissa  =  Integer.toString(value  /  2);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Integer.toString(value  /  2);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Integer.toString(value  /  2);	  int    mantissa    =    Integer.toString(value);    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
182	[BUG]  [BUGGY]  int  mantissa  =  Math.min(value,  value);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.min(value,  value);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.min(value,  value);	  int    mantissa    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
183	[BUG]  [BUGGY]  long  mantissa  =  prev  /  10  +  1  +  1;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  /  10  +  1  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  /  10  +  1  +  1;	  long    mantissa    =    prev    /    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	33	None	replace
184	[BUG]  [BUGGY]  long  mantissa  =  prev  /  10  +  2;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  /  10  +  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  /  10  +  2;	  long    mantissa    =    prev    /    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	33	None	replace
185	[BUG]  [BUGGY]  long  mantissa  =  value  -  2  +  1;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  -  2  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  -  2  +  1;	  long    mantissa    =    value    -    2;    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
186	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  value)-  1;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.pow(10,  value)-  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.pow(10,  value)-  1;	  int    mantissa    =    Math.pow(10,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
187	[BUG]  [BUGGY]  long  mantissa  =  prev  -  1L;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  -  1L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  -  1L;	  long    mantissa    =    prev    -    1;    	non-compiled	[CE]  cannot  find  symbol  iop	19	None	replace
188	[BUG]  [BUGGY]  int  mantissa  =  prev  /  2;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  prev  /  2;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  prev  /  2;	  int    mantissa    =    value    /    2;    	non-compiled	[CE]  cannot  find  symbol  iop	47	None	replace
189	[BUG]  [BUGGY]  long  mantissa  =  prev  /  100.0  +  value;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  prev  /  100.0  +  value;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  /  100.0  +  value;	  long    mantissa    =    prev    /    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
190	[BUG]  [BUGGY]  int  mantissa  =  value  /  10  +  3;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  10  +  3;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  10  +  3;	  int    mantissa    =    value    /    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
191	[BUG]  [BUGGY]  long  mantissa  =  value  *  8;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  8;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  8;	  long    mantissa    =    value    *    10;    	non-compiled	[CE]  cannot  find  symbol  iop	15	None	replace
192	[BUG]  [BUGGY]  long  mantissa  =  value  *  1000;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  1000;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  1000;	  long    mantissa    =    value    *    10;    	non-compiled	[CE]  cannot  find  symbol  iop	15	None	replace
193	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0L  +  10.0;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0L  +  10.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0L  +  10.0;	  long    mantissa    =    value    /    100.0L;    	non-compiled	[CE]  ';'  expected	23	None	replace
194	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  *  1  +  1;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  10  *  1  +  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  *  1  +  1;	  long    mantissa    =    value    /    10    *    1;    	non-compiled	[CE]  cannot  find  symbol  iop	31	None	replace
195	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  *  8;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  10  *  8;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  *  8;	  long    mantissa    =    value    /    10    *    1;    	non-compiled	[CE]  cannot  find  symbol  iop	31	None	replace
196	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  *  12;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  10  *  12;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  *  12;	  long    mantissa    =    value    /    10    *    1;    	non-compiled	[CE]  cannot  find  symbol  iop	31	None	replace
197	[BUG]  [BUGGY]  long  mantissa  =  value  /  2  +  1L;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  2  +  1L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  2  +  1L;	  long    mantissa    =    value    /    2    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
198	[BUG]  [BUGGY]  int  mantissa  =  getFirstChar().length;  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  getFirstChar().length;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  getFirstChar().length;	  int    mantissa    =    getFirstChar();    	non-compiled	[CE]  cannot  find  symbol  iop	12	None	replace
199	[BUG]  [BUGGY]  long  mantissa  =  value  +  8;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  +  8;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  +  8;	  long    mantissa    =    value    +    10;    	non-compiled	[CE]  cannot  find  symbol  iop	35	None	replace
200	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  +  1L;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0  +  1L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  +  1L;	  long    mantissa    =    value    /    100.0    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
201	[BUG]  [BUGGY]  long  mantissa  =  value  -  10L;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  -  10L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  -  10L;	  long    mantissa    =    value    -    10;    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
202	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  +  10.0  +  10.0;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0  +  10.0  +  10.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  +  10.0  +  10.0;	  long    mantissa    =    value    /    100.0    +    10.0;    	non-compiled	[CE]  cannot  find  symbol  iop	40	None	replace
203	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  +  120.0;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0  +  120.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  +  120.0;	  long    mantissa    =    value    /    100.0    +    10.0;    	non-compiled	[CE]  cannot  find  symbol  iop	40	None	replace
204	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  +  110.0;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0  +  110.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  +  110.0;	  long    mantissa    =    value    /    100.0    +    10.0;    	non-compiled	[CE]  cannot  find  symbol  iop	40	None	replace
205	[BUG]  [BUGGY]  Integer  mantissa  =  getLastChar().doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  Integer  mantissa  =  getLastChar().doubleValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	Integer  mantissa  =  getLastChar().doubleValue();	  Integer    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	44	None	replace
206	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  +  1L  +  1L;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  10  +  1L  +  1L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  +  1L  +  1L;	  long    mantissa    =    value    /    10    +    1L;    	non-compiled	[CE]  cannot  find  symbol  iop	39	None	replace
207	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  +  4;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0  +  4;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  +  4;	  long    mantissa    =    value    /    100.0    +    2;    	non-compiled	[CE]  cannot  find  symbol  iop	41	None	replace
208	[BUG]  [BUGGY]  long  mantissa  =  value  -  1L  +  1L;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  -  1L  +  1L;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  -  1L  +  1L;	  long    mantissa    =    value    -    1L;    	non-compiled	[CE]  cannot  find  symbol  iop	16	None	replace
209	[BUG]  [BUGGY]  int  mantissa  =  value  /  8;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  8;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  8;	  int    mantissa    =    value    /    10;    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
210	[BUG]  [BUGGY]  int  mantissa  =  getLastChar().intValue();  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  getLastChar().intValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  getLastChar().intValue();	  int    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
211	[BUG]  [BUGGY]  int  mantissa  =  getLastChar().doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  getLastChar().doubleValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  getLastChar().doubleValue();	  int    mantissa    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
212	[BUG]  [BUGGY]  int  mantissa  =  getFirstChar().doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  getFirstChar().doubleValue();  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  getFirstChar().doubleValue();	  int    mantissa    =    getFirstChar();    	non-compiled	[CE]  cannot  find  symbol  iop	12	None	replace
213	[BUG]  [BUGGY]  int  mantissa  =  value  +  4;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  +  4;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  +  4;	  int    mantissa    =    value    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	27	None	replace
214	[BUG]  [BUGGY]  long  mantissa  =  value  *  4;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  *  4;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  4;	  long    mantissa    =    value    *    10;    	non-compiled	[CE]  cannot  find  symbol  iop	15	None	replace
215	[BUG]  [BUGGY]  int  mantissa  =  Math.min(mantissa,  value)-  1;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.min(mantissa,  value)-  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.min(mantissa,  value)-  1;	  int    mantissa    =    Math.min(mantissa,    value);    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
216	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  /  100.0;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0  /  100.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  /  100.0;	  long    mantissa    =    value    /    100.0    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
217	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  /  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  100.0  /  1;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  /  1;	  long    mantissa    =    value    /    100.0    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
218	[BUG]  [BUGGY]  int  mantissa  =  value  /  1000.0;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  1000.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  1000.0;	  int    mantissa    =    value    /    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
219	[BUG]  [BUGGY]  long  mantissa  =  value  /  1000.0;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =  value  /  1000.0;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  1000.0;	  long    mantissa    =    value    /    100.0L;    	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
220	[BUG]  [BUGGY]  int  mantissa  =  Math.abs(mantissa);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.abs(mantissa);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.abs(mantissa);	  int    mantissa    =    Math.abs(value);    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
221	[BUG]  [BUGGY]  int  mantissa  =  Math.abs(value  /  value);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  Math.abs(value  /  value);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.abs(value  /  value);	  int    mantissa    =    Math.abs(value);    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
222	[BUG]  [BUGGY]  int  mantissa  =  value  /  10  +  4;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  int  mantissa  =  value  /  10  +  4;  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  10  +  4;	  int    mantissa    =    value    /    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	32	None	replace
223	[BUG]  [BUGGY]  long  mantissa  =(long)Math.floor(value);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;      [BUGGY]  long  mantissa  =(long)Math.floor(value);  [BUGGY]      int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =(long)Math.floor(value);	  int    mantissa    =(int)Math.floor(value);    	non-compiled	[CE]  cannot  find  symbol  iop	46	None	replace
