bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  long  mantissa  =  value  /  2  +  1;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  2  +  1;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  2  +  1;	  long    mantissa    =    value    /    2;    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
2	[BUG]  [BUGGY]  long  mantissa  =  value  /  1;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  1;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  1;	  long    mantissa    =    value    /    2;    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
3	[BUG]  [BUGGY]  long  mantissa  =  value  /  4;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  4;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  4;	  long    mantissa    =    value    /    2;    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
4	[BUG]  [BUGGY]  long  mantissa  =  value  /  3;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  3;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  3;	  long    mantissa    =    value    /    2;    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
5	[BUG]  [BUGGY]  long  mantissa  =  value  /  2  *  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  2  *  10  +  1;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  2  *  10  +  1;	  long    mantissa    =    value    /    2;    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
6	[BUG]  [BUGGY]  int  mantissa  =  getLastChar();  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  getLastChar();  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  getLastChar();	      	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
7	[BUG]  [BUGGY]  int  mantissa  =  Math.pow(10,  value);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  Math.pow(10,  value);  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.pow(10,  value);	      	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
8	[BUG]  [BUGGY]  int  mantissa  =  Math.min(mantissa,  value);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  Math.min(mantissa,  value);  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.min(mantissa,  value);	      	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
9	[BUG]  [BUGGY]  int  mantissa  =  Integer.toString(value);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  Integer.toString(value);  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Integer.toString(value);	      	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
10	[BUG]  [BUGGY]  int  mantissa  =  Math.abs(value);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  Math.abs(value);  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  Math.abs(value);	      	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
11	[BUG]  [BUGGY]  double  mantissa  =  getLastChar();  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  double  mantissa  =  getLastChar();  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	double  mantissa  =  getLastChar();	      	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
12	[BUG]  [BUGGY]  int  mantissa  =  getFirstChar();  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  getFirstChar();  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  getFirstChar();	      	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
13	[BUG]  [BUGGY]  long  mantissa  =  value  /  10L;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  10L;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10L;	  long    mantissa    =    value    /    10;    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
14	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  +  2;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  10  +  2;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  +  2;	  long    mantissa    =    value    /    10;    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
15	[BUG]  [BUGGY]  long  mantissa  =  value  *  10;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  *  10;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  10;	  long    mantissa    =    value    /    10;    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
16	[BUG]  [BUGGY]  long  mantissa  =  value  -  1L;  [CE]  cannot  find  symbol  iop  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  -  1L;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  -  1L;	  long    mantissa    =    value    -    1;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
17	[BUG]  [BUGGY]  int  mantissa  =  value  -  1;  [CE]  cannot  find  symbol  iop  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  value  -  1;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  -  1;	  long    mantissa    =    value    -    1;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
18	[BUG]  [BUGGY]  long  mantissa  =  value  -  2;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  -  2;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  -  2;	  long    mantissa    =    value    -    1;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
19	[BUG]  [BUGGY]  long  mantissa  =  prev  -  1;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  prev  -  1;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  -  1;	  long    mantissa    =    value    -    1;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
20	[BUG]  [BUGGY]  long  mantissa  =  value  -  10;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  -  10;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  -  10;	  long    mantissa    =    value    -    1;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
21	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  +  1;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  100.0  +  1;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  +  1;	  long    mantissa    =    value    /    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
22	[BUG]  [BUGGY]  int  mantissa  =  value  /  100.0;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  value  /  100.0;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  100.0;	  long    mantissa    =    value    /    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
23	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0L;  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  100.0L;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0L;	  long    mantissa    =    value    /    100.0;    	non-compiled	[CE]  ';'  expected	5	None	replace
24	[BUG]  [BUGGY]  long  mantissa  =  prev  /  100.0;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  prev  /  100.0;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  /  100.0;	  long    mantissa    =    value    /    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
25	[BUG]  [BUGGY]  long  mantissa  =  value  *  100.0;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  *  100.0;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  100.0;	  long    mantissa    =    value    /    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
26	[BUG]  [BUGGY]  int  mantissa  =  value  /  10;  [CE]  cannot  find  symbol  iop  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  value  /  10;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  10;	  int    mantissa    =    value;    	non-compiled	[CE]  cannot  find  symbol  iop	2	None	replace
27	[BUG]  [BUGGY]  int  mantissa  =  value  +  1;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  value  +  1;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  +  1;	  int    mantissa    =    value;    	non-compiled	[CE]  cannot  find  symbol  iop	2	None	replace
28	[BUG]  [BUGGY]  int  mantissa  =  prev;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  prev;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  prev;	  int    mantissa    =    value;    	non-compiled	[CE]  cannot  find  symbol  iop	2	None	replace
29	[BUG]  [BUGGY]  int  mantissa  =  value.longValue();  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  value.longValue();  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value.longValue();	  int    mantissa    =    value;    	non-compiled	[CE]  cannot  find  symbol  iop	2	None	replace
30	[BUG]  [BUGGY]  int  mantissa  =  value.doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  value.doubleValue();  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value.doubleValue();	  int    mantissa    =    value;    	non-compiled	[CE]  cannot  find  symbol  iop	2	None	replace
31	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  *  1;  [CE]  cannot  find  symbol  iop  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  10  *  1;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  *  1;	  long    mantissa    =    value    /    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
32	[BUG]  [BUGGY]  int  mantissa  =  value  /  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  value  /  10  +  1;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  10  +  1;	  long    mantissa    =    value    /    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
33	[BUG]  [BUGGY]  long  mantissa  =  prev  /  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  prev  /  10  +  1;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  /  10  +  1;	  long    mantissa    =    value    /    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
34	[BUG]  [BUGGY]  long  mantissa  =  value  *  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  *  10  +  1;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  *  10  +  1;	  long    mantissa    =    value    /    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
35	[BUG]  [BUGGY]  long  mantissa  =  value  +  10;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  +  10;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  +  10;	  long    mantissa    =    value    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
36	[BUG]  [BUGGY]  long  mantissa  =  value  +  2;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  +  2;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  +  2;	  long    mantissa    =    value    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
37	[BUG]  [BUGGY]  long  mantissa  =  prev  +  1;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  prev  +  1;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  prev  +  1;	  long    mantissa    =    value    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
38	[BUG]  [BUGGY]  long  mantissa  =  value  +  1L;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  +  1L;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  +  1L;	  long    mantissa    =    value    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
39	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  +  1L;  [CE]  cannot  find  symbol  iop  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  10  +  1L;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  +  1L;	  long    mantissa    =    value    /    10    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
40	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  +  10.0;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  100.0  +  10.0;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  +  10.0;	  long    mantissa    =    value    /    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
41	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0  +  2;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  100.0  +  2;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0  +  2;	  long    mantissa    =    value    /    100.0;    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
42	[BUG]  [BUGGY]  long  mantissa  =  value  /  8;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  /  8;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  8;	  long    mantissa    =    value    /    10;    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
43	[BUG]  [BUGGY]  long  mantissa  =  value  +  3;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  +  3;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  +  3;	  long    mantissa    =    value    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
44	[BUG]  [BUGGY]  Integer  mantissa  =  getLastChar();  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  Integer  mantissa  =  getLastChar();  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	Integer  mantissa  =  getLastChar();	      	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
45	[BUG]  [BUGGY]  int  mantissa  =(int)Math.pow(10,  value);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =(int)Math.pow(10,  value);  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.pow(10,  value);	      	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
46	[BUG]  [BUGGY]  int  mantissa  =(int)Math.floor(value);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =(int)Math.floor(value);  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =(int)Math.floor(value);	      	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
47	[BUG]  [BUGGY]  int  mantissa  =  value  /  2;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  int  mantissa  =  value  /  2;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value  /  2;	  long    mantissa    =    value    /    2;    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
48	[BUG]  [BUGGY]  long  mantissa  =  value  -  1  +  1;  [CE]  cannot  find  symbol  iop  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;    [BUGGY]  long  mantissa  =  value  -  1  +  1;  [BUGGY]    int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  -  1  +  1;	  long    mantissa    =    value    -    1;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
