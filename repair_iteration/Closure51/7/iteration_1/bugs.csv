bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  long  mantissa  =  value  -  1;  [CE]  cannot  find  symbol  iop  [FE]    ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  [BUGGY]  long  mantissa  =  value  -  1;  [BUGGY]  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  -  1;	long  mantissa  =  value;  	non-compiled	[CE]  cannot  find  symbol  iop	13	None	replace
2	[BUG]  [BUGGY]  int  mantissa  =  value;  [CE]  cannot  find  symbol  iop  [FE]      ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  [BUGGY]  int  mantissa  =  value;  [BUGGY]  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	int  mantissa  =  value;	long  mantissa  =  value;  	non-compiled	[CE]  cannot  find  symbol  iop	13	None	replace
3	[BUG]  [BUGGY]  long  mantissa  =  value  /  10;  [CE]  cannot  find  symbol  iop  [FE]        ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  [BUGGY]  long  mantissa  =  value  /  10;  [BUGGY]  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10;	long  mantissa  =  value;  	non-compiled	[CE]  cannot  find  symbol  iop	13	None	replace
4	[BUG]  [BUGGY]  long  mantissa  =  value  +  1;  [CE]  cannot  find  symbol  iop  [FE]          ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  [BUGGY]  long  mantissa  =  value  +  1;  [BUGGY]  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  +  1;	long  mantissa  =  value;  	non-compiled	[CE]  cannot  find  symbol  iop	13	None	replace
5	[BUG]  [BUGGY]  long  mantissa  =  value  /  100.0;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  [BUGGY]  long  mantissa  =  value  /  100.0;  [BUGGY]  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  100.0;	long  mantissa  =  value;  	non-compiled	[CE]  cannot  find  symbol  iop	13	None	replace
6	[BUG]  [BUGGY]  long  mantissa  =  value  /  2;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  [BUGGY]  long  mantissa  =  value  /  2;  [BUGGY]  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  2;	long  mantissa  =  value;  	non-compiled	[CE]  cannot  find  symbol  iop	13	None	replace
7	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  [BUGGY]    [BUGGY]  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	  	long  mantissa  =  value;  	non-compiled	[CE]  cannot  find  symbol  iop	13	None	replace
8	[BUG]  [BUGGY]  long  mantissa  =  value  /  10  +  1;  [CE]  cannot  find  symbol  iop  [FE]    ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  [BUGGY]  long  mantissa  =  value  /  10  +  1;  [BUGGY]  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +   "E "  +  Integer.toString(exp));  }  else  {  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	243	243	1	replace	long  mantissa  =  value  /  10  +  1;	long  mantissa  =  value;  	non-compiled	[CE]  cannot  find  symbol  iop	13	None	replace
