bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(prev  ==  '-'  &&  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  &&  prev  ==  ':')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  &&  prev  ==  ':')  {	  if(prev!=    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
2	[BUG]  [BUGGY]  if(prev!=  '-'  &&  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  '-'  &&  prev  ==  ':')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  '-'  &&  prev  ==  ':')  {	  if(prev!=    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
3	[BUG]  [BUGGY]  if(x!=  '-'  ||  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  '-'  ||  prev  ==  ':')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  '-'  ||  prev  ==  ':')  {	  if(prev!=    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
4	[BUG]  [BUGGY]  if(prev  >=  '-'  ||  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '-'  ||  prev  ==  ':')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '-'  ||  prev  ==  ':')  {	  if(prev!=    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
5	[BUG]  [BUGGY]  if(x  ==  '-'  ||  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  ||  prev  ==  ':')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  ||  prev  ==  ':')  {	  if(prev!=    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
6	[BUG]  [BUGGY]  if(x  ==  '-'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  ||  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  ||  prev  ==  '+')  {	  if(prev!=    '-'    ||    prev    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  if(x!=  '-'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  '-'  ||  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  '-'  ||  prev  ==  '+')  {	  if(prev!=    '-'    ||    prev    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  if(prev  ==  '-'  &&  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  &&  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  &&  prev  ==  '+')  {	  if(prev!=    '-'    ||    prev    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  if(prev  >=  '-'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '-'  ||  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '-'  ||  prev  ==  '+')  {	  if(prev!=    '-'    ||    prev    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  if(prev!=  '-'  &&  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  '-'  &&  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  '-'  &&  prev  ==  '+')  {	  if(prev!=    '-'    ||    prev    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  double  value  =  getLastChar()  +  1;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  double  value  =  getLastChar()  +  1;  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  value  =  getLastChar()  +  1;	  double    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
12	[BUG]  [BUGGY]  long  value  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  long  value  =  getLastChar();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	long  value  =  getLastChar();	  double    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
13	[BUG]  [BUGGY]  char  value  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  char  value  =  getLastChar();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	char  value  =  getLastChar();	  double    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
14	[BUG]  [BUGGY]  double  value  =  getLastChar()  -  prev;  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  double  value  =  getLastChar()  -  prev;  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  value  =  getLastChar()  -  prev;	  double    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
15	[BUG]  [BUGGY]  double  value  =  getLongValue();  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  double  value  =  getLongValue();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  value  =  getLongValue();	  double    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
16	[BUG]  [BUGGY]  int  value  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  int  value  =  getLastChar();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	int  value  =  getLastChar();	  double    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
17	[BUG]  [BUGGY]  if  (x  ==  '-'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (x  ==  '-'  &&  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  ==  '-'  &&  prev  <=  '9')  {	  if    (prev    ==    '-'    &&    x    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
18	[BUG]  [BUGGY]  if(x  <  prev  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  prev  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  prev  ||  prev  ==  '-')  {	  if(prev    <    x    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
19	[BUG]  [BUGGY]  if(prev  ==  x  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  x  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  x  ||  prev  ==  '-')  {	  if(prev    <    x    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
20	[BUG]  [BUGGY]  if(prev  <=  x  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  <=  x  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  <=  x  ||  prev  ==  '-')  {	  if(prev    <    x    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
21	[BUG]  [BUGGY]  if(prev  >=  x  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  x  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  x  ||  prev  ==  '-')  {	  if(prev    <    x    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
22	[BUG]  [BUGGY]  if(prev!=  x  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  x  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  x  ||  prev  ==  '-')  {	  if(prev    <    x    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
23	[BUG]  [BUGGY]  if(prev  <  x  ||  prev  >  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  <  x  ||  prev  >  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  <  x  ||  prev  >  '-')  {	  if(prev    <    x    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
24	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev!=  '+')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev!=  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev!=  '+')  {	  if(prev    ==    '-'    ||    prev    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  if(prev  ==  '.'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '.'  ||  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '.'  ||  prev  ==  '+')  {	  if(prev    ==    '-'    ||    prev    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  if  (prev  >=  '-'  ||  prev  ==  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  >=  '-'  ||  prev  ==  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  >=  '-'  ||  prev  ==  '9')  {	  if    (prev    >=    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
27	[BUG]  [BUGGY]  if  (prev!=  '-'  ||  prev  ==  '9')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev!=  '-'  ||  prev  ==  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev!=  '-'  ||  prev  ==  '9')  {	  if    (prev    >=    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
28	[BUG]  [BUGGY]  if  (prev  ==  '-'  ||  prev  ==  '9')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  ||  prev  ==  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  ||  prev  ==  '9')  {	  if    (prev    >=    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
29	[BUG]  [BUGGY]  if  (prev!=  '-'  &&  prev  <=  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev!=  '-'  &&  prev  <=  0  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev!=  '-'  &&  prev  <=  0  ||  prev  ==  '-')  {	  if    (prev!=    '-'    &&    prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
30	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  prev  <=  0  ||  prev  ==  '-')  {	  if    (prev!=    '-'    &&    prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
31	[BUG]  [BUGGY]  if  (prev  >=  '-'  &&  prev  <=  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  >=  '-'  &&  prev  <=  0  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  >=  '-'  &&  prev  <=  0  ||  prev  ==  '-')  {	  if    (prev!=    '-'    &&    prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
32	[BUG]  [BUGGY]  if  (prev!=  '-'  ||  prev  <=  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev!=  '-'  ||  prev  <=  0  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev!=  '-'  ||  prev  <=  0  ||  prev  ==  '-')  {	  if    (prev!=    '-'    &&    prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
33	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev!=  '9')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev!=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev!=  '9')  {	  if(prev    ==    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
34	[BUG]  [BUGGY]  if(x  ==  '-'  ||  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  ||  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  ||  prev  <=  '9')  {	  if(prev    ==    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
35	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  >=  '9')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev  >=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  >=  '9')  {	  if(prev    ==    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
36	[BUG]  [BUGGY]  if(x  ==  '+'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '+'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '+'  ||  prev  ==  '-')  {	  if(prev    ==    '+'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
37	[BUG]  [BUGGY]  if(prev!=  '+'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  '+'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  '+'  ||  prev  ==  '-')  {	  if(prev    ==    '+'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
38	[BUG]  [BUGGY]  if(prev  ==  '+'  ||  prev!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '+'  ||  prev!=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '+'  ||  prev!=  '-')  {	  if(prev    ==    '+'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
39	[BUG]  [BUGGY]  if(prev  >=  '+'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '+'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '+'  ||  prev  ==  '-')  {	  if(prev    ==    '+'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
40	[BUG]  [BUGGY]  if(prev  ==  '+'  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '+'  ||  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '+'  ||  prev  >=  '-')  {	  if(prev    ==    '+'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
41	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }	  if(prev!=    null)    {    for(int    x    =    0;    x    <    prev;    ++x)    {    mantissa    +=    Math.pow(10,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
42	[BUG]  [BUGGY]  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }	  if(prev!=    null)    {    for(int    x    =    0;    x    <    prev;    ++x)    {    mantissa    +=    Math.pow(10,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
43	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  10;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  10;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  x  =  0;  x  <  10;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }	  if(prev!=    null)    {    for(int    x    =    0;    x    <    prev;    ++x)    {    mantissa    +=    Math.pow(10,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
44	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  x  =  0;  x  <  10;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  for(int  x  =  0;  x  <  10;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  x  =  0;  x  <  10;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }	  if(prev!=    null)    {    for(int    x    =    0;    x    <    prev;    ++x)    {    mantissa    +=    Math.pow(10,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
45	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  12;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  12;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  x  =  0;  x  <  12;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }	  if(prev!=    null)    {    for(int    x    =    0;    x    <    prev;    ++x)    {    mantissa    +=    Math.pow(10,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
46	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  8;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  8;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  x  =  0;  x  <  8;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }	  if(prev!=    null)    {    for(int    x    =    0;    x    <    prev;    ++x)    {    mantissa    +=    Math.pow(10,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
47	[BUG]  [BUGGY]  if(prev  ==  '.'  ||  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '.'  ||  prev  ==  ':')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '.'  ||  prev  ==  ':')  {	  if(prev    ==    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
48	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev!=  ':')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev!=  ':')  {	  if(prev    ==    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
49	[BUG]  [BUGGY]  if(prev  >>  '-'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >>  '-'  &&  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >>  '-'  &&  prev  <=  '9')  {	  if(x    >=    '-'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
50	[BUG]  [BUGGY]  if  (prev  ==  '-'  ||  prev  <=  '0')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  ||  prev  <=  '0')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  ||  prev  <=  '0')  {	  if    (prev    ==    '-'    &&    prev    <=    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
51	[BUG]  [BUGGY]  if  (prev!=  '-'  ||  prev  <=  '0')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev!=  '-'  ||  prev  <=  '0')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev!=  '-'  ||  prev  <=  '0')  {	  if    (prev    ==    '-'    &&    prev    <=    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
52	[BUG]  [BUGGY]  if(prev!=  null)  {  double  mantissa  =  getLastChar();  addNumber(x,  prev);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  mantissa  =  getLastChar();  addNumber(x,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  mantissa  =  getLastChar();  addNumber(x,  prev);  }	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
53	[BUG]  [BUGGY]  addNumber(x,  prev);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  addNumber(x,  prev);  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	addNumber(x,  prev);	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
54	[BUG]  [BUGGY]  if(prev  >=  null)  {  double  mantissa  =  getLastChar();  addNumber(x,  prev);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  null)  {  double  mantissa  =  getLastChar();  addNumber(x,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  null)  {  double  mantissa  =  getLastChar();  addNumber(x,  prev);  }	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
55	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  mantissa  =  getFirstChar();  addNumber(x,  prev);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  mantissa  =  getFirstChar();  addNumber(x,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  mantissa  =  getFirstChar();  addNumber(x,  prev);  }	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
56	[BUG]  [BUGGY]  if(prev!=  null)  {  double  mantissa  =  getFirstChar();  addNumber(x,  prev);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  mantissa  =  getFirstChar();  addNumber(x,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  mantissa  =  getFirstChar();  addNumber(x,  prev);  }	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
57	[BUG]  [BUGGY]  double  mantissa  =  getLastChar();  addNumber(x,  prev);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  double  mantissa  =  getLastChar();  addNumber(x,  prev);  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  mantissa  =  getLastChar();  addNumber(x,  prev);	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
58	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    <=    Math.abs(x))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
59	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    <=    Math.abs(x))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
60	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    <=    Math.abs(x))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
61	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <=  Math.pow(10,  prev))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <=  Math.pow(10,  prev))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <=  Math.pow(10,  prev))  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    <=    Math.abs(x))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
62	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <=  Math.pow(10,  prev))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <=  Math.pow(10,  prev))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <=  Math.pow(10,  prev))  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    <=    Math.abs(x))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
63	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  >=  x)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  >=  x)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getLastChar();  if(value  >=  x)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    <=    Math.abs(x))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
65	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev.length;  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev.length;  i++)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  prev.length;  i++)  {  addNumber(x);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
66	[BUG]  [BUGGY]  int  prev  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  int  prev  =  getLastChar();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	int  prev  =  getLastChar();	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
67	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev.length;  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev.length;  i++)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev.length;  i++)  {  addNumber(x);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
68	[BUG]  [BUGGY]  Integer  prev  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  Integer  prev  =  getLastChar();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	Integer  prev  =  getLastChar();	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
69	[BUG]  [BUGGY]  String  prev  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  String  prev  =  getLastChar();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	String  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
70	[BUG]  [BUGGY]  Character  prev  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  Character  prev  =  getLastChar();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	Character  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
71	[BUG]  [BUGGY]  Char  prev  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  Char  prev  =  getLastChar();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	Char  prev  =  getLastChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
72	[BUG]  [BUGGY]  add( "null ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  add( "null ");  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	add( "null ");	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
73	[BUG]  [BUGGY]  if(x  ==  prev)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
74	[BUG]  [BUGGY]  if(x  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
75	[BUG]  [BUGGY]  if(x  ==  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
76	[BUG]  [BUGGY]  if(x  ==  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  addNumber(prev);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  addNumber(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  addNumber(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
77	[BUG]  [BUGGY]  if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
78	[BUG]  [BUGGY]  if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  addNumber(prev);  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  addNumber(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  addNumber(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
79	[BUG]  [BUGGY]  if(x  ==  '.'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '.'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '.'  ||  prev  ==  '-')  {	  if(prev    ==    '.'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
80	[BUG]  [BUGGY]  if(prev!=  '.'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  '.'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  '.'  ||  prev  ==  '-')  {	  if(prev    ==    '.'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
81	[BUG]  [BUGGY]  if(prev  ==  '.'  ||  prev!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '.'  ||  prev!=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '.'  ||  prev!=  '-')  {	  if(prev    ==    '.'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
82	[BUG]  [BUGGY]  if(prev  ==  '.'  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '.'  &&  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '.'  &&  prev  ==  '-')  {	  if(prev    ==    '.'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
83	[BUG]  [BUGGY]  if(prev  >=  '.'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '.'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '.'  ||  prev  ==  '-')  {	  if(prev    ==    '.'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
84	[BUG]  [BUGGY]  if(prev  ==  '.'  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '.'  ||  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '.'  ||  prev  >=  '-')  {	  if(prev    ==    '.'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
85	[BUG]  [BUGGY]  if  (prev  ==  '0'  &&  prev  <=  '9'  ||  prev  >=  '0'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '0'  &&  prev  <=  '9'  ||  prev  >=  '0'  &&  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '0'  &&  prev  <=  '9'  ||  prev  >=  '0'  &&  prev  <=  '9')  {	  if    (prev    ==    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
86	[BUG]  [BUGGY]  if  (prev  ==  '0'  &&  prev  <=  '9'  ||  prev  >=  'a'  &&  prev  <=  'z')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '0'  &&  prev  <=  '9'  ||  prev  >=  'a'  &&  prev  <=  'z')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '0'  &&  prev  <=  '9'  ||  prev  >=  'a'  &&  prev  <=  'z')  {	  if    (prev    ==    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
87	[BUG]  [BUGGY]  if  (prev  ==  '0'  ||  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '0'  ||  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '0'  ||  prev  <=  '9')  {	  if    (prev    ==    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  if  (prev  ==  '0'  &&  prev  <=  '9'  ||  prev  >=  'A'  &&  prev  <=  'Z')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '0'  &&  prev  <=  '9'  ||  prev  >=  'A'  &&  prev  <=  'Z')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '0'  &&  prev  <=  '9'  ||  prev  >=  'A'  &&  prev  <=  'Z')  {	  if    (prev    ==    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
89	[BUG]  [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>  [CE]  unclosed  character  literal  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev!=    '>')&    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
90	[BUG]  [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>')  [CE]  unclosed  character  literal  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>')  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>')	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev!=    '>')&    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
91	[BUG]  [BUGGY]  if((  prev  >=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>  [CE]  unclosed  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev  >=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev  >=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev!=    '>')&    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
92	[BUG]  [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  [CE]  unclosed  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev!=    '>')&    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
93	[BUG]  [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>  [CE]  unclosed  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev!=    '>')&    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
94	[BUG]  [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev  >='<  ')&&(prev!=  '>  [CE]  unclosed  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev  >='<  ')&&(prev!=  '>  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev  >='<  ')&&(prev!=  '>	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev!=    '>')&    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
95	[BUG]  [BUGGY]  if(x!=  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  '-')  {	  if(prev!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    ++i)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
97	[BUG]  [BUGGY]  if(prev  >=  null)  {  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  null)  {  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  null)  {  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    ++i)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
98	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev.length;  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev.length;  ++i)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  prev.length;  ++i)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    ++i)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
99	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev.length;  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev.length;  ++i)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev.length;  ++i)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    ++i)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
100	[BUG]  [BUGGY]  if(prev  >=  '-'  ||  prev  <  '0'  ||  prev  >  '9')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '-'  ||  prev  <  '0'  ||  prev  >  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '-'  ||  prev  <  '0'  ||  prev  >  '9')  {	  if    (prev    ==    '-'    ||    prev    <    '0'    ||    prev    >    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
101	[BUG]  [BUGGY]  if  (prev  ==  '-'  ||  prev  >=  '0'  ||  prev  >  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  ||  prev  >=  '0'  ||  prev  >  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  ||  prev  >=  '0'  ||  prev  >  '9')  {	  if    (prev    ==    '-'    ||    prev    <    '0'    ||    prev    >    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
102	[BUG]  [BUGGY]  if(prev  <  '0'  ||  prev  >  '9')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  <  '0'  ||  prev  >  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  <  '0'  ||  prev  >  '9')  {	  if    (prev    ==    '-'    ||    prev    <    '0'    ||    prev    >    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
103	[BUG]  [BUGGY]  if  (prev  ==  '0'  &&  prev  <=  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '0'  &&  prev  <=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '0'  &&  prev  <=  '-')  {	  if    (prev    ==    '0'    &&    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
104	[BUG]  [BUGGY]  if  (prev  ==  '0'  &&  prev!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '0'  &&  prev!=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '0'  &&  prev!=  '-')  {	  if    (prev    ==    '0'    &&    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
105	[BUG]  [BUGGY]  if  (prev  ==  '0'  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '0'  ||  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '0'  ||  prev  >=  '-')  {	  if    (prev    ==    '0'    &&    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
106	[BUG]  [BUGGY]  if  (prev  ==  '-'  ||  prev  <=  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  ||  prev  <=  0  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  ||  prev  <=  0  ||  prev  ==  '-')  {	  if    (x    <=    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
107	[BUG]  [BUGGY]  if  (prev  >=  '-'  ||  prev  <=  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  >=  '-'  ||  prev  <=  0  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  >=  '-'  ||  prev  <=  0  ||  prev  ==  '-')  {	  if    (x    <=    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
108	[BUG]  [BUGGY]  if  (prev  ==  '-'  ||  prev  <=  0  ||  prev  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  ||  prev  <=  0  ||  prev  ==  'x')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  ||  prev  <=  0  ||  prev  ==  'x')  {	  if    (x    <=    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
109	[BUG]  [BUGGY]  if  (prev  ==  '0'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '0'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '0'  ||  prev  ==  '-')  {	  if    (prev    <=    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
110	[BUG]  [BUGGY]  if(prev!=  null)  {  double  mantissa  =  getLastChar();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  mantissa  =  getLastChar();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  mantissa  =  getLastChar();  addNumber(x);  }	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
111	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  mantissa  =  getFirstChar();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  mantissa  =  getFirstChar();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  mantissa  =  getFirstChar();  addNumber(x);  }	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
112	[BUG]  [BUGGY]  if(prev!=  null)  {  double  mantissa  =  getFirstChar();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  mantissa  =  getFirstChar();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  mantissa  =  getFirstChar();  addNumber(x);  }	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
113	[BUG]  [BUGGY]  if(prev  >=  null)  {  double  mantissa  =  getLastChar();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  null)  {  double  mantissa  =  getLastChar();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  null)  {  double  mantissa  =  getLastChar();  addNumber(x);  }	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
114	[BUG]  [BUGGY]  double  mantissa  =  getLastChar();  addNumber(x);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  double  mantissa  =  getLastChar();  addNumber(x);  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  mantissa  =  getLastChar();  addNumber(x);	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
115	[BUG]  [BUGGY]  if  (prev  ==  '-'  ||  prev  <=  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  ||  prev  <=  0)  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  ||  prev  <=  0)  {	  if    (prev    ==    '-'    &&    prev    <=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
116	[BUG]  [BUGGY]  if  (prev!=  '-'  ||  prev  <=  0)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev!=  '-'  ||  prev  <=  0)  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev!=  '-'  ||  prev  <=  0)  {	  if    (prev    ==    '-'    &&    prev    <=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
117	[BUG]  [BUGGY]  if  (prev  >=  '-'  ||  prev  <=  0)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  >=  '-'  ||  prev  <=  0)  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  >=  '-'  ||  prev  <=  0)  {	  if    (prev    ==    '-'    &&    prev    <=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
118	[BUG]  [BUGGY]  if  (prev  ==  '.'  &&  prev  <=  0)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '.'  &&  prev  <=  0)  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '.'  &&  prev  <=  0)  {	  if    (prev    ==    '-'    &&    prev    <=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
119	[BUG]  [BUGGY]  if(x  ==  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    add(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
120	[BUG]  [BUGGY]  if(x  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    add(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
121	[BUG]  [BUGGY]  if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    add(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
122	[BUG]  [BUGGY]  if(x  ==  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  add(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    add(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
123	[BUG]  [BUGGY]  if(x  ==  prev)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    add(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
124	[BUG]  [BUGGY]  if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  add(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    add(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
125	[BUG]  [BUGGY]  if(x  ==  '-'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  ||  prev  ==  '-')  {	  if(prev    ==    '-'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
126	[BUG]  [BUGGY]  if(prev!=  '-'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  '-'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  '-'  ||  prev  ==  '-')  {	  if(prev    ==    '-'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
127	[BUG]  [BUGGY]  if(prev  ==  '-'  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  &&  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  &&  prev  ==  '-')  {	  if(prev    ==    '-'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
128	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev!=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev!=  '-')  {	  if(prev    ==    '-'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
129	[BUG]  [BUGGY]  if(x  ==  prev  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev  ||  prev  ==  '-')  {	  if(prev    ==    '-'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
130	[BUG]  [BUGGY]  if(prev  >=  '-'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '-'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '-'  ||  prev  ==  '-')  {	  if(prev    ==    '-'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
131	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  >  prev)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  >  prev)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  >  prev)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
132	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  >  prev)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  >  prev)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getLastChar();  if(value  >  prev)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
133	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  >=  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  >=  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  >=  value)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
134	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  >=  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  >=  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getLastChar();  if(value  >=  value)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
135	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <=  prev)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <=  prev)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <=  prev)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
136	[BUG]  [BUGGY]  if  (prev  <=  0  ||  prev!=  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  <=  0  ||  prev!=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  <=  0  ||  prev!=  '-')  {	  if    (prev    <    0    ||    prev!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
137	[BUG]  [BUGGY]  if(prev  <  0  ||  x  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  <  0  ||  x  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  <  0  ||  x  ==  '-')  {	  if(x    <    0    ||    x    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
138	[BUG]  [BUGGY]  if(prev  <  0  ||  x  >  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  <  0  ||  x  >  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  <  0  ||  x  >  '-')  {	  if(x    <    0    ||    x    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
139	[BUG]  [BUGGY]  if(prev  <  0  ||  x  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  <  0  ||  x  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  <  0  ||  x  >=  '-')  {	  if(x    <    0    ||    x    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
140	[BUG]  [BUGGY]  if(x  <=  0  ||  x  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <=  0  ||  x  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <=  0  ||  x  ==  '-')  {	  if(x    <    0    ||    x    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
141	[BUG]  [BUGGY]  if(prev  <=  0  ||  x  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  <=  0  ||  x  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  <=  0  ||  x  ==  '-')  {	  if(x    <    0    ||    x    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
142	[BUG]  [BUGGY]  if(prev  >  '-'  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >  '-'  ||  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >  '-'  ||  prev  >=  '-')  {	  if(x    >    '-'    ||    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
143	[BUG]  [BUGGY]  if(prev  >  '-'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >  '-'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >  '-'  ||  prev  ==  '-')  {	  if(x    >    '-'    ||    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
144	[BUG]  [BUGGY]  if(prev  >  '-'  ||  prev!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >  '-'  ||  prev!=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >  '-'  ||  prev!=  '-')  {	  if(x    >    '-'    ||    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
145	[BUG]  [BUGGY]  if(prev  >=  '-'  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '-'  ||  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '-'  ||  prev  >=  '-')  {	  if(x    >    '-'    ||    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
146	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  >=  '-')  {	  if(x    >    '-'    ||    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
147	[BUG]  [BUGGY]  if(prev  <  '-'  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  <  '-'  ||  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  <  '-'  ||  prev  >=  '-')  {	  if(x    >    '-'    ||    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
148	[BUG]  [BUGGY]  if(prev  >  '-'  ||  prev  <  '-')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >  '-'  ||  prev  <  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >  '-'  ||  prev  <  '-')  {	  if(x    >    '-'    ||    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
149	[BUG]  [BUGGY]  if  (prev!=  '-'  ||  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev!=  '-'  ||  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev!=  '-'  ||  prev  <=  '9')  {	  if    (prev!=    '-'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
150	[BUG]  [BUGGY]  if  (prev  <=  0  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  <=  0  ||  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  <=  0  ||  prev  >=  '-')  {	  if    (x    <    0    ||    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
151	[BUG]  [BUGGY]  if(x  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    'n'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
152	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev!=  't')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev!=  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev!=  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    'n'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
153	[BUG]  [BUGGY]  if(prev!=  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    'n'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
154	[BUG]  [BUGGY]  if(prev  ==  'x'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  'x'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  'x'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    'n'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
155	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev!=  'n'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev!=  'n'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev!=  'n'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    'n'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
156	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  >=  't')  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  >=  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  >=  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    'n'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
157	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    Math.pow(10,    prev);    if(value    <    100)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
158	[BUG]  [BUGGY]  if(x  ==  prev)  {  if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev)  {  if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev)  {  if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    Math.pow(10,    prev);    if(value    <    100)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
159	[BUG]  [BUGGY]  if(prev  >=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    Math.pow(10,    prev);    if(value    <    100)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
160	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    Math.pow(10,    prev);    if(value    <    100)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
161	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ".doubleValue());  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ".doubleValue());  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ".doubleValue());  }	  if(prev!=    null)    {    double    value    =    Math.pow(10,    prev);    if(value    <    100)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
162	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ".);  }	  if(prev!=    null)    {    double    value    =    Math.pow(10,    prev);    if(value    <    100)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
163	[BUG]  [BUGGY]  if(prev  >  '-'  ||  prev  >=  '+')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >  '-'  ||  prev  >=  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >  '-'  ||  prev  >=  '+')  {	  if(x    >    '-'    ||    prev    >=    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
164	[BUG]  [BUGGY]  if(prev  >  '-'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >  '-'  ||  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >  '-'  ||  prev  ==  '+')  {	  if(x    >    '-'    ||    prev    >=    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
165	[BUG]  [BUGGY]  if(prev  >=  '-'  ||  prev  >=  '+')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '-'  ||  prev  >=  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '-'  ||  prev  >=  '+')  {	  if(x    >    '-'    ||    prev    >=    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
166	[BUG]  [BUGGY]  if(prev  >  '-'  ||  prev!=  '+')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >  '-'  ||  prev!=  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >  '-'  ||  prev!=  '+')  {	  if(x    >    '-'    ||    prev    >=    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
167	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  >=  '+')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev  >=  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  >=  '+')  {	  if(x    >    '-'    ||    prev    >=    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
168	[BUG]  [BUGGY]  if(prev  >  '-'  ||  prev  <  '+')  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >  '-'  ||  prev  <  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >  '-'  ||  prev  <  '+')  {	  if(x    >    '-'    ||    prev    >=    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
169	[BUG]  [BUGGY]  if(prev  <  '-'  ||  prev  >=  '+')  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  <  '-'  ||  prev  >=  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  <  '-'  ||  prev  >=  '+')  {	  if(x    >    '-'    ||    prev    >=    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
170	[BUG]  [BUGGY]  double  prev  =  getLastChar()  +  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  double  prev  =  getLastChar()  +  1;  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  prev  =  getLastChar()  +  1;	  double    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
171	[BUG]  [BUGGY]  double  prev  =  getFirstChar();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  double  prev  =  getFirstChar();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  prev  =  getFirstChar();	  double    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
172	[BUG]  [BUGGY]  double  prev  =  getLowerCase();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  double  prev  =  getLowerCase();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  prev  =  getLowerCase();	  double    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
173	[BUG]  [BUGGY]  long  prev  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  long  prev  =  getLastChar();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	long  prev  =  getLastChar();	  double    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
174	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  1  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  1  &&  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  prev  <=  1  &&  prev  ==  '-')  {	  if    (prev    ==    '-'    &&    prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
175	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  10  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  10  &&  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  prev  <=  10  &&  prev  ==  '-')  {	  if    (prev    ==    '-'    &&    prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
176	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  127)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  127)  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  prev  <=  127)  {	  if    (prev    ==    '-'    &&    prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
177	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(i  +  1);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(i  +  1);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
178	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x  +  1);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x  +  1);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x  +  1);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
179	[BUG]  [BUGGY]  while(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  while(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(i  +  1);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	while(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(i  +  1);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
180	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x  +  1);  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x  +  1);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x  +  1);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(i  +  1);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(i  +  1);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
182	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x  +  1);  }  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x  +  1);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x  +  1);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
183	[BUG]  [BUGGY]  if(x  >=  '-'  ||  prev  ==  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  '-'  ||  prev  ==  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  '-'  ||  prev  ==  '9')  {	  if(x    >=    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
184	[BUG]  [BUGGY]  if(x  ==  '-'  ||  prev  ==  '%')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  ||  prev  ==  '%')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  ||  prev  ==  '%')  {	  if(prev    ==    '-'    ||    prev    ==    '%')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
185	[BUG]  [BUGGY]  if(prev!=  '-'  ||  prev  ==  '%')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  '-'  ||  prev  ==  '%')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  '-'  ||  prev  ==  '%')  {	  if(prev    ==    '-'    ||    prev    ==    '%')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
186	[BUG]  [BUGGY]  if(prev  ==  '-'  &&  prev  ==  '%')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  &&  prev  ==  '%')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  &&  prev  ==  '%')  {	  if(prev    ==    '-'    ||    prev    ==    '%')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
187	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev!=  '%')  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev!=  '%')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev!=  '%')  {	  if(prev    ==    '-'    ||    prev    ==    '%')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
188	[BUG]  [BUGGY]  if(prev  ==  '.'  ||  prev  ==  '%')  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '.'  ||  prev  ==  '%')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '.'  ||  prev  ==  '%')  {	  if(prev    ==    '-'    ||    prev    ==    '%')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
189	[BUG]  [BUGGY]  if(prev  >=  '-'  ||  prev  ==  '%')  {  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '-'  ||  prev  ==  '%')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '-'  ||  prev  ==  '%')  {	  if(prev    ==    '-'    ||    prev    ==    '%')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
190	[BUG]  [BUGGY]  if(x  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
191	[BUG]  [BUGGY]  if(prev  ==  'x'  ||  prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  'x'  ||  prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  'x'  ||  prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
192	[BUG]  [BUGGY]  if(prev!=  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
193	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev!=  't')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev!=  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev!=  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
194	[BUG]  [BUGGY]  if(prev  >=  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
195	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev!=  'r'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  'n'  ||  prev!=  'r'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  'n'  ||  prev!=  'r'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
196	[BUG]  [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  [CE]  unclosed  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev    >=    '>')&    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
197	[BUG]  [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev  >='<  ')&&(prev  >=  '>  [CE]  unclosed  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev  >='<  ')&&(prev  >=  '>  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev  >='<  ')&&(prev  >=  '>	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev    >=    '>')&    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
198	[BUG]  [BUGGY]  if((  prev  >=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>  [CE]  unclosed  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev  >=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev  >=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev    >=    '>')&    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
199	[BUG]  [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>')  [CE]  unclosed  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>')  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>')	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev    >=    '>')&    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
200	[BUG]  [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >>  '>  [CE]  unclosed  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >>  '>  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >>  '>	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev    >=    '>')&    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
201	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getLastChar();  addNumber(x);  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
202	[BUG]  [BUGGY]  if(prev  >=  null)  {  double  value  =  getLastChar();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  null)  {  double  value  =  getLastChar();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  null)  {  double  value  =  getLastChar();  addNumber(x);  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
203	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  value  =  getFirstChar();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  value  =  getFirstChar();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  value  =  getFirstChar();  addNumber(x);  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
204	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar().doubleValue();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar().doubleValue();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  value  =  getLastChar().doubleValue();  addNumber(x);  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
205	[BUG]  [BUGGY]  double  value  =  getLastChar();  addNumber(x);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  double  value  =  getLastChar();  addNumber(x);  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  value  =  getLastChar();  addNumber(x);	  if(prev    ==    null)    {    double    value    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
206	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar().doubleValue();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar().doubleValue();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getLastChar().doubleValue();  addNumber(x);  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
207	[BUG]  [BUGGY]  if(prev!=  '.')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  '.')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  '.')  {	  if    (x    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
208	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0x7f  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0x7f  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  prev  <=  0x7f  ||  prev  ==  '-')  {	  if    (prev    ==    '-'    &&    prev    <=    0x7f    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
209	[BUG]  [BUGGY]  if  (prev!=  '-'  &&  prev  <=  0x7f  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev!=  '-'  &&  prev  <=  0x7f  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev!=  '-'  &&  prev  <=  0x7f  ||  prev  ==  '-')  {	  if    (prev    ==    '-'    &&    prev    <=    0x7f    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
210	[BUG]  [BUGGY]  if  (prev  >=  '-'  &&  prev  <=  0x7f  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  >=  '-'  &&  prev  <=  0x7f  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  >=  '-'  &&  prev  <=  0x7f  ||  prev  ==  '-')  {	  if    (prev    ==    '-'    &&    prev    <=    0x7f    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
211	[BUG]  [BUGGY]  if  (prev  ==  '-'  ||  prev  <=  0x7f  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  ||  prev  <=  0x7f  &&  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  ||  prev  <=  0x7f  &&  prev  ==  '-')  {	  if    (prev    ==    '-'    &&    prev    <=    0x7f    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
212	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <=  prev)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <=  prev)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <=  prev)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
213	[BUG]  [BUGGY]  if(prev!=  '0'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  '0'  &&  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  '0'  &&  prev  <=  '9')  {	  if(x    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
214	[BUG]  [BUGGY]  if(prev  >>  '0'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >>  '0'  &&  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >>  '0'  &&  prev  <=  '9')  {	  if(x    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
215	[BUG]  [BUGGY]  if(x  ==  '0'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '0'  &&  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '0'  &&  prev  <=  '9')  {	  if(x    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
216	[BUG]  [BUGGY]  if(prev  >=  '0'  ||  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '0'  ||  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '0'  ||  prev  <=  '9')  {	  if(x    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
217	[BUG]  [BUGGY]  add(x);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  add(x);  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	add(x);	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
218	[BUG]  [BUGGY]  if(prev!=  null)  {  add(prev);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  add(prev);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  add(prev);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
219	[BUG]  [BUGGY]  if(prev!=  null)  {  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  add(prev);  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
220	[BUG]  [BUGGY]  if(prev!=  null)  {  add(prev);  }  else  {  double  prev  =  getLastChar();  addNumber(x,  prev);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  add(prev);  }  else  {  double  prev  =  getLastChar();  addNumber(x,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  add(prev);  }  else  {  double  prev  =  getLastChar();  addNumber(x,  prev);  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
221	[BUG]  [BUGGY]  if(prev  ==  null)  {  add(prev);  }  else  {  double  prev  =  getLastChar();  addNumber(x,  prev);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  add(prev);  }  else  {  double  prev  =  getLastChar();  addNumber(x,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  add(prev);  }  else  {  double  prev  =  getLastChar();  addNumber(x,  prev);  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
222	[BUG]  [BUGGY]  if(prev!=  null)  {  add(prev);  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  add(prev);  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  add(prev);  }  else  {  double  prev  =  getLastChar();  add(prev);  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
223	[BUG]  [BUGGY]  if(prev!=  null)  {  add(prev);  }  else  {  double  prev  =  getLastChar();  add(x,  prev);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  add(prev);  }  else  {  double  prev  =  getLastChar();  add(x,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  add(prev);  }  else  {  double  prev  =  getLastChar();  add(x,  prev);  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
224	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  '9'  ||  prev  >=  '0')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  '9'  ||  prev  >=  '0')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  prev  <=  '9'  ||  prev  >=  '0')  {	  if    (prev    ==    '-'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
225	[BUG]  [BUGGY]  if(prev  <  '0'  ||  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  <  '0'  ||  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  <  '0'  ||  prev  <=  '9')  {	  if(prev    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
226	[BUG]  [BUGGY]  if(prev  >=  '0'  &&  prev  <=  '9'  ||  prev  >=  '0'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '0'  &&  prev  <=  '9'  ||  prev  >=  '0'  &&  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '0'  &&  prev  <=  '9'  ||  prev  >=  '0'  &&  prev  <=  '9')  {	  if(prev    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
227	[BUG]  [BUGGY]  if  (prev  ==  0.0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  0.0  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  0.0  ||  prev  ==  '-')  {	  if    (prev    ==    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
228	[BUG]  [BUGGY]  if  (prev!=  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev!=  0  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev!=  0  ||  prev  ==  '-')  {	  if    (prev    ==    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
229	[BUG]  [BUGGY]  if  (prev  ==  0  ||  prev!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  0  ||  prev!=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  0  ||  prev!=  '-')  {	  if    (prev    ==    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
230	[BUG]  [BUGGY]  if  (prev  ==  0  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  0  &&  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  0  &&  prev  ==  '-')  {	  if    (prev    ==    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
231	[BUG]  [BUGGY]  double  value  =  getLastChar()  +  prev;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  double  value  =  getLastChar()  +  prev;  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  value  =  getLastChar()  +  prev;	  double    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
232	[BUG]  [BUGGY]  double  value  =  getFirstChar();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  double  value  =  getFirstChar();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  value  =  getFirstChar();	  double    value    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
233	[BUG]  [BUGGY]  if(x  >=  prev)  {  if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  prev)  {  if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  prev)  {  if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    Math.pow(10,    prev);    if(value    <    100)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
234	[BUG]  [BUGGY]  if(prev!=  null)  {  double  prev  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  prev  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  prev  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    Math.pow(10,    prev);    if(value    <    100)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
235	[BUG]  [BUGGY]  if  (x  <  0  ||  prev!=  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (x  <  0  ||  prev!=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  <  0  ||  prev!=  '-')  {	  if    (prev    <    0    ||    prev!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
236	[BUG]  [BUGGY]  char  prev  =  getFirstChar();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  char  prev  =  getFirstChar();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	char  prev  =  getFirstChar();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
237	[BUG]  [BUGGY]  char  prev  =  getLastChar()  +  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  char  prev  =  getLastChar()  +  1;  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	char  prev  =  getLastChar()  +  1;	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
238	[BUG]  [BUGGY]  char  prev  =  getPrev();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  char  prev  =  getPrev();  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	char  prev  =  getPrev();	  char    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
239	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0  &&  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0  &&  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  prev  <=  0  &&  prev  >=  '-')  {	  if    (prev!=    '-'    &&    prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
240	[BUG]  [BUGGY]  if  (prev!=  '-'  &&  prev  <=  0  &&  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev!=  '-'  &&  prev  <=  0  &&  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev!=  '-'  &&  prev  <=  0  &&  prev  >=  '-')  {	  if    (prev!=    '-'    &&    prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
241	[BUG]  [BUGGY]  if  (x  >=  '-'  ||  x  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (x  >=  '-'  ||  x  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  >=  '-'  ||  x  <=  '9')  {	  if    (prev    >=    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
242	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  getLastChar();  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  getLastChar();  i++)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  getLastChar();  i++)  {  addNumber(x);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
243	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  addNumber(x);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
244	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  getFirstChar();  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  getFirstChar();  i++)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  getFirstChar();  i++)  {  addNumber(x);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
245	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  lastChar;  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  lastChar;  i++)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  lastChar;  i++)  {  addNumber(x);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
246	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  value;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  value;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  x  =  0;  x  <  value;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }	  if(prev!=    null)    {    for(int    x    =    0;    x    <    prev;    ++x)    {    mantissa    +=    Math.pow(10,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
247	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  10  *  Math.pow(10,  prev);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  10  *  Math.pow(10,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  10  *  Math.pow(10,  prev);  }	  if(prev!=    null)    {    for(int    x    =    0;    x    <    prev;    ++x)    {    mantissa    +=    Math.pow(10,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
248	[BUG]  [BUGGY]  if(x  >=  '-'  ||  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  '-'  ||  prev  ==  ':')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  '-'  ||  prev  ==  ':')  {	  if(prev!=    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
249	[BUG]  [BUGGY]  if(prev  ==  '+'  ||  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '+'  ||  prev  ==  ':')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '+'  ||  prev  ==  ':')  {	  if(prev!=    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
250	[BUG]  [BUGGY]  if(prev  ==  ':'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  ':'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  ':'  ||  prev  ==  '-')  {	  if(prev!=    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
251	[BUG]  [BUGGY]  if((  prev  >=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  [CE]  unclosed  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev  >=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev  >=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev    >=    '>')&    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
252	[BUG]  [BUGGY]  if(x  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev    >=    '>')&    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
253	[BUG]  [BUGGY]  if(prev!=  null)  {  double  mantissa  =  getLastChar().doubleValue();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  mantissa  =  getLastChar().doubleValue();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  mantissa  =  getLastChar().doubleValue();  addNumber(x);  }	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
254	[BUG]  [BUGGY]  if((  prev  >=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  [CE]  unclosed  character  literal  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev  >=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev  >=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev!=    '>')&    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
255	[BUG]  [BUGGY]  if(x  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev!=    '>')&    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
256	[BUG]  [BUGGY]  if(x  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev!=    '>')&    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
257	[BUG]  [BUGGY]  if(x  ==  '-'  ||  prev  >=  '+')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  ||  prev  >=  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  ||  prev  >=  '+')  {	  if(x    >    '-'    ||    prev    >=    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
258	[BUG]  [BUGGY]  if(x  >=  '-'  ||  prev  >=  '+')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  '-'  ||  prev  >=  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  '-'  ||  prev  >=  '+')  {	  if(x    >    '-'    ||    prev    >=    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
259	[BUG]  [BUGGY]  if(x  <  '-'  ||  prev  >  '+')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  '-'  ||  prev  >  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  '-'  ||  prev  >  '+')  {	  if(x    >    '-'    ||    prev    >=    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
260	[BUG]  [BUGGY]  if(x  >  '-'  ||  prev  <  '+')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >  '-'  ||  prev  <  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >  '-'  ||  prev  <  '+')  {	  if(x    >    '-'    ||    prev    >=    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
261	[BUG]  [BUGGY]  if(x  >  '-'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >  '-'  ||  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >  '-'  ||  prev  ==  '+')  {	  if(x    >    '-'    ||    prev    >=    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
262	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  getLastChar();  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  getLastChar();  ++i)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  getLastChar();  ++i)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    ++i)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
263	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  getLastChar();  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  getLastChar();  ++i)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  i  =  0;  i  <  getLastChar();  ++i)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    ++i)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
264	[BUG]  [BUGGY]  if(prev  >=  '-'  ||  prev  <=  '0')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '-'  ||  prev  <=  '0')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '-'  ||  prev  <=  '0')  {	  if    (prev    ==    '-'    &&    prev    <=    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
265	[BUG]  [BUGGY]  if  (x  ==  '-'  ||  prev  <=  '0')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (x  ==  '-'  ||  prev  <=  '0')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  ==  '-'  ||  prev  <=  '0')  {	  if    (prev    ==    '-'    &&    prev    <=    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
266	[BUG]  [BUGGY]  double  prev  =  getLastChar()  -  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  double  prev  =  getLastChar()  -  1;  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  prev  =  getLastChar()  -  1;	  double    prev    =    getLastChar();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
267	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getFirstChar();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getFirstChar();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getFirstChar();  addNumber(x);  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
268	[BUG]  [BUGGY]  if  (x  ==  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (x  ==  0  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  ==  0  ||  prev  ==  '-')  {	  if    (x    <=    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
269	[BUG]  [BUGGY]  if(prev  >=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
270	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  getLastChar();  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  getLastChar();  i++)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  i  =  0;  i  <  getLastChar();  i++)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
271	[BUG]  [BUGGY]  if(x  ==  'n'  ||  x  ==  'r'  ||  x  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  'n'  ||  x  ==  'r'  ||  x  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  'n'  ||  x  ==  'r'  ||  x  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
272	[BUG]  [BUGGY]  if(x  ==  '.'  ||  prev  ==  '+'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '.'  ||  prev  ==  '+'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '.'  ||  prev  ==  '+'  ||  prev  ==  '-')  {	  if(prev    ==    '+'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
273	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  'n'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  'n'  ||  prev  ==  't')  {	  if(prev    ==    '+'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
274	[BUG]  [BUGGY]  if(x  ==  '-'  &&  prev!=  '9')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  &&  prev!=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  &&  prev!=  '9')  {	  if    (prev    ==    '-'    &&    x    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
275	[BUG]  [BUGGY]  if  (x  <  0  ||  prev  >  '-')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (x  <  0  ||  prev  >  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  <  0  ||  prev  >  '-')  {	  if    (prev    <    0    ||    prev    >    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
276	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  <  '0'  ||  prev  >  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev  <  '0'  ||  prev  >  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  <  '0'  ||  prev  >  '-')  {	  if    (prev    <    0    ||    prev    >    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
277	[BUG]  [BUGGY]  if(x  ==  ':'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  ':'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  ':'  ||  prev  ==  '-')  {	  if(prev    ==    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
278	[BUG]  [BUGGY]  if  (prev  ==  '-'  ||  prev  ==  '0'  ||  prev  >=  '9')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  ||  prev  ==  '0'  ||  prev  >=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  ||  prev  ==  '0'  ||  prev  >=  '9')  {	  if    (prev    ==    '-'    ||    prev    <    '0'    ||    prev    >    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
279	[BUG]  [BUGGY]  if  (x  ==  '-'  ||  prev  <  '0'  ||  prev  >  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (x  ==  '-'  ||  prev  <  '0'  ||  prev  >  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  ==  '-'  ||  prev  <  '0'  ||  prev  >  '9')  {	  if    (prev    ==    '-'    ||    prev    <    '0'    ||    prev    >    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
280	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '0'  ||  prev  ==  '9')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '0'  ||  prev  ==  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  ==  '0'  ||  prev  ==  '9')  {	  if    (prev    ==    '-'    ||    prev    <    '0'    ||    prev    >    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
281	[BUG]  [BUGGY]  if(x  ==  '-'  ||  prev  ==  '9')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  ||  prev  ==  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  ||  prev  ==  '9')  {	  if(prev    ==    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
282	[BUG]  [BUGGY]  if(x  >  '0'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >  '0'  &&  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >  '0'  &&  prev  <=  '9')  {	  if(x    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
283	[BUG]  [BUGGY]  if(x  <=  '0'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <=  '0'  &&  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <=  '0'  &&  prev  <=  '9')  {	  if(x    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
284	[BUG]  [BUGGY]  if(x!=  '0'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  '0'  &&  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  '0'  &&  prev  <=  '9')  {	  if(x    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
285	[BUG]  [BUGGY]  if(x  <  '0'  ||  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  '0'  ||  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  '0'  ||  prev  <=  '9')  {	  if(x    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
286	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getFirstChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getFirstChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getFirstChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
287	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  value  =  getFirstChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  value  =  getFirstChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  value  =  getFirstChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
288	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <=  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <=  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <=  value)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
289	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  addNumber(x);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    ++i)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
290	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev  +  1;  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev  +  1;  ++i)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  prev  +  1;  ++i)  {  addNumber(x);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    ++i)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
291	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  getLastChar();  i++)  {  addNumber(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  getLastChar();  i++)  {  addNumber(i  +  1);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  getLastChar();  i++)  {  addNumber(i  +  1);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
292	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getFirstChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getFirstChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getFirstChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    <=    Math.abs(x))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
293	[BUG]  [BUGGY]  if(x!=  '-'  ||  prev  ==  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  '-'  ||  prev  ==  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  '-'  ||  prev  ==  '9')  {	  if(x    >=    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
294	[BUG]  [BUGGY]  if(x  >=  '-'  ||  prev!=  '9')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  '-'  ||  prev!=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  '-'  ||  prev!=  '9')  {	  if(x    >=    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
295	[BUG]  [BUGGY]  if  (x  ==  '-'  &&  prev  <=  0x7f  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (x  ==  '-'  &&  prev  <=  0x7f  &&  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  ==  '-'  &&  prev  <=  0x7f  &&  prev  ==  '-')  {	  if    (prev    ==    '-'    &&    prev    <=    0x7f    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
296	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0x7f  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0x7f  ||  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  prev  <=  0x7f  ||  prev  >=  '-')  {	  if    (prev    ==    '-'    &&    prev    <=    0x7f    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
297	[BUG]  [BUGGY]  if(x  <  0  ||  x  >  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  0  ||  x  >  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  0  ||  x  >  '-')  {	  if(x    <    0    ||    x    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
298	[BUG]  [BUGGY]  if(x  >  0  ||  x  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >  0  ||  x  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >  0  ||  x  ==  '-')  {	  if(x    <    0    ||    x    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
299	[BUG]  [BUGGY]  if(x  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-')  {	  if(prev!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
300	[BUG]  [BUGGY]  if(x  <  prev)  {  add(prev);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  prev)  {  add(prev);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  prev)  {  add(prev);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
301	[BUG]  [BUGGY]  if(x  <  prev)  {  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  prev)  {  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  prev)  {  add(prev);  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
302	[BUG]  [BUGGY]  if(prev!=  null)  {  add(prev);  }  else  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  add(prev);  }  else  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  add(prev);  }  else  {  addNumber(x);  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
303	[BUG]  [BUGGY]  if(prev  ==  null)  {  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  add(prev);  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
304	[BUG]  [BUGGY]  if(x  ==  '-'  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  ||  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  ||  prev  >=  '-')  {	  if(x    >    '-'    ||    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
305	[BUG]  [BUGGY]  if(x  >=  '-'  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  '-'  ||  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  '-'  ||  prev  >=  '-')  {	  if(x    >    '-'    ||    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
306	[BUG]  [BUGGY]  if(x  <  '-'  ||  prev  >  '-')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  '-'  ||  prev  >  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  '-'  ||  prev  >  '-')  {	  if(x    >    '-'    ||    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
307	[BUG]  [BUGGY]  if(x  >  '-'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >  '-'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >  '-'  ||  prev  ==  '-')  {	  if(x    >    '-'    ||    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
308	[BUG]  [BUGGY]  if(x  >  '-'  ||  prev  <  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >  '-'  ||  prev  <  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >  '-'  ||  prev  <  '-')  {	  if(x    >    '-'    ||    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
309	[BUG]  [BUGGY]  if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
310	[BUG]  [BUGGY]  if(x  >=  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
311	[BUG]  [BUGGY]  if(x!=  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
312	[BUG]  [BUGGY]  if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  addNumber(prev);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  addNumber(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  addNumber(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
313	[BUG]  [BUGGY]  if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
314	[BUG]  [BUGGY]  if(x  ==  'n'  ||  x  ==  'r'  ||  x  ==  'n'  ||  x  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  'n'  ||  x  ==  'r'  ||  x  ==  'n'  ||  x  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  'n'  ||  x  ==  'r'  ||  x  ==  'n'  ||  x  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    'n'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
315	[BUG]  [BUGGY]  if(prev  >=  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    'n'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
316	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getLastChar();  if(value  ==  value)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
317	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <  value)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
318	[BUG]  [BUGGY]  if  (x!=  '-'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (x!=  '-'  &&  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x!=  '-'  &&  prev  <=  '9')  {	  if    (prev!=    '-'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
319	[BUG]  [BUGGY]  if(x  >=  '-'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  '-'  ||  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  '-'  ||  prev  ==  '+')  {	  if(prev!=    '-'    ||    prev    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
320	[BUG]  [BUGGY]  if(x!=  '-'  ||  x  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  '-'  ||  x  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  '-'  ||  x  ==  '+')  {	  if(prev!=    '-'    ||    prev    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
321	[BUG]  [BUGGY]  if(prev  >=  '0'  &&  prev  <=  '9'  ||  prev  >=  'a'  &&  prev  <=  'z')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '0'  &&  prev  <=  '9'  ||  prev  >=  'a'  &&  prev  <=  'z')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '0'  &&  prev  <=  '9'  ||  prev  >=  'a'  &&  prev  <=  'z')  {	  if(prev    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
322	[BUG]  [BUGGY]  if(prev  >=  '0'  &&  prev  <=  '9'  ||  prev  >=  'a'  &&  prev  <=  'f')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '0'  &&  prev  <=  '9'  ||  prev  >=  'a'  &&  prev  <=  'f')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '0'  &&  prev  <=  '9'  ||  prev  >=  'a'  &&  prev  <=  'f')  {	  if(prev    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
323	[BUG]  [BUGGY]  if(prev  >=  '0'  &&  prev  <=  '9'  ||  prev  >=  'A'  &&  prev  <=  'Z')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '0'  &&  prev  <=  '9'  ||  prev  >=  'A'  &&  prev  <=  'Z')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '0'  &&  prev  <=  '9'  ||  prev  >=  'A'  &&  prev  <=  'Z')  {	  if(prev    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
324	[BUG]  [BUGGY]  if(x  ==  '-'  ||  x  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  ||  x  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  ||  x  ==  '+')  {	  if(prev    ==    '-'    ||    prev    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
325	[BUG]  [BUGGY]  if(x  ==  '.'  ||  prev  ==  '-'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '.'  ||  prev  ==  '-'  ||  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '.'  ||  prev  ==  '-'  ||  prev  ==  '+')  {	  if(prev    ==    '-'    ||    prev    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
326	[BUG]  [BUGGY]  if  (x  ==  '-'  ||  prev  <=  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (x  ==  '-'  ||  prev  <=  0)  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  ==  '-'  ||  prev  <=  0)  {	  if    (prev    ==    '-'    &&    prev    <=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
327	[BUG]  [BUGGY]  if(x  >=  '-'  &&  prev  ==  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  '-'  &&  prev  ==  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  '-'  &&  prev  ==  '9')  {	  if(x    >=    '-'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
328	[BUG]  [BUGGY]  if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    add(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
329	[BUG]  [BUGGY]  if(x  >=  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    add(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
330	[BUG]  [BUGGY]  if(x!=  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    add(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
331	[BUG]  [BUGGY]  if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  prev  =  getLastChar();  add(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    add(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
332	[BUG]  [BUGGY]  if(x  <  0.0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  0.0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  0.0)  {  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    add(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
333	[BUG]  [BUGGY]  if  (x  ==  '0'  &&  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (x  ==  '0'  &&  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  ==  '0'  &&  prev  >=  '-')  {	  if    (prev    ==    '0'    &&    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
334	[BUG]  [BUGGY]  if(prev  >=  '0'  &&  prev  <=  '-')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  >=  '0'  &&  prev  <=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '0'  &&  prev  <=  '-')  {	  if    (prev    ==    '0'    &&    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
335	[BUG]  [BUGGY]  if  (x  ==  '-'  &&  prev  <=  0  &&  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if  (x  ==  '-'  &&  prev  <=  0  &&  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  ==  '-'  &&  prev  <=  0  &&  prev  >=  '-')  {	  if    (prev    ==    '-'    &&    prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
336	[BUG]  [BUGGY]  if(x  >  '-')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >  '-')  {	  if    (x    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
337	[BUG]  [BUGGY]  if(prev  ==  '+'  ||  prev  ==  '%')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '+'  ||  prev  ==  '%')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '+'  ||  prev  ==  '%')  {	  if(prev    ==    '-'    ||    prev    ==    '%')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
338	[BUG]  [BUGGY]  if(x  ==  '-'  ||  x  ==  '%')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  ||  x  ==  '%')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  ||  x  ==  '%')  {	  if(prev    ==    '-'    ||    prev    ==    '%')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
339	[BUG]  [BUGGY]  if(x  >=  prev)  {  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  prev)  {  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  prev)  {  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }	  if(prev!=    null)    {    for(int    x    =    0;    x    <    prev;    ++x)    {    mantissa    +=    Math.pow(10,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
340	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  length;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  length;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  x  =  0;  x  <  length;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }	  if(prev!=    null)    {    for(int    x    =    0;    x    <    prev;    ++x)    {    mantissa    +=    Math.pow(10,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
341	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  128,  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  128,  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  x  =  0;  x  <  128,  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }	  if(prev!=    null)    {    for(int    x    =    0;    x    <    prev;    ++x)    {    mantissa    +=    Math.pow(10,    prev);    }    	non-compiled	[CE]  ';'  expected	52	None	replace
342	[BUG]  [BUGGY]  if(x  ==  prev)&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev)&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev)&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev    >=    '>')&    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
343	[BUG]  [BUGGY]  if(x  ==  prev)&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev  >='<  ')&&(prev  >=  '>  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev)&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev  >='<  ')&&(prev  >=  '>  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev)&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev  >='<  ')&&(prev  >=  '>	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev    >=    '>')&    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
344	[BUG]  [BUGGY]  if(x  >=  '.'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  '.'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  '.'  ||  prev  ==  '-')  {	  if(prev    ==    '.'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
345	[BUG]  [BUGGY]  if(x  <=  '0'  ||  prev  >  '9')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <=  '0'  ||  prev  >  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <=  '0'  ||  prev  >  '9')  {	  if(prev    ==    '.'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
346	[BUG]  [BUGGY]  if(x  <=  '0'  ||  x  >  '9')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <=  '0'  ||  x  >  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <=  '0'  ||  x  >  '9')  {	  if(prev    ==    '.'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
347	[BUG]  [BUGGY]  if(x  >=  prev)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  prev)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  prev)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    Math.pow(10,    prev);    if(value    <    100)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
348	[BUG]  [BUGGY]  if(x  ==  prev)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    Math.pow(10,    prev);    if(value    <    100)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
349	[BUG]  [BUGGY]  if(x!=  prev)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  prev)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  prev)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    Math.pow(10,    prev);    if(value    <    100)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
350	[BUG]  [BUGGY]  if(x  <  100)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  100)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  100)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    Math.pow(10,    prev);    if(value    <    100)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
351	[BUG]  [BUGGY]  if(x  <=  0)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <=  0)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <=  0)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    Math.pow(10,    prev);    if(value    <    100)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
352	[BUG]  [BUGGY]  if(x  ==  prev)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev)  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev)  {	  if    (prev    ==    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
353	[BUG]  [BUGGY]  if(prev  ==  null  ||  prev!=  x)  {  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null  ||  prev!=  x)  {  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null  ||  prev!=  x)  {  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    ++i)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
354	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    ++i)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
355	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  x;  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  x;  ++i)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  i  =  0;  i  <  x;  ++i)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    ++i)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
356	[BUG]  [BUGGY]  if(x  >=  '0'  ||  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  '0'  ||  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  '0'  ||  prev  <=  '9')  {	  if(x    >=    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
357	[BUG]  [BUGGY]  if(x  ==  '.'  ||  prev  ==  '-'  ||  prev  ==  '%')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '.'  ||  prev  ==  '-'  ||  prev  ==  '%')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '.'  ||  prev  ==  '-'  ||  prev  ==  '%')  {	  if(prev    ==    '-'    ||    prev    ==    '%')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
358	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '%'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '%'  ||  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  ==  '%'  ||  prev  ==  '+')  {	  if(prev    ==    '-'    ||    prev    ==    '%')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
359	[BUG]  [BUGGY]  if(x  ==  '+'  ||  prev  ==  '%')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '+'  ||  prev  ==  '%')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '+'  ||  prev  ==  '%')  {	  if(prev    ==    '-'    ||    prev    ==    '%')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
360	[BUG]  [BUGGY]  if(x  ==  '.'  ||  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '.'  ||  prev  ==  ':')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '.'  ||  prev  ==  ':')  {	  if(prev    ==    '-'    ||    prev    ==    '%')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
361	[BUG]  [BUGGY]  if(x  ==  prev)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
362	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <=  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <=  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  <=  value)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
363	[BUG]  [BUGGY]  if(x  >=  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    'n'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
364	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  0  ||  prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  0  ||  prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    'n'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
365	[BUG]  [BUGGY]  if(x  <  0  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  0  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  0  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    'n'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
366	[BUG]  [BUGGY]  if(x  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev!=  't')  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev!=  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev!=  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    'n'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
367	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  this.prev;  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  this.prev;  ++i)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  this.prev;  ++i)  {  addNumber(x);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    ++i)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
368	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  length();  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  length();  ++i)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  length();  ++i)  {  addNumber(x);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    ++i)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
369	[BUG]  [BUGGY]  if(x!=  '.'  ||  prev  ==  '-'  ||  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  '.'  ||  prev  ==  '-'  ||  prev  ==  ':')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  '.'  ||  prev  ==  '-'  ||  prev  ==  ':')  {	  if(prev!=    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
370	[BUG]  [BUGGY]  if(x  ==  prev  ||  prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev  ||  prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev  ||  prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
371	[BUG]  [BUGGY]  if(x  >=  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
372	[BUG]  [BUGGY]  if(x  ==  prev  ||  prev  ==  'r'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev  ||  prev  ==  'r'  ||  prev  ==  't')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev  ||  prev  ==  'r'  ||  prev  ==  't')  {	  if(prev    ==    'n'    ||    prev    ==    'r'    ||    prev    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
373	[BUG]  [BUGGY]  if(x  ==  '.'  ||  prev  ==  '-'  ||  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '.'  ||  prev  ==  '-'  ||  prev  ==  ':')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '.'  ||  prev  ==  '-'  ||  prev  ==  ':')  {	  if(prev    ==    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
374	[BUG]  [BUGGY]  if(x  ==  '+'  ||  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '+'  ||  prev  ==  ':')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '+'  ||  prev  ==  ':')  {	  if(prev    ==    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
375	[BUG]  [BUGGY]  if(x  ==  ':'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  ':'  ||  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  ':'  ||  prev  ==  '+')  {	  if(prev    ==    '-'    ||    prev    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
376	[BUG]  [BUGGY]  if(x  <=  '9'  ||  prev  ==  '-'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <=  '9'  ||  prev  ==  '-'  &&  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <=  '9'  ||  prev  ==  '-'  &&  prev  <=  '9')  {	  if    (prev    ==    '-'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
377	[BUG]  [BUGGY]  if(x  <=  prev  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <=  prev  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <=  prev  ||  prev  ==  '-')  {	  if(prev    <    x    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
378	[BUG]  [BUGGY]  if(x  ==  prev)&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev)&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev)&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev!=    '>')&    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
379	[BUG]  [BUGGY]  if((  prev!=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>  [CE]  unclosed  character  literal  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if((  prev!=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if((  prev!=  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>	  if    ((    prev    ==    '-')&&(prev!=    ':')&&(prev!=    '%')&&(prev!=    '+')&&(prev!=    '#')&&(prev!='<    ')&&(prev!=    '>')&    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
380	[BUG]  [BUGGY]  if(prev  <  x  ||  x  >  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  <  x  ||  x  >  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  <  x  ||  x  >  '-')  {	  if(x    <    0    ||    x    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
381	[BUG]  [BUGGY]  if(x  ==  ':'  ||  prev  ==  '+'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  ':'  ||  prev  ==  '+'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  ':'  ||  prev  ==  '+'  ||  prev  ==  '-')  {	  if(prev    ==    '+'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
382	[BUG]  [BUGGY]  if(x  ==  '-'  ||  prev  ==  '+'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  ||  prev  ==  '+'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  ||  prev  ==  '+'  ||  prev  ==  '-')  {	  if(prev    ==    '+'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
383	[BUG]  [BUGGY]  if(prev  ==  '.'  ||  prev  ==  '+'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '.'  ||  prev  ==  '+'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '.'  ||  prev  ==  '+'  ||  prev  ==  '-')  {	  if(prev    ==    '+'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
384	[BUG]  [BUGGY]  if(x  >  '-'  ||  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >  '-'  ||  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >  '-'  ||  prev  <=  '9')  {	  if(x    >=    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
385	[BUG]  [BUGGY]  if(x  <=  '9'  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <=  '9'  ||  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <=  '9'  ||  prev  >=  '-')  {	  if(x    >=    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
386	[BUG]  [BUGGY]  if(x  <=  '9'  ||  prev  ==  '-'  ||  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <=  '9'  ||  prev  ==  '-'  ||  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <=  '9'  ||  prev  ==  '-'  ||  prev  <=  '9')  {	  if(prev    ==    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
387	[BUG]  [BUGGY]  if(x  <=  '9'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <=  '9'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <=  '9'  ||  prev  ==  '-')  {	  if(prev    ==    '-'    ||    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
388	[BUG]  [BUGGY]  if(prev!=  '0'  &&  prev  <=  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  '0'  &&  prev  <=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  '0'  &&  prev  <=  '-')  {	  if    (prev    ==    '0'    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
389	[BUG]  [BUGGY]  if(x  ==  '0'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '0'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '0'  ||  prev  ==  '-')  {	  if    (prev    ==    '0'    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
390	[BUG]  [BUGGY]  if(x  ==  '0'  &&  prev  <=  '-')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '0'  &&  prev  <=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '0'  &&  prev  <=  '-')  {	  if    (prev    ==    '0'    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
391	[BUG]  [BUGGY]  if(x  ==  null)  {  double  mantissa  =  getLastChar();  addNumber(x,  prev);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  null)  {  double  mantissa  =  getLastChar();  addNumber(x,  prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  null)  {  double  mantissa  =  getLastChar();  addNumber(x,  prev);  }	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x,    prev);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
392	[BUG]  [BUGGY]  if(x!=  '.')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  '.')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  '.')  {	  if(prev!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
393	[BUG]  [BUGGY]  if(x!=  '.'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  '.'  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  '.'  ||  prev  ==  '-')  {	  if(prev!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
394	[BUG]  [BUGGY]  if(x  ==  '0'  ||  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '0'  ||  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '0'  ||  prev  <=  '9')  {	  if    (prev    ==    '0'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
395	[BUG]  [BUGGY]  if(x  <=  0)  {  if(prev  ==  null)  {  add( "null ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <=  0)  {  if(prev  ==  null)  {  add( "null ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <=  0)  {  if(prev  ==  null)  {  add( "null ");  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
396	[BUG]  [BUGGY]  if(x  >=  null)  {  if(prev  ==  null)  {  add( "null ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  null)  {  if(prev  ==  null)  {  add( "null ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  null)  {  if(prev  ==  null)  {  add( "null ");  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
397	[BUG]  [BUGGY]  if(x  >  0)  {  if(prev  ==  null)  {  add( "null ");  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >  0)  {  if(prev  ==  null)  {  add( "null ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >  0)  {  if(prev  ==  null)  {  add( "null ");  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    addNumber(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
398	[BUG]  [BUGGY]  if(x  <  '0'  ||  prev  >  '9')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  '0'  ||  prev  >  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  '0'  ||  prev  >  '9')  {	  if    (prev    ==    '-'    ||    prev    <    '0'    ||    prev    >    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
399	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '0'  ||  prev  >  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '0'  ||  prev  >  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  ==  '0'  ||  prev  >  '9')  {	  if    (prev    ==    '-'    ||    prev    <    '0'    ||    prev    >    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
400	[BUG]  [BUGGY]  if(x  <  prev  ||  prev  <  '0'  ||  prev  >  '9')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  prev  ||  prev  <  '0'  ||  prev  >  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  prev  ||  prev  <  '0'  ||  prev  >  '9')  {	  if    (prev    ==    '-'    ||    prev    <    '0'    ||    prev    >    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
401	[BUG]  [BUGGY]  if(x  ==  prev)  {  add(prev);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev)  {  add(prev);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev)  {  add(prev);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
402	[BUG]  [BUGGY]  if(x  ==  prev)  {  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev)  {  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev)  {  add(prev);  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
403	[BUG]  [BUGGY]  if(x  >=  prev)  {  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  prev)  {  add(prev);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  prev)  {  add(prev);  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
404	[BUG]  [BUGGY]  if(x  <  prev)  {  add(prev);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <  prev)  {  add(prev);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  prev)  {  add(prev);  }  else  {  throw  new  IllegalStateException( " ");  }	  add(prev);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
405	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '-'  &&  prev  <=  0  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '-'  &&  prev  <=  0  &&  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  ==  '-'  &&  prev  <=  0  &&  prev  ==  '-')  {	  if    (prev    ==    '-'    &&    prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
406	[BUG]  [BUGGY]  if(x  ==  '-'  &&  prev  <=  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  &&  prev  <=  0  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  &&  prev  <=  0  ||  prev  ==  '-')  {	  if    (prev    ==    '-'    &&    prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
407	[BUG]  [BUGGY]  if(x  ==  prev)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  prev)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  prev)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    <=    Math.abs(x))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
408	[BUG]  [BUGGY]  if(x!=  prev)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  prev)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  prev)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    <=    Math.abs(x))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
409	[BUG]  [BUGGY]  if(x  >=  prev)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  prev)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  prev)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    <=    Math.abs(x))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
410	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  this.prev;  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  this.prev;  i++)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  this.prev;  i++)  {  addNumber(x);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
411	[BUG]  [BUGGY]  if(value  ==  prev)  {  double  value  =  getLastChar();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(value  ==  prev)  {  double  value  =  getLastChar();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(value  ==  prev)  {  double  value  =  getLastChar();  addNumber(x);  }	  if(prev    ==    null)    {    double    value    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
412	[BUG]  [BUGGY]  if(x  ==  '.'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '.'  ||  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '.'  ||  prev  ==  '+')  {	  if(prev    ==    '-'    ||    prev    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
413	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  <=  0x7f  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  '-'  ||  prev  <=  0x7f  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  <=  0x7f  ||  prev  ==  '-')  {	  if    (prev    ==    '-'    &&    prev    <=    0x7f    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
414	[BUG]  [BUGGY]  if(x  ==  '-'  &&  prev  <=  0x7f  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  &&  prev  <=  0x7f  ||  prev  ==  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  &&  prev  <=  0x7f  ||  prev  ==  '-')  {	  if    (prev    ==    '-'    &&    prev    <=    0x7f    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
415	[BUG]  [BUGGY]  if(x  ==  '.'  ||  prev  ==  ',')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '.'  ||  prev  ==  ',')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '.'  ||  prev  ==  ',')  {	  if(prev    ==    '-'    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
416	[BUG]  [BUGGY]  if(x  >=  prev)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >=  prev)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  prev)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
417	[BUG]  [BUGGY]  if(x!=  prev)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  prev)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  prev)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }	  if(prev!=    null)    {    double    value    =    getLastChar();    if(value    >    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
418	[BUG]  [BUGGY]  if(prev!=  '-'  &&  prev  <=  '0')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  '-'  &&  prev  <=  '0')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  '-'  &&  prev  <=  '0')  {	  if    (prev    ==    '-'    &&    prev    <=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
419	[BUG]  [BUGGY]  if(x  >  '-'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >  '-'  &&  prev  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >  '-'  &&  prev  <=  '9')  {	  if(x    >=    '-'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
420	[BUG]  [BUGGY]  if(x  >  '9'  &&  prev  <=  '0')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  >  '9'  &&  prev  <=  '0')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >  '9'  &&  prev  <=  '0')  {	  if(x    >=    '-'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
421	[BUG]  [BUGGY]  if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  null)  {  if(prev  ==  null)  {  add( "null ");  }	  if(prev    ==    null)    {    add(   "null   ");    }    else    {    double    prev    =    getLastChar();    add(prev);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
422	[BUG]  [BUGGY]  if(prev  ==  null  ||  prev!=  x)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null  ||  prev!=  x)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null  ||  prev!=  x)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
423	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
424	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  x;  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  x;  i++)  {  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  i  =  0;  i  <  x;  i++)  {  addNumber(x);  }	  if(prev    ==    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
425	[BUG]  [BUGGY]  if(prev  <  0  ||  prev  >  '-'  ||  prev  >=  '+')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  <  0  ||  prev  >  '-'  ||  prev  >=  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  <  0  ||  prev  >  '-'  ||  prev  >=  '+')  {	  if    (prev    <    0    ||    prev    >    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
426	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  addNumber(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  addNumber(i  +  1);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  addNumber(i  +  1);  }	  if(prev!=    null)    {    for(int    i    =    0;    i    <    prev;    i++)    {    addNumber(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
427	[BUG]  [BUGGY]  if(x  ==  '0'  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '0'  ||  prev  >=  '-')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '0'  ||  prev  >=  '-')  {	  if    (prev    ==    '0'    &&    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
428	[BUG]  [BUGGY]  if(x!=  '.'  ||  prev  ==  '-'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x!=  '.'  ||  prev  ==  '-'  ||  prev  ==  '+')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x!=  '.'  ||  prev  ==  '-'  ||  prev  ==  '+')  {	  if(prev!=    '-'    ||    prev    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
429	[BUG]  [BUGGY]  if(x  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <=  '9')  {	  if    (prev    ==    '-'    &&    x    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
430	[BUG]  [BUGGY]  if(x  ==  '-'  ||  x  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(x  ==  '-'  ||  x  <=  '9')  {  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  ==  '-'  ||  x  <=  '9')  {	  if    (prev    ==    '-'    &&    x    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
431	[BUG]  [BUGGY]  if(prev  ==  null  ||  prev  ==  null)  {  double  mantissa  =  getLastChar();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null  ||  prev  ==  null)  {  double  mantissa  =  getLastChar();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null  ||  prev  ==  null)  {  double  mantissa  =  getLastChar();  addNumber(x);  }	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
432	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  mantissa  =  getLastChar().doubleValue();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();      [BUGGY]  if(prev  ==  null)  {  double  mantissa  =  getLastChar().doubleValue();  addNumber(x);  }  [BUGGY]      add(     "       ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  mantissa  =  getLastChar().doubleValue();  addNumber(x);  }	  if(prev    ==    null)    {    double    mantissa    =    getLastChar();    addNumber(x);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
