bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (prev  <  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  [BUGGY]  if  (prev  <  0  ||  prev  ==  '-')  {  [BUGGY]  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  <  0  ||  prev  ==  '-')  {	if  (x  <  0  &&  prev  ==  '-')  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
2	[BUG]  [BUGGY]  if  (prev  <  0  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  [BUGGY]  if  (prev  <  0  &&  prev  ==  '-')  {  [BUGGY]  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  <  0  &&  prev  ==  '-')  {	if  (x  <  0  &&  prev  ==  '-')  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  if  (prev  <=  0  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  [BUGGY]  if  (prev  <=  0  &&  prev  ==  '-')  {  [BUGGY]  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  <=  0  &&  prev  ==  '-')  {	if  (x  <  0  &&  prev  ==  '-')  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  if  (prev  >=  '-'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  [BUGGY]  if  (prev  >=  '-'  &&  prev  <=  '9')  {  [BUGGY]  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  >=  '-'  &&  prev  <=  '9')  {	if  (x  <  0  &&  prev  ==  '-')  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  if  (prev  <  0  &&  x  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  [BUGGY]  if  (prev  <  0  &&  x  ==  '-')  {  [BUGGY]  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  <  0  &&  x  ==  '-')  {	if  (x  <  0  &&  prev  ==  '-')  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]              ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  [BUGGY]    [BUGGY]  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	  	if  (x  <  0  &&  prev  ==  '-')  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  if  (x  <  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  [BUGGY]  if  (x  <  0  ||  prev  ==  '-')  {  [BUGGY]  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  <  0  ||  prev  ==  '-')  {	if  (x  <  0  &&  prev  ==  '-')  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  if  (prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  [BUGGY]  if  (prev  >=  '-')  {  [BUGGY]  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  >=  '-')  {	if  (x  <  0  &&  prev  ==  '-')  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  if  (prev  <  0  &&  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  [BUGGY]  if  (prev  <  0  &&  prev  >=  '-')  {  [BUGGY]  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  <  0  &&  prev  >=  '-')  {	if  (x  <  0  &&  prev  ==  '-')  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  if  (prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  void  addNumber(double  x)  {    char  prev  =  getLastChar();  [BUGGY]  if  (prev  ==  '-')  {  [BUGGY]  add( "   ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-')  {	if  (x  <  0  &&  prev  ==  '-')  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
