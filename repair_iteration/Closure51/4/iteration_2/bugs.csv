bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (prev  <  0  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  <  0  ||  prev  >=  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  <  0  ||  prev  >=  '-')  {	  if    (prev    <    0    &&    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  '9')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  prev  <=  '9')  {	  if    (prev    <    0    &&    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  if  (prev!=  '-'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev!=  '-'  &&  prev  <=  '9')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev!=  '-'  &&  prev  <=  '9')  {	  if    (prev    <    0    &&    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  if  (prev  ==  '0'  &&  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  ==  '0'  &&  prev  >=  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '0'  &&  prev  >=  '-')  {	  if    (prev    <    0    &&    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  if  (x  <  0  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (x  <  0  ||  prev  >=  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  <  0  ||  prev  >=  '-')  {	  if    (prev    <    0    &&    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  if(prev!=  '-')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev!=  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  '-')  {	  if    (prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '+')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  ==  '+')  {	  if    (prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  if(prev!=  '-'  ||  prev  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev!=  '-'  ||  prev  ==  '+')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  '-'  ||  prev  ==  '+')  {	  if    (prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  if  (prev  <=  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  <=  0  ||  prev  ==  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  <=  0  ||  prev  ==  '-')  {	  if    (x    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  if  (prev  <  0  ||  prev!=  '-')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  <  0  ||  prev!=  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  <  0  ||  prev!=  '-')  {	  if    (x    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  if  (prev  ==  '0'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  ==  '0'  &&  prev  <=  '9')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '0'  &&  prev  <=  '9')  {	  if    (prev    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  if  (prev  ==  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  ==  0  ||  prev  ==  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  0  ||  prev  ==  '-')  {	  if    (prev    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  if  (prev  ==  '-'  ||  prev  <  '0'  ||  prev  >  '9')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  ==  '-'  ||  prev  <  '0'  ||  prev  >  '9')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  ||  prev  <  '0'  ||  prev  >  '9')  {	  if    (prev    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  double  prev  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  double  prev  =  getLastChar();  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  prev  =  getLastChar();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  char  prev  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  char  prev  =  getLastChar();  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	char  prev  =  getLastChar();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  mantissa  =  getLastChar();  addNumber(x,  prev);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  null)  {  double  mantissa  =  getLastChar();  addNumber(x,  prev);  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  mantissa  =  getLastChar();  addNumber(x,  prev);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  addNumber(prev);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  add( "null ");  }  else  {  double  prev  =  getLastChar();  add(prev);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  mantissa  =  getLastChar();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  null)  {  double  mantissa  =  getLastChar();  addNumber(x);  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  mantissa  =  getLastChar();  addNumber(x);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  addNumber(x);  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  value  =  getLastChar();  addNumber(x);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  if  (prev  ==  '0'  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  ==  '0'  &&  prev  ==  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '0'  &&  prev  ==  '-')  {	  if    (prev    <    0    &&    x    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  x  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  ==  '-'  &&  x  <=  '9')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  x  <=  '9')  {	  if    (prev    <    0    &&    x    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0  &&  prev  ==  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  prev  <=  0  &&  prev  ==  '-')  {	  if    (prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  if  (prev!=  '-'  &&  prev  <=  0  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev!=  '-'  &&  prev  <=  0  &&  prev  ==  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev!=  '-'  &&  prev  <=  0  &&  prev  ==  '-')  {	  if    (prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
25	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0x7f  &&  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0x7f  &&  prev  ==  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  prev  <=  0x7f  &&  prev  ==  '-')  {	  if    (prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  if  (prev  >=  '-'  ||  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  >=  '-'  ||  prev  <=  '9')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  >=  '-'  ||  prev  <=  '9')  {	  if    (prev    >=    '-'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  ==  '-')  {	  if    (prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  '-'  ||  prev  ==  ':')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  ==  ':')  {	  if    (prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  if  (prev  <  0  ||  prev  >  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  <  0  ||  prev  >  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  <  0  ||  prev  >  '-')  {	  if    (prev    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  add(prev);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  add(prev);  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	add(prev);	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(x);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  for(int  i  =  0;  i  <  prev;  ++i)  {  addNumber(x);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
35	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(i  +  1);  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  i  =  0;  i  <  prev;  i++)  {  addNumber(i  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
36	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  '0')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  '0')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  prev  <=  '0')  {	  if    (prev    <    0    &&    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  if  ((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>')&  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  ((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>')&  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  ((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev!=  '>')&	  if    (prev    >=    '-')    {    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
38	[BUG]  [BUGGY]  if  (x  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (x  >=  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  >=  '-')  {	  if    (prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  if  ((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>')&  [CE]  unclosed  character  literal  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  ((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>')&  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  ((  prev  ==  '-')&&(prev!=  ':')&&(prev!=  '%')&&(prev!=  '+')&&(prev!=  '#')&&(prev!='<  ')&&(prev  >=  '>')&	  if    (prev    >=    '-')    {    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
40	[BUG]  [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (prev  ==  '-'  &&  prev  <=  0)  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (prev  ==  '-'  &&  prev  <=  0)  {	  if    (prev    <=    0    &&    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  if(x  >=  '-'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(x  >=  '-'  &&  prev  <=  '9')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  '-'  &&  prev  <=  '9')  {	  if    (prev    >=    '-'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  '-'  ||  prev  <=  '9')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  <=  '9')  {	  if    (prev    >=    '-'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  if  (x  <=  0  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if  (x  <=  0  ||  prev  ==  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if  (x  <=  0  ||  prev  ==  '-')  {	  if    (x    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  if(prev  ==  '+'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  '+'  ||  prev  ==  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '+'  ||  prev  ==  '-')  {	  if    (prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  'n'  ||  prev  ==  't')  {	  if    (prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
46	[BUG]  [BUGGY]  if(prev  <  x  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  <  x  ||  prev  ==  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  <  x  ||  prev  ==  '-')  {	  if    (x    <    0    ||    prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  if(x  >  '-'  ||  prev  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(x  >  '-'  ||  prev  >=  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >  '-'  ||  prev  >=  '-')  {	  if    (prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
48	[BUG]  [BUGGY]  if(prev!=  '-'  ||  prev  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev!=  '-'  ||  prev  ==  ':')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  '-'  ||  prev  ==  ':')  {	  if    (prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  if(x  >  '-'  ||  prev  >=  '+')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(x  >  '-'  ||  prev  >=  '+')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >  '-'  ||  prev  >=  '+')  {	  if    (prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getLastChar();  if(value  <=  Math.abs(x))  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
51	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev!=  null)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev!=  null)  {  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  for(int  x  =  0;  x  <  prev;  ++x)  {  mantissa  +=  Math.pow(10,  prev);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
53	[BUG]  [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  null)  {  double  value  =  getLastChar();  if(value  >  value)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev!=  null)  {  double  value  =  Math.pow(10,  prev);  if(value  <  100)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  double  value  =  getLastChar();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  double  value  =  getLastChar();  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	double  value  =  getLastChar();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  'n'  ||  prev  ==  'r'  ||  prev  ==  't')  {	  if    (prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  if(prev  ==  '.'  ||  prev  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  '.'  ||  prev  ==  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '.'  ||  prev  ==  '-')  {	  if    (prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '%')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  ==  '-'  ||  prev  ==  '%')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  ==  '-'  ||  prev  ==  '%')  {	  if    (prev    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  if(x  <  0  ||  x  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(x  <  0  ||  x  ==  '-')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  <  0  ||  x  ==  '-')  {	  if    (prev    <    0    &&    x    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  if(prev  >=  '0'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(prev  >=  '0'  &&  prev  <=  '9')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(prev  >=  '0'  &&  prev  <=  '9')  {	  if    (prev    <    0    &&    prev    >=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
61	[BUG]  [BUGGY]  if(x  >=  '-'  ||  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(x  >=  '-'  ||  prev  <=  '9')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  '-'  ||  prev  <=  '9')  {	  if    (prev    >=    '-'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  if(x  >=  '0'  &&  prev  <=  '9')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addNumber(double  x)  {    char  prev  =  getLastChar();    [BUGGY]  if(x  >=  '0'  &&  prev  <=  '9')  {  [BUGGY]    add(   "     ");  }  if  ((long)  x  ==  x)  {  long  value  =  (long)  x;  long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	237	237	1	replace	if(x  >=  '0'  &&  prev  <=  '9')  {	  if    (prev    >=    '-'    &&    prev    <=    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
