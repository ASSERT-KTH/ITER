projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81if(sd<=0){thrownewNotStrictlyPositiveException(LocalizedFormats.STANDARD_DEVIATION,sd);}
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81solverAbsoluteAccuracy=solverAbsoluteAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81if(sd<=0){thrownewNotStrictlyPositiveException(LocalizedFormats.STANDARD_DEVIATION,sd);}else{solverAbsoluteAccuracy=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;}
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81if(sd<=0){thrownewNotStrictlyPositiveException(LocalizedFormats.STANDARD_DEVIATION,sd);}else{solverAbsoluteAccuracy=null;}
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81if(sd<=0){thrownewNotStrictlyPositiveException(LocalizedFormats.STANDARD_DEVIATION,sd);}else{solverAbsoluteAccuracy=DEFAULT_INVERSE_ABSOLUTE_ACCURAC
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81}
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81if(sd<=0){thrownewNotStrictlyPositiveException(LocalizedFormats.STANDARD_DEVIATION);}
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81this.standardDeviation=solverAbsoluteAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81if(sd<=0){thrownewNotStrictlyPositiveException(LocalizedFormats.INVERSE_ABSOLUTE_ACCURACY,solverAbsoluteAccuracy);}
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81solverAbsoluteAccuracy=solverAbsoluteAccuracy/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81solverAbsoluteAccuracy=solverAbsoluteAccuracy.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81solverAbsoluteAccuracy=solverAbsoluteAccuracy;this.standardDeviation=solverAbsoluteAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java81this.standardDeviation=inverseCumAccuracy;
