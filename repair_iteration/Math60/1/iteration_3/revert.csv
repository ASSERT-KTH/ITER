projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x)/2.0;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-standardDeviation);timeout
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(mean-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x/standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x*standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-20);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125timeout
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-standardDeviation);doublemean=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-standardDeviation);Doublemean=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-standardDeviation);doublemean=Math.abs(x-StandardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-standardDeviation);doublemean=Math.abs(x-standardsDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-standardDeviation);doublemean=Math.abs(x*standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean;finaldoubledev=x/mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean;Finaldoubledev=x/mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean;staticfinaldoubledev=x/mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean;finaldoubledev=x/means;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation;finaldoubledev=x-standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation;Finaldoubledev=x-standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation;finaldoubledev=x-StandardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation;finaldoubledev=x-standardsDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*1+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/2.0;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.pow(10,x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.exp(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean-x;finaldoubledev=mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean-x;Finaldoubledev=mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean-x;staticfinaldoubledev=mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean-x;finaldoubledev=mean-x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(sqrt2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(x,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI;timeout
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.rint(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.pow(10,x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.exp(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()*Math.random());
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);doublemean=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);Doublemean=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);longstandardDeviation=FastMath.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);finaldoublemean=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);doublemeans=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean-x;timeout
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean;timeout=System.currentTimeMillis();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.max(dev.doubleValue(),x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=this.mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));doublemean=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));Doublemean=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));doublemean=Math.abs(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));longstandardDeviation=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));doublemean=Math.sqrt(Math.abs(y));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI;finaldoubledev=x-mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI;finaldoubledev=x-mean*SqRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI;Finaldoubledev=x-mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI;finaldoubledev=x-mean*SQRT2PI);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)/2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);doublemean=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);Doublemean=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);longstandardDeviation=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);finaldoublemean=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);x=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));doublemean=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));Doublemean=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));longstandardDeviation=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));doublemean=Math.sqrt(Math.log(y));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x)-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.min(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x+1));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean/x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x));doublemean=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x));Doublemean=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x));doublemean=Math.max(0,Math.abs(y));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x));doublemeans=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x));doublemean=Math.max(1,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean+1;finaldoubledev=x-mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean+1;Finaldoubledev=x-mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean+1;finaldoubledev=x-mean+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean+1;finaldoubledev=x+mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Mat.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(y)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/3.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random());
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x));longmean=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI;staticfinaldoubledev=x-mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)1/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation;staticfinaldoubledev=x-standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation;finaldoublex=x-standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=standardDeviation-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean-x;finaldoubledev=mean*x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(true);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(false);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x)+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);longstandardDeviation=FastMath.sqrt(2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);longstandardDeviation=FastMath.sqrt(1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);longstandardDeviation=FastMath.sqrt(0.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean;finaldoublex=x/mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));intstandardDeviation=FastMath.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*4;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean+1;staticfinaldoubledev=x-mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-standardDeviation);doublestandardDeviation=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-standardDeviation);DoublestandardDeviation=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-standardDeviation);longstandardDeviation=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=value-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean-x;finaldoubledev=means-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()*Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.abs(x-mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x-mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.abs(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));intstandardDeviation=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));x=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x-1));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(1,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);longmean=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x-standardDeviation));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Finaldoubledev=x-mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x/1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x*1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=standardDeviation-x;timeout
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(Math.abs(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.sqrt(Math.abs(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.cos(Math.abs(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(mean)/standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/dev;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)/1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)+2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublemean=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nullmean=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x0-mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));Math.sqrt(Math.log(x));doublemean=Math.sqrt(Math.log(x));Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));Math.sqrt(Math.log(x));Doublemean=Math.sqrt(Math.log(x));Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));Math.sqrt(Math.log(x));doublemean=Math.sqrt(Math.log(y));Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));Math.sqrt(Math.log(x));doublemean=Math.log(Math.log(x));Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));Math.sqrt(Math.log(x));doublemean=Math.sqrt(Math.log(x));Math.sqrt(Math.log(y));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.pow(10,y)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.pow(10,x+1)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.pow(10,X)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean*x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(x,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(x+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(mean*standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(mean/standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x)/1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x)+2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/standardDeviation*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*standardDeviation*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(2,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(5,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/standardDeviation;finaldoubledev=x/standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/standardDeviation;finaldoubledev=x/standardsDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/standardDeviation;finaldoubledev=x/StandardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/standardDeviation;Finaldoubledev=x/standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean*SQRT2PI;finaldoubledev=x/mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean*SQRT2PI;Finaldoubledev=x/mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean*SQRT2PI;finaldoubledev=x/mean*SqRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean*SQRT2PI;finaldoubledev=x-mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(x));doublemean=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(x));Doublemean=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(x));doublemean=Math.sqrt(Math.log(y));x=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(x));doublemean=Math.log(Math.log(x));x=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x/1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x-2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x*1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*100;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x)+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.floor(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.log(x)/2.0);Math.rint(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.log(x)/2.0;Math.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.exp(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(mean-standardsDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(standardDeviation-x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;finaldoubledev=x-mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;Finaldoubledev=x-mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;staticfinaldoubledev=x-mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.log(x)/2.0);Math.rint(Math.log(x)/3.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.pow(10,Math.log(x)/2.0);Math.sqrt(Math.log(x)/3.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.log(x)/2.0);Math.sqrt(Math.log(x)/3.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=this.mean-x;timeout
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=this.mean/x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-this.mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=this.mean-x0;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SqRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*SQRT2PI-mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=value-x0;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-value;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));doublestandardDeviation=FastMath.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=FastMath.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nullmean=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125longmean=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.exp(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean;cumulativeProbability=System.currentTimeMillis();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean.doubleValue();timeout=System.currentTimeMillis();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*2+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*1+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*4+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intstandardDeviation=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125longstandardDeviation=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*2;finaldoubledev=x-standardDeviation*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*2;Finaldoubledev=x-standardDeviation*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*2;finaldoubledev=x-StandardDeviation*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*2;finaldoubledev=x-standardsDeviation*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/2.0;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/100;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(dev);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()+x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=standardDeviation/x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=baseDeviation/x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);doublemeans=Math.sqrt(x);doublemean=Math.sqrt(x);doublemeans=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);doublemeans=Math.sqrt(x);Doublemean=Math.sqrt(x);doublemeans=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);doublemeans=Math.sqrt(x);doublemean=Math.cos(x);doublemeans=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);doublemeans=Math.sqrt(x);doublemean=Math.min(x);doublemeans=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);doublemeans=Math.sqrt(x);doublemean=Math.log(x);doublemeans=Math.log(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*2;timeout
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;finaldoubledev=x-standardDeviation*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;Finaldoubledev=x-standardDeviation*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;finaldoubledev=x-StandardDeviation*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;finaldoubledev=x-standardsDeviation*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.abs(x-mean);timeout
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.abs(mean-x0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.abs(mean-x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.abs(x/mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*1+1;finaldoubledev=x-mean*1+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*1+1;Finaldoubledev=x-mean*1+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*1+1;finaldoubledev=x-mean*2+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*1+1;finaldoubledev=x-meant*1+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125longstandardDeviation=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intstandardDeviation=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/SQRT2PI/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/SQRT2PI+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x)/SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*SQRT2PI;timeout
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/standardDeviation*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*standardDeviation*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*SQRT2PI+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x),Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/SQRT2PI*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/SQRT2PI+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x*1));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.sqrt(x,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.pow(10,x+1));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.pow(10,x)+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.pow(10,x)-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x)/2.0;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x-standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*normalDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)-2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(Math.abs(x)-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT1PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nullmean=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(dev);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(ex);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*4;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*2+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/standardDeviation*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*3;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.log(x)/2.0,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.floor(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.log(x)/2.0,MAX_PROBABILITY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));x=Math.sqrt(Math.abs(x));doublemean=Math.sqrt(Math.abs(x));x=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));x=Math.sqrt(Math.abs(x));doublemean=Math.abs(Math.abs(x));x=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));x=Math.sqrt(Math.abs(x));Doublemean=Math.sqrt(Math.abs(x));x=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));x=Math.sqrt(Math.abs(x));Doublemean=Math.abs(Math.abs(x));x=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));x=Math.sqrt(Math.abs(x));doublemean=Math.cos(Math.abs(x));x=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.rint(x)+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.rint(x)+2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.rint(x)-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.pow(10,Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.log(x)/2.0;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardsDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.abs(Math.abs(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.abs(x)/2.0,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.abs(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*2;finaldoubledev=x-mean*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*2;Finaldoubledev=x-mean*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*2;finaldoubledev=x-mean*2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*2;finaldoubledev=x-mean*3;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x/2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x*2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-2+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean+1;timeout
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*standardDeviation+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x0-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean-x0;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.max(dev.doubleValue(),x,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.max(dev.doubleValue(),x,MAX_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x+mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x-mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x*mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doubledev=x-mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(sqrt);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.exp(x)/2.0,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.exp(x)/2.0,MAX_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.exp(x)/2.0,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI+1;finaldoubledev=x-mean*SQRT2PI+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI+1;finaldoubledev=x-mean*SqRT2PI+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI+1;Finaldoubledev=x-mean*SQRT2PI+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI+1;finaldoubledev=x-mean*SQRT2PI+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125x=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)+1);x=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)-1);x=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x/standardDeviation*DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(mean-standardDeviation));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x/standardDeviation));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(Math.abs(x-standardDeviation));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.log(x)/2.0);Math.rint(Math.log(x)*2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));doublestandardDeviation=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x-mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;staticfinaldoubledev=x-mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x/mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;Finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;staticfinaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;finaldoubleDEv=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/3.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/3.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/3.0);Math.sqrt(Math.log(x)/3.0);Math.sqrt(Math.log(x)/3.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/3.0);Math.sqrt(Math.log(x)/1.0);Math.sqrt(Math.log(x)/3.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/3.0);Math.sqrt(Math.log(x)/4.0);Math.sqrt(Math.log(x)/3.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x/DEFAULT_INVERSION_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nullmean=Math.sqrt(x);doublemeans=Math.sqrt(message);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nullmean=Math.sqrt(x);doublemeans=Math.sqrt(y);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean;finaldoubledev=x*mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean;Finaldoubledev=x*mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean;staticfinaldoubledev=x*mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean;finaldoubleDEv=x*mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Finaldoubledev=x-mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)/2-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)/2+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean+2;finaldoubledev=x-mean+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean+2;Finaldoubledev=x-mean+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean+2;staticfinaldoubledev=x-mean+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean+2;finaldoubledev=x+mean+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nullmean=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-StandardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*StandardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/StandardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Finaldoubledev=x-standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.min(0,Math.abs(x));doublemeans=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.min(0.0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean*1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x+2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=standardDeviation-x;finaldoubledev=standardDeviation-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=standardDeviation-x;Finaldoubledev=standardDeviation-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=standardDeviation-x;finaldoubledevi=standardDeviation-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=standardDeviation-x;finaldoubledev=standardDeviation-x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(dev);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(deviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublemean=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nullmean=Math.sqrt(x);finaldoublemean=Math.sqrt(mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean-x+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*4;finaldoubledev=x-mean*4;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*4;Finaldoubledev=x-mean*4;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*4;finaldoubledev=x-mean*3;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*4;finaldoubledev=x-mean*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*standardDeviation;finaldoubledev=x*standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*standardDeviation;Finaldoubledev=x*standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*standardDeviation;finaldoubledev=x*StandardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*standardDeviation;finaldoubledev=x*normalDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x),Math.abs(y));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125n=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=FastMath.sqrt(2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intstandardDeviation=FastMath.sqrt(2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125longstandardDeviation=FastMath.sqrt(2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/standardDeviation+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(false,x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(true,x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(true,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=this.mean-x;finaldoubledev=this.mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=this.mean-x;Finaldoubledev=this.mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=this.mean-x;staticfinaldoubledev=this.mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=this.mean-x;finaldoubleDEv=this.mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x));doublemeans=Math.max(0,Math.abs(x));doublemean=Math.max(0,Math.abs(x));doublemeans=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x));doublemeans=Math.max(0,Math.abs(x));Doublemean=Math.max(0,Math.abs(x));doublemeans=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x));doublemeans=Math.max(0,Math.abs(x));doublemean=Math.min(0,Math.abs(x));doublemeans=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x));doublemeans=Math.max(0,Math.abs(x));doublemean=Math.max(1,Math.abs(x));doublemeans=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.exp(x)+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.ceil(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/SQRT2PI;finaldoubledev=x/SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/SQRT2PI;Finaldoubledev=x/SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/SQRT2PI;finaldoubledev=x/SqRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/SQRT2PI;finaldoubleDEv=x/SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125longstandardDeviation=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intstandardDeviation=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()/Math.random());
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()*FastMath.random());
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()*Math.random()/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()*Math.random()-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(1.0,x);x=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);x=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,x);x=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean/x;finaldoubledev=mean/x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean/x;Finaldoubledev=mean/x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean/x;staticfinaldoubledev=mean/x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean/x;finaldoubledev=mean*x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=FastMath.sqrt(1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intstandardDeviation=FastMath.sqrt(1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125longstandardDeviation=FastMath.sqrt(1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.log(x)/2.0);Mat.rint(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.pow(10,Math.log(x)/2.0);Mat.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI+1;timeout
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI/1+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI/1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x-1)-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x)-2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x*DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(mean*x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x/20);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125DoublestandardDeviation=Math.abs(x-dev);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=Math.abs(x-dev);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125DoublestandardDeviation=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125DoublestandardDeviation=Math.abs(x-baseDuration);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*4;timeout
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*SQRT2PI;finaldoubledev=x-standardDeviation*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*SQRT2PI;finaldoubledev=x-standardDeviation*SqRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*SQRT2PI;Finaldoubledev=x-standardDeviation*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*SQRT2PI;finaldoubledev=x-StandardDeviation*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=FastMath.sqrt(0.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intstandardDeviation=FastMath.sqrt(0.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125longstandardDeviation=FastMath.sqrt(0.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x)-1);Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean+1;finaldoubledev=x*mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean+1;Finaldoubledev=x*mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean+1;finaldoubledev=x*mean+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean+1;staticfinaldoubledev=x*mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.sqrt(Math.abs(x)+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.min(0,Math.abs(x)-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.min(0,Math.abs(x)+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(true,false);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x*mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x0-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(sqrt1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x/standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x-StandardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x*2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(standardDeviation/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x+2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.abs(mean-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/solverAbsoluteAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(y)/2.0);Math.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);Math.sqrt(Math.log(x)/1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x));Math.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);Math.sqrt(Math.log(x)/1.0);Math.sqrt(Math.log(x)/1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);Math.sqrt(Math.log(y)/2.0);Math.sqrt(Math.log(x)/1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);Math.qrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(sd,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(x,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean+1;finaldoubledev=x/mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean+1;Finaldoubledev=x/mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean+1;finaldoubledev=x/mean+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean+1;staticfinaldoubledev=x/mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intstandardDeviation=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125longstandardDeviation=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublex=x/mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublex=x*mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublex=mean/x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(standardDeviation)/2.0;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.cos(x)/2.0;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=Math.abs(x-DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=Math.abs(x-MAX_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=Math.abs(x-MAXIMUM_PROBABILITY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x+2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/means;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/Mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125longstandardDeviation=FastMath.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intstandardDeviation=FastMath.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intmean=Math.sqrt(x);intstandardDeviation=FastMath.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.log(x)/2.0);Math.rint(Math.log(x)/1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.pow(10,Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.rint(Math.log(x));x=Math.rint(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.rint(Math.log(x));x=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125x=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125longmean=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(x,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(x,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(x,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(standardDeviation);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(1.0,x);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x);x=Math.log(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x/1));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublex=x-standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublex=x/standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublex=x-normalDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=means-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*1;finaldoubledev=x-mean*1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*1;finaldoubledev=x-mean*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*1;Finaldoubledev=x-mean*1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*1;finaldoubledev=x-mean*3;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation+1;finaldoubledev=x-standardDeviation+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation+1;Finaldoubledev=x-standardDeviation+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation+1;finaldoubledev=x-StandardDeviation+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation+1;finaldoubledev=x-standardDeviation+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.abs(x-mean);finaldoubledev=Math.abs(x-mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.abs(x-mean);Finaldoubledev=Math.abs(x-mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.abs(x-mean);finaldoubledev=Math.abs(y-mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.abs(x-mean);finaldoubledev=Math.abs(x-Mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);x=Math.sqrt(x);doublemean=Math.sqrt(x);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);x=Math.sqrt(x);Doublemean=Math.sqrt(x);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);x=Math.sqrt(x);doublemean=Math.sqrt(y);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);x=Math.sqrt(x);doublemean=Math.cos(x);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);x=Math.sqrt(x);doublemean=Math.dqrt(x);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);x=Math.abs(x);doublemean=Math.abs(x);x=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);x=Math.abs(x);Doublemean=Math.abs(x);x=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);x=Math.abs(x);doublemean=Math.abs(y);x=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);x=Math.abs(x);doublemeans=Math.abs(x);x=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);x=Math.abs(x);longmean=Math.abs(x);x=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()/Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()*FastMath.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()*Math.floor(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(mean-StandardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-StandardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intmean=Math.abs(x);intstandardDeviation=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);doublestandardDeviation=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.pow(10,x));Math.sqrt(Math.log(10));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x)+1);Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.exp(x)/2.0-mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.exp(x)/2.0/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nulldev=x-mean;finaldoubledev=mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nulldev=x-mean;finaldoubledev=DEFAULT_INVERSE_ABSOLUTE_ACCURACY-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nulldev=x-mean;finaldoubledev=x-DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublex=y/mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nullmean=Math.max(0,Math.abs(x));doublemeans=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.abs(x-mean);staticfinaldoubledev=Math.abs(x-mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-1);DoublestandardDeviation=Math.abs(x-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-baseDeviation);DoublestandardDeviation=Math.abs(x-baseDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125DoublestandardDeviation=Math.abs(x-baseDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*4;staticfinaldoubledev=x-mean*4;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/SQRT2PI;staticfinaldoubledev=x/SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)/2-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=this.mean*x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));x=Math.sqrt(Math.abs(x));doublemean=Math.abs(x));x=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));x=Math.sqrt(Math.abs(x));doublemean=Math.sqrt(Math.abs(x));x=Math.sqrt(Math.abs(y));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intmean=Math.abs(x);intstandardDeviation=FastMath.sqrt(1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);finaldoublestandardDeviation=FastMath.sqrt(1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*1;staticfinaldoubledev=x-mean*1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-normalDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(variables);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intmean=Math.abs(x);intstandardDeviation=FastMath.sqrt(2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);finaldoublestandardDeviation=FastMath.sqrt(2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x-standardDeviation)+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-standardDeviation);finaldoublestandardDeviation=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean/x+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.max(dev.doubleValue(),x+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125floatmean=Math.sqrt(Math.abs(x));floatstandardDeviation=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intmean=Math.sqrt(Math.abs(x));intstandardDeviation=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x);x=Math.abs(x);x=Math.abs(x);x=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)/2.0-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)/2.0-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/standardDeviation;staticfinaldoubledev=x/standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean;staticfinaldoubledev=x-DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean;staticfinaldoubledev=mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*SQRT2PI+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.pow(10,Math.log(x)/2.0);Math.sqrt(Math.log(10)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*2;staticfinaldoubledev=x-mean*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*2;finaldoubledev=x-standardDeviation*2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*2;finaldoubledev=x-standardDeviation*3;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x,0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));Math.sqrt(Math.log(x));longmean=Math.sqrt(Math.log(x));Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x-normalDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*2;timeout=System.currentTimeMillis();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoublex=x-standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*1+1;staticfinaldoubledev=x-mean*1+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.max(0,Math.abs(x)-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x));doublemeans=Math.max(0,Math.abs(x));doublemean=Math.max(0,Math.abs(x));Doublemeans=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x),y);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random());x=Math.sqrt(Math.random());
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.pow(10,x));x=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x)+1);x=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nulldev=x-mean*SQRT2PI;staticfinaldoubledev=x-mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doubledev=x-mean*SQRT2PI;staticfinaldoubledev=x-mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(x));longmean=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(x));doublemean=Math.sqrt(Math.log(x));x=Math.sqrt(Math.log(y));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean;staticfinaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean;staticfinaldoubledev=x/DEFULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean+1;staticfinaldoubledev=x-mean*1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);x=Math.sqrt(x);longmean=Math.sqrt(x);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);x=Math.sqrt(x);doublemeans=Math.sqrt(x);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nulldev=x-mean;Finaldoubledev=mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()*Math.log(x)+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.cos(x)/standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(standardDeviation)/x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.sqrt(Math.log(x)+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*10+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));floatstandardDeviation=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;finaldoubledev=x-DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nulldev=x-mean;finaldoubledev=mean*x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=this.mean-x;finaldoublex=this.mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/3.0);Math.sqrt(Math.log(y)/2.0);Math.sqrt(Math.log(x)/3.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/3.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(y)/3.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/3.0);Mat.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/3.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x/2.0)+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nullmean=Math.sqrt(x0);finaldoublemean=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.log(x)/2.0);Mat.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.pow(10,x)/2.0);Mat.sqrt(Math.log(10)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean+3;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.abs(x)/2.0-mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.abs(x)/2.0,MAX_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.abs(x)/2.0,Math.abs(standardDeviation));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.log(x)/2.0);Math.rint(Math.log(y)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.log(x)/2.0);Math.sqrt(Math.log(standardDeviation)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.min(Math.log(x)/2.0);Math.sqrt(Math.log(standardDeviation)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x-2-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;finaldoublex=x-mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.min(Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=mean*x+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(sqrt,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)-1-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(standardDeviation*x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(false,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.log(x)/cumulativeProbability(true);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(double)/2.0;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(newDouble(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.pow(10,x)/2.0).doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x),1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.cos(x)/cumulativeProbability(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);finaldoublestandardDeviation=FastMath.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(y)/1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/0.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);Mat.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean*SQRT2PI;staticfinaldoubledev=x/mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125floatmean=Math.sqrt(Math.log(x));floatstandardDeviation=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));finaldoublestandardDeviation=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(1.0);x=Math.sqrt(1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=Math.abs(x-baseDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=Math.abs(x-mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=mean-x0;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.rint(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.pow(10,Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean;finaldoublex=x*mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(y)/2.0);Math.sqrt(Math.log(y)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(y)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(double)/2.0);Math.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nulldev=x-mean;finaldoubledev=DEFAULT_INVERSE_ABSOLUTE_ACCURACY-x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nulldev=x-mean;finaldoubledev=mean-x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*SQRT2PI;staticfinaldoubledev=x-standardDeviation*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);doublemeans=Math.sqrt(x);doublemean=Math.sqrt(x);Doublemeans=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);doublemeans=Math.sqrt(x);doublemean=Math.sqrt(x);doublemeans=Math.sqrt(y);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.min(Math.log(x)/2.0);Math.sqrt(Math.log(x)/3.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*standardDeviation;staticfinaldoubledev=x*standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(true,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(1.0);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nullmean=Math.sqrt(x);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));longstandardDeviation=FastMath.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125nullmean=Math.sqrt(x0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation+1;staticfinaldoubledev=x-standardDeviation+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(y));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.cos(x)/SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x)/SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intmean=Math.abs(x);intstandardDeviation=FastMath.sqrt(0.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=standardDeviation-x;staticfinaldoubledev=standardDeviation-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.pow(10,x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.random()/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()*Math.random()+1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doubledev=Math.abs(x-standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(false,MAX_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.min(Math.abs(x)/2.0);x=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(1.0);x=Math.abs(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean*SQRT2PI;finaldoubledev=x/mean*SQRT2PI);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(stdDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.rint(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.pow(10,x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(y);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublemean=Math.sqrt(newDouble(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Factory.abs(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x)-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intmean=Math.max(0,Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=standardDeviation/mean+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.min(Math.abs(x)/2.0);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublex=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublex=x/DEFAULT_INVERSE_ABSOLUTE;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x/SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/MILLIS_PER_SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;finaldoubledev=x*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x*20);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125intmean=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean;finaldoubledev=x*mean.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x0-mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.abs(Math.abs(x)/2.0);Math.sqrt(Math.abs(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=Math.abs(x-mean);finallongdev=Math.abs(x-mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*4;finaldoubledev=x-mean*5;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x0-mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=standardDeviation*mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.exp(x)/2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*SQRT2PI+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.min(0,Math.abs(x-1));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.abs(x)/cumulativeProbability(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;finaldoubledev=x+mean*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125floatstandardDeviation=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.log(x));intstandardDeviation=FastMath.sqrt(Math.log(standardDeviation));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.abs(Math.abs(x)/2.0);Math.sqrt(Math.abs(x)/3.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.random()/2.0;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x*mean*1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Doublemean=Math.abs(x-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)-3);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=Math.abs(x-MAX_PROBABILITY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x),standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*DEFULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Finaldoubledev=x-mean*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x);x=Math.sqrt(x);x=Math.sqrt(x);x=Math.sqrt(x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.exp(Math.exp(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.abs(Math.exp(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Finaldoubledev=mean-x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=standardDeviation-x*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=this.mean-x;finaldoubledev=this.mean-x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.rint(x)/2);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(standardDeviation,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125floatstandardDeviation=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/mean*4;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x*standardDeviation));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-standardDeviation*SQRT2PI;finaldoubledev=x-standardDeviation*SQRT2PI);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=standardDeviation*x;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x));x=Math.sqrt(Math.abs(x));doublemean=Math.abs(x);x=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x/standardsDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.abs(Math.abs(x)/2.0);Math.sqrt(Math.abs(x)/1.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQURT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublemean=Math.abs(x-1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)*1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.abs(Math.abs(x)/2.0);Mat.sqrt(Math.abs(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.ceil(Math.log(x));x=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.random()*Math.log(x));x=Math.sqrt(Math.log(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-MAXIMUM_PROBABILITY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-baseDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublestandardDeviation=Math.abs(x-baseDimension);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*SQRT2PI;staticfinaldoubledev=x-mean*SQRT1PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoubledev=x-mean*1+1;finaldoubledev=x-mean*1)+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.exp(Math.abs(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x*standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(Math.abs(x)/2.0);x=Math.sqrt(Math.abs(x));
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doubledev=x-mean;finaldoubledev=mean-x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.log(x)/cumulativeProbability(sqrt2PI);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(standardDeviation,x);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125staticfinaldoubledev=x-mean*1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125finaldoublex=x-standardDeviation.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.sqrt(x/2.0)-1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2.0);Math.sqrt(Math.log(x)/2);Math.sqrt(Math.log(x)/2.0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125doublemean=Math.max(0,Math.abs(x)*1);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java125Math.abs(Math.abs(x)/2.0);Math.abs(Math.abs(x)/2.0);
