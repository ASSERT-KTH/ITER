projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=normalDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.newInstance();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61}
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.DEFAULT_SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sQRT2PI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sd=newSQRT2PI(mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,SQRT2PI);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI.newInstance();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.newInstance();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DELETE_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.newInstance(sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.create(sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRTPI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.DEFAULT_SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_NON_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd,deFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_BASOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY|StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(message,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sQRT2PI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sQRT2PI=newSQRT2PI(mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sQRT2PI=newSQRT2PI(message,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY|DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_NON_INVERSE_ABSOLUTE_ACCURACY|DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,solverAbsoluteAccuracy,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=normalDistributionImpl.DEFAULT_SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI.newInstance(DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY.newInstance();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI.newInstance(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_INVERSE_ASSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_INVERSE_BASOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd,deFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(message,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY&StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY-StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY/StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY|DELETE_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY|DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,solverAbsoluteAccuracy,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(sd,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newNormalDistributionImpl(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,DEFAULT_INVERSE_ASSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=sd+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sd=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sd=newSQRT2PI(mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sd=newSQRT2PI(mean,sd,DEFAULT_INVERSION_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT=newSQRT2PI(mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT=newSQRT2PI(message,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRTPI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRTPI=newSQRT2PI(mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRTPI=newSQRT2PI(message,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,SQRT2PI,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI.DEFAULT_INVERSE_ABSOLUTE;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI.DEFAULT_INVERSE_ABSOLUTE_ACCURACY|DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=normalDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_BASOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_BASOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.newInstance(mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.newInstance(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.newInstance(sd,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.newInstance(mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.create(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.create(sd,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.create(sd,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.create(mean,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=normalDistributionImpl.newInstance();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.newInstance(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(message);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI.newInstance(deFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI.newInstance(sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sd=newSQRT2PI(mean,sd,DEFAULT_INVERSE_BASOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sd=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ASSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sQRT2PI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.create(sd,solverAbsoluteAccuracy,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.create(sd,0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.DEFAULT_INVERSE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.DEFAULT_INVERSE_ABSOLUTE;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRTPI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,deFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.newInstance(sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.newInstance(message);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.newInstance(sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.newInstance(DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_BASOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,0);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI.DEFAULT_INVERSE_ABSOLUTE_ACCURACY+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI.DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(sd,sd,SQRT2PI);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,DEFAULT_SQRT2PI);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,DEFAULT_SYNTHETIC);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(mean,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sd=newSQRT2PI(mean,sd,DEFAULT_NON_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.newInstance(sd,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,solverAbsoluteAccuracy,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY?DEFAULT_INVERSE_ABSOLUTE_ACCURACY:DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY&&DEFAULT_INVERSE_ABSOLUTE_ACCURACY!=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
