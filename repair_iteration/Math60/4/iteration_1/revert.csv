projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=normalDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.newInstance();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61}
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.DEFAULT_SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sQRT2PI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sd=newSQRT2PI(mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,SQRT2PI);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=SQRT2PI.newInstance();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.newInstance();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DELETE_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=newStandardDistributionImpl(mean,sd,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.newInstance(sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.create(sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.create(sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRTPI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=NormalDistributionImpl.DEFAULT_SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=DEFAULT_NON_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT=newSQRT2PI(mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd,deFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.sqRT2PI=newSQRT2PI(mean,sd,DEFAULT_INVERSE_BASOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java61this.standardDeviation=StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY|StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
