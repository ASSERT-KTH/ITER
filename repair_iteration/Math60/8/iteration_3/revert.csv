projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=inverseCumAccuracy.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=Double.parseDouble(sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY/SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;standardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;StandardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;normalDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;sd=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,inverseCumAccuracy,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=Normalize(sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;standardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;StandardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;StandardDeviationstandardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;normalDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSION_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=sd.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=inverseCumAccuracy.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=inverseCumAccuracy.doubleValue()+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+3;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=SQRT2PI.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd.doubleValue()+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd;solverAbsoluteAccuracy=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd,inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;StandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;normalDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;standardsDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1L;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=inverseCumAccuracy+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;standardsDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;doublestandardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd+inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURacy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(null,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(message,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;normeDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=this.inverseCumAccuracy.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=mean.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd,inverseCumAccuracy.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=solverAbsoluteAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,inverseCumAccuracy,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,solverAbsoluteAccuracy,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;normeDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,solverAbsoluteAccuracy,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=sd+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=inverseCumAccuracy*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(sd,message);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(message,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79normeDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd;normeDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79Normalization=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDistributionImplsolver=newNormalDistributionImpl(mean,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=Normalize(sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=Normalize(sd,solverAbsoluteAccuracy,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=Normalize(sd,solverAbsoluteAccuracy,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=Normalize(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=SQRT2PI.doubleValue()+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY?SQRT2PI:DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=SQRT2PI+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79normalDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;normalDeviation=sd+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79sd=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;sd=sd+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd,solverAbsoluteAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=inverseCumAccuracy,sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;solverAbsoluteAccuracy=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79solverAbsoluteAccuracy=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd,inverseCumAccuracy.doubleValue()+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy,sd.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=mean,inverseCumAccuracy.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd;normalDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79normalDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationnormalDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=sd.doubleValue()+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd+3;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd+4;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=sd.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=inverseCumAccuracy.doubleValue()+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79NormalDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(sd,inverseCumAccuracy,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(sd,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(mean,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(sd,inverseCumAccuracy,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd;StandardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79NormalDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=Double.parseDouble(mean,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(mean,sd),inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=Double.parseDouble(mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(message);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY/1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=Double.parseDouble(sd,inverseCumAccuracy,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=Double.parseDouble(sd,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=Double.parseDouble(sd,inverseCumAccuracy,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=DEFAULT_INVERSE_ABSOLUTE_ACCURACY/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublestandardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublestandardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDistributionImplsolver=newNormalDistributionImpl();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDistributionImplsolverAbsoluteAccuracy=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDistributionImplsolverAbsoluteAccuracy=newStandardDistributionImpl(sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSION_ABSOLUTE_ACCURACY|DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSION_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(sd,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY|DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY|inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY||DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY.doubleValue()+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79normalDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;normalDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,inverseCumAccuracy,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,inverseCumAccuracy,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,inverseCumAccuracy,solverAbsoluteAccuracy,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd+solverAbsoluteAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=inverseCumAccuracy+sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+sd;standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+sd;StandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+sd;standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+sd;normalDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79normeDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79Normalization=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=DEFAULT_INVERSE_ABSOLUTE_ACCURACY.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=this.mean.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79NormalDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY*SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY/SQRT2PI+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=sd.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationnormalDeviation=sd.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=this.inverseCumAccuracy.doubleValue()+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=this.inverseCumAccuracy.doubleValue()/2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY|DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=this.inverseCumAccuracy.doubleValue()/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;StandardDeviation=sd+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=inverseCumAccuracy;solverAbsoluteAccuracy=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd+1;solverAbsoluteAccuracy=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=DEFAULT_INVERSE_ABSOLUTE_ACCURACY.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(sd,standardDeviation,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd+1L;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd/SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=SQRT2PI/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=inverseCumAccuracy+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd*2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublestandardDeviation=sd+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviation=sd.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=Double.parseDouble(message,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=Double.parseDouble(sd,standardDeviation,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=inverseCumAccuracy+DEFAULT_INVERSE_ABSOLUTE_ACCURACY+mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(this.mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79NormalizedDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(null,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(null,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=SQRT2PI+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=SQRT2PI/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd+defULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=standardDeviation.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd/DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(mime,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(sd,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=sd.doubleValue()+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79if(sd<=0){this.standardDeviation=sd;solverAbsoluteAccuracy=inverseCumAccuracy;}
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79if(sd>0){this.standardDeviation=sd;solverAbsoluteAccuracy=inverseCumAccuracy;}
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviation=sd+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=DFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviation<N,V>standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY/sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationnormalDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd*inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY|SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(mean),inverseCumAccuracy);
