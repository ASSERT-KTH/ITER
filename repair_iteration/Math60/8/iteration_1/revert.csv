projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=inverseCumAccuracy.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=Double.parseDouble(sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY/SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;standardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;StandardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;normalDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;sd=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,inverseCumAccuracy,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=Normalize(sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;standardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;StandardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;StandardDeviationstandardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;normalDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSION_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=sd.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79DoublesolverAbsoluteAccuracy=inverseCumAccuracy.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=inverseCumAccuracy.doubleValue()+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+2;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+3;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=SQRT2PI.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd.doubleValue()+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd;solverAbsoluteAccuracy=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd,inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;StandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;normalDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;standardsDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1L;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=inverseCumAccuracy+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;standardsDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;doublestandardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd+inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURacy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(null,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(message,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;normeDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=this.inverseCumAccuracy.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=mean.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd,inverseCumAccuracy.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=solverAbsoluteAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79StandardDeviationstandardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,inverseCumAccuracy,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,solverAbsoluteAccuracy,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;normeDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+SQRT2PI;
