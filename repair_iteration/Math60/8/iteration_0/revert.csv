projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=inverseCumAccuracy.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalize(sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=sd.doubleValue();
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79standardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79doublesolverAbsoluteAccuracy=Double.parseDouble(sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=normalDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java79this.standardDeviation=mean;
