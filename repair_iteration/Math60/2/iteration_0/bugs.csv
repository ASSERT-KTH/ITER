bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
3	[BUG] [BUGGY] return 0.5 * (1.0 + Erf.erf((dev) /  (standardDeviation * FastMath.sqrt(2.0)))); [FE] ConvergenceException [CONTEXT] public double cumulativeProbability(double x) throws MathException { final double dev = x - mean; try { [BUGGY] return 0.5 * (1.0 + Erf.erf((dev) /     (standardDeviation * FastMath.sqrt(2.0)))); [BUGGY] (standardDeviation * FastMath.sqrt(2.0)))); } catch (MaxIterationsExceededException ex) { if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38 return 0; } else if (x > (mean + 20 * standardDeviation)) { return 1; } else { throw ex; } } [CLASS] NormalDistributionImpl [METHOD] cumulativeProbability [RETURN_TYPE] double  double x [VARIABLES] MaxIterationsExceededException ex boolean double DEFAULT_INVERSE_ABSOLUTE_ACCURACY SQRT2PI dev inverseCumAccuracy mean sd solverAbsoluteAccuracy standardDeviation x x0 x1 long serialVersionUID  	projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	127	128	1	replace	
4	[BUG] [BUGGY] [FE] ConvergenceException [CONTEXT] public double cumulativeProbability(double x) throws MathException { final double dev = x - mean; try { [BUGGY] [BUGGY] return 0.5 * (1.0 + Erf.erf((dev) /     (standardDeviation * FastMath.sqrt(2.0)))); (standardDeviation * FastMath.sqrt(2.0)))); } catch (MaxIterationsExceededException ex) { if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38 return 0; } else if (x > (mean + 20 * standardDeviation)) { return 1; } else { throw ex; } } [CLASS] NormalDistributionImpl [METHOD] cumulativeProbability [RETURN_TYPE] double  double x [VARIABLES] MaxIterationsExceededException ex boolean double DEFAULT_INVERSE_ABSOLUTE_ACCURACY SQRT2PI dev inverseCumAccuracy mean sd solverAbsoluteAccuracy standardDeviation x x0 x1 long serialVersionUID  	projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	127	128	1	add	
