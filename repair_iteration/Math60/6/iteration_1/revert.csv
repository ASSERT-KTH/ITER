projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>standardDeviation){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd==0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=normalDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>StandardDeviation.STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>MAX_STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,sd,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,null,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,inverseCumAccuracy,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(message,null,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd==0){if(sd==0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd==0){if(sd>=0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd==0){If(sd==0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd==0){if(sd!=0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,sd,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,inverseCumAccuracy,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>standardDeviation){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd==standardDeviation){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>MAX_STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ASSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDistributionImpl.STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd==StandardDeviation.STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=sd+inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0){if(sd<0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0){If(sd<0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0){if(sd>=0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=DEFAULT_INVERSION_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_STANDARD_DEVIATION);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,inverseCumAccuracy,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STRING_DEVIATION,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,DEFAULT_INVERSE_ABSOLUTE);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=inverseCumAccuracy+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>LAST_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=MAX_STANDARD_DEVIATION||sd>0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,solverAbsoluteAccuracy,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,SQRT2PI);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,standardDeviation);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>inverseCumAccuracy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);this.standardDeviation=sd;
