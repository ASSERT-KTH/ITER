projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>standardDeviation){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd==0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=normalDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>StandardDeviation.STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>MAX_STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,sd,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,null,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,inverseCumAccuracy,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(message,null,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd==0){if(sd==0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd==0){if(sd>=0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd==0){If(sd==0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd==0){if(sd!=0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,sd,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,inverseCumAccuracy,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>standardDeviation){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd==standardDeviation){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>MAX_STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ASSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDistributionImpl.STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd==StandardDeviation.STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=sd+inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0){if(sd<0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0){If(sd<0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0){if(sd>=0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=DEFAULT_INVERSION_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_STANDARD_DEVIATION);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,inverseCumAccuracy,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STRING_DEVIATION,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,DEFAULT_INVERSE_ABSOLUTE);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=inverseCumAccuracy+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>LAST_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=MAX_STANDARD_DEVIATION||sd>0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,solverAbsoluteAccuracy,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,SQRT2PI);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,standardDeviation);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>inverseCumAccuracy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);this.standardDeviation=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd);this.standardDeviation=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,inverseCumAccuracy);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_STANDARD_DEVIATION,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,DEFAULT_STANDARD_DEVIATION);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,DEFAULT_STANDARD_DEVIATION);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0){If(sd<=0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0){If(sd>0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>inverseCumAccuracy){If(sd<0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,mean,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.SQRT2PI,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,sd,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,null,sd,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(mean,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(message,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(sd,inverseCumAccuracy,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(sd,inverseCumAccuracy,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,sd,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,inverseCumAccuracy,mean,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,inverseCumAccuracy,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,mean,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,sd,null,null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,null,null,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,sd,inverseCumAccuracy,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(localizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(label,LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd>0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD,mean,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD,sd,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD,sd,inverseCumAccuracy,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,inverseCumAccuracy);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,standardDeviation);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.DEFAULT_INVERSE_ACCURACY||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY||sd>NormalDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,DEFAULT_STANDARD_DEVIATION);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(message,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>inverseCumAccuracy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd==inverseCumAccuracy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,inverseCumAccuracy,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,null,sd,inverseCumAccuracy,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,null,sd,inverseCumAccuracy,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,null,standardDeviation,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,sd,null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>LAST_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>LAST_INVERSE_ABSOLUTE_ACCURACY||sd>DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ASSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ASSOLUTE_ACCURACY,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ASSOLUTE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(message,null,sd,inverseCumAccuracy,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(message,null,sd,inverseCumAccuracy,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,mean,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd!=0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(mean==0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=inverseCumAccuracy*DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=sd+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,sd,inverseCumAccuracy,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,standardDeviation);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,mean,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,standardDeviation,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,null,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,null,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd==StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STRING_DEVIATION,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STRING_DEVIATION,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STRING_DEVIATION,sd,true);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd);this.standardDeviation=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd==solverAbsoluteAccuracy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd==DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=sd+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=sd,inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0){If(sd==0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=DEFAULT_INVERSION_ABSOLUTE_ACCURACY|DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=DEFAULT_INVERSION_ABSOLUTE_ACCURACY|inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=DEFAULT_INVERSION_ABSOLUTE_ACCURACY+inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>standardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>SQRT2PI.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY|DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,mean,inverseCumAccuracy,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,sd,inverseCumAccuracy,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>DEFAULT_INVERSE_ABSOLUTE_ACCURacy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.SQRT2PI){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURacy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,SQRT2PI);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>inverseCumAccuracy){if(sd<0||sd>inverseCumAccuracy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>inverseCumAccuracy){If(sd<0||sd>inverseCumAccuracy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>inverseCumAccuracy){if(sd>=0||sd>inverseCumAccuracy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,inverseCumAccuracy,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,inverseCumAccuracy,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,mean,sd,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,sd,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,sd,null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,sd,null,null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,mean,sd,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,mean,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDistributionImpl.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>NormalDistributionImpl.STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDistributionImpl.SQRT2PI){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,DEFAULT_INVERSE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ACCURACY,DEFAULT_INVERSE_ABSOLUTE);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=sd+solverAbsoluteAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=sd*inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=mean+inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>DEFAULT_STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<MAX_STANDARD_DEVIATION||sd>0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=MAX_STANDARD_DEVIATION||sd>1){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=DEFAULT_INVERSE_ABSOLUTE_ACCURACY||sd>0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.mean=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.mean=DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.mean=DEFAULT_INVERSION_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,solverAbsoluteAccuracy,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,sd,solverAbsoluteAccuracy,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,null,sd,solverAbsoluteAccuracy,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.SQRT2PI,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.DEFAULT_STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(localizedFormats.STANDARD_DEVIATION==null){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(localizedFormats!=null){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(localizedFormats.STANDARD_DEVIATION!=null){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(localizedFormats==null){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(SQRT2PI,LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_STANDARD_DEVIATION);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,solverAbsoluteAccuracy,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.SQRT2PI,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(Mean,LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,solverAbsoluteAccuracy,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,solverAbsoluteAccuracy,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,solverAbsoluteAccuracy,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,solverAbsoluteAccuracy,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(localizedFormats!=null){If(sd<0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(SQRT2PI,LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,solverAbsoluteAccuracy,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,null,null,inverseCumAccuracy,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=DEFAULT_INVERSION_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY||standardDeviation>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.mean=inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.mean=sd+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);this.mean=mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+1;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>solverAbsoluteAccuracy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(localizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(SQRT2PI,LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,solverAbsoluteAccuracy);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.SQRT2PI,sd,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,null,null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,mean,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=MAX_STANDARD_DEVIATION||sd>inverseCumAccuracy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(message,null,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd==StandardDeviation.STANDARD_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.INTEGER_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,null,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,null,null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,null,inverseCumAccuracy,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>=DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(DEFAULT_INVERSE_ABSOLUTE,DEFAULT_INVERSE_ABSOLUTE);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.INTEGER_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=inverseCumAccuracy+DEFAULT_INVERSE_ABSOLUTE_ACCURACY+mean;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=inverseCumAccuracy+DEFAULT_INVERSE_ABSOLUTE_ACCURACY+SQRT2PI;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(localizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=inverseCumAccuracy+sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=sd/inverseCumAccuracy;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,SQRT2PI);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.SQRT2PI,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,mean);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(localizedFormats.STRING_DEVIATION,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);this.standardDeviation=sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(NumberFormat.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.SQRT2PI,mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,null,sd,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd==standardDeviation){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd>=solverAbsoluteAccuracy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0||sd==LAST_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDistributionImpl.INSTANCE){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(localizedFormats!=null){If(sd==0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(localizedFormats==null){If(sd==0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,inverseCumAccuracy,solverAbsoluteAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(localizedFormats.STANDARD_DEVIATION==null||localizedFormats.STANDARD_DEVIATION==null){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,mean,solverAbsoluteAccuracy,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,solverAbsoluteAccuracy);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,null,sd,inverseCumAccuracy,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(DateFormat.DEFAULT_INVERSE_ABSOLUTE,DEFAULT_INVERSE_ABSOLUTE);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=DEFAULT_INVERSE_ABSOLUTE_ACCURACY||sd>DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_STANDARD_DEVIATION,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd>0){If(sd==0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd!=0){If(sd==0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.DEFAULT_INVERSE_BSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD,sd,standardDeviation,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE,DEFAULT_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd>inverseCumAccuracy){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE_ACCURACY,sd,mean,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.DEFAULT_STANDARD_DEVIATION||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDeviation.DEFAULT_INVERSE_BSOLUTE_ACCURACY||sd>StandardDeviation.DEFAULT_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(DateTimeUtils.currentTimeMillis(),mean,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.mean=DEFAULT_INVERSE_ABSOLUTE_ACCURACY+sd;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<0||sd>StandardDistributionImpl.INTEGER_DEVIATION){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ABSOLUTE,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=DEFAULT_INVERSE_ABSOLUTE_ACCURACY||sd>LAST_INVERSE_ABSOLUTE_ACCURACY){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,sd,standardDeviation,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STANDARD_DEVIATION,sd,solverAbsoluteAccuracy);this.standardDeviation=standardDeviation;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(localizedFormats.STANDARD_DEVIATION==null||!localizedFormats.STANDARD_DEVIATION.equals(sd)){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,null,sd,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DEFAULT_INVERSE_ASSOLUTE_ACCURACY,DEFAULT_STANDARD_DEVIATION);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.DOUBLE_DEVIATION,sd);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,standardDeviation,sd,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this.standardDeviation=standardAccuracy+DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(sd,inverseCumAccuracy,standardDeviation);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STRING_DEVIATION,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74super(LocalizedFormats.STRING_DEVIATION,sd,DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<=0){If(sd<0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd>0){If(sd<0){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,sd,standardDeviation,null,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,null,standardDeviation,inverseCumAccuracy,null);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(message,sd,null,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(null,null,DEFAULT_INVERSE_ABSOLUTE_ACCURACY,DEFAULT_STANDARD_DEVIATION);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74if(sd<1){
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,null,sd,standardDeviation,inverseCumAccuracy);
projects/Math60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java74this(mean,sd,standardDeviation,inverseCumAccuracy);
