bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  /  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(short)LAST_WEEK_IN_YEAR  /  1;	  this.year    =(short)LAST_WEEK_IN_YEAR    -    1;    	compilable	  [FE]  AssertionFailedError  	6	12	replace
2	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  /  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  /  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  /  1;	  this.year    =(short)LAST_WEEK_IN_YEAR    -    1;    	compilable	  [FE]  AssertionFailedError  	6	12	replace
3	[BUG]  [BUGGY]  this.year  =(Short)LAST_WEEK_IN_YEAR;  [CE]  inconvertible  types  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(Short)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(Short)LAST_WEEK_IN_YEAR;	          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year    =(Short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  inconvertible  types	52	None	replace
4	[BUG]  [BUGGY]  int  year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  int  year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	int  year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;	          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year    =(Short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	52	None	replace
5	[BUG]  [BUGGY]  int  year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(Integer)LAST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  int  year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(Integer)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	int  year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(Integer)LAST_WEEK_IN_YEAR;	          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year    =(Short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	52	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year    =(int)LAST_WEEK_IN_YEAR;    this.year  =(int)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	50	12	add
7	[BUG]  [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(int)LAST_WEEK_IN_YEAR;    this.year  =(int)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	50	12	add
8	[BUG]  [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  This.year  =(int)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  This  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  This.year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(int)LAST_WEEK_IN_YEAR;    This.year  =(int)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  This	50	None	add
9	[BUG]  [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  int  year  =(int)LAST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  int  year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(int)LAST_WEEK_IN_YEAR;    int  year  =(int)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	50	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year    =(short)LAST_WEEK_IN_YEAR    -    1;    this.year  =(short)LAST_WEEK_IN_YEAR  -  1;	  	compilable	  [FE]  AssertionFailedError  	5	12	add
11	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)LAST_WEEK_IN_YEAR    -    1;    this.year  =(short)LAST_WEEK_IN_YEAR  -  1;	  	compilable	  [FE]  AssertionFailedError  	5	12	add
12	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  This.year  =(short)LAST_WEEK_IN_YEAR  -  1;  [CE]  cannot  find  symbol  This  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  This.year  =(short)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)LAST_WEEK_IN_YEAR    -    1;    This.year  =(short)LAST_WEEK_IN_YEAR  -  1;	  	non-compiled	[CE]  cannot  find  symbol  This	5	None	add
13	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  int  year  =(short)LAST_WEEK_IN_YEAR  -  1;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  int  year  =(short)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)LAST_WEEK_IN_YEAR    -    1;    int  year  =(short)LAST_WEEK_IN_YEAR  -  1;	  	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	5	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  this.year  =(short)LAST_WEEK_IN_YEAR  -  2;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year    =(short)LAST_WEEK_IN_YEAR    -    1;    this.year  =(short)LAST_WEEK_IN_YEAR  -  2;	  	compilable	  [FE]  AssertionFailedError  	5	12	add
15	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  this.year  =(short)LAST_WEEK_IN_YEAR  -  2;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  this.year  =(short)LAST_WEEK_IN_YEAR  -  2;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)LAST_WEEK_IN_YEAR    -    1;    this.year  =(short)LAST_WEEK_IN_YEAR  -  2;	  	compilable	  [FE]  AssertionFailedError  	5	12	add
16	[BUG]  [BUGGY]  Peg(this.year.getInstance(),  Calendar.getInstance());  [CE]  short  cannot  be  dereferenced  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(this.year.getInstance(),  Calendar.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(this.year.getInstance(),  Calendar.getInstance());	  Peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  short  cannot  be  dereferenced	7	None	replace
17	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.year,  this.week);  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  this.year,  this.week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.year,  this.week);	  Peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
18	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.year,  this.firstMillisecond);  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  this.year,  this.firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.year,  this.firstMillisecond);	  Peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
19	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.year,  this.month);  [CE]  cannot  find  symbol  month  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  this.year,  this.month);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.year,  this.month);	  Peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  cannot  find  symbol  month	7	None	replace
20	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.lastMillisecond,  this.firstMillisecond);  [CE]  no  suitable  method  found  for  peg(Calendar,short,long,long)  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.lastMillisecond,  this.firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.lastMillisecond,  this.firstMillisecond);	  peg(Calendar.getInstance(),    this.year,    this.firstMillisecond);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,long,long)	53	None	replace
21	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.firstMillisecond,  lastMillisecond);  [CE]  no  suitable  method  found  for  peg(Calendar,short,long,long)  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.firstMillisecond,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.firstMillisecond,  lastMillisecond);	  peg(Calendar.getInstance(),    this.year,    this.firstMillisecond);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,long,long)	53	None	replace
22	[BUG]  [BUGGY]  peg(this.year,  Calendar.getInstance(),  this.firstMillisecond);  [CE]  no  suitable  method  found  for  peg(short,Calendar,long)  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  Calendar.getInstance(),  this.firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  Calendar.getInstance(),  this.firstMillisecond);	  peg(Calendar.getInstance(),    this.year,    this.firstMillisecond);    	non-compiled	[CE]  no  suitable  method  found  for  peg(short,Calendar,long)	53	None	replace
23	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.week,  this.firstMillisecond);  [CE]  no  suitable  method  found  for  peg(Calendar,short,byte,long)  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.week,  this.firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.week,  this.firstMillisecond);	  peg(Calendar.getInstance(),    this.year,    this.firstMillisecond);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,byte,long)	53	None	replace
24	[BUG]  [BUGGY]  peg(this.year,  this.year,  this.week.getInstance());  [CE]  byte  cannot  be  dereferenced  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.year,  this.week.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.year,  this.week.getInstance());	  peg(this.year,    this.year.getInstance());    	non-compiled	[CE]  byte  cannot  be  dereferenced	16	None	replace
25	[BUG]  [BUGGY]  peg(this.year,  this.year,  this.month.getInstance());  [CE]  cannot  find  symbol  month  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.year,  this.month.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.year,  this.month.getInstance());	  peg(this.year,    this.year.getInstance());    	non-compiled	[CE]  cannot  find  symbol  month	16	None	replace
26	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  This.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [CE]  cannot  find  symbol  This  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  This.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    This.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);	  	non-compiled	[CE]  cannot  find  symbol  This	44	None	add
27	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  int  firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  int  firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    int  firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);	  	non-compiled	[CE]  possible  loss  of  precision	44	None	add
28	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  this.FirstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [CE]  cannot  find  symbol  FirstMillisecond  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  this.FirstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    this.FirstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);	  	non-compiled	[CE]  cannot  find  symbol  FirstMillisecond	44	None	add
29	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  int  year  =(byte)LAST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  int  year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR;  int  year  =(byte)LAST_WEEK_IN_YEAR;	          this.year    =(byte)LAST_WEEK_IN_YEAR;    int    year    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	21	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
31	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
33	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  -  1);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  -  1);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
35	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  -  1);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  -  1);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
36	[BUG]  [BUGGY]  peg(this.year.getInstance(),  this.week);  [CE]  short  cannot  be  dereferenced  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year.getInstance(),  this.week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year.getInstance(),  this.week);	  peg(this.year.getInstance(),    this.year);    	non-compiled	[CE]  short  cannot  be  dereferenced	10	None	replace
37	[BUG]  [BUGGY]  peg(this.year.getInstance(),  this.month);  [CE]  short  cannot  be  dereferenced  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year.getInstance(),  this.month);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year.getInstance(),  this.month);	  peg(this.year.getInstance(),    this.year);    	non-compiled	[CE]  short  cannot  be  dereferenced	10	None	replace
38	[BUG]  [BUGGY]  peg(this.year.getInstance(),  this.hour);  [CE]  short  cannot  be  dereferenced  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year.getInstance(),  this.hour);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year.getInstance(),  this.hour);	  peg(this.year.getInstance(),    this.year);    	non-compiled	[CE]  short  cannot  be  dereferenced	10	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond);	  this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	compilable	  [FE]  AssertionFailedError  	37	4	replace
40	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond);	  this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	compilable	  [FE]  AssertionFailedError  	37	4	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond);	  this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	compilable	  [FE]  AssertionFailedError  	37	4	replace
42	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond);	  this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	compilable	  [FE]  AssertionFailedError  	37	4	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(firstMillisecond,  LAST_WEEK_IN_YEAR);	  this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	compilable	  [FE]  AssertionFailedError  	37	4	replace
44	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  LAST_WEEK_IN_YEAR);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  LAST_WEEK_IN_YEAR);	  this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	compilable	  [FE]  AssertionFailedError  	37	4	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(this.firstMillisecond,  year);	  this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	compilable	  [FE]  AssertionFailedError  	37	4	replace
46	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  year);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  year);	  this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	compilable	  [FE]  AssertionFailedError  	37	4	replace
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;	  this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    	compilable	  [FE]  AssertionFailedError  	23	12	replace
48	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;	  this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    	compilable	  [FE]  AssertionFailedError  	23	12	replace
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  /  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(byte)LAST_WEEK_IN_YEAR  /  1;	  this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    	compilable	  [FE]  AssertionFailedError  	23	12	replace
50	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  /  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  /  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  /  1;	  this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    	compilable	  [FE]  AssertionFailedError  	23	12	replace
51	[BUG]  [BUGGY]  peg(this.week.getInstance(),  this.year,  LAST_WEEK_IN_YEAR);  [CE]  byte  cannot  be  dereferenced  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  this.year,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  this.year,  LAST_WEEK_IN_YEAR);	  peg(this.week.getInstance(),    this.year);    	non-compiled	[CE]  byte  cannot  be  dereferenced	29	None	replace
52	[BUG]  [BUGGY]  peg(this.week.getInstance(),  this.year,  this.firstMillisecond);  [CE]  byte  cannot  be  dereferenced  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  this.year,  this.firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  this.year,  this.firstMillisecond);	  peg(this.week.getInstance(),    this.year);    	non-compiled	[CE]  byte  cannot  be  dereferenced	29	None	replace
53	[BUG]  [BUGGY]  peg(this.week.getInstance(),  this.year,  this.second);  [CE]  byte  cannot  be  dereferenced  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  this.year,  this.second);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  this.year,  this.second);	  peg(this.week.getInstance(),    this.year);    	non-compiled	[CE]  byte  cannot  be  dereferenced	29	None	replace
54	[BUG]  [BUGGY]  peg(this.week.getInstance(),  this.month);  [CE]  byte  cannot  be  dereferenced  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  this.month);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  this.month);	  peg(this.week.getInstance(),    this.week);    	non-compiled	[CE]  byte  cannot  be  dereferenced	27	None	replace
55	[BUG]  [BUGGY]  peg(this.week.getInstance(),  this.hour);  [CE]  byte  cannot  be  dereferenced  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  this.hour);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  this.hour);	  peg(this.week.getInstance(),    this.week);    	non-compiled	[CE]  byte  cannot  be  dereferenced	27	None	replace
56	[BUG]  [BUGGY]  peg(this.week,  this.year.getInstance(),  Calendar.getInstance());  [CE]  short  cannot  be  dereferenced  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week,  this.year.getInstance(),  Calendar.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week,  this.year.getInstance(),  Calendar.getInstance());	  peg(this.week.getInstance(),    Calendar.getInstance());    	non-compiled	[CE]  short  cannot  be  dereferenced	26	None	replace
57	[BUG]  [BUGGY]  peg(this.week.getInstance(),  Calendar.getInstance(),  LAST_WEEK_IN_YEAR);  [CE]  byte  cannot  be  dereferenced  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  Calendar.getInstance(),  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  Calendar.getInstance(),  LAST_WEEK_IN_YEAR);	  peg(this.week.getInstance(),    Calendar.getInstance());    	non-compiled	[CE]  byte  cannot  be  dereferenced	26	None	replace
58	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week.getInstance());  [CE]  byte  cannot  be  dereferenced  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.week.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week.getInstance());	  peg(this.week.getInstance(),    Calendar.getInstance());    	non-compiled	[CE]  byte  cannot  be  dereferenced	26	None	replace
59	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR,  week);  [CE]  no  suitable  method  found  for  peg(Calendar,short,int,int)  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR,  week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR,  week);	  peg(Calendar.getInstance(),    this.year,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,int,int)	13	None	replace
60	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR,  month);  [CE]  cannot  find  symbol  month  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR,  month);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR,  month);	  peg(Calendar.getInstance(),    this.year,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  cannot  find  symbol  month	13	None	replace
61	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR,  lastMillisecond);  [CE]  no  suitable  method  found  for  peg(Calendar,short,int,long)  [FE]                            [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR,  lastMillisecond);	  peg(Calendar.getInstance(),    this.year,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,int,long)	13	None	replace
62	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR,  year);  [CE]  no  suitable  method  found  for  peg(Calendar,short,int,int)  [FE]                              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR,  year);	  peg(Calendar.getInstance(),    this.year,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,int,int)	13	None	replace
63	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.week,  this.lastMillisecond);  [CE]  no  suitable  method  found  for  peg(Calendar,short,byte,long)  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.week,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.week,  this.lastMillisecond);	  peg(Calendar.getInstance(),    this.year,    this.lastMillisecond);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,byte,long)	54	None	replace
64	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.firstMillisecond,  this.lastMillisecond);  [CE]  no  suitable  method  found  for  peg(Calendar,short,long,long)  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.firstMillisecond,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.firstMillisecond,  this.lastMillisecond);	  peg(Calendar.getInstance(),    this.year,    this.lastMillisecond);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,long,long)	54	None	replace
65	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.lastMillisecond,  firstMillisecond);  [CE]  no  suitable  method  found  for  peg(Calendar,short,long,long)  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.lastMillisecond,  firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.lastMillisecond,  firstMillisecond);	  peg(Calendar.getInstance(),    this.year,    this.lastMillisecond);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,long,long)	54	None	replace
66	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.month,  this.lastMillisecond);  [CE]  cannot  find  symbol  month  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.month,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.month,  this.lastMillisecond);	  peg(Calendar.getInstance(),    this.year,    this.lastMillisecond);    	non-compiled	[CE]  cannot  find  symbol  month	54	None	replace
67	[BUG]  [BUGGY]  peg(calendar.getInstance(),  this.week);  [CE]  cannot  find  symbol  calendar  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(calendar.getInstance(),  this.week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(calendar.getInstance(),  this.week);	  peg(this.week.getInstance(),    calendar);    	non-compiled	[CE]  cannot  find  symbol  calendar	28	None	replace
68	[BUG]  [BUGGY]  peg(this.week.getInstance(),  this.calendar);  [CE]  byte  cannot  be  dereferenced  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  this.calendar);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  this.calendar);	  peg(this.week.getInstance(),    calendar);    	non-compiled	[CE]  byte  cannot  be  dereferenced	28	None	replace
69	[BUG]  [BUGGY]  peg(this.calendar.getInstance(),  this.week);  [CE]  cannot  find  symbol  calendar  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.calendar.getInstance(),  this.week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.calendar.getInstance(),  this.week);	  peg(this.week.getInstance(),    calendar);    	non-compiled	[CE]  cannot  find  symbol  calendar	28	None	replace
70	[BUG]  [BUGGY]  peg(this.week,  this.year,  Calendar.getInstance());  [CE]  no  suitable  method  found  for  peg(byte,short,Calendar)  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week,  this.year,  Calendar.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week,  this.year,  Calendar.getInstance());	  peg(this.week,    Calendar.getInstance());    	non-compiled	[CE]  no  suitable  method  found  for  peg(byte,short,Calendar)	34	None	replace
71	[BUG]  [BUGGY]  peg(this.week,  Calendar.getInstance(),  LAST_WEEK_IN_YEAR);  [CE]  no  suitable  method  found  for  peg(byte,Calendar,int)  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week,  Calendar.getInstance(),  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week,  Calendar.getInstance(),  LAST_WEEK_IN_YEAR);	  peg(this.week,    Calendar.getInstance());    	non-compiled	[CE]  no  suitable  method  found  for  peg(byte,Calendar,int)	34	None	replace
72	[BUG]  [BUGGY]  peg(this.week,  Calendar.getInstance(),  this.year);  [CE]  no  suitable  method  found  for  peg(byte,Calendar,short)  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week,  Calendar.getInstance(),  this.year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week,  Calendar.getInstance(),  this.year);	  peg(this.week,    Calendar.getInstance());    	non-compiled	[CE]  no  suitable  method  found  for  peg(byte,Calendar,short)	34	None	replace
73	[BUG]  [BUGGY]  peg(this.week,  Calendar.getInstance(),  year);  [CE]  no  suitable  method  found  for  peg(byte,Calendar,int)  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week,  Calendar.getInstance(),  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week,  Calendar.getInstance(),  year);	  peg(this.week,    Calendar.getInstance());    	non-compiled	[CE]  no  suitable  method  found  for  peg(byte,Calendar,int)	34	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year    =(byte)LAST_WEEK_IN_YEAR    -    1;    this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;	  	compilable	  [FE]  AssertionFailedError  	39	12	add
75	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)LAST_WEEK_IN_YEAR    -    1;    this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;	  	compilable	  [FE]  AssertionFailedError  	39	12	add
76	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  This.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [CE]  cannot  find  symbol  This  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  This.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)LAST_WEEK_IN_YEAR    -    1;    This.year  =(byte)LAST_WEEK_IN_YEAR  -  1;	  	non-compiled	[CE]  cannot  find  symbol  This	39	None	add
77	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  int  year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  int  year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)LAST_WEEK_IN_YEAR    -    1;    int  year  =(byte)LAST_WEEK_IN_YEAR  -  1;	  	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	39	None	add
78	[BUG]  [BUGGY]  peg(this.week.getInstance(),  this.week,  year);  [CE]  byte  cannot  be  dereferenced  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  this.week,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  this.week,  year);	  peg(Calendar.getInstance(),    this.week,    year);    	non-compiled	[CE]  byte  cannot  be  dereferenced	35	None	replace
79	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  year);  [CE]  no  suitable  method  found  for  peg(Calendar,byte,int,int)  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  year);	  peg(Calendar.getInstance(),    this.week,    year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,byte,int,int)	35	None	replace
80	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  this.year,  year);  [CE]  no  suitable  method  found  for  peg(Calendar,byte,short,int)  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.week,  this.year,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  this.year,  year);	  peg(Calendar.getInstance(),    this.week,    year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,byte,short,int)	35	None	replace
81	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  this.year,  LAST_WEEK_IN_YEAR);  [CE]  no  suitable  method  found  for  peg(Calendar,byte,short,int)  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.week,  this.year,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  this.year,  LAST_WEEK_IN_YEAR);	  peg(Calendar.getInstance(),    this.week,    year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,byte,short,int)	35	None	replace
82	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.week,  LAST_WEEK_IN_YEAR);  [CE]  no  suitable  method  found  for  peg(Calendar,short,byte,int)  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.week,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.week,  LAST_WEEK_IN_YEAR);	  peg(Calendar.getInstance(),    this.year,    this.week);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,byte,int)	12	None	replace
83	[BUG]  [BUGGY]  peg(this.year,  Calendar.getInstance(),  this.week);  [CE]  no  suitable  method  found  for  peg(short,Calendar,byte)  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  Calendar.getInstance(),  this.week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  Calendar.getInstance(),  this.week);	  peg(Calendar.getInstance(),    this.year,    this.week);    	non-compiled	[CE]  no  suitable  method  found  for  peg(short,Calendar,byte)	12	None	replace
84	[BUG]  [BUGGY]  peg(this.year,  Calendar.getInstance(),  this.year,  this.week);  [CE]  no  suitable  method  found  for  peg(short,Calendar,short,byte)  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  Calendar.getInstance(),  this.year,  this.week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  Calendar.getInstance(),  this.year,  this.week);	  peg(Calendar.getInstance(),    this.year,    this.week);    	non-compiled	[CE]  no  suitable  method  found  for  peg(short,Calendar,short,byte)	12	None	replace
85	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.week,  year);  [CE]  no  suitable  method  found  for  peg(Calendar,short,byte,int)  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.week,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.week,  year);	  peg(Calendar.getInstance(),    this.year,    year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,byte,int)	42	None	replace
86	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  week,  year);  [CE]  no  suitable  method  found  for  peg(Calendar,short,int,int)  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  week,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  week,  year);	  peg(Calendar.getInstance(),    this.year,    year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,int,int)	42	None	replace
87	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  YEAR);  [CE]  cannot  find  symbol  YEAR  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  YEAR);	  	non-compiled	[CE]  cannot  find  symbol  YEAR	46	None	add
88	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);  This.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);  [CE]  cannot  find  symbol  This  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);  This.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    This.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);	  	non-compiled	[CE]  cannot  find  symbol  This	46	None	add
89	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  month);  [CE]  cannot  find  symbol  month  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  month);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  month);	  	non-compiled	[CE]  cannot  find  symbol  month	46	None	add
90	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  YEAR);  [CE]  cannot  find  symbol  YEAR  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond    =    Math.max(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  YEAR);	  	non-compiled	[CE]  cannot  find  symbol  YEAR	36	None	add
91	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  This.firstMillisecond  =  Math.max(firstMillisecond,  year);  [CE]  cannot  find  symbol  This  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  This.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond    =    Math.max(firstMillisecond,    year);    This.firstMillisecond  =  Math.max(firstMillisecond,  year);	  	non-compiled	[CE]  cannot  find  symbol  This	36	None	add
92	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  int  firstMillisecond  =  Math.max(firstMillisecond,  year);  [CE]  variable  firstMillisecond  might  not  have  been  initialized  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  int  firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond    =    Math.max(firstMillisecond,    year);    int  firstMillisecond  =  Math.max(firstMillisecond,  year);	  	non-compiled	[CE]  variable  firstMillisecond  might  not  have  been  initialized	36	None	add
93	[BUG]  [BUGGY]  peg(this.year,  this.week.getInstance(),  Calendar.getInstance());  [CE]  byte  cannot  be  dereferenced  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.week.getInstance(),  Calendar.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.week.getInstance(),  Calendar.getInstance());	  peg(this.year.getInstance(),    Calendar.getInstance());    	non-compiled	[CE]  byte  cannot  be  dereferenced	11	None	replace
94	[BUG]  [BUGGY]  peg(this.year,  this.year.getInstance(),  Calendar.getInstance());  [CE]  short  cannot  be  dereferenced  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.year.getInstance(),  Calendar.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.year.getInstance(),  Calendar.getInstance());	  peg(this.year.getInstance(),    Calendar.getInstance());    	non-compiled	[CE]  short  cannot  be  dereferenced	11	None	replace
95	[BUG]  [BUGGY]  peg(this.year,  this.month.getInstance(),  Calendar.getInstance());  [CE]  cannot  find  symbol  month  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.month.getInstance(),  Calendar.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.month.getInstance(),  Calendar.getInstance());	  peg(this.year.getInstance(),    Calendar.getInstance());    	non-compiled	[CE]  cannot  find  symbol  month	11	None	replace
96	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year.getInstance());  [CE]  short  cannot  be  dereferenced  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year.getInstance());	  peg(this.year.getInstance(),    Calendar.getInstance());    	non-compiled	[CE]  short  cannot  be  dereferenced	11	None	replace
97	[BUG]  [BUGGY]  peg(this.year.getInstance(),  this.week,  this.year);  [CE]  short  cannot  be  dereferenced  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year.getInstance(),  this.week,  this.year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year.getInstance(),  this.week,  this.year);	  peg(Calendar.getInstance(),    this.week,    this.year);    	non-compiled	[CE]  short  cannot  be  dereferenced	56	None	replace
98	[BUG]  [BUGGY]  peg(this.week.getInstance(),  this.week,  this.year);  [CE]  byte  cannot  be  dereferenced  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  this.week,  this.year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  this.week,  this.year);	  peg(Calendar.getInstance(),    this.week,    this.year);    	non-compiled	[CE]  byte  cannot  be  dereferenced	56	None	replace
99	[BUG]  [BUGGY]  This.year  =(short)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  This  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  This.year  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	This.year  =(short)LAST_WEEK_IN_YEAR;	          this.year    =(short)LAST_WEEK_IN_YEAR;    This.year    =(short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  cannot  find  symbol  This	32	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
101	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  lastMillisecond);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
103	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  lastMillisecond);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  lastMillisecond);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  lastMillisecond);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
105	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  lastMillisecond);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  lastMillisecond);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
106	[BUG]  [BUGGY]  peg(this.month,  this.year.getInstance());  [CE]  cannot  find  symbol  month  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.month,  this.year.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.month,  this.year.getInstance());	  peg(this.year,    this.month.getInstance());    	non-compiled	[CE]  cannot  find  symbol  month	15	None	replace
107	[BUG]  [BUGGY]  peg(this.week,  this.year.getInstance());  [CE]  short  cannot  be  dereferenced  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week,  this.year.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week,  this.year.getInstance());	  peg(this.year,    this.month.getInstance());    	non-compiled	[CE]  short  cannot  be  dereferenced	15	None	replace
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(int)LAST_WEEK_IN_YEAR  +  1;	  this.year    =(int)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	51	12	replace
109	[BUG]  [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(int)LAST_WEEK_IN_YEAR  +  1;	  this.year    =(int)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	51	12	replace
110	[BUG]  [BUGGY]  peg(this.year,  this.week,  this.month.getInstance());  [CE]  cannot  find  symbol  month  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.week,  this.month.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.week,  this.month.getInstance());	  peg(this.year,    this.week.getInstance());    	non-compiled	[CE]  cannot  find  symbol  month	14	None	replace
111	[BUG]  [BUGGY]  peg(this.year,  this.week,  this.lastMillisecond.getInstance());  [CE]  long  cannot  be  dereferenced  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.week,  this.lastMillisecond.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.week,  this.lastMillisecond.getInstance());	  peg(this.year,    this.week.getInstance());    	non-compiled	[CE]  long  cannot  be  dereferenced	14	None	replace
112	[BUG]  [BUGGY]  peg(this.year,  this.week,  this.leastMillisecond.getInstance());  [CE]  cannot  find  symbol  leastMillisecond  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.week,  this.leastMillisecond.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.week,  this.leastMillisecond.getInstance());	  peg(this.year,    this.week.getInstance());    	non-compiled	[CE]  cannot  find  symbol  leastMillisecond	14	None	replace
113	[BUG]  [BUGGY]  peg(this.year,  this.week,  this.state.getInstance());  [CE]  cannot  find  symbol  state  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.week,  this.state.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.week,  this.state.getInstance());	  peg(this.year,    this.week.getInstance());    	non-compiled	[CE]  cannot  find  symbol  state	14	None	replace
114	[BUG]  [BUGGY]  peg(this.year,  this.week,  Calendar.getInstance());  [CE]  no  suitable  method  found  for  peg(short,byte,Calendar)  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.week,  Calendar.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.week,  Calendar.getInstance());	  peg(this.year,    Calendar.getInstance());    	non-compiled	[CE]  no  suitable  method  found  for  peg(short,byte,Calendar)	41	None	replace
115	[BUG]  [BUGGY]  peg(this.year,  this.month,  Calendar.getInstance());  [CE]  cannot  find  symbol  month  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.month,  Calendar.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.month,  Calendar.getInstance());	  peg(this.year,    Calendar.getInstance());    	non-compiled	[CE]  cannot  find  symbol  month	41	None	replace
116	[BUG]  [BUGGY]  peg(this.year,  this.calendar.getInstance());  [CE]  cannot  find  symbol  calendar  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.calendar.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.calendar.getInstance());	  peg(this.year,    Calendar.getInstance());    	non-compiled	[CE]  cannot  find  symbol  calendar	41	None	replace
117	[BUG]  [BUGGY]  peg(this.year,  this.day,  Calendar.getInstance());  [CE]  cannot  find  symbol  day  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.day,  Calendar.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.day,  Calendar.getInstance());	  peg(this.year,    Calendar.getInstance());    	non-compiled	[CE]  cannot  find  symbol  day	41	None	replace
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  this.year  =(short)FIRST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year    =(short)FIRST_WEEK_IN_YEAR;    this.year  =(short)FIRST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	3	12	add
119	[BUG]  [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  this.year  =(short)FIRST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  this.year  =(short)FIRST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)FIRST_WEEK_IN_YEAR;    this.year  =(short)FIRST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	3	12	add
120	[BUG]  [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  This.year  =(short)FIRST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  This  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  This.year  =(short)FIRST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)FIRST_WEEK_IN_YEAR;    This.year  =(short)FIRST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  This	3	None	add
121	[BUG]  [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  int  year  =(short)FIRST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  int  year  =(short)FIRST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)FIRST_WEEK_IN_YEAR;    int  year  =(short)FIRST_WEEK_IN_YEAR;	  	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	3	None	add
122	[BUG]  [BUGGY]  Peg(this.week.getInstance(),  Calendar.getInstance());  [CE]  byte  cannot  be  dereferenced  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(this.week.getInstance(),  Calendar.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(this.week.getInstance(),  Calendar.getInstance());	  Peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  byte  cannot  be  dereferenced	8	None	replace
123	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.week,  this.year);  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  this.week,  this.year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.week,  this.year);	  Peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
124	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);	  Peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
125	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.week,  this.month);  [CE]  cannot  find  symbol  month  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  this.week,  this.month);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.week,  this.month);	  Peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  cannot  find  symbol  month	8	None	replace
126	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  this.month  =(short)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  month  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  this.month  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR;  this.month  =(short)LAST_WEEK_IN_YEAR;	          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.month    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  cannot  find  symbol  month	55	None	replace
127	[BUG]  [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  this.month  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  month  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  this.month  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)FIRST_WEEK_IN_YEAR;  this.month  =(byte)LAST_WEEK_IN_YEAR;	          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.month    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  cannot  find  symbol  month	55	None	replace
128	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  this.month  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  month  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  this.month  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR;  this.month  =(byte)LAST_WEEK_IN_YEAR;	          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.month    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  cannot  find  symbol  month	55	None	replace
129	[BUG]  [BUGGY]  int  year  =(int)LAST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  int  year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	int  year  =(int)LAST_WEEK_IN_YEAR;	          this.year    =(short)LAST_WEEK_IN_YEAR;    int    year    =(short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	33	None	replace
130	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  int  year  =(int)LAST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  int  year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR;  int  year  =(int)LAST_WEEK_IN_YEAR;	          this.year    =(short)LAST_WEEK_IN_YEAR;    int    year    =(short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	33	None	replace
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    this.year  =(short)LAST_WEEK_IN_YEAR  +  1;	  	compilable	  [FE]  AssertionFailedError  	1	12	add
132	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    this.year  =(short)LAST_WEEK_IN_YEAR  +  1;	  	compilable	  [FE]  AssertionFailedError  	1	12	add
133	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  This.year  =(short)LAST_WEEK_IN_YEAR  +  1;  [CE]  cannot  find  symbol  This  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  This.year  =(short)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    This.year  =(short)LAST_WEEK_IN_YEAR  +  1;	  	non-compiled	[CE]  cannot  find  symbol  This	1	None	add
134	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  int  year  =(short)LAST_WEEK_IN_YEAR  +  1;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  int  year  =(short)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    int  year  =(short)LAST_WEEK_IN_YEAR  +  1;	  	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	1	None	add
135	[BUG]  [BUGGY]  Peg(this.instance,  Calendar.getInstance(),  LAST_WEEK_IN_YEAR);  [CE]  cannot  find  symbol  instance  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(this.instance,  Calendar.getInstance(),  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(this.instance,  Calendar.getInstance(),  LAST_WEEK_IN_YEAR);	  Peg(this.instance,    Calendar.getInstance());    	non-compiled	[CE]  cannot  find  symbol  instance	38	None	replace
136	[BUG]  [BUGGY]  Peg(this.instance,  Calendar.getInstance(),  this.year);  [CE]  cannot  find  symbol  instance  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(this.instance,  Calendar.getInstance(),  this.year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(this.instance,  Calendar.getInstance(),  this.year);	  Peg(this.instance,    Calendar.getInstance());    	non-compiled	[CE]  cannot  find  symbol  instance	38	None	replace
137	[BUG]  [BUGGY]  Peg(this.instance,  Calendar.getInstance(),  this.week);  [CE]  cannot  find  symbol  instance  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(this.instance,  Calendar.getInstance(),  this.week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(this.instance,  Calendar.getInstance(),  this.week);	  Peg(this.instance,    Calendar.getInstance());    	non-compiled	[CE]  cannot  find  symbol  instance	38	None	replace
138	[BUG]  [BUGGY]  peg(this.year,  this.least,  this.week.getInstance());  [CE]  cannot  find  symbol  least  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.least,  this.week.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.least,  this.week.getInstance());	  peg(this.year,    this.least.getInstance());    	non-compiled	[CE]  cannot  find  symbol  least	17	None	replace
139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	                this.year        =(byte)LAST_WEEK_IN_YEAR;        this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	18	12	add
140	[BUG]  [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(byte)LAST_WEEK_IN_YEAR;        this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	18	12	add
141	[BUG]  [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  int  year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  int  year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(byte)LAST_WEEK_IN_YEAR;        this.year    =(byte)LAST_WEEK_IN_YEAR;    int  year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	18	None	add
142	[BUG]  [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  This.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  This  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  This.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(byte)LAST_WEEK_IN_YEAR;        this.year    =(byte)LAST_WEEK_IN_YEAR;    This.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  This	18	None	add
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  2;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(short)LAST_WEEK_IN_YEAR  +  2;	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    	compilable	  [FE]  AssertionFailedError  	2	12	replace
144	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  2;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  2;	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    	compilable	  [FE]  AssertionFailedError  	2	12	replace
145	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  3;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(short)LAST_WEEK_IN_YEAR  +  3;	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    	compilable	  [FE]  AssertionFailedError  	2	12	replace
146	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  3;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  3;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  3;	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    	compilable	  [FE]  AssertionFailedError  	2	12	replace
147	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  week);  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  week);	  Peg(Calendar.getInstance(),    year);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
148	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  YEAR);  [CE]  cannot  find  symbol  YEAR  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  YEAR);	  Peg(Calendar.getInstance(),    year);    	non-compiled	[CE]  cannot  find  symbol  YEAR	9	None	replace
149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(short)FIRST_WEEK_IN_YEAR  +  1;	  this.year    =(short)FIRST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	4	12	replace
150	[BUG]  [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)FIRST_WEEK_IN_YEAR  +  1;	  this.year    =(short)FIRST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	4	12	replace
151	[BUG]  [BUGGY]  this.year  =(short)lAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  lAST_WEEK_IN_YEAR  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)lAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)lAST_WEEK_IN_YEAR;	  this.year    =(short)FIRST_WEEK_IN_YEAR;    	non-compiled	[CE]  cannot  find  symbol  lAST_WEEK_IN_YEAR	4	None	replace
152	[BUG]  [BUGGY]  This.year  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  This  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  This.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	This.year  =(byte)LAST_WEEK_IN_YEAR;	          this.year    =(byte)LAST_WEEK_IN_YEAR;    This.year    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  cannot  find  symbol  This	20	None	replace
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;	  	compilable	  [FE]  AssertionFailedError  	22	12	add
154	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;	  	compilable	  [FE]  AssertionFailedError  	22	12	add
155	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  This.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [CE]  cannot  find  symbol  This  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  This.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    This.year  =(byte)LAST_WEEK_IN_YEAR  +  1;	  	non-compiled	[CE]  cannot  find  symbol  This	22	None	add
156	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  int  year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  int  year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    int  year  =(byte)LAST_WEEK_IN_YEAR  +  1;	  	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	22	None	add
157	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  week,  LAST_WEEK_IN_YEAR);  [CE]  no  suitable  method  found  for  peg(Calendar,short,int,int)  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  week,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  week,  LAST_WEEK_IN_YEAR);	  peg(Calendar.getInstance(),    this.year,    week);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,int,int)	43	None	replace
158	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  week,  this.year);  [CE]  no  suitable  method  found  for  peg(Calendar,int,short)  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  week,  this.year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  week,  this.year);	  peg(Calendar.getInstance(),    this.year,    week);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,int,short)	43	None	replace
159	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.week,  this.week);  [CE]  no  suitable  method  found  for  peg(Calendar,short,byte,byte)  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.week,  this.week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.week,  this.week);	  peg(Calendar.getInstance(),    this.year,    week);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,byte,byte)	43	None	replace
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  this.year  =(byte)FIRST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year    =(byte)FIRST_WEEK_IN_YEAR;    this.year  =(byte)FIRST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	24	12	add
161	[BUG]  [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  this.year  =(byte)FIRST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  this.year  =(byte)FIRST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)FIRST_WEEK_IN_YEAR;    this.year  =(byte)FIRST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	24	12	add
162	[BUG]  [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  This.year  =(byte)FIRST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  This  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  This.year  =(byte)FIRST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)FIRST_WEEK_IN_YEAR;    This.year  =(byte)FIRST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  This	24	None	add
163	[BUG]  [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  int  year  =(byte)FIRST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  int  year  =(byte)FIRST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)FIRST_WEEK_IN_YEAR;    int  year  =(byte)FIRST_WEEK_IN_YEAR;	  	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	24	None	add
164	[BUG]  [BUGGY]  peg(this.week.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);  [CE]  byte  cannot  be  dereferenced  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);	  peg(Calendar.getInstance(),    this.week,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  byte  cannot  be  dereferenced	57	None	replace
165	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  week);  [CE]  no  suitable  method  found  for  peg(Calendar,byte,int,int)  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  week);	  peg(Calendar.getInstance(),    this.week,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,byte,int,int)	57	None	replace
166	[BUG]  [BUGGY]  peg(this.week,  Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);  [CE]  no  suitable  method  found  for  peg(byte,Calendar,byte,int)  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week,  Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week,  Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);	  peg(Calendar.getInstance(),    this.week,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  no  suitable  method  found  for  peg(byte,Calendar,byte,int)	57	None	replace
167	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  this.year);  [CE]  no  suitable  method  found  for  peg(Calendar,byte,int,short)  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  this.year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  this.year);	  peg(Calendar.getInstance(),    this.week,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,byte,int,short)	57	None	replace
168	[BUG]  [BUGGY]  peg(this.year,  this.hour.getInstance());  [CE]  cannot  find  symbol  hour  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.hour.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.hour.getInstance());	  peg(this.year,    this.len.getInstance());    	non-compiled	[CE]  cannot  find  symbol  hour	48	None	replace
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	30	12	add
170	[BUG]  [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	30	12	add
171	[BUG]  [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(Short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  [CE]  inconvertible  types  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(Short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(Short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  inconvertible  types	30	None	add
172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	30	12	add
173	[BUG]  [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(int)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	30	12	add
174	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  int  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  int  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)LAST_WEEK_IN_YEAR    -    1;    int  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;	  	non-compiled	[CE]  not  a  statement	39	None	add
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  0);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(firstMillisecond,  0);	  this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	compilable	  [FE]  AssertionFailedError  	37	4	replace
176	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  0);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  0);	  this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	compilable	  [FE]  AssertionFailedError  	37	4	replace
177	[BUG]  [BUGGY]  int  year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  int  year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	int  year  =(int)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;	          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year    =(Short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	52	None	replace
178	[BUG]  [BUGGY]  this.year  =(byte)least_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  least_WEEK_IN_YEAR  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)least_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)least_WEEK_IN_YEAR;	          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  cannot  find  symbol  least_WEEK_IN_YEAR	19	None	replace
179	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.FirstMillisecond  =  Math.max(firstMillisecond,  year);  [CE]  cannot  find  symbol  FirstMillisecond  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.FirstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond    =    Math.max(firstMillisecond,    year);    this.FirstMillisecond  =  Math.max(firstMillisecond,  year);	  	non-compiled	[CE]  cannot  find  symbol  FirstMillisecond	36	None	add
180	[BUG]  [BUGGY]  peg(this.calendar.getInstance(),  week);  [CE]  cannot  find  symbol  calendar  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.calendar.getInstance(),  week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.calendar.getInstance(),  week);	  peg(this.week.getInstance(),    calendar);    	non-compiled	[CE]  cannot  find  symbol  calendar	28	None	replace
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;	  	compilable	  [FE]  AssertionFailedError  	22	12	add
182	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;	  	compilable	  [FE]  AssertionFailedError  	22	12	add
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  4;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(byte)LAST_WEEK_IN_YEAR  +  4;	  this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    	compilable	  [FE]  AssertionFailedError  	23	12	replace
184	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  4;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  +  4;	  this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    	compilable	  [FE]  AssertionFailedError  	23	12	replace
185	[BUG]  [BUGGY]  peg(this.year,  this.len,  this.week.getInstance());  [CE]  cannot  find  symbol  len  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.len,  this.week.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.len,  this.week.getInstance());	  peg(this.year,    this.len.getInstance());    	non-compiled	[CE]  cannot  find  symbol  len	48	None	replace
186	[BUG]  [BUGGY]  peg(this.week,  Calendar.getInstance(),  YEAR);  [CE]  cannot  find  symbol  YEAR  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week,  Calendar.getInstance(),  YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week,  Calendar.getInstance(),  YEAR);	  peg(this.week,    Calendar.getInstance());    	non-compiled	[CE]  cannot  find  symbol  YEAR	34	None	replace
187	[BUG]  [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  int  year  =(short)LAST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  int  year  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)FIRST_WEEK_IN_YEAR;  int  year  =(short)LAST_WEEK_IN_YEAR;	          this.year    =(short)LAST_WEEK_IN_YEAR;    int    year    =(short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	33	None	replace
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  +  1);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  +  1);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
189	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  +  1);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  +  1);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
190	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  this.month  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  month  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  this.month  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  this.month  =(byte)LAST_WEEK_IN_YEAR;	          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.month    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  cannot  find  symbol  month	55	None	replace
191	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  this.month  =(byte)least_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  month  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  this.month  =(byte)least_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR;  this.month  =(byte)least_WEEK_IN_YEAR;	          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.month    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  cannot  find  symbol  month	55	None	replace
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(byte)FIRST_WEEK_IN_YEAR  +  1;	  this.year    =(byte)FIRST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	25	12	replace
193	[BUG]  [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)FIRST_WEEK_IN_YEAR  +  1;	  this.year    =(byte)FIRST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	25	12	replace
194	[BUG]  [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  int  this.year  =(int)LAST_WEEK_IN_YEAR;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  int  this.year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(int)LAST_WEEK_IN_YEAR;    int  this.year  =(int)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  not  a  statement	50	None	add
195	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  year,  LAST_WEEK_IN_YEAR);  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  year,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  year,  LAST_WEEK_IN_YEAR);	  Peg(Calendar.getInstance(),    year);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
196	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  year,  this.week);  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  year,  this.week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  year,  this.week);	  Peg(Calendar.getInstance(),    year);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
197	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.week,  year);  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  this.week,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.week,  year);	  Peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
198	[BUG]  [BUGGY]  peg(this.week.getInstance(),  this.year,  year);  [CE]  byte  cannot  be  dereferenced  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  this.year,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  this.year,  year);	  peg(this.week.getInstance(),    this.year);    	non-compiled	[CE]  byte  cannot  be  dereferenced	29	None	replace
199	[BUG]  [BUGGY]  peg(calendar.getInstance(),  Calendar.getInstance());  [CE]  cannot  find  symbol  calendar  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(calendar.getInstance(),  Calendar.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(calendar.getInstance(),  Calendar.getInstance());	  peg(this.year.getInstance(),    Calendar.getInstance());    	non-compiled	[CE]  cannot  find  symbol  calendar	11	None	replace
200	[BUG]  [BUGGY]  Peg(this.year,  this.month.getInstance());  [CE]  cannot  find  symbol  month  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(this.year,  this.month.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(this.year,  this.month.getInstance());	  peg(this.year,    this.month.getInstance());    	non-compiled	[CE]  cannot  find  symbol  month	15	None	replace
201	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  short  year  =(byte)LAST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  short  year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR;  short  year  =(byte)LAST_WEEK_IN_YEAR;	          this.year    =(byte)LAST_WEEK_IN_YEAR;    int    year    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	21	None	replace
202	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  int  year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  int  year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR;  int  year  =(byte)LAST_WEEK_IN_YEAR  +  1;	          this.year    =(byte)LAST_WEEK_IN_YEAR;    int    year    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	21	None	replace
203	[BUG]  [BUGGY]  peg(this.year,  this.week,  this.day.getInstance());  [CE]  cannot  find  symbol  day  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.week,  this.day.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.week,  this.day.getInstance());	  peg(this.year,    this.week.getInstance());    	non-compiled	[CE]  cannot  find  symbol  day	14	None	replace
204	[BUG]  [BUGGY]  peg(this.year,  this.week,  this.last.getInstance());  [CE]  cannot  find  symbol  last  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.week,  this.last.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.week,  this.last.getInstance());	  peg(this.year,    this.week.getInstance());    	non-compiled	[CE]  cannot  find  symbol  last	14	None	replace
205	[BUG]  [BUGGY]  Peg(this.week.getInstance(),  this.week);  [CE]  byte  cannot  be  dereferenced  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(this.week.getInstance(),  this.week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(this.week.getInstance(),  this.week);	  peg(this.week.getInstance(),    this.week);    	non-compiled	[CE]  byte  cannot  be  dereferenced	27	None	replace
206	[BUG]  [BUGGY]  peg(this.month.getInstance(),  this.week);  [CE]  cannot  find  symbol  month  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.month.getInstance(),  this.week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.month.getInstance(),  this.week);	  peg(this.week.getInstance(),    this.week);    	non-compiled	[CE]  cannot  find  symbol  month	27	None	replace
207	[BUG]  [BUGGY]  peg(this.week.getInstance(),  Calendar.SECOND_WEEK_IN_YEAR);  [CE]  byte  cannot  be  dereferenced  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  Calendar.SECOND_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  Calendar.SECOND_WEEK_IN_YEAR);	  peg(this.week.getInstance(),    Calendar.getInstance());    	non-compiled	[CE]  byte  cannot  be  dereferenced	26	None	replace
208	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  year,  LAST_WEEK_IN_YEAR);  [CE]  no  suitable  method  found  for  peg(Calendar,short,int,int)  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  year,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  year,  LAST_WEEK_IN_YEAR);	  peg(Calendar.getInstance(),    this.year,    year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,int,int)	42	None	replace
209	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  this.year,  lastMillisecond);  [CE]  no  suitable  method  found  for  peg(Calendar,byte,short,long)  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.week,  this.year,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  this.year,  lastMillisecond);	  peg(Calendar.getInstance(),    this.week,    this.year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,byte,short,long)	56	None	replace
210	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  week,  DEFAULT_WEEK_IN_YEAR);  [CE]  cannot  find  symbol  DEFAULT_WEEK_IN_YEAR  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  week,  DEFAULT_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  week,  DEFAULT_WEEK_IN_YEAR);	  peg(Calendar.getInstance(),    this.year,    week);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_WEEK_IN_YEAR	43	None	replace
211	[BUG]  [BUGGY]  peg(this.year,  Calendar.getInstance(),  week);  [CE]  no  suitable  method  found  for  peg(short,Calendar,int)  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  Calendar.getInstance(),  week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  Calendar.getInstance(),  week);	  peg(this.year,    Calendar.getInstance());    	non-compiled	[CE]  no  suitable  method  found  for  peg(short,Calendar,int)	41	None	replace
212	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.year,  year);  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  this.year,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.year,  year);	  Peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
213	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.year,  false);  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  this.year,  false);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.year,  false);	  Peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
214	[BUG]  [BUGGY]  Peg(this.year.getInstance(),  Calendar.getInstance);  [CE]  short  cannot  be  dereferenced  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(this.year.getInstance(),  Calendar.getInstance);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(this.year.getInstance(),  Calendar.getInstance);	  Peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  short  cannot  be  dereferenced	7	None	replace
215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  *  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(short)LAST_WEEK_IN_YEAR  *  1;	  this.year    =(short)LAST_WEEK_IN_YEAR    -    1;    	compilable	  [FE]  AssertionFailedError  	6	12	replace
216	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  *  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  *  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  *  1;	  this.year    =(short)LAST_WEEK_IN_YEAR    -    1;    	compilable	  [FE]  AssertionFailedError  	6	12	replace
217	[BUG]  [BUGGY]  peg(this.least,  this.year.getInstance());  [CE]  cannot  find  symbol  least  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.least,  this.year.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.least,  this.year.getInstance());	  peg(this.year,    this.least.getInstance());    	non-compiled	[CE]  cannot  find  symbol  least	17	None	replace
218	[BUG]  [BUGGY]  peg(this.year,  this.least,  this.month.getInstance());  [CE]  cannot  find  symbol  least  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.least,  this.month.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.least,  this.month.getInstance());	  peg(this.year,    this.least.getInstance());    	non-compiled	[CE]  cannot  find  symbol  least	17	None	replace
219	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  lastMillisecond,  this.firstMillisecond);  [CE]  no  suitable  method  found  for  peg(Calendar,short,long,long)  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  lastMillisecond,  this.firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  lastMillisecond,  this.firstMillisecond);	  peg(Calendar.getInstance(),    this.year,    this.firstMillisecond);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,long,long)	53	None	replace
220	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.lastMillisecond,  this.period);  [CE]  cannot  find  symbol  period  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.lastMillisecond,  this.period);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.lastMillisecond,  this.period);	  peg(Calendar.getInstance(),    this.year,    this.firstMillisecond);    	non-compiled	[CE]  cannot  find  symbol  period	53	None	replace
221	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.lastMillisecond,  this.week);  [CE]  no  suitable  method  found  for  peg(Calendar,short,long,byte)  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.lastMillisecond,  this.week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.lastMillisecond,  this.week);	  peg(Calendar.getInstance(),    this.year,    this.firstMillisecond);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,long,byte)	53	None	replace
222	[BUG]  [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  This.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  This  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  This.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    This.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  This	30	None	add
223	[BUG]  [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(long)LAST_WEEK_IN_YEAR;  this.year  =(long)LAST_WEEK_IN_YEAR;  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(long)LAST_WEEK_IN_YEAR;  this.year  =(long)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(long)LAST_WEEK_IN_YEAR;  this.year  =(long)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  possible  loss  of  precision	30	None	add
224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  4;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(short)LAST_WEEK_IN_YEAR  +  4;	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    	compilable	  [FE]  AssertionFailedError  	2	12	replace
225	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  4;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  4;	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    	compilable	  [FE]  AssertionFailedError  	2	12	replace
226	[BUG]  [BUGGY]  peg(this.week,  this.year);  [CE]  no  suitable  method  found  for  peg(byte,short)  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week,  this.year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week,  this.year);	  peg(Calendar.getInstance(),    this.week,    year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(byte,short)	35	None	replace
227	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  this.year  =(short)LAST_WEEK_IN_YEAR  +  2;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    this.year  =(short)LAST_WEEK_IN_YEAR  +  2;	  	compilable	  [FE]  AssertionFailedError  	1	12	add
228	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  this.year  =(short)LAST_WEEK_IN_YEAR  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  this.year  =(short)LAST_WEEK_IN_YEAR  +  2;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    this.year  =(short)LAST_WEEK_IN_YEAR  +  2;	  	compilable	  [FE]  AssertionFailedError  	1	12	add
229	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  YEAR);  [CE]  cannot  find  symbol  YEAR  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  YEAR);	  peg(Calendar.getInstance(),    this.week,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  cannot  find  symbol  YEAR	57	None	replace
230	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR);  [CE]  no  suitable  method  found  for  peg(Calendar,byte,int,int)  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR);	  peg(Calendar.getInstance(),    this.week,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,byte,int,int)	57	None	replace
231	[BUG]  [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  int  this.year  =(byte)FIRST_WEEK_IN_YEAR;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  int  this.year  =(byte)FIRST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)FIRST_WEEK_IN_YEAR;    int  this.year  =(byte)FIRST_WEEK_IN_YEAR;	  	non-compiled	[CE]  not  a  statement	24	None	add
232	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.year,  this.second);  [CE]  cannot  find  symbol  second  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  this.year,  this.second);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.year,  this.second);	  Peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  cannot  find  symbol  second	7	None	replace
233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  year);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
234	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  year);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  year);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
235	[BUG]  [BUGGY]  peg(this.year,  this.least,  this.day.getInstance());  [CE]  cannot  find  symbol  least  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.least,  this.day.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.least,  this.day.getInstance());	  peg(this.year,    this.least.getInstance());    	non-compiled	[CE]  cannot  find  symbol  least	17	None	replace
236	[BUG]  [BUGGY]  peg(this.week.getInstance(),  week);  [CE]  byte  cannot  be  dereferenced  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  week);	  peg(this.week.getInstance(),    this.week);    	non-compiled	[CE]  byte  cannot  be  dereferenced	27	None	replace
237	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(year,  firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(year,  firstMillisecond);	  this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	compilable	  [FE]  AssertionFailedError  	37	4	replace
238	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(year,  firstMillisecond);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(year,  firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(year,  firstMillisecond);	  this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	compilable	  [FE]  AssertionFailedError  	37	4	replace
239	[BUG]  [BUGGY]  peg(this.week.getInstance(),  this.year,  this.lastMillisecond);  [CE]  byte  cannot  be  dereferenced  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week.getInstance(),  this.year,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  this.year,  this.lastMillisecond);	  peg(this.week.getInstance(),    this.year);    	non-compiled	[CE]  byte  cannot  be  dereferenced	29	None	replace
240	[BUG]  [BUGGY]  peg(this.year,  this.week.getInstance(),  year);  [CE]  byte  cannot  be  dereferenced  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.week.getInstance(),  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.week.getInstance(),  year);	  peg(this.year,    this.week.getInstance());    	non-compiled	[CE]  byte  cannot  be  dereferenced	14	None	replace
241	[BUG]  [BUGGY]  peg(this.year,  this.week.getInstance(),  week);  [CE]  byte  cannot  be  dereferenced  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  this.week.getInstance(),  week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.week.getInstance(),  week);	  peg(this.year,    this.week.getInstance());    	non-compiled	[CE]  byte  cannot  be  dereferenced	14	None	replace
242	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	30	12	add
243	[BUG]  [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	30	12	add
244	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.week  =(short)LAST_WEEK_IN_YEAR;  this.week  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    this.week  =(short)LAST_WEEK_IN_YEAR;  this.week  =(short)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	30	13	add
245	[BUG]  [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.week  =(short)LAST_WEEK_IN_YEAR;  this.week  =(short)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.week  =(short)LAST_WEEK_IN_YEAR;  this.week  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    this.week  =(short)LAST_WEEK_IN_YEAR;  this.week  =(short)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	30	13	add
246	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    this.week  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	30	13	add
247	[BUG]  [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    this.week  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	30	13	add
248	[BUG]  [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.month  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  month  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;  this.month  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(short)LAST_WEEK_IN_YEAR;        this.year    =(short)LAST_WEEK_IN_YEAR;    this.month  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  month	30	None	add
249	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  this.year  =(Short)LAST_WEEK_IN_YEAR  -  1;  [CE]  inconvertible  types  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  this.year  =(Short)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)LAST_WEEK_IN_YEAR    -    1;    this.year  =(Short)LAST_WEEK_IN_YEAR  -  1;	  	non-compiled	[CE]  inconvertible  types	5	None	add
250	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  month);  [CE]  cannot  find  symbol  month  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  month);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR,  month);	  peg(Calendar.getInstance(),    this.week,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  cannot  find  symbol  month	57	None	replace
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
252	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
253	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.week,  this.second);  [CE]  cannot  find  symbol  second  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  this.week,  this.second);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.week,  this.second);	  Peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  cannot  find  symbol  second	8	None	replace
254	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.week,  this.firstMillisecond);  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  this.week,  this.firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.week,  this.firstMillisecond);	  Peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
255	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.week,  this.lastMillisecond);  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  this.week,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.week,  this.lastMillisecond);	  Peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  this.year  =(byte)LAST_WEEK_IN_YEAR  -  2;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year    =(byte)LAST_WEEK_IN_YEAR    -    1;    this.year  =(byte)LAST_WEEK_IN_YEAR  -  2;	  	compilable	  [FE]  AssertionFailedError  	39	12	add
257	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  this.year  =(byte)LAST_WEEK_IN_YEAR  -  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  this.year  =(byte)LAST_WEEK_IN_YEAR  -  2;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)LAST_WEEK_IN_YEAR    -    1;    this.year  =(byte)LAST_WEEK_IN_YEAR  -  2;	  	compilable	  [FE]  AssertionFailedError  	39	12	add
258	[BUG]  [BUGGY]  peg(this.year.getInstance(),  year);  [CE]  short  cannot  be  dereferenced  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year.getInstance(),  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year.getInstance(),  year);	  peg(this.year.getInstance(),    this.year);    	non-compiled	[CE]  short  cannot  be  dereferenced	10	None	replace
259	[BUG]  [BUGGY]  Peg(this.year.getInstance(),  this.year);  [CE]  short  cannot  be  dereferenced  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(this.year.getInstance(),  this.year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(this.year.getInstance(),  this.year);	  peg(this.year.getInstance(),    this.year);    	non-compiled	[CE]  short  cannot  be  dereferenced	10	None	replace
260	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.second,  this.lastMillisecond);  [CE]  cannot  find  symbol  second  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.second,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.second,  this.lastMillisecond);	  peg(Calendar.getInstance(),    this.year,    this.lastMillisecond);    	non-compiled	[CE]  cannot  find  symbol  second	54	None	replace
261	[BUG]  [BUGGY]  peg(this.week,  this.len.getInstance());  [CE]  cannot  find  symbol  len  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.week,  this.len.getInstance());  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week,  this.len.getInstance());	  peg(this.year,    this.len.getInstance());    	non-compiled	[CE]  cannot  find  symbol  len	48	None	replace
262	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  this.year  =(Short)LAST_WEEK_IN_YEAR  +  1;  [CE]  inconvertible  types  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  this.year  =(Short)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    this.year  =(Short)LAST_WEEK_IN_YEAR  +  1;	  	non-compiled	[CE]  inconvertible  types	1	None	add
263	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  year,  DEFAULT_WEEK_IN_YEAR);  [CE]  cannot  find  symbol  DEFAULT_WEEK_IN_YEAR  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  Peg(Calendar.getInstance(),  year,  DEFAULT_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  year,  DEFAULT_WEEK_IN_YEAR);	  Peg(Calendar.getInstance(),    year);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_WEEK_IN_YEAR	9	None	replace
264	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  year,  this.year);  [CE]  no  suitable  method  found  for  peg(Calendar,int,short)  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  year,  this.year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  year,  this.year);	  peg(Calendar.getInstance(),    this.year,    year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,int,short)	42	None	replace
265	[BUG]  [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  this.year  =(Short)FIRST_WEEK_IN_YEAR;  [CE]  inconvertible  types  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  this.year  =(Short)FIRST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(short)FIRST_WEEK_IN_YEAR;    this.year  =(Short)FIRST_WEEK_IN_YEAR;	  	non-compiled	[CE]  inconvertible  types	3	None	add
266	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	                this.year        =(byte)LAST_WEEK_IN_YEAR;        this.year    =(byte)LAST_WEEK_IN_YEAR;    this.week  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	18	13	add
267	[BUG]  [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(byte)LAST_WEEK_IN_YEAR;        this.year    =(byte)LAST_WEEK_IN_YEAR;    this.week  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	18	13	add
268	[BUG]  [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.month  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  month  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.month  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(byte)LAST_WEEK_IN_YEAR;        this.year    =(byte)LAST_WEEK_IN_YEAR;    this.month  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  month	18	None	add
269	[BUG]  [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.second  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  second  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.second  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(byte)LAST_WEEK_IN_YEAR;        this.year    =(byte)LAST_WEEK_IN_YEAR;    this.second  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  second	18	None	add
270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	                this.year        =(byte)LAST_WEEK_IN_YEAR;        this.year    =(byte)LAST_WEEK_IN_YEAR;    this.week  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	18	13	add
271	[BUG]  [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;  this.week  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	                this.year        =(byte)LAST_WEEK_IN_YEAR;        this.year    =(byte)LAST_WEEK_IN_YEAR;    this.week  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	18	13	add
272	[BUG]  [BUGGY]  this.month  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  month  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.month  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.month  =(byte)LAST_WEEK_IN_YEAR;	          this.year    =(byte)LAST_WEEK_IN_YEAR;    this.month    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  cannot  find  symbol  month	55	None	replace
273	[BUG]  [BUGGY]  peg(this.year,  Calendar.getInstance(),  LAST_WEEK_IN_YEAR);  [CE]  no  suitable  method  found  for  peg(short,Calendar,int)  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(this.year,  Calendar.getInstance(),  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  Calendar.getInstance(),  LAST_WEEK_IN_YEAR);	  peg(this.year,    Calendar.getInstance());    	non-compiled	[CE]  no  suitable  method  found  for  peg(short,Calendar,int)	41	None	replace
274	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  this.year,  this.firstMillisecond);  [CE]  no  suitable  method  found  for  peg(Calendar,byte,short,long)  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.week,  this.year,  this.firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  this.year,  this.firstMillisecond);	  peg(Calendar.getInstance(),    this.week,    this.year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,byte,short,long)	56	None	replace
275	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  this.year,  this.lastMillisecond);  [CE]  no  suitable  method  found  for  peg(Calendar,byte,short,long)  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  peg(Calendar.getInstance(),  this.week,  this.year,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  this.year,  this.lastMillisecond);	  peg(Calendar.getInstance(),    this.week,    this.year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,byte,short,long)	56	None	replace
276	[BUG]  [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  this.year  =(byte)FRST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  FRST_WEEK_IN_YEAR  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;      [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  this.year  =(byte)FRST_WEEK_IN_YEAR;  [BUGGY]      peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year    =(byte)FIRST_WEEK_IN_YEAR;    this.year  =(byte)FRST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  FRST_WEEK_IN_YEAR	24	None	add
