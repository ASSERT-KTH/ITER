bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);	      this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
2	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);	      this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
3	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR);  [CE]  illegal  start  of  type  [FE]                      [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR);	      this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
4	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  lastMillisecond);  [CE]  illegal  start  of  type  [FE]                        [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  lastMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  lastMillisecond);	      this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
5	[BUG]  [BUGGY]  long  firstMillisecond  =  this.firstMillisecond  -  1;  this.lastMillisecond  =  lastMillisecond;  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]      [BUGGY]  long  firstMillisecond  =  this.firstMillisecond  -  1;  this.lastMillisecond  =  lastMillisecond;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	long  firstMillisecond  =  this.firstMillisecond  -  1;  this.lastMillisecond  =  lastMillisecond;	      int    firstMillisecond    =    this.firstMillisecond    -    1;    this.lastMillisecond    =    lastMillisecond;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  this.firstMillisecond  =  firstMillisecond  -  1;  this.lastMillisecond  =  lastMillisecond;  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]      [BUGGY]  this.firstMillisecond  =  firstMillisecond  -  1;  this.lastMillisecond  =  lastMillisecond;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  firstMillisecond  -  1;  this.lastMillisecond  =  lastMillisecond;	      int    firstMillisecond    =    this.firstMillisecond    -    1;    this.lastMillisecond    =    lastMillisecond;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  byte  firstMillisecond  =  this.firstMillisecond  -  1;  this.lastMillisecond  =  lastMillisecond;  [CE]  illegal  start  of  type  [FE]                      [CONTEXT]      [BUGGY]  byte  firstMillisecond  =  this.firstMillisecond  -  1;  this.lastMillisecond  =  lastMillisecond;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	byte  firstMillisecond  =  this.firstMillisecond  -  1;  this.lastMillisecond  =  lastMillisecond;	      int    firstMillisecond    =    this.firstMillisecond    -    1;    this.lastMillisecond    =    lastMillisecond;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  0,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  0,  LAST_WEEK_IN_YEAR);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  0,  LAST_WEEK_IN_YEAR);	  this(FIRST_WEEK_IN_YEAR,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);	  this(FIRST_WEEK_IN_YEAR,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  1);  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  1);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  1);	  this(FIRST_WEEK_IN_YEAR,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;	      this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  -  1;  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  -  1;	      this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  |  LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  type  [FE]                [CONTEXT]      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  |  LAST_WEEK_IN_YEAR;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  |  LAST_WEEK_IN_YEAR;	      this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  year,  week);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  year,  week);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  year,  week);	  public    Week(int    year,    int    week)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
15	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)getFirstMillisecond();  [CE]  illegal  start  of  type  [FE]          [CONTEXT]      [BUGGY]  this.firstMillisecond  =(byte)getFirstMillisecond();  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =(byte)getFirstMillisecond();	      this.firstMillisecond    =(byte)getLastMillisecond();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)getLastMillisecond()  +  1;  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this.firstMillisecond  =(byte)getLastMillisecond()  +  1;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =(byte)getLastMillisecond()  +  1;	      this.firstMillisecond    =(byte)getLastMillisecond();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)getLastMillisecond()  -  1;  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this.firstMillisecond  =(byte)getLastMillisecond()  -  1;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =(byte)getLastMillisecond()  -  1;	      this.firstMillisecond    =(byte)getLastMillisecond();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
18	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR,  week);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR,  week);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR,  week);	  this(FIRST_WEEK_IN_YEAR,    week);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  week,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  week,  LAST_WEEK_IN_YEAR);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  week,  LAST_WEEK_IN_YEAR);	  this(FIRST_WEEK_IN_YEAR,    week);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR);	  this(FIRST_WEEK_IN_YEAR,    week);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR,  year);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR,  year);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR,  year);	  this(FIRST_WEEK_IN_YEAR,    year);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  YEAR);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  YEAR);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  YEAR);	  this(FIRST_WEEK_IN_YEAR,    year);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  public  Week(int  year,  int  week)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  public  Week(int  year,  int  week)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	public    Week(int    year,    int    week)    {    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
24	[BUG]  [BUGGY]  public  Week(int  year,  int  week)  {  if  ((  year  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  public  Week(int  year,  int  week)  {  if  ((  year  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	public    Week(int    year,    int    week)    {    if  ((  year  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
25	[BUG]  [BUGGY]  public  Week(int  year,  int  week)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.. ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  public  Week(int  year,  int  week)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.. ");  }  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	public    Week(int    year,    int    week)    {    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.. ");  }	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
26	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond  /  1,  year);  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond  /  1,  year);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond  /  1,  year);	      this.firstMillisecond    =    Math.max(firstMillisecond    -    1,    year);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
27	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond  -  1,  lastMillisecond);  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond  -  1,  lastMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond  -  1,  lastMillisecond);	      this.firstMillisecond    =    Math.max(firstMillisecond    -    1,    year);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
28	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond  -  1,  this.lastMillisecond);  [CE]  illegal  start  of  type  [FE]                      [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond  -  1,  this.lastMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond  -  1,  this.lastMillisecond);	      this.firstMillisecond    =    Math.max(firstMillisecond    -    1,    year);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond  -  1,  this.year);  [CE]  illegal  start  of  type  [FE]                        [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond  -  1,  this.year);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond  -  1,  this.year);	      this.firstMillisecond    =    Math.max(firstMillisecond    -    1,    year);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond);	      this.firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
31	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  firstMillisecond);  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  firstMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  firstMillisecond);	      this.firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
32	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(FirstMillisecond,  lastMillisecond);  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.min(FirstMillisecond,  lastMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.min(FirstMillisecond,  lastMillisecond);	      this.firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
33	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)this.lastMillisecond  +  1;  [CE]  illegal  start  of  type  [FE]                [CONTEXT]      [BUGGY]  this.firstMillisecond  =(byte)this.lastMillisecond  +  1;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =(byte)this.lastMillisecond  +  1;	      this.firstMillisecond    =(byte)this.lastMillisecond;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
34	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)this.lastMillisecond  -  1;  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]      [BUGGY]  this.firstMillisecond  =(byte)this.lastMillisecond  -  1;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =(byte)this.lastMillisecond  -  1;	      this.firstMillisecond    =(byte)this.lastMillisecond;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
35	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)lastMillisecond;  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]      [BUGGY]  this.firstMillisecond  =(byte)lastMillisecond;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =(byte)lastMillisecond;	      this.firstMillisecond    =(byte)this.lastMillisecond;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
36	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());	      this.year    =(short)LAST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
37	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance());  [CE]  illegal  start  of  type  [FE]                [CONTEXT]      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance());  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance());	      this.year    =(short)LAST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
38	[BUG]  [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]      [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.year  =(int)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());	      this.year    =(short)LAST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
39	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  firstMillisecond);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  firstMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  firstMillisecond);	      this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
40	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  this.lastMillisecond);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  this.lastMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  this.lastMillisecond);	      this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          [CONTEXT]      [BUGGY]  public  Week(int  month,  int  year)  {  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	add	public  Week(int  month,  int  year)  {	  public    Week(int    week,    short    year)    {    	compilable	  [FE]  AssertionFailedError  	22	13	replace
42	[BUG]  [BUGGY]  public  Week(int  month,  int  year)  {  [FE]  AssertionFailedError  [FE]          [CONTEXT]      [BUGGY]  public  Week(int  month,  int  year)  {  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	public  Week(int  month,  int  year)  {	  public    Week(int    week,    short    year)    {    	compilable	  [FE]  AssertionFailedError  	22	13	replace
43	[BUG]  [BUGGY]  Public  Week(int  week,  int  year)  {  [CE]  cannot  find  symbol  [FE]            [CONTEXT]      [BUGGY]  Public  Week(int  week,  int  year)  {  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	Public  Week(int  week,  int  year)  {	  public    Week(int    week,    short    year)    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
44	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR,  week);  [CE]  illegal  start  of  type  [FE]          [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR,  week);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR,  week);	  this(FIRST_WEEK_IN_YEAR,    week,    year);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR,  week,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR,  week,  LAST_WEEK_IN_YEAR);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR,  week,  LAST_WEEK_IN_YEAR);	  this(FIRST_WEEK_IN_YEAR,    week,    year);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
46	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR,  year);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR,  year);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR,  year);	  this(FIRST_WEEK_IN_YEAR,    week,    year);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
47	[BUG]  [BUGGY]  int  firstMillisecond  =  this.lastMillisecond  /  LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  type  [FE]                [CONTEXT]      [BUGGY]  int  firstMillisecond  =  this.lastMillisecond  /  LAST_WEEK_IN_YEAR;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	int  firstMillisecond  =  this.lastMillisecond  /  LAST_WEEK_IN_YEAR;	      int    firstMillisecond    =    this.firstMillisecond    /    LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  int  firstMillisecond  =  this.firstMillisecond  /  LAST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]      [BUGGY]  int  firstMillisecond  =  this.firstMillisecond  /  LAST_WEEK_IN_YEAR  +  1;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	int  firstMillisecond  =  this.firstMillisecond  /  LAST_WEEK_IN_YEAR  +  1;	      int    firstMillisecond    =    this.firstMillisecond    /    LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  int  firstMillisecond  =  LAST_WEEK_IN_YEAR  /  this.firstMillisecond;  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]      [BUGGY]  int  firstMillisecond  =  LAST_WEEK_IN_YEAR  /  this.firstMillisecond;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	int  firstMillisecond  =  LAST_WEEK_IN_YEAR  /  this.firstMillisecond;	      int    firstMillisecond    =    this.firstMillisecond    /    LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond  +  1);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond  +  1);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond  +  1);	      this.firstMillisecond    =    Math.min(firstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
51	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond  -  1);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond  -  1);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond  -  1);	      this.firstMillisecond    =    Math.min(firstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
52	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  type  [FE]          [CONTEXT]      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  1;	      this.year    =(short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
53	[BUG]  [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.year  =(int)LAST_WEEK_IN_YEAR;	      this.year    =(short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.year  =(short)FIRST_WEEK_IN_YEAR;	      this.year    =(short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond  +  1);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond  +  1);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond  +  1);	      this.firstMillisecond    =    Math.min(firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
56	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond  -  1);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond  -  1);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond  -  1);	      this.firstMillisecond    =    Math.min(firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
57	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  +  1);  [CE]  illegal  start  of  type  [FE]          [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  +  1);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  +  1);	      this.firstMillisecond    =    Math.max(this.firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
58	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  -  1);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  -  1);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  -  1);	      this.firstMillisecond    =    Math.max(this.firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
59	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(this.firstMillisecond,  this.lastMillisecond);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.min(this.firstMillisecond,  this.lastMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.min(this.firstMillisecond,  this.lastMillisecond);	      this.firstMillisecond    =    Math.max(this.firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
60	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  firstMillisecond);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  firstMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.min(lastMillisecond,  firstMillisecond);	      this.firstMillisecond    =    Math.min(firstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
61	[BUG]  [BUGGY]  public  Week(int  week,  byte  year)  {  [CE]  no  suitable  constructor  found  for  Week(int,short)  [FE]          [CONTEXT]      [BUGGY]  public  Week(int  week,  byte  year)  {  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	public  Week(int  week,  byte  year)  {	  public    Week(int    week,    short    year)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  Week(int,short)	22	None	replace
62	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  type  [FE]          [CONTEXT]      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR;	      this.year    =(short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
63	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  0,  0);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  0,  0);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  0,  0);	  this(FIRST_WEEK_IN_YEAR,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  lastMillisecond);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  lastMillisecond);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  lastMillisecond);	  this(FIRST_WEEK_IN_YEAR,    week);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());	      this.year    =(short)LAST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
66	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  year,  week));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  year,  week));  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  year,  week));	  public    Week(int    year,    int    week)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
67	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  lastMillisecond);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  lastMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  lastMillisecond);	      this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    week);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
68	[BUG]  [BUGGY]  int  firstMillisecond  =  this.firstMillisecond  -  1L;  this.lastMillisecond  =  lastMillisecond;  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]      [BUGGY]  int  firstMillisecond  =  this.firstMillisecond  -  1L;  this.lastMillisecond  =  lastMillisecond;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	int  firstMillisecond  =  this.firstMillisecond  -  1L;  this.lastMillisecond  =  lastMillisecond;	      int    firstMillisecond    =    this.firstMillisecond    -    1;    this.lastMillisecond    =    lastMillisecond;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
69	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  2;  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  2;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  2;	      this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
70	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond  -  1,  year  +  1);  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond  -  1,  year  +  1);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond  -  1,  year  +  1);	      this.firstMillisecond    =    Math.max(firstMillisecond    -    1,    year);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
71	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR,  week,  year);  [CE]  illegal  start  of  type  [FE]          [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR,  week,  year);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  FIRST_WEEK_IN_YEAR,  week,  year);	  this(FIRST_WEEK_IN_YEAR,    week,    year);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
72	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  lastMillisecond,  week,  year);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  lastMillisecond,  week,  year);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  lastMillisecond,  week,  year);	  this(FIRST_WEEK_IN_YEAR,    week,    year);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  timeout  [FE]          [CONTEXT]      [BUGGY]  public  Week(int  week,  long  year)  {  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	add	public  Week(int  week,  long  year)  {	  public    Week(int    week,    short    year)    {    	compilable	timeout	22	1	replace
74	[BUG]  [BUGGY]  public  Week(int  week,  long  year)  {  timeout  [FE]          [CONTEXT]      [BUGGY]  public  Week(int  week,  long  year)  {  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	public  Week(int  week,  long  year)  {	  public    Week(int    week,    short    year)    {    	compilable	timeout	22	1	replace
75	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  week  -  1);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  week  -  1);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  week  -  1);	  this(FIRST_WEEK_IN_YEAR,    week);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  this.firstMillisecond  =(short)getLastMillisecond();  [CE]  illegal  start  of  type  [FE]          [CONTEXT]      [BUGGY]  this.firstMillisecond  =(short)getLastMillisecond();  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =(short)getLastMillisecond();	      this.firstMillisecond    =(byte)getLastMillisecond();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
77	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  this.firstMillisecond);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  this.firstMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.min(lastMillisecond,  this.firstMillisecond);	      this.firstMillisecond    =    Math.min(firstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
78	[BUG]  [BUGGY]  this(LAST_WEEK_IN_YEAR,  week,  year);  [CE]  illegal  start  of  type  [FE]          [CONTEXT]      [BUGGY]  this(LAST_WEEK_IN_YEAR,  week,  year);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(LAST_WEEK_IN_YEAR,  week,  year);	  this(FIRST_WEEK_IN_YEAR,    week,    year);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
79	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  lastMillisecond,  year);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  lastMillisecond,  year);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  lastMillisecond,  year);	  this(FIRST_WEEK_IN_YEAR,    week,    year);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
80	[BUG]  [BUGGY]  this(FIRST_WEEK_IN_YEAR,  month,  year);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this(FIRST_WEEK_IN_YEAR,  month,  year);  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(FIRST_WEEK_IN_YEAR,  month,  year);	  this(FIRST_WEEK_IN_YEAR,    week,    year);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
81	[BUG]  [BUGGY]  this(new  Integer(FIRST_WEEK_IN_YEAR),  new  Integer(week));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  this(new  Integer(FIRST_WEEK_IN_YEAR),  new  Integer(week));  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(new  Integer(FIRST_WEEK_IN_YEAR),  new  Integer(week));	  public    Week(int    year,    int    week)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
82	[BUG]  [BUGGY]  this(new  Integer(FIRST_WEEK_IN_YEAR),  new  int[]  {  week  }  );  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  this(new  Integer(FIRST_WEEK_IN_YEAR),  new  int[]  {  week  }  );  [BUGGY]    if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this(new  Integer(FIRST_WEEK_IN_YEAR),  new  int[]  {  week  }  );	  public    Week(int    year,    int    week)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
83	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  this.lastMillisecond);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  this.lastMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.min(lastMillisecond,  this.lastMillisecond);	      this.firstMillisecond    =    Math.min(firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
84	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  week);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  week);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  week);	      this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    week);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
85	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  year);  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  year);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  year);	      this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    year);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
86	[BUG]  [BUGGY]  int  firstMillisecond  =  this.firstMillisecond  -  1;  this.lastMillisecond  =  this.lastMillisecond;  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]      [BUGGY]  int  firstMillisecond  =  this.firstMillisecond  -  1;  this.lastMillisecond  =  this.lastMillisecond;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	int  firstMillisecond  =  this.firstMillisecond  -  1;  this.lastMillisecond  =  this.lastMillisecond;	      int    firstMillisecond    =    this.firstMillisecond    -    1;    this.lastMillisecond    =    lastMillisecond;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
87	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.lastMillisecond,  this.firstMillisecond);  [CE]  illegal  start  of  type  [FE]          [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(this.lastMillisecond,  this.firstMillisecond);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(this.lastMillisecond,  this.firstMillisecond);	      this.firstMillisecond    =    Math.max(this.firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
88	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  year);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  year);  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  year);	      this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
89	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      [BUGGY]  this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR;  [BUGGY]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	127	127	0	replace	this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR;	      this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
