1	[BUG]  [BUGGY]  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	add	    this.year  =(short)LAST_WEEK_IN_YEAR;		plausible		10	0
1	[BUG]  [BUGGY]  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	add	    this.year  =(byte)LAST_WEEK_IN_YEAR;		plausible		10	0
1	[BUG]  [BUGGY]  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	add	    this.week  =(byte)LAST_WEEK_IN_YEAR;		plausible		10	0
1	[BUG]  [BUGGY]  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	add	    this.year  =(byte)(FIRST_WEEK_IN_YEAR  +  1);		plausible		10	0
3	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53. ");  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");  [BUGGY]   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1. ");	throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53. ");  	plausible		9	0
3	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53. ");  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");  [BUGGY]   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52. ");	throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53. ");  	plausible		9	0
3	[BUG]  [BUGGY]  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	add	    this.year  =(byte)(FIRST_WEEK_IN_YEAR  -  FIRST_WEEK_IN_YEAR);		plausible		10	0
3	[BUG]  [BUGGY]  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	add	    this.year  =(byte)(FIRST_WEEK_IN_YEAR  -  firstMillisecond);		plausible		10	0
3	[BUG]  [BUGGY]  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	add	    this.year  =(byte)(FIRST_WEEK_IN_YEAR);		plausible		10	0
3	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53. ");  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");  [BUGGY]   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53. ");	throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53. ");  	plausible		9	0
3	[BUG]  [BUGGY]  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	add	    this.year  =(short)(FIRST_WEEK_IN_YEAR);		plausible		10	0
3	[BUG]  [BUGGY]  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	add	    this.year  =(short)(LAST_WEEK_IN_YEAR);		plausible		10	0
3	[BUG]  [BUGGY]  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	add	    this.year  =(short)(FIRST_WEEK_IN_YEAR  -  FIRST_WEEK_IN_YEAR);		plausible		10	0
3	[BUG]  [BUGGY]  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	add	    this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  week);		plausible		10	0
3	[BUG]  [BUGGY]  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	add	    this.year  =(short)(FIRST_WEEK_IN_YEAR  -  firstMillisecond);		plausible		10	0
4	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53. ");  [FE]  [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  [BUGGY]  throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53. ");  [BUGGY]   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)    int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year    	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  54. ");	throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53. ");  	plausible		9	0
