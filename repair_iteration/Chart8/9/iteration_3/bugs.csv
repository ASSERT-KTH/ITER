bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;  peg(Calendar.getInstance());  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;  peg(Calendar.getInstance());	  this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
2	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  /  1;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  /  1;  peg(Calendar.getInstance());  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  /  1;  peg(Calendar.getInstance());	  this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
3	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  2;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  2;  peg(Calendar.getInstance());  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  2;  peg(Calendar.getInstance());	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
4	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  peg(calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  peg(calendar.getInstance());  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  peg(calendar.getInstance());	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	10	2	add
6	[BUG]  [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	10	2	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	10	2	add
8	[BUG]  [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	10	2	add
9	[BUG]  [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  This  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    This.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  This	10	None	add
10	[BUG]  [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.FirstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  FirstMillisecond  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.FirstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.FirstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  FirstMillisecond	10	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.max(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);	  	compilable	  [FE]  AssertionFailedError  	64	2	add
12	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.max(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);	  	compilable	  [FE]  AssertionFailedError  	64	2	add
13	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);  This.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [CE]  cannot  find  symbol  This  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);  This.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.max(firstMillisecond,    year);    This.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);	  	non-compiled	[CE]  cannot  find  symbol  This	64	None	add
14	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);  int  firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [CE]  variable  firstMillisecond  might  not  have  been  initialized  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);  int  firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.max(firstMillisecond,    year);    int  firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);	  	non-compiled	[CE]  variable  firstMillisecond  might  not  have  been  initialized	64	None	add
15	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.FirstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [CE]  cannot  find  symbol  FirstMillisecond  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.FirstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.max(firstMillisecond,    year);    this.FirstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);	  	non-compiled	[CE]  cannot  find  symbol  FirstMillisecond	64	None	add
16	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(lastMillisecond,  LAST_WEEK_IN_YEAR);	  this.firstMillisecond    =    Math.min(lastMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
17	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(year,  lastMillisecond);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(year,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(year,  lastMillisecond);	  this.firstMillisecond    =    Math.min(lastMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
18	[BUG]  [BUGGY]  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  /  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  /  1;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  /  1;	  this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR    -    1;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
19	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FirstMillisecond,  lastMillisecond);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(FirstMillisecond,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(FirstMillisecond,  lastMillisecond);	  this.firstMillisecond    =    Math.min(FirstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
20	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(FirstMillisecond,  firstMillisecond);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(FirstMillisecond,  firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(FirstMillisecond,  firstMillisecond);	  this.firstMillisecond    =    Math.min(FirstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
21	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(FirstMillisecond,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(FirstMillisecond,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(FirstMillisecond,  this.lastMillisecond);	  this.firstMillisecond    =    Math.min(FirstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
22	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance());  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance());	  this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
23	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());	  this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
24	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());	  this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
25	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  /  1;  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  /  1;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  /  1;	  this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
26	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  +  2;	  this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
27	[BUG]  [BUGGY]  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  2;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  2;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  2;	  this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  this.lastMillisecond  =(byte)least_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.lastMillisecond  =(byte)least_WEEK_IN_YEAR  +  1;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =(byte)least_WEEK_IN_YEAR  +  1;	  this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	24	4	add
30	[BUG]  [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	24	4	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	24	4	add
32	[BUG]  [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	24	4	add
33	[BUG]  [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  This  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  This	24	None	add
34	[BUG]  [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.FirstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  FirstMillisecond  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.FirstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.FirstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  FirstMillisecond	24	None	add
35	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  long  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  long  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  long  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int    firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;	          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int    firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  byte  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  byte  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  byte  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int    firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    This.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
39	[BUG]  [BUGGY]  lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    This.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
40	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    This.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(3,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	66	2	add
42	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(3,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	66	2	add
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(3,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	66	2	add
44	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(3,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	66	2	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(4,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(3,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(4,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	66	2	add
46	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(4,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(4,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(3,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(4,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	66	2	add
47	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [CE]  cannot  find  symbol  FirstMillisecond  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(3,    this.lastMillisecond);    this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);	  	non-compiled	[CE]  cannot  find  symbol  FirstMillisecond	66	None	add
48	[BUG]  [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  variable  firstMillisecond  is  already  defined  in  constructor  Week(int,int)  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        int    firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  variable  firstMillisecond  is  already  defined  in  constructor  Week(int,int)	12	None	add
49	[BUG]  [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  variable  firstMillisecond  is  already  defined  in  constructor  Week(int,int)  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        int    firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  variable  firstMillisecond  is  already  defined  in  constructor  Week(int,int)	12	None	add
50	[BUG]  [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  Integer  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  variable  firstMillisecond  is  already  defined  in  constructor  Week(int,int)  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  Integer  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        int    firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    Integer  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  variable  firstMillisecond  is  already  defined  in  constructor  Week(int,int)	12	None	add
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  secondMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        int    firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  secondMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	12	2	add
52	[BUG]  [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  secondMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  secondMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        int    firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  secondMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	12	2	add
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
54	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
56	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
57	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [CE]  cannot  find  symbol  FirstMillisecond  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	non-compiled	[CE]  cannot  find  symbol  FirstMillisecond	37	None	add
58	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  This.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [CE]  cannot  find  symbol  This  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  This.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    This.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	non-compiled	[CE]  cannot  find  symbol  This	37	None	add
59	[BUG]  [BUGGY]  this.firstMillisecond  =  System.currentTimeMillisecond()  -  1;  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  System.currentTimeMillisecond()  -  1;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  System.currentTimeMillisecond()  -  1;	  this.firstMillisecond    =    System.currentTimeMillisecond();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
60	[BUG]  [BUGGY]  this.firstMillisecond  =  System.currentTimeMillisecond()  +  1;  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  System.currentTimeMillisecond()  +  1;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  System.currentTimeMillisecond()  +  1;	  this.firstMillisecond    =    System.currentTimeMillisecond();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
61	[BUG]  [BUGGY]  this.firstMillisecond  =  System.currentTimeMillisecond()  /  2;  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  System.currentTimeMillisecond()  /  2;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  System.currentTimeMillisecond()  /  2;	  this.firstMillisecond    =    System.currentTimeMillisecond();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
62	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR);	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
63	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year  +  1);  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  peg(Calendar.getInstance(),  this.year  +  1);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	peg(Calendar.getInstance(),  this.year  +  1);	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
64	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.month);  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  peg(Calendar.getInstance(),  this.month);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	peg(Calendar.getInstance(),  this.month);	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
65	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  LAST_WEEK_IN_YEAR);	  this.firstMillisecond    =    Math.min(firstMillisecond,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
66	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(First_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(First_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(First_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);	  this.firstMillisecond    =    Math.min(firstMillisecond,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
67	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  LAST_WEEK_IN_YEAR)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  LAST_WEEK_IN_YEAR)+  1;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  LAST_WEEK_IN_YEAR)+  1;	  this.firstMillisecond    =    Math.min(firstMillisecond,    LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
68	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(this.firstMillisecond,  this.lastMillisecond  -  1);  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(this.firstMillisecond,  this.lastMillisecond  -  1);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(this.firstMillisecond,  this.lastMillisecond  -  1);	  this.firstMillisecond    =    Math.max(this.firstMillisecond,    this.lastMillisecond    -    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
69	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  -  2);  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  -  2);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  -  2);	  this.firstMillisecond    =    Math.max(this.firstMillisecond,    this.lastMillisecond    -    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
70	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(1,  year);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(1,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(1,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
71	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  /  1;  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  /  1;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  /  1;	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
72	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  2;  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  2;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  2;	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
73	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  3;  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  3;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  3;	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
74	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond  -  1);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond  -  1);	  this.firstMillisecond    =    Math.min(firstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
75	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond  +  1);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond  +  1);	  this.firstMillisecond    =    Math.min(firstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
76	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);	  peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
77	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  year);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  peg(Calendar.getInstance(),  this.week,  year);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	peg(Calendar.getInstance(),  this.week,  year);	  peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
78	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week  +  1);  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  peg(Calendar.getInstance(),  this.week  +  1);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	peg(Calendar.getInstance(),  this.week  +  1);	  peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
79	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  /  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  /  1;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  /  1;	  this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
80	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  2;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  2;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  2;	  this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
81	[BUG]  [BUGGY]  lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(1,  this.lastMillisecond  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(1,  this.lastMillisecond  -  1);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(1,  this.lastMillisecond  -  1);	  this.firstMillisecond    =    Math.min(1,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
83	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(1,  this.lastMillisecond  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(1,  this.lastMillisecond  +  1);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(1,  this.lastMillisecond  +  1);	  this.firstMillisecond    =    Math.min(1,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
84	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);	          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond    =    Math.max(2,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
85	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);	          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond    =    Math.max(2,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
86	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
87	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  0);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  0);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  0);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
88	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(lastMillisecond,  year);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(lastMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(lastMillisecond,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
89	[BUG]  [BUGGY]  this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);	          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.FirstMillisecond    =    Math.max(1,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
90	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  /  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  /  1);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  /  1);	  this.firstMillisecond    =    Math.max(1,    this.lastMillisecond    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
91	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  +  2);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  +  2);	  this.firstMillisecond    =    Math.max(1,    this.lastMillisecond    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
92	[BUG]  [BUGGY]  this.lastMillisecond  =(byte)lAST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.lastMillisecond  =(byte)lAST_WEEK_IN_YEAR  +  1;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =(byte)lAST_WEEK_IN_YEAR  +  1;	  this.lastMillisecond    =(byte)lAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
93	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(First_WEEK_IN_YEAR,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(First_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(First_WEEK_IN_YEAR,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(First_WEEK_IN_YEAR,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
94	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(First_WEEK_IN_YEAR,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
95	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  -  2);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  -  2);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  -  2);	  this.firstMillisecond    =    Math.max(1,    this.lastMillisecond    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
97	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
99	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
100	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  This.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [CE]  cannot  find  symbol  This  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  This.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    This.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);	  	non-compiled	[CE]  cannot  find  symbol  This	3	None	add
101	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  int  firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [CE]  variable  firstMillisecond  might  not  have  been  initialized  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  int  firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    int  firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);	  	non-compiled	[CE]  variable  firstMillisecond  might  not  have  been  initialized	3	None	add
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(2,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
103	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(2,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(2,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
105	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(2,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(2,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
107	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(2,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
108	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [CE]  cannot  find  symbol  FirstMillisecond  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(2,    this.lastMillisecond);    this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);	  	non-compiled	[CE]  cannot  find  symbol  FirstMillisecond	39	None	add
109	[BUG]  [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)FIRST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());	  this.year    =(short)FIRST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
110	[BUG]  [BUGGY]  this.lastMillisecond  =  System.currentTimeMillisecond()  /  1;  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.lastMillisecond  =  System.currentTimeMillisecond()  /  1;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =  System.currentTimeMillisecond()  /  1;	  this.lastMillisecond    =    System.currentTimeMillisecond()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
111	[BUG]  [BUGGY]  This.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  This.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	This.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    This.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
112	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)least_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)least_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)least_WEEK_IN_YEAR;	          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    This.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
113	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  YEAR);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  YEAR);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    This.firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
114	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(0,  this.lastMillisecond  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(0,  this.lastMillisecond  -  1);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(0,  this.lastMillisecond  -  1);	  this.firstMillisecond    =    Math.max(0,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
115	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(0,  this.lastMillisecond  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(0,  this.lastMillisecond  +  1);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(0,  this.lastMillisecond  +  1);	  this.firstMillisecond    =    Math.max(0,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
116	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(0,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(0,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(0,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(0,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
117	[BUG]  [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR  +  1;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)FIRST_WEEK_IN_YEAR  +  1;	  this.year    =(short)FIRST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
118	[BUG]  [BUGGY]  this.year  =(int)FIRST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(int)FIRST_WEEK_IN_YEAR;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(int)FIRST_WEEK_IN_YEAR;	  this.year    =(short)FIRST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
119	[BUG]  [BUGGY]  this.year  =(short)lAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(short)lAST_WEEK_IN_YEAR;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)lAST_WEEK_IN_YEAR;	  this.year    =(byte)lAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
120	[BUG]  [BUGGY]  this.year  =(byte)lAST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(byte)lAST_WEEK_IN_YEAR  +  1;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)lAST_WEEK_IN_YEAR  +  1;	  this.year    =(byte)lAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
121	[BUG]  [BUGGY]  This.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  This.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	This.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    This.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
122	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond  +  1);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond  +  1);	  this.firstMillisecond    =    Math.max(firstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
123	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond  +  1);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond  +  1);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond  +  1);	  this.firstMillisecond    =    Math.max(firstMillisecond,    this.lastMillisecond    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
124	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.lastMillisecond,  this.firstMillisecond  +  1);  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(this.lastMillisecond,  this.firstMillisecond  +  1);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.lastMillisecond,  this.firstMillisecond  +  1);	  this.firstMillisecond    =    Math.max(firstMillisecond,    this.lastMillisecond    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
125	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.week);  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  Peg(Calendar.getInstance(),  this.week);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	Peg(Calendar.getInstance(),  this.week);	  Peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
126	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.year);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  Peg(Calendar.getInstance(),  this.year);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	Peg(Calendar.getInstance(),  this.year);	  Peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
127	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.lastMillisecond,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(this.lastMillisecond,  this.lastMillisecond);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.lastMillisecond,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(this.lastMillisecond,    firstMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
128	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  firstMillisecond);  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  firstMillisecond);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  firstMillisecond);	  this.firstMillisecond    =    Math.max(this.lastMillisecond,    firstMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
129	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(this.firstMillisecond,  this.lastMillisecond  +  1);  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(this.firstMillisecond,  this.lastMillisecond  +  1);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(this.firstMillisecond,  this.lastMillisecond  +  1);	  this.firstMillisecond    =    Math.min(this.firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
130	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR  +  1;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR  +  1;	  this.firstMillisecond    =(byte)lAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
131	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)FIRST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)FIRST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)FIRST_WEEK_IN_YEAR;	  this.firstMillisecond    =(byte)lAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
132	[BUG]  [BUGGY]  int  firstMillisecond  =  Math.min(firstMillisecond,  year);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  int  firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	int  firstMillisecond  =  Math.min(firstMillisecond,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    int    firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
133	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(1,  year);  int  firstMillisecond  =  Math.min(1,  year);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(1,  year);  int  firstMillisecond  =  Math.min(1,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(1,  year);  int  firstMillisecond  =  Math.min(1,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    int    firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
134	[BUG]  [BUGGY]  int  firstMillisecond  =  Math.min(firstMillisecond,  YEAR);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  int  firstMillisecond  =  Math.min(firstMillisecond,  YEAR);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	int  firstMillisecond  =  Math.min(firstMillisecond,  YEAR);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    int    firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
135	[BUG]  [BUGGY]  int  firstMillisecond  =  Math.min(year,  firstMillisecond);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  int  firstMillisecond  =  Math.min(year,  firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	int  firstMillisecond  =  Math.min(year,  firstMillisecond);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    int    firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
136	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(this.lastMillisecond,  this.firstMillisecond);  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(this.lastMillisecond,  this.firstMillisecond);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(this.lastMillisecond,  this.firstMillisecond);	  this.firstMillisecond    =    Math.max(this.lastMillisecond,    this.firstMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
137	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(First_WEEK_IN_YEAR,  firstMillisecond);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(First_WEEK_IN_YEAR,  firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(First_WEEK_IN_YEAR,  firstMillisecond);	  this.firstMillisecond    =    Math.min(year,    firstMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
138	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(1,  firstMillisecond);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(1,  firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(1,  firstMillisecond);	  this.firstMillisecond    =    Math.min(year,    firstMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
139	[BUG]  [BUGGY]  lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
140	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
141	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond  -  1);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond  -  1);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond  -  1);	  this.firstMillisecond    =    Math.min(firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
142	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  +  2);  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  +  2);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  +  2);	  this.firstMillisecond    =    Math.max(this.firstMillisecond,    this.lastMillisecond    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
143	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  +  3);  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  +  3);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  +  3);	  this.firstMillisecond    =    Math.max(this.firstMillisecond,    this.lastMillisecond    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	22	2	add
145	[BUG]  [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	22	2	add
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	22	4	add
147	[BUG]  [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	22	4	add
148	[BUG]  [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.second  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  second  [FE]        AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.second  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.second  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  second	22	None	add
149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	22	2	add
150	[BUG]  [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	22	2	add
151	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
152	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  -  1);  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  -  1);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  -  1);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
153	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
154	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(this.firstMillisecond,  year);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(this.firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(this.firstMillisecond,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.FirstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
155	[BUG]  [BUGGY]  this.FirstMillisecond  =  Math.min(firstMillisecond,  year);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.FirstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.FirstMillisecond  =  Math.min(firstMillisecond,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.FirstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
156	[BUG]  [BUGGY]  this.year  =(Short)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(Short)LAST_WEEK_IN_YEAR;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(Short)LAST_WEEK_IN_YEAR;	  this.year    =(int)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
157	[BUG]  [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(int)LAST_WEEK_IN_YEAR  +  1;	  this.year    =(int)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
158	[BUG]  [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)FIRST_WEEK_IN_YEAR;  peg(Calendar.getInstance());	  this.year    =(short)FIRST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
159	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  4;  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  4;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  +  4;	  this.year    =(byte)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
160	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  /  1;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  /  1;  peg(Calendar.getInstance());  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  /  1;  peg(Calendar.getInstance());	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
161	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  4;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  4;  peg(Calendar.getInstance());  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  4;  peg(Calendar.getInstance());	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
162	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)least_WEEK_IN_YEAR  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)least_WEEK_IN_YEAR  -  1;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)least_WEEK_IN_YEAR  -  1;	  this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR    -    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
163	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond);  int  firstMillisecond  =  Math.min(lastMillisecond,  year);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond);  int  firstMillisecond  =  Math.min(lastMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond);  int  firstMillisecond  =  Math.min(lastMillisecond,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    int    firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
164	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  int  firstMillisecond  =  Math.min(firstMillisecond,  year);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  int  firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  year);  int  firstMillisecond  =  Math.min(firstMillisecond,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    int    firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
165	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  year);  int  firstMillisecond  =  Math.min(FirstMillisecond,  year);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  year);  int  firstMillisecond  =  Math.min(FirstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(FIRST_WEEK_IN_YEAR,  year);  int  firstMillisecond  =  Math.min(FirstMillisecond,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    int    firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
166	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  *  1;  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  *  1;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  *  1;	  this.year    =(short)LAST_WEEK_IN_YEAR    -    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
167	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FirstMillisecond,  this.lastMillisecond  +  1);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(FirstMillisecond,  this.lastMillisecond  +  1);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(FirstMillisecond,  this.lastMillisecond  +  1);	  this.firstMillisecond    =    Math.max(firstMillisecond,    this.lastMillisecond    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
168	[BUG]  [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR  +  1;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)FIRST_WEEK_IN_YEAR  +  1;	  this.year    =(byte)FIRST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
169	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  4;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  4;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  4;	  this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
171	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
172	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.FirstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [CE]  cannot  find  symbol  FirstMillisecond  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.FirstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.FirstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);	  	non-compiled	[CE]  cannot  find  symbol  FirstMillisecond	3	None	add
173	[BUG]  [BUGGY]  this.lastMillisecond  =  Math.max(this.lastMillisecond,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.lastMillisecond  =  Math.max(this.lastMillisecond,  this.lastMillisecond);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =  Math.max(this.lastMillisecond,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(this.lastMillisecond,    this.firstMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
174	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(First_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(First_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(First_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);	  this.firstMillisecond    =    Math.max(First_WEEK_IN_YEAR,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
175	[BUG]  [BUGGY]  this.lastMillisecond  =(byte)lAST_WEEK_IN_YEAR  -  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.lastMillisecond  =(byte)lAST_WEEK_IN_YEAR  -  1;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =(byte)lAST_WEEK_IN_YEAR  -  1;	  this.lastMillisecond    =(byte)lAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
176	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(lastMillisecond,  firstMillisecond);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(lastMillisecond,  firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(lastMillisecond,  firstMillisecond);	  this.firstMillisecond    =    Math.max(firstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
177	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  +  1);  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  +  1);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond  +  1);	  this.firstMillisecond    =    Math.max(FIRST_WEEK_IN_YEAR,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
178	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  This.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [CE]  cannot  find  symbol  This  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  This.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(2,    this.lastMillisecond);    This.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);	  	non-compiled	[CE]  cannot  find  symbol  This	39	None	add
179	[BUG]  [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.FirstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  FirstMillisecond  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.FirstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.FirstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  FirstMillisecond	22	None	add
180	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR  -  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR  -  1;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR  -  1;	  this.firstMillisecond    =(byte)lAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
181	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  1);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  peg(Calendar.getInstance(),  this.year,  1);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	peg(Calendar.getInstance(),  this.year,  1);	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
182	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  4;  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  4;  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  4;	  this.year    =(short)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
183	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
184	[BUG]  [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  peg(calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  peg(calendar.getInstance());  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)FIRST_WEEK_IN_YEAR;  peg(calendar.getInstance());	  this.year    =(short)LAST_WEEK_IN_YEAR;    peg(calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
185	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  firstMillisecond);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(lastMillisecond,  firstMillisecond);	  this.firstMillisecond    =    Math.min(year,    firstMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
186	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(10.0,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(10.0,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(10.0,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(0,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
187	[BUG]  [BUGGY]  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  4;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  4;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  4;	  this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
188	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(this.lastMillisecond,  year);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(this.lastMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(this.lastMillisecond,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.FirstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
189	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  peg(calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  peg(calendar.getInstance());  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  peg(calendar.getInstance());	  this.year    =(byte)LAST_WEEK_IN_YEAR;    peg(calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
190	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance(),  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance(),  LAST_WEEK_IN_YEAR);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance(),  LAST_WEEK_IN_YEAR);	  this.year    =(byte)LAST_WEEK_IN_YEAR;    peg(calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(3,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	66	2	add
192	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(3,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	66	2	add
193	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  this.lastMillisecond);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(lastMillisecond,  this.lastMillisecond);	  this.firstMillisecond    =    Math.min(firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	10	2	add
195	[BUG]  [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	10	2	add
196	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.firstMillisecond);  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.firstMillisecond);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.firstMillisecond);	  this.firstMillisecond    =    Math.max(this.lastMillisecond,    this.firstMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
197	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  this.firstMillisecond);  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  this.firstMillisecond);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(LAST_WEEK_IN_YEAR,  this.firstMillisecond);	  this.firstMillisecond    =    Math.max(this.lastMillisecond,    this.firstMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	24	4	add
199	[BUG]  [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	24	4	add
200	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  this.year);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  this.year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(lastMillisecond,  this.year);	  this.firstMillisecond    =    Math.min(lastMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
201	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  this.week);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  this.week);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(lastMillisecond,  this.week);	  this.firstMillisecond    =    Math.min(lastMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
202	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(10,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(10,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(10,  this.lastMillisecond);	          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond    =    Math.max(2,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
203	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  this.firstMillisecond);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  this.firstMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(lastMillisecond,  this.firstMillisecond);	  this.firstMillisecond    =    Math.min(firstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
204	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.firstMillisecond);  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.firstMillisecond);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.firstMillisecond);	  this.firstMillisecond    =    Math.max(this.lastMillisecond,    firstMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
205	[BUG]  [BUGGY]  int  firstMillisecond  =(int)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  int  firstMillisecond  =(int)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	int  firstMillisecond  =(int)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
206	[BUG]  [BUGGY]  int  firstMillisecond  =(int)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(int)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  int  firstMillisecond  =(int)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	int  firstMillisecond  =(int)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(int)LAST_WEEK_IN_YEAR;	          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(2,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
208	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(2,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
209	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  3;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  3;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  3;	  this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
210	[BUG]  [BUGGY]  This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    This.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
211	[BUG]  [BUGGY]  int  lastMillisecond  =(int)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  int  lastMillisecond  =(int)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	int  lastMillisecond  =(int)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
212	[BUG]  [BUGGY]  int  lastMillisecond  =(int)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(int)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  int  lastMillisecond  =(int)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	int  lastMillisecond  =(int)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(int)LAST_WEEK_IN_YEAR;	          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
213	[BUG]  [BUGGY]  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  3;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  3;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  3;	  this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
214	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  lastMillisecond);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  lastMillisecond);	  this.firstMillisecond    =    Math.max(firstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
215	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  peg(Calendar.getInstance(),  LAST_WEEK_IN_YEAR);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	peg(Calendar.getInstance(),  LAST_WEEK_IN_YEAR);	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
216	[BUG]  [BUGGY]  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int    firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
217	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
218	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
219	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(0,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(0,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
220	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(0,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(0,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.max(1,        this.lastMillisecond);        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(0,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
221	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FirstMillisecond,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(FirstMillisecond,  this.lastMillisecond);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(FirstMillisecond,  this.lastMillisecond);	  this.firstMillisecond    =    Math.min(FirstMillisecond,    lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
222	[BUG]  [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  YEAR);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [CE]  cannot  find  symbol  YEAR  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  YEAR);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =        Math.min(firstMillisecond,        year);        this.firstMillisecond    =    Math.max(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  YEAR);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);	  	non-compiled	[CE]  cannot  find  symbol  YEAR	64	None	add
223	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.firstMillisecond);  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  Peg(Calendar.getInstance(),  this.firstMillisecond);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	Peg(Calendar.getInstance(),  this.firstMillisecond);	  Peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
224	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  year);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond    =    Math.max(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
225	[BUG]  [BUGGY]  int  firstMillisecond  =  Math.min(lastMillisecond,  year);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  int  firstMillisecond  =  Math.min(lastMillisecond,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	int  firstMillisecond  =  Math.min(lastMillisecond,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    int    firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
226	[BUG]  [BUGGY]  int  firstMillisecond  =  Math.min(year,  year);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  int  firstMillisecond  =  Math.min(year,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	int  firstMillisecond  =  Math.min(year,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    int    firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
227	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(10.0,  year);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  this.firstMillisecond  =  Math.max(10.0,  year);  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(10.0,  year);	          this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
228	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  1);  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]  peg(Calendar.getInstance(),  this.week,  1);  [BUGGY]        [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	peg(Calendar.getInstance(),  this.week,  1);	  peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
229	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)FIRST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)FIRST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	22	4	add
230	[BUG]  [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)FIRST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)FIRST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.lastMillisecond        =(byte)LAST_WEEK_IN_YEAR;        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)FIRST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	22	4	add
231	[BUG]  [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  variable  firstMillisecond  is  already  defined  in  constructor  Week(int,int)  [FE]    AssertionFailedError    [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());      [BUGGY]          this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]      }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	                this.firstMillisecond        =(byte)LAST_WEEK_IN_YEAR;        int    firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  variable  firstMillisecond  is  already  defined  in  constructor  Week(int,int)	12	None	add
