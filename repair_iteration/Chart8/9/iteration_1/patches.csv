bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;	      this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  this.lastMillisecond  =(byte)lAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.lastMillisecond  =(byte)lAST_WEEK_IN_YEAR;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =(byte)lAST_WEEK_IN_YEAR;	      this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
4	[BUG]  [BUGGY]      this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.min(firstMillisecond,  year);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
5	[BUG]  [BUGGY]      this.firstMillisecond  =  Math.min(firstMillisecond,  year);  This.firstMillisecond  =  Math.min(firstMillisecond,  year);  [CE]  cannot  find  symbol  This  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.min(firstMillisecond,  year);  This.firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    This.firstMillisecond  =  Math.min(firstMillisecond,  year);	  	non-compiled	[CE]  cannot  find  symbol  This	13	None	add
6	[BUG]  [BUGGY]      this.firstMillisecond  =  Math.min(firstMillisecond,  year);  int  firstMillisecond  =  Math.min(firstMillisecond,  year);  [CE]  variable  firstMillisecond  might  not  have  been  initialized  [FE]        AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.min(firstMillisecond,  year);  int  firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    int  firstMillisecond  =  Math.min(firstMillisecond,  year);	  	non-compiled	[CE]  variable  firstMillisecond  might  not  have  been  initialized	13	None	add
7	[BUG]  [BUGGY]      this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.FirstMillisecond  =  Math.min(firstMillisecond,  year);  [CE]  cannot  find  symbol  FirstMillisecond  [FE]          AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.FirstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.FirstMillisecond  =  Math.min(firstMillisecond,  year);	  	non-compiled	[CE]  cannot  find  symbol  FirstMillisecond	13	None	add
8	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week);  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  peg(Calendar.getInstance(),  this.week);  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	peg(Calendar.getInstance(),  this.week);	  peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year);  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  peg(Calendar.getInstance(),  this.year);  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	peg(Calendar.getInstance(),  this.year);	  peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	6	2	add
11	[BUG]  [BUGGY]      this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	6	2	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	6	2	add
13	[BUG]  [BUGGY]      this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    int  firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	6	2	add
14	[BUG]  [BUGGY]      this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  This  [FE]        AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    This.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  This	6	None	add
15	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance());  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance());	  this.year    =(byte)LAST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  +  1;	      this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)lAST_WEEK_IN_YEAR;	      this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  -  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR  -  1;	      this.firstMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  1;	  this.year    =(short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)FIRST_WEEK_IN_YEAR;	  this.year    =(short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  -  1;	  this.year    =(short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	11	2	add
23	[BUG]  [BUGGY]      this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	11	2	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	11	4	add
25	[BUG]  [BUGGY]      this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	11	4	add
26	[BUG]  [BUGGY]      this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  This  [FE]        AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    This.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  This	11	None	add
27	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond);  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
28	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.lastMillisecond,  firstMillisecond);  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.max(this.lastMillisecond,  firstMillisecond);  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.lastMillisecond,  firstMillisecond);	  this.firstMillisecond    =    Math.max(firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  -  1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  -  1);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  -  1);	      this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(1,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.min(1,  this.lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(1,  this.lastMillisecond);	      this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  +  1);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(1,  this.lastMillisecond  +  1);	      this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;	  this.year    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)FIRST_WEEK_IN_YEAR;	  this.year    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(this.firstMillisecond,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.min(this.firstMillisecond,  this.lastMillisecond);  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(this.firstMillisecond,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(this.firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  +  1);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  +  1);  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  +  1);	  this.firstMillisecond    =    Math.max(this.firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  -  1);  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  -  1);  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond  -  1);	  this.firstMillisecond    =    Math.max(this.firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	15	2	add
38	[BUG]  [BUGGY]      this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	15	2	add
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	15	2	add
40	[BUG]  [BUGGY]      this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(2,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	15	2	add
41	[BUG]  [BUGGY]      this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);  [CE]  cannot  find  symbol  FirstMillisecond  [FE]        AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.FirstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	non-compiled	[CE]  cannot  find  symbol  FirstMillisecond	15	None	add
42	[BUG]  [BUGGY]      this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  This.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [CE]  cannot  find  symbol  This  [FE]          AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  This.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    This.firstMillisecond  =  Math.max(1,  this.lastMillisecond);	  	non-compiled	[CE]  cannot  find  symbol  This	15	None	add
43	[BUG]  [BUGGY]  this.lastMillisecond  =  System.currentTimeMillisecond()  -  1;  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.lastMillisecond  =  System.currentTimeMillisecond()  -  1;  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =  System.currentTimeMillisecond()  -  1;	  this.lastMillisecond    =    System.currentTimeMillisecond();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
44	[BUG]  [BUGGY]  this.lastMillisecond  =  System.currentTimeMillisecond()  +  1;  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.lastMillisecond  =  System.currentTimeMillisecond()  +  1;  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =  System.currentTimeMillisecond()  +  1;	  this.lastMillisecond    =    System.currentTimeMillisecond();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
45	[BUG]  [BUGGY]  this.firstMillisecond  =  System.currentTimeMillisecond();  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  System.currentTimeMillisecond();  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  System.currentTimeMillisecond();	  this.lastMillisecond    =    System.currentTimeMillisecond();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
46	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  lastMillisecond);	      this.firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  lastMillisecond);	      this.firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  year);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.min(lastMillisecond,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(lastMillisecond,  year);	      this.firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  LAST_WEEK_IN_YEAR);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.min(firstMillisecond,  LAST_WEEK_IN_YEAR);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(firstMillisecond,  LAST_WEEK_IN_YEAR);	      this.firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
50	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance());  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR;  peg(calendar.getInstance());	  this.year    =(short)LAST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
51	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());	  this.year    =(short)LAST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
52	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(FirstMillisecond,  lastMillisecond);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.min(FirstMillisecond,  lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(FirstMillisecond,  lastMillisecond);	      this.firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
53	[BUG]  [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
54	[BUG]  [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)FIRST_WEEK_IN_YEAR;  peg(Calendar.getInstance());	  this.year    =(short)LAST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;	  this.year    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
56	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(0,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.max(0,  this.lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(0,  this.lastMillisecond);	      this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
57	[BUG]  [BUGGY]  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  -  1;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR  -  1;	      this.lastMillisecond    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
58	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  peg(Calendar.getInstance());	  this.year    =(byte)LAST_WEEK_IN_YEAR;    peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
59	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  this.lastMillisecond  +  1);  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  this.lastMillisecond  +  1);  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  this.lastMillisecond  +  1);	  this.firstMillisecond    =    Math.max(firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
60	[BUG]  [BUGGY]  this.year  =(byte)lAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.year  =(byte)lAST_WEEK_IN_YEAR;  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)lAST_WEEK_IN_YEAR;	  this.year    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.min(year,  firstMillisecond);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.min(year,  firstMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.min(year,  firstMillisecond);	      this.firstMillisecond    =    Math.min(firstMillisecond,    year);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
62	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
63	[BUG]  [BUGGY]  Peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  Peg(Calendar.getInstance());  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	Peg(Calendar.getInstance());	  peg(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
65	[BUG]  [BUGGY]      this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.min(firstMillisecond,  year);  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.firstMillisecond    =    Math.min(firstMillisecond,    year);    this.firstMillisecond  =  Math.max(firstMillisecond,  year);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	15	2	add
67	[BUG]  [BUGGY]      this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]      this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	        this.firstMillisecond    =    Math.max(1,    this.lastMillisecond);    this.firstMillisecond  =  Math.max(3,  this.lastMillisecond);	  	compilable	  [FE]  AssertionFailedError  	15	2	add
68	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.lastMillisecond,  this.firstMillisecond);  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.max(this.lastMillisecond,  this.firstMillisecond);  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.lastMillisecond,  this.firstMillisecond);	  this.firstMillisecond    =    Math.max(this.firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
69	[BUG]  [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(int)LAST_WEEK_IN_YEAR;	  this.year    =(short)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
70	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(First_WEEK_IN_YEAR,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());    [BUGGY]  this.firstMillisecond  =  Math.max(First_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]      [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(First_WEEK_IN_YEAR,  this.lastMillisecond);	  this.firstMillisecond    =    Math.max(firstMillisecond,    this.lastMillisecond);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
