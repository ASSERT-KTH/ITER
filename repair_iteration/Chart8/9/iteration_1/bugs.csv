bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]      [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [BUGGY]    [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());	}  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
2	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]    [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR;	}  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
3	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());  [BUGGY]    [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR;  peg(Calendar.getInstance());	}  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
4	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR;	}  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]              [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]    [BUGGY]    [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;		compilable	  [FE]  AssertionFailedError  	18	2	add
7	[BUG]  [BUGGY]    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]      [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	    this.firstMillisecond  =(byte)LAST_WEEK_IN_YEAR;		compilable	  [FE]  AssertionFailedError  	18	2	add
8	[BUG]  [BUGGY]  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]      [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]  peg(Calendar.getInstance());  [BUGGY]    [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	peg(Calendar.getInstance());	}  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
9	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  this.lastMillisecond);  [BUGGY]    [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  this.lastMillisecond);	}  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
10	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond);  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]  this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond);  [BUGGY]    [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.firstMillisecond  =  Math.max(this.firstMillisecond,  this.lastMillisecond);	}  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;		compilable	  [FE]  AssertionFailedError  	18	2	add
12	[BUG]  [BUGGY]    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]      [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	    this.lastMillisecond  =(byte)LAST_WEEK_IN_YEAR;		compilable	  [FE]  AssertionFailedError  	18	2	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	    this.firstMillisecond  =  Math.min(firstMillisecond,  year);		compilable	  [FE]  AssertionFailedError  	18	2	add
14	[BUG]  [BUGGY]    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [FE]  AssertionFailedError  [FE]        [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]    this.firstMillisecond  =  Math.min(firstMillisecond,  year);  [BUGGY]  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	    this.firstMillisecond  =  Math.min(firstMillisecond,  year);		compilable	  [FE]  AssertionFailedError  	18	2	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	add	    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);		compilable	  [FE]  AssertionFailedError  	18	2	add
16	[BUG]  [BUGGY]    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]        [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);  [BUGGY]  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	    this.firstMillisecond  =  Math.max(1,  this.lastMillisecond);		compilable	  [FE]  AssertionFailedError  	18	2	add
17	[BUG]  [BUGGY]  this.lastMillisecond  =  System.currentTimeMillisecond();  [CE]  illegal  start  of  expression  [FE]      [CONTEXT]  public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(   "The  'week'  argument  must  be  in  the  range  1  -  53. ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  [BUGGY]  this.lastMillisecond  =  System.currentTimeMillisecond();  [BUGGY]    [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	135	135	0	replace	this.lastMillisecond  =  System.currentTimeMillisecond();	}  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
