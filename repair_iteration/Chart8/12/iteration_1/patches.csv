bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.year  =(short)this.year.getYear();  [CE]  short  cannot  be  dereferenced  [FE]                [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =(short)this.year.getYear();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =(short)this.year.getYear();	      this.year    =(byte)this.year.getYear();    	non-compiled	[CE]  short  cannot  be  dereferenced	3	None	replace
2	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR.getYear();  [CE]  int  cannot  be  dereferenced  [FE]                  [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR.getYear();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR.getYear();	      this.year    =(byte)this.year.getYear();    	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	replace
3	[BUG]  [BUGGY]  this.year  =(Short)this.year.getYear();  [CE]  short  cannot  be  dereferenced  [FE]                    [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =(Short)this.year.getYear();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =(Short)this.year.getYear();	      this.year    =(byte)this.year.getYear();    	non-compiled	[CE]  short  cannot  be  dereferenced	3	None	replace
4	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.   ");  [CE]  not  a  statement  [FE]          [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.   ");  [BUGGY]     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.   ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53.   ");    	non-compiled	[CE]  not  a  statement	11	None	replace
5	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  LAST_WEEK_IN_YEAR.   ");  [CE]  not  a  statement  [FE]            [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  LAST_WEEK_IN_YEAR.   ");  [BUGGY]     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  LAST_WEEK_IN_YEAR.   ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53.   ");    	non-compiled	[CE]  not  a  statement	11	None	replace
6	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.   ");  [CE]  <identifier>  expected  [FE]          [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.   ");  [BUGGY]     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.   ");	  Throwables.throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53.   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  54.   ");  [CE]  <identifier>  expected  [FE]            [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  54.   ");  [BUGGY]     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  54.   ");	  Throwables.throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53.   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  Integer  range  =  LAST_WEEK_IN_YEAR.getClass();  [CE]  int  cannot  be  dereferenced  [FE]                [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  LAST_WEEK_IN_YEAR.getClass();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  LAST_WEEK_IN_YEAR.getClass();	      Integer    range    =    this.year.getClass();    	non-compiled	[CE]  int  cannot  be  dereferenced	10	None	replace
9	[BUG]  [BUGGY]  Integer  range  =  LAST_WEEK_IN_YEAR,  this.year.getClass();  [CE]  <identifier>  expected  [FE]                  [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  LAST_WEEK_IN_YEAR,  this.year.getClass();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  LAST_WEEK_IN_YEAR,  this.year.getClass();	      Integer    range    =    this.year.getClass();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
10	[BUG]  [BUGGY]  Integer  range  =  this.year.getClass(),  LAST_WEEK_IN_YEAR);  [CE]  ';'  expected  [FE]                    [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  this.year.getClass(),  LAST_WEEK_IN_YEAR);  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  this.year.getClass(),  LAST_WEEK_IN_YEAR);	      Integer    range    =    this.year.getClass();    	non-compiled	[CE]  ';'  expected	10	None	replace
11	[BUG]  [BUGGY]  this.year  =(short)getValue();  [CE]  cannot  find  symbol  [FE]            [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =(short)getValue();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =(short)getValue();	      this.year    =(byte)getValue();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
12	[BUG]  [BUGGY]  this.year  =(byte)getLeastWEEK_IN_YEAR();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =(byte)getLeastWEEK_IN_YEAR();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =(byte)getLeastWEEK_IN_YEAR();	      this.year    =(byte)getValue();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
13	[BUG]  [BUGGY]  this.year  =(byte)getValue()  -  1;  [CE]  cannot  find  symbol  [FE]                [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =(byte)getValue()  -  1;  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =(byte)getValue()  -  1;	      this.year    =(byte)getValue();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
14	[BUG]  [BUGGY]  this.year  =  LAST_WEEK_IN_YEAR  +  year.getYear();  [CE]  possible  loss  of  precision  [FE]                [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =  LAST_WEEK_IN_YEAR  +  year.getYear();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =  LAST_WEEK_IN_YEAR  +  year.getYear();	      this.year    =    year.getYear();    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
15	[BUG]  [BUGGY]  this.year  =  LAST_WEEK_IN_YEAR.getYear();  [CE]  int  cannot  be  dereferenced  [FE]                  [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =  LAST_WEEK_IN_YEAR.getYear();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =  LAST_WEEK_IN_YEAR.getYear();	      this.year    =    year.getYear();    	non-compiled	[CE]  int  cannot  be  dereferenced	2	None	replace
16	[BUG]  [BUGGY]  this.year  =  LAST_WEEK_IN_YEAR,  year.getYear();  [CE]  ';'  expected  [FE]                    [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =  LAST_WEEK_IN_YEAR,  year.getYear();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =  LAST_WEEK_IN_YEAR,  year.getYear();	      this.year    =    year.getYear();    	non-compiled	[CE]  ';'  expected	2	None	replace
17	[BUG]  [BUGGY]  this.year  =(short)this.year.getValue();  [CE]  short  cannot  be  dereferenced  [FE]              [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =(short)this.year.getValue();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =(short)this.year.getValue();	      this.year    =(byte)this.year.getValue();    	non-compiled	[CE]  short  cannot  be  dereferenced	6	None	replace
18	[BUG]  [BUGGY]  this.year  =(Short)this.year.getValue();  [CE]  short  cannot  be  dereferenced  [FE]                [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =(Short)this.year.getValue();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =(Short)this.year.getValue();	      this.year    =(byte)this.year.getValue();    	non-compiled	[CE]  short  cannot  be  dereferenced	6	None	replace
19	[BUG]  [BUGGY]  this.year  =(byte)this.year.clone();  [CE]  short  cannot  be  dereferenced  [FE]                  [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =(byte)this.year.clone();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =(byte)this.year.clone();	      this.year    =(byte)this.year.getValue();    	non-compiled	[CE]  short  cannot  be  dereferenced	6	None	replace
20	[BUG]  [BUGGY]  int  range  =  this.year.getRowCount()  -  1;  [CE]  short  cannot  be  dereferenced  [FE]          [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  int  range  =  this.year.getRowCount()  -  1;  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	int  range  =  this.year.getRowCount()  -  1;	      int    range    =    this.year.getRowCount();    	non-compiled	[CE]  short  cannot  be  dereferenced	7	None	replace
21	[BUG]  [BUGGY]  int  range  =  this.year.getColumnCount();  [CE]  short  cannot  be  dereferenced  [FE]            [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  int  range  =  this.year.getColumnCount();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	int  range  =  this.year.getColumnCount();	      int    range    =    this.year.getRowCount();    	non-compiled	[CE]  short  cannot  be  dereferenced	7	None	replace
22	[BUG]  [BUGGY]  int  range  =  this.year.getRowCount()  +  1;  [CE]  short  cannot  be  dereferenced  [FE]              [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  int  range  =  this.year.getRowCount()  +  1;  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	int  range  =  this.year.getRowCount()  +  1;	      int    range    =    this.year.getRowCount();    	non-compiled	[CE]  short  cannot  be  dereferenced	7	None	replace
23	[BUG]  [BUGGY]  int  range  =  this.year.getSecond()  -  1;  [CE]  short  cannot  be  dereferenced  [FE]            [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  int  range  =  this.year.getSecond()  -  1;  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	int  range  =  this.year.getSecond()  -  1;	      int    range    =    this.year.getSecond();    	non-compiled	[CE]  short  cannot  be  dereferenced	8	None	replace
24	[BUG]  [BUGGY]  int  range  =  LAST_WEEK_IN_YEAR.getSecond();  [CE]  int  cannot  be  dereferenced  [FE]              [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  int  range  =  LAST_WEEK_IN_YEAR.getSecond();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	int  range  =  LAST_WEEK_IN_YEAR.getSecond();	      int    range    =    this.year.getSecond();    	non-compiled	[CE]  int  cannot  be  dereferenced	8	None	replace
25	[BUG]  [BUGGY]  int  range  =  this.year.getSecond()  -  FIRST_WEEK_IN_YEAR;  [CE]  short  cannot  be  dereferenced  [FE]                [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  int  range  =  this.year.getSecond()  -  FIRST_WEEK_IN_YEAR;  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	int  range  =  this.year.getSecond()  -  FIRST_WEEK_IN_YEAR;	      int    range    =    this.year.getSecond();    	non-compiled	[CE]  short  cannot  be  dereferenced	8	None	replace
26	[BUG]  [BUGGY]  Integer  range  =  this.year.getValue(FIRST_WEEK_IN_YEAR);  [CE]  short  cannot  be  dereferenced  [FE]              [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  this.year.getValue(FIRST_WEEK_IN_YEAR);  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  this.year.getValue(FIRST_WEEK_IN_YEAR);	      Integer    range    =    this.year.getValue();    	non-compiled	[CE]  short  cannot  be  dereferenced	9	None	replace
27	[BUG]  [BUGGY]  Integer  range  =  LAST_WEEK_IN_YEAR.getValue();  [CE]  int  cannot  be  dereferenced  [FE]                [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  LAST_WEEK_IN_YEAR.getValue();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  LAST_WEEK_IN_YEAR.getValue();	      Integer    range    =    this.year.getValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
28	[BUG]  [BUGGY]  Integer  range  =  LAST_WEEK_IN_YEAR,  this.year.getValue();  [CE]  <identifier>  expected  [FE]                  [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  LAST_WEEK_IN_YEAR,  this.year.getValue();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  LAST_WEEK_IN_YEAR,  this.year.getValue();	      Integer    range    =    this.year.getValue();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  Integer  range  =  year.getValue();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  year.getValue();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  year.getValue();	      Integer    range    =    this.year.getValue();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
30	[BUG]  [BUGGY]  Integer  range  =  this.year.getValue()  -  1;  [CE]  short  cannot  be  dereferenced  [FE]                [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  this.year.getValue()  -  1;  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  this.year.getValue()  -  1;	      Integer    range    =    this.year.getValue();    	non-compiled	[CE]  short  cannot  be  dereferenced	9	None	replace
31	[BUG]  [BUGGY]  Integer  range  =  _year.getValue();  [CE]  cannot  find  symbol  _year  [FE]                  [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  _year.getValue();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  _year.getValue();	      Integer    range    =    this.year.getValue();    	non-compiled	[CE]  cannot  find  symbol  _year	9	None	replace
32	[BUG]  [BUGGY]  this.year  =(Short)year.getYear()  -  1;  [CE]  inconvertible  types  [FE]                  [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =(Short)year.getYear()  -  1;  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =(Short)year.getYear()  -  1;	      this.year    =(Short)year.getYear();    	non-compiled	[CE]  inconvertible  types	4	None	replace
33	[BUG]  [BUGGY]  Integer  range  =  year.getClass();  [CE]  incompatible  types  [FE]                [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  year.getClass();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  year.getClass();	      Integer    range    =    this.year.getClass();    	non-compiled	[CE]  incompatible  types	10	None	replace
34	[BUG]  [BUGGY]  Integer  range  =  _year.getClass();  [CE]  cannot  find  symbol  _year  [FE]                  [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  _year.getClass();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  _year.getClass();	      Integer    range    =    this.year.getClass();    	non-compiled	[CE]  cannot  find  symbol  _year	10	None	replace
35	[BUG]  [BUGGY]  Integer  range  =  this.year,  year.getClass();  [CE]  ';'  expected  [FE]                    [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  this.year,  year.getClass();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  this.year,  year.getClass();	      Integer    range    =    this.year.getClass();    	non-compiled	[CE]  ';'  expected	10	None	replace
36	[BUG]  [BUGGY]  this.year  =(byte)year.getValue();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =(byte)year.getValue();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =(byte)year.getValue();	      this.year    =(byte)this.year.getValue();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
37	[BUG]  [BUGGY]  this.year  =  year.getYear()  -  1;  [CE]  possible  loss  of  precision  [FE]              [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =  year.getYear()  -  1;  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =  year.getYear()  -  1;	      this.year    =    year.getYear();    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
38	[BUG]  [BUGGY]  this.year  =  year.getYear()  +  1;  [CE]  possible  loss  of  precision  [FE]                [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =  year.getYear()  +  1;  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =  year.getYear()  +  1;	      this.year    =    year.getYear();    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
39	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.   ");  [CE]  not  a  statement  [FE]          [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.   ");  [BUGGY]     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.   ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53.   ");    	non-compiled	[CE]  not  a  statement	11	None	replace
40	[BUG]  [BUGGY]  int  range  =  year.getSecond();  [CE]  cannot  find  symbol  [FE]            [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  int  range  =  year.getSecond();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	int  range  =  year.getSecond();	      int    range    =    this.year.getSecond();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
41	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.n ");  [CE]  <identifier>  expected  [FE]          [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.n ");  [BUGGY]     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.n ");	  Throwables.throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53.   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  int  range  =  this.year.getSecond()  +  1;  [CE]  short  cannot  be  dereferenced  [FE]            [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  int  range  =  this.year.getSecond()  +  1;  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	int  range  =  this.year.getSecond()  +  1;	      int    range    =    this.year.getSecond();    	non-compiled	[CE]  short  cannot  be  dereferenced	8	None	replace
43	[BUG]  [BUGGY]  this.year  =  this.year.getYear();  [CE]  short  cannot  be  dereferenced  [FE]              [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =  this.year.getYear();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =  this.year.getYear();	      this.year    =    year.getYear();    	non-compiled	[CE]  short  cannot  be  dereferenced	2	None	replace
44	[BUG]  [BUGGY]  this.year  =(byte)getYear();  [CE]  inconvertible  types  [FE]            [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =(byte)getYear();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	this.year  =(byte)getYear();	      this.year    =(byte)getValue();    	non-compiled	[CE]  inconvertible  types	5	None	replace
45	[BUG]  [BUGGY]  Integer  range  =  this.year,  year.getValue();  [CE]  ';'  expected  [FE]              [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  this.year,  year.getValue();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  this.year,  year.getValue();	      Integer    range    =    this.year.getValue();    	non-compiled	[CE]  ';'  expected	9	None	replace
46	[BUG]  [BUGGY]  Integer  range  =  this.year.getKey();  [CE]  short  cannot  be  dereferenced  [FE]                [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  this.year.getKey();  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  this.year.getKey();	      Integer    range    =    this.year.getValue();    	non-compiled	[CE]  short  cannot  be  dereferenced	9	None	replace
47	[BUG]  [BUGGY]  Integer  range  =  this.year.getClass(),  this.week;  [CE]  <identifier>  expected  [FE]                [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Integer  range  =  this.year.getClass(),  this.week;  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	145	146	0	replace	Integer  range  =  this.year.getClass(),  this.week;	      Integer    range    =    this.year.getClass();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
