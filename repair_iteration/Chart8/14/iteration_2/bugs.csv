bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.year  =(short)this.week.getYear();  [CE]  byte  cannot  be  dereferenced  [FE]          [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(short)this.week.getYear();  [BUGGY]    this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	149	149	0	replace	this.year  =(short)this.week.getYear();	      this.year    =(short)week.getYear();    	non-compiled	[CE]  byte  cannot  be  dereferenced	4	None	replace
2	[BUG]  [BUGGY]  this.year  =(int)this.year.getYear();  [CE]  short  cannot  be  dereferenced  [FE]          [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(int)this.year.getYear();  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	149	149	0	replace	this.year  =(int)this.year.getYear();	  this.year    =(short)this.year.getYear();    	non-compiled	[CE]  short  cannot  be  dereferenced	1	None	replace
3	[BUG]  [BUGGY]  this.year  =(Short)this.year.getYear();  [CE]  short  cannot  be  dereferenced  [FE]            [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(Short)this.year.getYear();  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	149	149	0	replace	this.year  =(Short)this.year.getYear();	  this.year    =(short)this.year.getYear();    	non-compiled	[CE]  short  cannot  be  dereferenced	1	None	replace
4	[BUG]  [BUGGY]  this.year  =(short)this.year.getYEAR();  [CE]  short  cannot  be  dereferenced  [FE]              [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(short)this.year.getYEAR();  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	149	149	0	replace	this.year  =(short)this.year.getYEAR();	  this.year    =(short)this.year.getYear();    	non-compiled	[CE]  short  cannot  be  dereferenced	1	None	replace
5	[BUG]  [BUGGY]  this.year  =(short)this.year.getMonth();  [CE]  short  cannot  be  dereferenced  [FE]            [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(short)this.year.getMonth();  [BUGGY]    this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	149	149	0	replace	this.year  =(short)this.year.getMonth();	      this.year    =(short)year.getMonth();    	non-compiled	[CE]  short  cannot  be  dereferenced	5	None	replace
6	[BUG]  [BUGGY]  this.year  =(Short)year.getMonth();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(Short)year.getMonth();  [BUGGY]    this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	149	149	0	replace	this.year  =(Short)year.getMonth();	      this.year    =(short)year.getMonth();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
7	[BUG]  [BUGGY]  this.year  =(short)getYear()  -  1;  [CE]  inconvertible  types  [FE]            [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(short)getYear()  -  1;  [BUGGY]    this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	149	149	0	replace	this.year  =(short)getYear()  -  1;	      this.year    =(short)getYear();    	non-compiled	[CE]  inconvertible  types	3	None	replace
8	[BUG]  [BUGGY]  this.year  =(short)getYear()  +  1;  [CE]  inconvertible  types  [FE]                [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(short)getYear()  +  1;  [BUGGY]    this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	149	149	0	replace	this.year  =(short)getYear()  +  1;	      this.year    =(short)getYear();    	non-compiled	[CE]  inconvertible  types	3	None	replace
9	[BUG]  [BUGGY]  this.year  =(byte)this.year.clone();  [CE]  short  cannot  be  dereferenced  [FE]          [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(byte)this.year.clone();  [BUGGY]    this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	149	149	0	replace	this.year  =(byte)this.year.clone();	      this.year    =(byte)this.year.getYear();    	non-compiled	[CE]  short  cannot  be  dereferenced	2	None	replace
10	[BUG]  [BUGGY]  this.year  =(short)year.getMonth()  -  1;  [CE]  cannot  find  symbol  [FE]            [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(short)year.getMonth()  -  1;  [BUGGY]    this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	149	149	0	replace	this.year  =(short)year.getMonth()  -  1;	      this.year    =(short)year.getMonth();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
11	[BUG]  [BUGGY]  this.year  =(byte)getYear();  [CE]  inconvertible  types  [FE]            [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(byte)getYear();  [BUGGY]    this.year  =  (short)  year.getYear();  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	149	149	0	replace	this.year  =(byte)getYear();	      this.year    =(short)getYear();    	non-compiled	[CE]  inconvertible  types	3	None	replace
12	[BUG]  [BUGGY]  this.year  =(short)this.year.clone();  [CE]  short  cannot  be  dereferenced  [FE]          [CONTEXT]    public  Week(int  week,  Year  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(short)this.year.clone();  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Year)  int  week  Year  year  [VARIABLES]  short  year  boolean  Year  year  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	149	149	0	replace	this.year  =(short)this.year.clone();	  this.year    =(short)this.year.getYear();    	non-compiled	[CE]  short  cannot  be  dereferenced	1	None	replace
