bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(p  ==  PEEKED_SINGLE_QUOTED  &&  p  ==  PEEKED_DOUBLE_QUOTED)  {  [CE]  [FE]    JsonSyntaxException  [CONTEXT]  if  (p  ==  PEEKED_LONG)  {  peeked  =  PEEKED_NONE;  pathIndices[stackSize  -  1]++;  return  peekedLong;  }  if  (p  ==  PEEKED_NUMBER)  {  peekedString  =  new  String(buffer,  pos,  peekedNumberLength);  pos  +=  peekedNumberLength;  [BUGGY]  }  else  if(p  ==  PEEKED_SINGLE_QUOTED  &&  p  ==  PEEKED_DOUBLE_QUOTED)  {  [BUGGY]  peekedString  =  nextQuotedValue(p  ==  PEEKED_SINGLE_QUOTED  ?  '\''  :  ' "');  try  {  long  result  =  Long.parseLong(peekedString);  peeked  =  PEEKED_NONE;  pathIndices[stackSize  -  1]++;  return  result;  }  catch  (NumberFormatException  ignored)  {  }  }  else  {  [CLASS]  JsonReader  1  [METHOD]  nextLong  [RETURN_TYPE]  long  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4082482904638631	954	954	3	replace	}  else  if(p  ==  PEEKED_SINGLE_QUOTED  &&  p  ==  PEEKED_DOUBLE_QUOTED)  {	}  else  if  (p  ==  PEEKED_SINGLE_QUOTED  ||  p  ==  PEEKED_DOUBLE_QUOTED)  {  	non-compiled	[CE]  	11	None	replace
2	[BUG]  [BUGGY]  }  else  if(p  ==  PEEKED_SINGLE_QUOTED  ||  p  ==  PEEKED_BUFFERED)  {  [CE]  [FE]      JsonSyntaxException  [CONTEXT]  if  (p  ==  PEEKED_LONG)  {  peeked  =  PEEKED_NONE;  pathIndices[stackSize  -  1]++;  return  peekedLong;  }  if  (p  ==  PEEKED_NUMBER)  {  peekedString  =  new  String(buffer,  pos,  peekedNumberLength);  pos  +=  peekedNumberLength;  [BUGGY]  }  else  if(p  ==  PEEKED_SINGLE_QUOTED  ||  p  ==  PEEKED_BUFFERED)  {  [BUGGY]  peekedString  =  nextQuotedValue(p  ==  PEEKED_SINGLE_QUOTED  ?  '\''  :  ' "');  try  {  long  result  =  Long.parseLong(peekedString);  peeked  =  PEEKED_NONE;  pathIndices[stackSize  -  1]++;  return  result;  }  catch  (NumberFormatException  ignored)  {  }  }  else  {  [CLASS]  JsonReader  1  [METHOD]  nextLong  [RETURN_TYPE]  long  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4082482904638631	954	954	3	replace	}  else  if(p  ==  PEEKED_SINGLE_QUOTED  ||  p  ==  PEEKED_BUFFERED)  {	}  else  if  (p  ==  PEEKED_SINGLE_QUOTED  ||  p  ==  PEEKED_DOUBLE_QUOTED)  {  	non-compiled	[CE]  	11	None	replace
3	[BUG]  [BUGGY]  }  else  if(pos  ==  PEEKED_SINGLE_QUOTED  ||  p  ==  PEEKED_DOUBLE_QUOTED)  {  [CE]  [FE]        JsonSyntaxException  [CONTEXT]  if  (p  ==  PEEKED_LONG)  {  peeked  =  PEEKED_NONE;  pathIndices[stackSize  -  1]++;  return  peekedLong;  }  if  (p  ==  PEEKED_NUMBER)  {  peekedString  =  new  String(buffer,  pos,  peekedNumberLength);  pos  +=  peekedNumberLength;  [BUGGY]  }  else  if(pos  ==  PEEKED_SINGLE_QUOTED  ||  p  ==  PEEKED_DOUBLE_QUOTED)  {  [BUGGY]  peekedString  =  nextQuotedValue(p  ==  PEEKED_SINGLE_QUOTED  ?  '\''  :  ' "');  try  {  long  result  =  Long.parseLong(peekedString);  peeked  =  PEEKED_NONE;  pathIndices[stackSize  -  1]++;  return  result;  }  catch  (NumberFormatException  ignored)  {  }  }  else  {  [CLASS]  JsonReader  1  [METHOD]  nextLong  [RETURN_TYPE]  long  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4082482904638631	954	954	3	replace	}  else  if(pos  ==  PEEKED_SINGLE_QUOTED  ||  p  ==  PEEKED_DOUBLE_QUOTED)  {	}  else  if  (p  ==  PEEKED_SINGLE_QUOTED  ||  p  ==  PEEKED_DOUBLE_QUOTED)  {  	non-compiled	[CE]  	11	None	replace
4	[BUG]  [BUGGY]    [CE]  [FE]          JsonSyntaxException  [CONTEXT]  if  (p  ==  PEEKED_LONG)  {  peeked  =  PEEKED_NONE;  pathIndices[stackSize  -  1]++;  return  peekedLong;  }  if  (p  ==  PEEKED_NUMBER)  {  peekedString  =  new  String(buffer,  pos,  peekedNumberLength);  pos  +=  peekedNumberLength;  [BUGGY]    [BUGGY]  peekedString  =  nextQuotedValue(p  ==  PEEKED_SINGLE_QUOTED  ?  '\''  :  ' "');  try  {  long  result  =  Long.parseLong(peekedString);  peeked  =  PEEKED_NONE;  pathIndices[stackSize  -  1]++;  return  result;  }  catch  (NumberFormatException  ignored)  {  }  }  else  {  [CLASS]  JsonReader  1  [METHOD]  nextLong  [RETURN_TYPE]  long  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4082482904638631	954	954	3	replace	  	}  else  if  (p  ==  PEEKED_SINGLE_QUOTED  ||  p  ==  PEEKED_DOUBLE_QUOTED)  {  	non-compiled	[CE]  	11	None	replace
5	[BUG]  [BUGGY]  }  else  if(p  ==  PEEKED_BUFFERED  ||  p  ==  PEEKED_DOUBLE_QUOTED)  {  [CE]  [FE]    JsonSyntaxException  [CONTEXT]  if  (p  ==  PEEKED_LONG)  {  peeked  =  PEEKED_NONE;  pathIndices[stackSize  -  1]++;  return  peekedLong;  }  if  (p  ==  PEEKED_NUMBER)  {  peekedString  =  new  String(buffer,  pos,  peekedNumberLength);  pos  +=  peekedNumberLength;  [BUGGY]  }  else  if(p  ==  PEEKED_BUFFERED  ||  p  ==  PEEKED_DOUBLE_QUOTED)  {  [BUGGY]  peekedString  =  nextQuotedValue(p  ==  PEEKED_SINGLE_QUOTED  ?  '\''  :  ' "');  try  {  long  result  =  Long.parseLong(peekedString);  peeked  =  PEEKED_NONE;  pathIndices[stackSize  -  1]++;  return  result;  }  catch  (NumberFormatException  ignored)  {  }  }  else  {  [CLASS]  JsonReader  1  [METHOD]  nextLong  [RETURN_TYPE]  long  [VARIABLES]  boolean  fitsInLong  lenient  negative  double  asDouble  Reader  in  NumberFormatException  ignored  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4082482904638631	954	954	3	replace	}  else  if(p  ==  PEEKED_BUFFERED  ||  p  ==  PEEKED_DOUBLE_QUOTED)  {	}  else  if  (p  ==  PEEKED_SINGLE_QUOTED  ||  p  ==  PEEKED_DOUBLE_QUOTED)  {  	non-compiled	[CE]  	11	None	replace
