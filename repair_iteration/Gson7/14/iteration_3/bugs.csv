bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  aughtException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
2	[BUG]  [BUGGY]  aughtExceptionHandler(JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
3	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "JsonReader.setLenient(true)to  accept  malformed  JSON "));  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "JsonReader.setLenient(true)to  accept  malformed  JSON "));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "JsonReader.setLenient(true)to  accept  malformed  JSON "));	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
4	[BUG]  [BUGGY]  aughtException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
5	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
6	[BUG]  [BUGGY]  aughtException( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtException( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtException( "JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
7	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "JsonReader.setLenient(true)to  accept  malformed  JSON "));  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "JsonReader.setLenient(true)to  accept  malformed  JSON "));  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "JsonReader.setLenient(true)to  accept  malformed  JSON "));  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
8	[BUG]  [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");	  hingeg.report(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	26	None	replace
9	[BUG]  [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);	  hingeg.report(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	26	None	replace
10	[BUG]  [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  0);  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  0);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  0);	  hingeg.report(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	26	None	replace
11	[BUG]  [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);	  hingeg.report(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	26	None	replace
12	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtExceptionHandler(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	24	None	replace
13	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  throw  syntaxError(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  throw  syntaxError(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtExceptionHandler(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	24	None	replace
14	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  }	  aughtExceptionHandler(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	24	None	replace
15	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");  }	  aughtExceptionHandler(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	24	None	replace
16	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");	  aughtExceptionHandler(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	24	None	replace
17	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);  }	  aughtExceptionHandler(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	24	None	replace
18	[BUG]  [BUGGY]  if(!lenient)  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	68	None	replace
19	[BUG]  [BUGGY]  if(isLenient())  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(isLenient())  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(isLenient())  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	68	None	replace
20	[BUG]  [BUGGY]  if(syntaxError)  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(syntaxError)  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(syntaxError)  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	68	None	replace
21	[BUG]  [BUGGY]  if(lenient)  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	68	None	replace
22	[BUG]  [BUGGY]  aughtInternalException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtInternalException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtInternalException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  aughtInternalException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	68	None	replace
23	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  throw  syntaxError(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  throw  syntaxError(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	3	None	replace
24	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	3	None	replace
25	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	3	None	replace
26	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  0);  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  0);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  0);	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	3	None	replace
27	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	21	None	replace
28	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	21	None	replace
29	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	21	None	replace
30	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	21	None	replace
31	[BUG]  [BUGGY]  hingeg.report(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  hingeg.report(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	5	None	replace
32	[BUG]  [BUGGY]  hingeg.report(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON   "));  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON   "));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON   "));	  hingeg.report(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	5	None	replace
33	[BUG]  [BUGGY]  hingeg.report(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  hingeg.report(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	5	None	replace
34	[BUG]  [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "));  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "));	  hingeg.report(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	5	None	replace
35	[BUG]  [BUGGY]  safeThan()  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan()  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan()  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	35	None	replace
36	[BUG]  [BUGGY]  safeThan(true)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(true)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(true)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	35	None	replace
37	[BUG]  [BUGGY]  safeThan  ==  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  ==  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  ==  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	35	None	replace
38	[BUG]  [BUGGY]  safeThan  <  =  true)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  true)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  true)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	35	None	replace
39	[BUG]  [BUGGY]  safeThan()  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan()  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan()  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	35	None	replace
40	[BUG]  [BUGGY]  safeThan(1)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(1)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(1)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	35	None	replace
41	[BUG]  [BUGGY]  safeThan  ==  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  ==  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  ==  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	35	None	replace
42	[BUG]  [BUGGY]  safeThan(JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_SYNTHETIC_ERROR)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	48	None	replace
43	[BUG]  [BUGGY]  safeThan(JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_SYNTHETIC_ERROR)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	48	None	replace
44	[BUG]  [BUGGY]  safeThan(JSON_SYNTHETIC_ERROR,  lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_SYNTHETIC_ERROR,  lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_SYNTHETIC_ERROR,  lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_SYNTHETIC_ERROR)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	48	None	replace
45	[BUG]  [BUGGY]  safeThan  <  =  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_SYNTHETIC_ERROR)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	48	None	replace
46	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	19	None	replace
47	[BUG]  [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.warning( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	19	None	replace
48	[BUG]  [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.warning( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	19	None	replace
49	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  lenient);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	19	None	replace
50	[BUG]  [BUGGY]  safeThan(JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_SYNTHETIC)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	49	None	replace
51	[BUG]  [BUGGY]  safeThan(JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_SYNTHETIC)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	49	None	replace
52	[BUG]  [BUGGY]  safeThan  <  =  JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_SYNTHETIC)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	49	None	replace
53	[BUG]  [BUGGY]  safeThan(JSON_LENUE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_LENUE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_LENUE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_SYNTHETIC)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	49	None	replace
54	[BUG]  [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.warning( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	38	None	replace
55	[BUG]  [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON   "));  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON   "));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON   "));	  hingeg.report(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	25	None	replace
56	[BUG]  [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON "));  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON "));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON "));	  hingeg.report(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	25	None	replace
57	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	13	None	replace
58	[BUG]  [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  parent    ==    null    ||!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	65	None	replace
59	[BUG]  [BUGGY]  safeThan(JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	46	None	replace
60	[BUG]  [BUGGY]  safeThan(JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	46	None	replace
61	[BUG]  [BUGGY]  safeThan  <  =  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	46	None	replace
62	[BUG]  [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_SIGN));  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_SIGN));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_SIGN));	  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	14	None	replace
63	[BUG]  [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FRACTION_DIGIT));  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FRACTION_DIGIT));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FRACTION_DIGIT));	  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	14	None	replace
64	[BUG]  [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_EXP_SIGN));  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_EXP_SIGN));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_EXP_SIGN));	  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	14	None	replace
65	[BUG]  [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FLOAT));  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FLOAT));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FLOAT));	  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	14	None	replace
66	[BUG]  [BUGGY]  if(!lenient)  {  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
67	[BUG]  [BUGGY]  if(syntaxError)  {  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(syntaxError)  {  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(syntaxError)  {  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
68	[BUG]  [BUGGY]  if(isLenient())  {  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(isLenient())  {  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(isLenient())  {  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
69	[BUG]  [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	9	None	replace
70	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  throw  syntaxError(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  throw  syntaxError(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	9	None	replace
71	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  syntaxError);  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  syntaxError);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  syntaxError);	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	9	None	replace
72	[BUG]  [BUGGY]  safeThan(JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SYNTHETIC)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	40	None	replace
73	[BUG]  [BUGGY]  safeThan(JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SYNTHETIC)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	40	None	replace
74	[BUG]  [BUGGY]  safeThan()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SYNTHETIC)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	40	None	replace
75	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	70	None	replace
76	[BUG]  [BUGGY]  if(!lenient)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	70	None	replace
77	[BUG]  [BUGGY]  if(isLenient())  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(isLenient())  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(isLenient())  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	70	None	replace
78	[BUG]  [BUGGY]  if(syntaxError)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(syntaxError)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(syntaxError)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	70	None	replace
79	[BUG]  [BUGGY]  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	70	None	replace
80	[BUG]  [BUGGY]  safeThan(JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SIZE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	39	None	replace
81	[BUG]  [BUGGY]  safeThan(JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SIZE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	39	None	replace
82	[BUG]  [BUGGY]  safeThan(JsonReader.NULL_VALUE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JsonReader.NULL_VALUE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JsonReader.NULL_VALUE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SIZE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	39	None	replace
83	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  new  String[]  {  }  );  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  new  String[]  {  }  );  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	28	None	replace
84	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ",  new  String[]  {  }  );  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ",  new  String[]  {  }  );  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	28	None	replace
85	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  new  String[]  {  }  );  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  new  String[]  {  }  );  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	28	None	replace
86	[BUG]  [BUGGY]  safe())  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safe())  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safe())  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safely())    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	67	None	replace
87	[BUG]  [BUGGY]  safe())  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safe())  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safe())  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safely())    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	67	None	replace
88	[BUG]  [BUGGY]  safeThan  <  JsonReader.JSON_LEN  ||  lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.JSON_LEN  ||  lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.JSON_LEN  ||  lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LEN    &&!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	43	None	replace
89	[BUG]  [BUGGY]  safeThan(JsonReader.JSON_LEN,  negative)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JsonReader.JSON_LEN,  negative)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JsonReader.JSON_LEN,  negative)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LEN    &&!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	43	None	replace
90	[BUG]  [BUGGY]  safeThan  <  JsonReader.JSON_LONG  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.JSON_LONG  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.JSON_LONG  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LEN    &&!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	43	None	replace
91	[BUG]  [BUGGY]  safeThan  <  JsonReader.JSON_LENGTH  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.JSON_LENGTH  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.JSON_LENGTH  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LEN    &&!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	43	None	replace
92	[BUG]  [BUGGY]  safeThan  <  JSON_LEN  ||  lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JSON_LEN  ||  lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_LEN  ||  lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LEN    &&!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	43	None	replace
93	[BUG]  [BUGGY]  safeThan  <  JsonReader.JSON_LEN  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.JSON_LEN  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.JSON_LEN  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LEN    &&!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	43	None	replace
94	[BUG]  [BUGGY]  if(!lenient)  {  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	63	None	replace
95	[BUG]  [BUGGY]  if(syntaxError)  {  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(syntaxError)  {  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(syntaxError)  {  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	63	None	replace
96	[BUG]  [BUGGY]  if(isLenient())  {  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(isLenient())  {  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(isLenient())  {  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	63	None	replace
97	[BUG]  [BUGGY]  safeThan(JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_OF_RANGE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	47	None	replace
98	[BUG]  [BUGGY]  safeThan(JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_OF_RANGE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	47	None	replace
99	[BUG]  [BUGGY]  safeThan(value)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(value)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(value)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_OF_RANGE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	47	None	replace
100	[BUG]  [BUGGY]  safeThan(NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_OF_RANGE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	47	None	replace
101	[BUG]  [BUGGY]  safeThan(JSON_NUMBER_EOF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_NUMBER_EOF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_NUMBER_EOF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_OF_RANGE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	47	None	replace
102	[BUG]  [BUGGY]  safeThan  <  =  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_SYNTHETIC_ERROR)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	34	None	replace
103	[BUG]  [BUGGY]  safeThan(true)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(true)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(true)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	41	None	replace
104	[BUG]  [BUGGY]  safeThan  ==  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  ==  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  ==  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	41	None	replace
105	[BUG]  [BUGGY]  safeThan  <  =  true)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  true)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  true)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	41	None	replace
106	[BUG]  [BUGGY]  safeThan(1)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(1)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(1)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	41	None	replace
107	[BUG]  [BUGGY]  safeThan  ==  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  ==  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  ==  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	41	None	replace
108	[BUG]  [BUGGY]  safeThan()  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan()  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan()  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	41	None	replace
109	[BUG]  [BUGGY]  safeThan(JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_FALSE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	29	None	replace
110	[BUG]  [BUGGY]  safeThan(JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_FALSE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	29	None	replace
111	[BUG]  [BUGGY]  safeThan(JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonSyntaxException.INCOMPLETE_INTEGER)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	52	None	replace
112	[BUG]  [BUGGY]  safeThan(JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JsonSyntaxException.INCOMPLETE_INTEGER)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	52	None	replace
113	[BUG]  [BUGGY]  safeThan(JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonSyntaxException.INCOMPLETE_INTEGER)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	52	None	replace
114	[BUG]  [BUGGY]  safeThan  <  JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonSyntaxException.INCOMPLETE_INTEGER)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	52	None	replace
115	[BUG]  [BUGGY]  if(syntaxError)  {  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(syntaxError)  {  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(syntaxError)  {  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	1	None	replace
116	[BUG]  [BUGGY]  if(!lenient)  {  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	1	None	replace
117	[BUG]  [BUGGY]  if(isLenient())  {  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(isLenient())  {  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(isLenient())  {  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	1	None	replace
118	[BUG]  [BUGGY]  safe())  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safe())  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safe())  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safely())    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	57	None	replace
119	[BUG]  [BUGGY]  safe())  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safe())  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safe())  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safely())    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	57	None	replace
120	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	22	None	replace
121	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	22	None	replace
122	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ",  NUMBER_CHAR_DECIMAL);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	22	None	replace
123	[BUG]  [BUGGY]  safeThan(NULL_VALUE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(NULL_VALUE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(NULL_VALUE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_OF_RANGE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	32	None	replace
124	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	71	None	replace
125	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  0);  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  0);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	71	None	replace
126	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  PEEKED_NULL);  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  PEEKED_NULL);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  PEEKED_NULL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	71	None	replace
127	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value);  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	71	None	replace
128	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	71	None	replace
129	[BUG]  [BUGGY]  safeThan(true)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(true)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(true)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	50	None	replace
130	[BUG]  [BUGGY]  safeThan(JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	53	None	replace
131	[BUG]  [BUGGY]  safeThan(JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	53	None	replace
132	[BUG]  [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  parent    ==    null    ||!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	58	None	replace
133	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_SIGN));  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_SIGN));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_SIGN));	  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	15	None	replace
134	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_EXP_SIGN));  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_EXP_SIGN));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_EXP_SIGN));	  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	15	None	replace
135	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  throw  syntaxError(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  throw  syntaxError(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  }	  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	15	None	replace
136	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FRACTION_DIGIT));  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FRACTION_DIGIT));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FRACTION_DIGIT));	  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	15	None	replace
137	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_EXP_SIGN,  NUMBER_CHAR_DECIMAL));  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_EXP_SIGN,  NUMBER_CHAR_DECIMAL));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make(NUMBER_CHAR_EXP_SIGN,  NUMBER_CHAR_DECIMAL));	  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	15	None	replace
138	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FALSE));  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FALSE));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FALSE));	  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	15	None	replace
139	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FLOAT));  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FLOAT));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FLOAT));	  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	15	None	replace
140	[BUG]  [BUGGY]  if(!lenient)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	10	None	replace
141	[BUG]  [BUGGY]  if(isLenient())  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(isLenient())  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(isLenient())  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	10	None	replace
142	[BUG]  [BUGGY]  if(syntaxError)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(syntaxError)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(syntaxError)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	10	None	replace
143	[BUG]  [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  parent    ==    null    ||!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	66	None	replace
144	[BUG]  [BUGGY]  if(!lenient)  {  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	61	None	replace
145	[BUG]  [BUGGY]  if(syntaxError)  {  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(syntaxError)  {  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(syntaxError)  {  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	61	None	replace
146	[BUG]  [BUGGY]  if(isLenient())  {  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(isLenient())  {  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(isLenient())  {  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	61	None	replace
147	[BUG]  [BUGGY]  if(lenient)  {  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	61	None	replace
148	[BUG]  [BUGGY]  safeThan  <  =  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	42	None	replace
149	[BUG]  [BUGGY]  safeThan(JsonReader.LENIER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JsonReader.LENIER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JsonReader.LENIER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	42	None	replace
150	[BUG]  [BUGGY]  safeThan(JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JsonReader.setLenient(true)to  accept  malformed  JSON ");	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	42	None	replace
151	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	17	None	replace
152	[BUG]  [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON   "));  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON   "));  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON   "));  }	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	7	None	replace
153	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON   "));  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  throw  syntaxError(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON   "));  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  throw  syntaxError(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON   "));  }	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	7	None	replace
154	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON   "));  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON   "));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON   "));	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	7	None	replace
155	[BUG]  [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	64	None	replace
156	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  expected  value ");  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  expected  value ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    expected    value   ");    	non-compiled	[CE]  	54	None	replace
157	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value. ");  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value. ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    expected    value   ");    	non-compiled	[CE]  	54	None	replace
158	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value: ");  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value: ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    expected    value   ");    	non-compiled	[CE]  	54	None	replace
159	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value ",  NUMBER_CHAR_DECIMAL);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    expected    value   ");    	non-compiled	[CE]  	54	None	replace
160	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value: "  +  getMessage());  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value: "  +  getMessage());  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value: "  +  getMessage());	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    expected    value   ");    	non-compiled	[CE]  	54	None	replace
161	[BUG]  [BUGGY]  if(!lenient)  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternal(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	62	None	replace
162	[BUG]  [BUGGY]  if(isLenient())  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(isLenient())  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(isLenient())  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternal(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	62	None	replace
163	[BUG]  [BUGGY]  if(syntaxError)  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(syntaxError)  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(syntaxError)  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternal(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	62	None	replace
164	[BUG]  [BUGGY]  if(lenient)  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternal(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	62	None	replace
165	[BUG]  [BUGGY]  if(!lenient)  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  else  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  else  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  else  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtInternal(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	62	None	replace
166	[BUG]  [BUGGY]  safeThan(true)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(true)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(true)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	30	None	replace
167	[BUG]  [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  parent    ==    null    ||!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	56	None	replace
168	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
169	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  }	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
170	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);  }	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
171	[BUG]  [BUGGY]  safeThan  <  =  JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_FALSE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	33	None	replace
172	[BUG]  [BUGGY]  if(!lenient)  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	11	None	replace
173	[BUG]  [BUGGY]  if(isLenient())  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(isLenient())  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(isLenient())  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	11	None	replace
174	[BUG]  [BUGGY]  if(syntaxError)  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(syntaxError)  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(syntaxError)  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	11	None	replace
175	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON.n ");  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON.n ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON.n ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	27	None	replace
176	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  Throwables.throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	37	None	replace
177	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");	  Throwables.throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	37	None	replace
178	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");	  Throwables.throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	37	None	replace
179	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");	  Throwables.throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	37	None	replace
180	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);	  Throwables.throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	37	None	replace
181	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  0);  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  0);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  0);	  Throwables.throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	37	None	replace
182	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	20	None	replace
183	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	20	None	replace
184	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  getClass());  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  getClass());  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  getClass());	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	20	None	replace
185	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  getClass());  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  getClass());  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  getClass());	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	20	None	replace
186	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  this.getMessage());  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  this.getMessage());  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  this.getMessage());	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	20	None	replace
187	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	2	None	replace
188	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  syntaxError);	  aughtExceptionHandler(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	23	None	replace
189	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");	  aughtExceptionHandler(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	23	None	replace
190	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  0);  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  0);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  0);	  aughtExceptionHandler(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	23	None	replace
191	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  charsLoaded);  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  charsLoaded);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  charsLoaded);	  aughtExceptionHandler(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	23	None	replace
192	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	18	None	replace
193	[BUG]  [BUGGY]  safeThan(JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LENING)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	45	None	replace
194	[BUG]  [BUGGY]  safeThan(JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan(JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan(JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LENING)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	45	None	replace
195	[BUG]  [BUGGY]  safe()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safe()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safe()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safely()    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	59	None	replace
196	[BUG]  [BUGGY]  safe()  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safe()  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safe()  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safely()    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	59	None	replace
197	[BUG]  [BUGGY]  safely()  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safely()  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safely()  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safely()    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	59	None	replace
198	[BUG]  [BUGGY]  safe()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safe()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safe()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  }	  safely()    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	59	None	replace
199	[BUG]  [BUGGY]  safe()  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safe()  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safe()  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safely()    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	59	None	replace
200	[BUG]  [BUGGY]  safe()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  null);  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safe()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  null);  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safe()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  null);  }	  safely()    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	59	None	replace
201	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ",  0);  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ",  0);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ",    0);    	non-compiled	[CE]  	55	None	replace
202	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ",  0);  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ",  0);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ",    0);    	non-compiled	[CE]  	55	None	replace
203	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "  + ",  0);  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "  + ",  0);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "  + ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ",    0);    	non-compiled	[CE]  	55	None	replace
204	[BUG]  [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON "));  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON "));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON "));	  hingeg.report(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	5	None	replace
205	[BUG]  [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "),  syntaxError);  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "),  syntaxError);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "),  syntaxError);	  hingeg.report(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	5	None	replace
206	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	17	None	replace
207	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	17	None	replace
208	[BUG]  [BUGGY]  reader  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  reader  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	reader  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  parent    ==    null    ||!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	58	None	replace
209	[BUG]  [BUGGY]  safeThan  <  JsonReader.JSON_LEN  &&!negative)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.JSON_LEN  &&!negative)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.JSON_LEN  &&!negative)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LEN    &&!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	43	None	replace
210	[BUG]  [BUGGY]  safeThan  <  JsonReader.JSON_LEN  &&!negative)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.JSON_LEN  &&!negative)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.JSON_LEN  &&!negative)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LEN    &&!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	43	None	replace
211	[BUG]  [BUGGY]  safeThan  <  JSON_LEN  &&!negative)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JSON_LEN  &&!negative)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_LEN  &&!negative)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LEN    &&!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	43	None	replace
212	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  false)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
213	[BUG]  [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
214	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
215	[BUG]  [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
216	[BUG]  [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SYNCHRONIZED)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SYNCHRONIZED)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.UNKNOWN_SYNCHRONIZED)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
217	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  false)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
218	[BUG]  [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
219	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  toString());  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  toString());  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  toString());	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	20	None	replace
220	[BUG]  [BUGGY]  if(!lenient)  {  aughtInternalException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtInternalException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtInternalException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	68	None	replace
221	[BUG]  [BUGGY]  safeThan  <  =  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SIZE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	44	None	replace
222	[BUG]  [BUGGY]  safeThan  <  JsonReader.MIN_INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.MIN_INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.MIN_INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SIZE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	44	None	replace
223	[BUG]  [BUGGY]  safeThan  <  JsonReader.NULL)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.NULL)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.NULL)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SIZE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	44	None	replace
224	[BUG]  [BUGGY]  safeThan  <  JsonReader.ZERO)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.ZERO)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.ZERO)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SIZE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	44	None	replace
225	[BUG]  [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON   "));  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON   "));  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON   "));  }	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	7	None	replace
226	[BUG]  [BUGGY]  safeThan  <  JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_SYNTHETIC)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	49	None	replace
227	[BUG]  [BUGGY]  safeThan  <  JSON_LONG)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JSON_LONG)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_LONG)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_SYNTHETIC)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	49	None	replace
228	[BUG]  [BUGGY]  safeThan  <  =  true)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  true)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  true)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	35	None	replace
229	[BUG]  [BUGGY]  safeThan  >=  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  >=  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  >=  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	35	None	replace
230	[BUG]  [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DIGIT,  NUMBER_CHAR_DECIMAL));  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DIGIT,  NUMBER_CHAR_DECIMAL));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(NUMBER_CHAR_DIGIT,  NUMBER_CHAR_DECIMAL));	  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	14	None	replace
231	[BUG]  [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_EXP_DIGIT,  NUMBER_CHAR_DECIMAL));  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_EXP_DIGIT,  NUMBER_CHAR_DECIMAL));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(NUMBER_CHAR_EXP_DIGIT,  NUMBER_CHAR_DECIMAL));	  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	14	None	replace
232	[BUG]  [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_LENGTH,  NUMBER_CHAR_DECIMAL));  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_LENGTH,  NUMBER_CHAR_DECIMAL));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(NUMBER_CHAR_LENGTH,  NUMBER_CHAR_DECIMAL));	  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	14	None	replace
233	[BUG]  [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_LONG,  NUMBER_CHAR_DECIMAL));  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_LONG,  NUMBER_CHAR_DECIMAL));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(NUMBER_CHAR_LONG,  NUMBER_CHAR_DECIMAL));	  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	14	None	replace
234	[BUG]  [BUGGY]  safeThan  <  JsonReader.LONG)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.LONG)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.LONG)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SYNTHETIC)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	40	None	replace
235	[BUG]  [BUGGY]  safeThan  <  JsonReader.NULL)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.NULL)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.NULL)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SYNTHETIC)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	40	None	replace
236	[BUG]  [BUGGY]  if(lenient)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	70	None	replace
237	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");  }	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	70	None	replace
238	[BUG]  [BUGGY]  safeThan  <  =  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SIZE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	39	None	replace
239	[BUG]  [BUGGY]  safeThan  <  JsonReader.MIN_INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.MIN_INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.MIN_INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SIZE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	39	None	replace
240	[BUG]  [BUGGY]  safeThan  <  JsonReader.ZERO)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.ZERO)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.ZERO)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SIZE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	39	None	replace
241	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  new  String[]  {  }  );  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  new  String[]  {  }  );  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	21	None	replace
242	[BUG]  [BUGGY]  reader  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  reader  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	reader  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  parent    ==    null    ||!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	66	None	replace
243	[BUG]  [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON "));  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON "));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON "));	  hingeg.report(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	25	None	replace
244	[BUG]  [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON "),  syntaxError);  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON "),  syntaxError);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON "),  syntaxError);	  hingeg.report(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	25	None	replace
245	[BUG]  [BUGGY]  reader  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  reader  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	reader  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  parent    ==    null    ||!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	56	None	replace
246	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_EXP_DIGIT);  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_EXP_DIGIT);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_EXP_DIGIT);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	71	None	replace
247	[BUG]  [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");	  hingeg.report(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	26	None	replace
248	[BUG]  [BUGGY]  if(!lenient)  {  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  hingeg.report(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	26	None	replace
249	[BUG]  [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  hingeg.report(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	26	None	replace
250	[BUG]  [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
251	[BUG]  [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
252	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  NUMBER_CHAR_EXP_DIGIT);  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  NUMBER_CHAR_EXP_DIGIT);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  NUMBER_CHAR_EXP_DIGIT);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	22	None	replace
253	[BUG]  [BUGGY]  reader  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  reader  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	reader  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  parent    ==    null    ||!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	65	None	replace
254	[BUG]  [BUGGY]  if(lenient)  {  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	63	None	replace
255	[BUG]  [BUGGY]  if(!lenient)  {  aughtInternal( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtInternal( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtInternal( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtInternal(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	62	None	replace
256	[BUG]  [BUGGY]  if(lenient)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	10	None	replace
257	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	18	None	replace
258	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  expected  value ");  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  expected  value ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    expected    value   ");    	non-compiled	[CE]  	54	None	replace
259	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value ");  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    expected    value   ");    	non-compiled	[CE]  	54	None	replace
260	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  expected  value ");  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  expected  value ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    expected    value   ");    	non-compiled	[CE]  	54	None	replace
261	[BUG]  [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	9	None	replace
262	[BUG]  [BUGGY]  safeThan  <  =  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_OF_RANGE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	47	None	replace
263	[BUG]  [BUGGY]  safeThan  <  =  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	53	None	replace
264	[BUG]  [BUGGY]  safeThan  <  =  true)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  true)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  true)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	41	None	replace
265	[BUG]  [BUGGY]  safeThan  >=  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  >=  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  >=  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	41	None	replace
266	[BUG]  [BUGGY]  safeThan  <  JsonReader.LONG)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.LONG)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.LONG)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.UNKNOWN_SYNTHETIC)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
267	[BUG]  [BUGGY]  safeThan  <  =  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_OF_RANGE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	32	None	replace
268	[BUG]  [BUGGY]  if(lenient)  {  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
269	[BUG]  [BUGGY]  safeThan  <  =  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	31	None	replace
270	[BUG]  [BUGGY]  if(lenient)  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	11	None	replace
271	[BUG]  [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  }	  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	15	None	replace
272	[BUG]  [BUGGY]  if(null!=  NUMBER_CHAR_DIGIT)  {  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(null!=  NUMBER_CHAR_DIGIT)  {  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(null!=  NUMBER_CHAR_DIGIT)  {  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  }	  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	15	None	replace
273	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DIGIT));  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  throw  syntaxError(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DIGIT));  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  throw  syntaxError(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DIGIT));  }	  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	15	None	replace
274	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");	  Throwables.throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	37	None	replace
275	[BUG]  [BUGGY]  safeThan  <  =  JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_FALSE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	29	None	replace
276	[BUG]  [BUGGY]  safeThan  <  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LENING)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	45	None	replace
277	[BUG]  [BUGGY]  safeThan  <  JsonReader.JSON_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.JSON_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.JSON_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LENING)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	45	None	replace
278	[BUG]  [BUGGY]  safeThan  <  =  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  =  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LENING)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	45	None	replace
279	[BUG]  [BUGGY]  safeThan  <  JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LENING)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	45	None	replace
280	[BUG]  [BUGGY]  safeThan  <  JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LENING)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	45	None	replace
281	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ",  new  String[]  {  }  );  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ",  new  String[]  {  }  );  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	28	None	replace
282	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_INT)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JSON_NUMBER_INT)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_NUMBER_INT)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	53	None	replace
283	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_INT)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JSON_NUMBER_INT)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_NUMBER_INT)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	53	None	replace
284	[BUG]  [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DIGIT));  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DIGIT));  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DIGIT));  }	  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	15	None	replace
285	[BUG]  [BUGGY]  if(stack.isEmpty())  {  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(stack.isEmpty())  {  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(stack.isEmpty())  {  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  }	  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	15	None	replace
286	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  1);  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  1);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  1);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ",    0);    	non-compiled	[CE]  	55	None	replace
287	[BUG]  [BUGGY]  safeThan  <  JSON_LENENT)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JSON_LENENT)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_LENENT)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_OF_RANGE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	47	None	replace
288	[BUG]  [BUGGY]  if(!lenient)  {  hingeg.report(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  hingeg.report(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  hingeg.report(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  hingeg.report(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	5	None	replace
289	[BUG]  [BUGGY]  if(lenient)  {  hingeg.report(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  hingeg.report(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  hingeg.report(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  hingeg.report(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	5	None	replace
290	[BUG]  [BUGGY]  if(lenient)  {  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  hingeg.report(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   "));    	non-compiled	[CE]  	25	None	replace
291	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  new  String[]  {  }  );  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  new  String[]  {  }  );  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	28	None	replace
292	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON, ",  new  String[]  {  }  );  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON, ",  new  String[]  {  }  );  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON, ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	28	None	replace
293	[BUG]  [BUGGY]  safeThan  <  JsonReader.JSON_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JsonReader.JSON_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.JSON_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JsonReader.JSON_LENING)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	45	None	replace
294	[BUG]  [BUGGY]  if(lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	10	None	replace
295	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON, ");  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON, ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON, ");	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	9	None	replace
296	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_INT)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JSON_NUMBER_INT)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_NUMBER_INT)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	46	None	replace
297	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_INT)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JSON_NUMBER_INT)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_NUMBER_INT)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_FALSE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	46	None	replace
298	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	19	None	replace
299	[BUG]  [BUGGY]  if(stack.isEmpty())  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(stack.isEmpty())  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(stack.isEmpty())  {  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternalException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	68	None	replace
300	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	22	None	replace
301	[BUG]  [BUGGY]  if(!lenient)  {  aught  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(!lenient)  {  aught  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  aught  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternal(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	62	None	replace
302	[BUG]  [BUGGY]  if(lenient)  {  aught  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  aught  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  aught  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtInternal(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	62	None	replace
303	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_EXP_SIGN);  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_EXP_SIGN);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_EXP_SIGN);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	71	None	replace
304	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL  + ", ");  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL  + ", ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL  + ", ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	71	None	replace
305	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	16	None	replace
306	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");	  aughtExceptionHandler(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	23	None	replace
307	[BUG]  [BUGGY]  if(stack.isEmpty())  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(stack.isEmpty())  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(stack.isEmpty())  {  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	11	None	replace
308	[BUG]  [BUGGY]  if(lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	11	None	replace
309	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value, ");  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value, ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    expected    value   ");    	non-compiled	[CE]  	54	None	replace
310	[BUG]  [BUGGY]  safeThan  <  JSON_LENENT)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  <  JSON_LENENT)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_LENENT)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  safeThan    <    JSON_NUMBER_OF_RANGE)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	32	None	replace
311	[BUG]  [BUGGY]  safeThan  >=  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  >=  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  >=  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	41	None	replace
312	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	8	None	replace
313	[BUG]  [BUGGY]  if(lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	8	None	replace
314	[BUG]  [BUGGY]  if(lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  }	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	70	None	replace
315	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");  }	  aughtExceptionHandler(JSError.make(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	24	None	replace
316	[BUG]  [BUGGY]  safeThan  >=  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safeThan  >=  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  >=  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  safeThan    <    =    false)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	35	None	replace
317	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	12	None	replace
318	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	27	None	replace
319	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  expecting  a  value ");  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  expecting  a  value ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  expecting  a  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	27	None	replace
320	[BUG]  [BUGGY]  safely())  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safely())  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safely())  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
321	[BUG]  [BUGGY]  safely())  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safely())  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safely())  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
322	[BUG]  [BUGGY]  safely()  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  safely()  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safely()  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
323	[BUG]  [BUGGY]  aughtInternalException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtInternalException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtInternalException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
324	[BUG]  [BUGGY]  aughtInternalException( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtInternalException( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtInternalException( "JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	36	None	replace
325	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");	  aughtExceptionHandler(JSError.make(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	3	None	replace
326	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	21	None	replace
327	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  expected  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	21	None	replace
328	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  asPath());  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  asPath());  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  asPath());	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	20	None	replace
329	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage(),  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage(),  NUMBER_CHAR_DECIMAL);  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage(),  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	20	None	replace
330	[BUG]  [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FALSE));  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FALSE));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_FALSE));	  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	14	None	replace
331	[BUG]  [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DEXP_E));  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DEXP_E));  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DEXP_E));	  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,    NUMBER_CHAR_DECIMAL));    	non-compiled	[CE]  	14	None	replace
332	[BUG]  [BUGGY]  if(lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	1	None	replace
333	[BUG]  [BUGGY]  if(stack.isEmpty())  {  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }      [BUGGY]  if(stack.isEmpty())  {  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]        [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(stack.isEmpty())  {  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  aughtException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	1	None	replace
