bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
2	[BUG]  [BUGGY]  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
3	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
4	[BUG]  [BUGGY]  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
5	[BUG]  [BUGGY]  hingeg.report(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "));  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  hingeg.report(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "));  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "));	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
6	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
7	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "));  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "));  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON "));	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
8	[BUG]  [BUGGY]  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	3	None	replace
9	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	3	None	replace
10	[BUG]  [BUGGY]  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	3	None	replace
11	[BUG]  [BUGGY]  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	7	None	replace
12	[BUG]  [BUGGY]  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	7	None	replace
13	[BUG]  [BUGGY]  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	7	None	replace
14	[BUG]  [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	7	None	replace
15	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL));	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	7	None	replace
16	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
17	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
18	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
19	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
20	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());	  throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
21	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
22	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
23	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
24	[BUG]  [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtExceptionHandler(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
25	[BUG]  [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON "));  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON "));  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON "));	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
26	[BUG]  [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
27	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
28	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ",  new  String[]  {  }  );  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ",  new  String[]  {  }  );  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
29	[BUG]  [BUGGY]  safeThan  <  JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	7	None	replace
30	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	7	None	replace
31	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	7	None	replace
32	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	7	None	replace
33	[BUG]  [BUGGY]  safeThan  <  JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	7	None	replace
34	[BUG]  [BUGGY]  safeThan  <  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	7	None	replace
35	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  false)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	7	None	replace
36	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  if(!lenient)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	if(!lenient)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	      	non-compiled	[CE]  	5	None	replace
37	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
38	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
39	[BUG]  [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
40	[BUG]  [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
41	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
42	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
43	[BUG]  [BUGGY]  safeThan  <  JsonReader.JSON_LEN  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JsonReader.JSON_LEN  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.JSON_LEN  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
44	[BUG]  [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.UNKNOWN_SIZE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
45	[BUG]  [BUGGY]  safeThan  <  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
46	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
47	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
48	[BUG]  [BUGGY]  safeThan  <  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
49	[BUG]  [BUGGY]  safeThan  <  JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
50	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  =  false)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	3	None	replace
51	[BUG]  [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonReader.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	3	None	replace
52	[BUG]  [BUGGY]  safeThan  <  JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JsonSyntaxException.INCOMPLETE_INTEGER)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	3	None	replace
53	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	3	None	replace
54	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value ");  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
55	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  0);  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  0);  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
56	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
57	[BUG]  [BUGGY]  safely())  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safely())  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safely())  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
58	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
59	[BUG]  [BUGGY]  safely()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safely()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safely()  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
60	[BUG]  [BUGGY]  safely())  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safely())  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safely())  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	1	None	replace
61	[BUG]  [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	3	None	replace
62	[BUG]  [BUGGY]  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtInternal( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	3	None	replace
63	[BUG]  [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	3	None	replace
64	[BUG]  [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	3	None	replace
65	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
66	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
67	[BUG]  [BUGGY]  safely())  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safely())  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safely())  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
68	[BUG]  [BUGGY]  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
69	[BUG]  [BUGGY]  safely())  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  safely())  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	safely())  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	6	None	replace
70	[BUG]  [BUGGY]  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	7	None	replace
71	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {  throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.26111648393354675	1418	1418	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
