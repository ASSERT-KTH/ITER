bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]    JsonSyntaxException  [CONTEXT]  private  void  checkLenient()  throws  IOException  {  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	if  (!lenient)  {  	non-compiled	[CE]  	71	None	replace
2	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  [FE]      JsonSyntaxException  [CONTEXT]  private  void  checkLenient()  throws  IOException  {  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	if  (!lenient)  {  	non-compiled	[CE]  	71	None	replace
3	[BUG]  [BUGGY]  if  (!lenient  &&  buffer.length  >  0)  {  [CE]  [FE]        JsonSyntaxException  [CONTEXT]  private  void  checkLenient()  throws  IOException  {  [BUGGY]  if  (!lenient  &&  buffer.length  >  0)  {  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  buffer.length  >  0)  {	if  (!lenient)  {  	non-compiled	[CE]  	71	None	replace
4	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [CE]  [FE]          JsonSyntaxException  [CONTEXT]  private  void  checkLenient()  throws  IOException  {  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {	if  (!lenient)  {  	non-compiled	[CE]  	71	None	replace
5	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  [FE]            JsonSyntaxException  [CONTEXT]  private  void  checkLenient()  throws  IOException  {  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	if  (!lenient)  {  	non-compiled	[CE]  	71	None	replace
6	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  [FE]              JsonSyntaxException  [CONTEXT]  private  void  checkLenient()  throws  IOException  {  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	if  (!lenient)  {  	non-compiled	[CE]  	71	None	replace
7	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  [FE]                JsonSyntaxException  [CONTEXT]  private  void  checkLenient()  throws  IOException  {  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	if  (!lenient)  {  	non-compiled	[CE]  	71	None	replace
8	[BUG]  [BUGGY]    [CE]  [FE]                  JsonSyntaxException  [CONTEXT]  private  void  checkLenient()  throws  IOException  {  [BUGGY]    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	  	if  (!lenient)  {  	non-compiled	[CE]  	71	None	replace
9	[BUG]  [BUGGY]  if  (!lenient  &&  stack.size()  >  0)  {  [CE]  [FE]    JsonSyntaxException  [CONTEXT]  private  void  checkLenient()  throws  IOException  {  [BUGGY]  if  (!lenient  &&  stack.size()  >  0)  {  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  stack.size()  >  0)  {	if  (!lenient)  {  	non-compiled	[CE]  	71	None	replace
10	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient())  {  [CE]  [FE]    JsonSyntaxException  [CONTEXT]  private  void  checkLenient()  throws  IOException  {  [BUGGY]  if(!lenient  &&  buffer.isLenient())  {  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient())  {	if  (!lenient)  {  	non-compiled	[CE]  	71	None	replace
11	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENIER))  {  [CE]  [FE]      JsonSyntaxException  [CONTEXT]  private  void  checkLenient()  throws  IOException  {  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENIER))  {  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENIER))  {	if  (!lenient)  {  	non-compiled	[CE]  	71	None	replace
