bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME))  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	2	None	replace
2	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENAME))  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENAME))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	2	None	replace
3	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	4	None	replace
4	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	4	None	replace
5	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	4	None	replace
6	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FALSE))  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FALSE))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FALSE))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	11	None	replace
7	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENIER))  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENIER))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTE_LENIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	11	None	replace
8	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LTENIER))  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LTENIER))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LTENIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	11	None	replace
9	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENEMIER))  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENEMIER))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENEMIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	11	None	replace
10	[BUG]  [BUGGY]  if  (!lenient  &&  stack.size()  >  1)  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  stack.size()  >  1)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  stack.size()  >  1)  {	  if    (!lenient    &&    stack.size()    >    0)    {    	non-compiled	[CE]  	9	None	replace
11	[BUG]  [BUGGY]  if(stack.size()  >  0)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(stack.size()  >  0)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  >  0)  {	  if    (!lenient    &&    stack.size()    >    0)    {    	non-compiled	[CE]  	9	None	replace
12	[BUG]  [BUGGY]  if  (!lenient  &&  stack.size()  ==  0)  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  stack.size()  ==  0)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  stack.size()  ==  0)  {	  if    (!lenient    &&    stack.size()    >    0)    {    	non-compiled	[CE]  	9	None	replace
13	[BUG]  [BUGGY]  if  (!lenient  ||  stack.size()  >  0)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  ||  stack.size()  >  0)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  stack.size()  >  0)  {	  if    (!lenient    &&    stack.size()    >    0)    {    	non-compiled	[CE]  	9	None	replace
14	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }	      	non-compiled	[CE]  	8	None	replace
15	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  else  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  else  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  }  else  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	      	non-compiled	[CE]  	8	None	replace
16	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)  to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)  to  accept  malformed  JSON ");  }  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)  to  accept  malformed  JSON ");  }	      	non-compiled	[CE]  	8	None	replace
17	[BUG]  [BUGGY]  if(!lenient  &&  buffer!=  null  &&  buffer.isLenient())  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  buffer!=  null  &&  buffer.isLenient())  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer!=  null  &&  buffer.isLenient())  {	  if(!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	10	None	replace
18	[BUG]  [BUGGY]  if(!lenient  &&  buffer.getLenient())  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  buffer.getLenient())  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.getLenient())  {	  if(!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	10	None	replace
19	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	10	None	replace
20	[BUG]  [BUGGY]  if(!lenient  ||  buffer.isLenient())  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  ||  buffer.isLenient())  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  buffer.isLenient())  {	  if(!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	10	None	replace
21	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	10	None	replace
22	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.isLenient())  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(buffer!=  null  ||  buffer.isLenient())  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||  buffer.isLenient())  {	  if(!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	10	None	replace
23	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  	6	None	replace
24	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  	6	None	replace
25	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  	6	None	replace
26	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAMES,  false))  {  [CE]  [FE]                        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAMES,  false))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAMES,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  	6	None	replace
27	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME,  false))  {  [CE]  [FE]                          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME,  false))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  	6	None	replace
28	[BUG]  [BUGGY]  if  (!lenient  &&  buffer!=  null  &&  buffer.length  >  0)  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  buffer!=  null  &&  buffer.length  >  0)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  buffer!=  null  &&  buffer.length  >  0)  {	  if    (!lenient    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	3	None	replace
29	[BUG]  [BUGGY]  if  (!lenient  ||  buffer.length  >  0)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  ||  buffer.length  >  0)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  buffer.length  >  0)  {	  if    (!lenient    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	3	None	replace
30	[BUG]  [BUGGY]  if  (!lenient  &&  buffer!=  null)  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  buffer!=  null)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  buffer!=  null)  {	  if    (!lenient    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	3	None	replace
31	[BUG]  [BUGGY]  if  (!lenient  &&  buffer.length  <  =  0)  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  buffer.length  <  =  0)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  buffer.length  <  =  0)  {	  if    (!lenient    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	3	None	replace
32	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  >  0)  {  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(buffer!=  null  ||  buffer.length  >  0)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||  buffer.length  >  0)  {	  if    (!lenient    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	3	None	replace
33	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	7	None	replace
34	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	7	None	replace
35	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	7	None	replace
36	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  	5	None	replace
37	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENIER,  true))  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENIER,  true))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENIER,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  	5	None	replace
38	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  	5	None	replace
39	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENAME,  true))  {  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENAME,  true))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENAME,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  	5	None	replace
40	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_NAME,  false))  {  [CE]  [FE]                        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_NAME,  false))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_NAME,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  	5	None	replace
41	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	1	None	replace
42	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	1	None	replace
43	[BUG]  [BUGGY]  if  (!lenient  &&  buffer  ==  null)  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  buffer  ==  null)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  buffer  ==  null)  {	  if    (!lenient    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	3	None	replace
44	[BUG]  [BUGGY]  if  (!lenient  &&  stack.length  >  0)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  stack.length  >  0)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  stack.length  >  0)  {	  if    (!lenient    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	3	None	replace
45	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING))  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	1	None	replace
46	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NAMES))  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NAMES))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NAMES))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	1	None	replace
47	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_ARRAY))  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_ARRAY))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_ARRAY))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	4	None	replace
48	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	4	None	replace
49	[BUG]  [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.size()  >  0)  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.size()  >  0)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack!=  null  ||!lenient  &&  stack.size()  >  0)  {	  if    (!lenient    &&    stack.size()    >    0)    {    	non-compiled	[CE]  	9	None	replace
50	[BUG]  [BUGGY]  if(stack.size()  ==  0)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(stack.size()  ==  0)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  ==  0)  {	  if    (!lenient    &&    stack.size()    >    0)    {    	non-compiled	[CE]  	9	None	replace
51	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	      	non-compiled	[CE]  	8	None	replace
52	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	      	non-compiled	[CE]  	8	None	replace
53	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING,  true))  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING,  true))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  	5	None	replace
54	[BUG]  [BUGGY]  if(buffer!=  null  ||!lenient  &&  buffer.isLenient())  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(buffer!=  null  ||!lenient  &&  buffer.isLenient())  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||!lenient  &&  buffer.isLenient())  {	  if(!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	10	None	replace
55	[BUG]  [BUGGY]  if(!lenient  &&  stack.isLenient())  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  stack.isLenient())  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  stack.isLenient())  {	  if(!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	10	None	replace
56	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))  {  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	7	None	replace
57	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LIST))  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LIST))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LIST))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	11	None	replace
58	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY))  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	11	None	replace
59	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH))  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	11	None	replace
60	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED))  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	11	None	replace
61	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NAMES,  true))  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NAMES,  true))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NAMES,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  	6	None	replace
62	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG))  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	1	None	replace
63	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST))  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LIST))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	11	None	replace
64	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENIER))  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENIER))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	11	None	replace
65	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH))  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	11	None	replace
66	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT))  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	11	None	replace
67	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENEMIER))  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENEMIER))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENEMIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	11	None	replace
68	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME))  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	2	None	replace
69	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  &&  buffer.length  >  0)  {	  if    (!lenient    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	3	None	replace
70	[BUG]  [BUGGY]  if(!lenient)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	      	non-compiled	[CE]  	8	None	replace
71	[BUG]  [BUGGY]  if(!lenient  &&  stack.isEmpty())  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  stack.isEmpty())  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  stack.isEmpty())  {	  if    (!lenient    &&    stack.size()    >    0)    {    	non-compiled	[CE]  	9	None	replace
72	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  ||  buffer.isLenient())  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  buffer.isLenient()  ||  buffer.isLenient())  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  ||  buffer.isLenient())  {	  if(!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	10	None	replace
73	[BUG]  [BUGGY]  if(buffer!=  null  &&!lenient  &&  buffer.isLenient())  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(buffer!=  null  &&!lenient  &&  buffer.isLenient())  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  &&!lenient  &&  buffer.isLenient())  {	  if(!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	10	None	replace
74	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.isLenient())  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(buffer!=  null  &&  buffer.isLenient())  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  &&  buffer.isLenient())  {	  if(!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	10	None	replace
75	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON ");	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	7	None	replace
76	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE))  {  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	7	None	replace
77	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_NAME,  false))  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_NAME,  false))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_NAME,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  	5	None	replace
78	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_LONG,  true))  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {    [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_LONG,  true))  {  [BUGGY]    throw  syntaxError(   "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON   ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTED_LONG,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  	5	None	replace
