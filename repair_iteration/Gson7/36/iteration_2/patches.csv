bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  aughtException( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtException( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtException( "JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	70	None	replace
2	[BUG]  [BUGGY]  aughtException( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtException( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtException( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	70	None	replace
3	[BUG]  [BUGGY]  reader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  reader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	reader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	70	None	replace
4	[BUG]  [BUGGY]  aughtException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	70	None	replace
5	[BUG]  [BUGGY]  aughtExceptionHandler(JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtExceptionHandler(JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtExceptionHandler(JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	70	None	replace
6	[BUG]  [BUGGY]  reader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  reader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	reader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	70	None	replace
7	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME,  true))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAME))    {    	non-compiled	[CE]  	1	None	replace
8	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LITERAL_NAME))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LITERAL_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_LITERAL_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAME))    {    	non-compiled	[CE]  	1	None	replace
9	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	19	None	replace
10	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	19	None	replace
11	[BUG]  [BUGGY]  if(!lenient  ||  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	19	None	replace
12	[BUG]  [BUGGY]  if(!lenient  &&  buffer.getLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.getLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.getLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	19	None	replace
13	[BUG]  [BUGGY]  if(buffer.isLenient()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer.isLenient()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer.isLenient()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	19	None	replace
14	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LITERAL_NAMES))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LITERAL_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LITERAL_NAMES))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	19	None	replace
15	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LIST)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LIST))    {    	non-compiled	[CE]  	63	None	replace
16	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_NULL))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_NULL))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_NULL))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LIST))    {    	non-compiled	[CE]  	63	None	replace
17	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_NAME))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LIST))    {    	non-compiled	[CE]  	63	None	replace
18	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LIST))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LIST))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTED_LIST))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LIST))    {    	non-compiled	[CE]  	63	None	replace
19	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST,  PEEKED_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST,  PEEKED_DOUBLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LIST,  PEEKED_DOUBLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LIST))    {    	non-compiled	[CE]  	63	None	replace
20	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST  ||  Float.isInfinite(peekStack[0])))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST  ||  Float.isInfinite(peekStack[0])))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LIST  ||  Float.isInfinite(peekStack[0])))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LIST))    {    	non-compiled	[CE]  	63	None	replace
21	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {	  if    (!lenient    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  	38	None	replace
22	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {	  if    (!lenient    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  	38	None	replace
23	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LENIER,  true))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LENIER,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_LENIER,  true))  {	  if    (!lenient    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  	38	None	replace
24	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  	25	None	replace
25	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  false))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  false))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  	25	None	replace
26	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  true))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  true))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  	25	None	replace
27	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  	25	None	replace
28	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  buffer.isLenient())  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  buffer.isLenient())  {	  if(!lenient    &&    buffer.isLenient()    ||    buffer.isLenient())    {    	non-compiled	[CE]  	72	None	replace
29	[BUG]  [BUGGY]  if(!lenient  &&  buffer.getLenient()  ||  buffer.isLenient())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.getLenient()  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.getLenient()  ||  buffer.isLenient())  {	  if(!lenient    &&    buffer.isLenient()    ||    buffer.isLenient())    {    	non-compiled	[CE]  	72	None	replace
30	[BUG]  [BUGGY]  if(!lenient  ||  buffer.isLenient()  ||  buffer.isLenient())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  buffer.isLenient()  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  buffer.isLenient()  ||  buffer.isLenient())  {	  if(!lenient    &&    buffer.isLenient()    ||    buffer.isLenient())    {    	non-compiled	[CE]  	72	None	replace
31	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isEmpty()  ||  buffer.isLenient())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isEmpty()  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isEmpty()  ||  buffer.isLenient())  {	  if(!lenient    &&    buffer.isLenient()    ||    buffer.isLenient())    {    	non-compiled	[CE]  	72	None	replace
32	[BUG]  [BUGGY]  if(!lenient  &&  buffer.length()  >  0  ||  buffer.length()  >  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.length()  >  0  ||  buffer.length()  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.length()  >  0  ||  buffer.length()  >  0)  {	  if(!lenient    &&    buffer.isLenient()    ||    buffer.isLenient())    {    	non-compiled	[CE]  	72	None	replace
33	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	42	None	replace
34	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	42	None	replace
35	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING,  false))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING,    true))    {    	non-compiled	[CE]  	53	None	replace
36	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING,  false))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING,    true))    {    	non-compiled	[CE]  	53	None	replace
37	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENED,  false))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENED,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENED,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING,    true))    {    	non-compiled	[CE]  	53	None	replace
38	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL,  true))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING,    true))    {    	non-compiled	[CE]  	53	None	replace
39	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	34	None	replace
40	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	34	None	replace
41	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	34	None	replace
42	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	34	None	replace
43	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.VERSION_CODES[0]))  {  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.VERSION_CODES[0]))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.VERSION_CODES[0]))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	34	None	replace
44	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NAMES,  false))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NAMES,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NAMES,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NAMES,    true))    {    	non-compiled	[CE]  	61	None	replace
45	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LENING_NAMES,  true))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LENING_NAMES,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_LENING_NAMES,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NAMES,    true))    {    	non-compiled	[CE]  	61	None	replace
46	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING_NAMES,  false))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING_NAMES,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING_NAMES,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NAMES,    true))    {    	non-compiled	[CE]  	61	None	replace
47	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  PEEKED_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  PEEKED_DOUBLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  PEEKED_DOUBLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENTENT))    {    	non-compiled	[CE]  	66	None	replace
48	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  true))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  true))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENTENT))    {    	non-compiled	[CE]  	66	None	replace
49	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  NUMBER_CHAR_QUOTED_NAME))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  NUMBER_CHAR_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  NUMBER_CHAR_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENTENT))    {    	non-compiled	[CE]  	66	None	replace
50	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  false))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  false))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENTENT))    {    	non-compiled	[CE]  	66	None	replace
51	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENTENT))    {    	non-compiled	[CE]  	66	None	replace
52	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LENTENT))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LENTENT))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTED_LENTENT))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENTENT))    {    	non-compiled	[CE]  	66	None	replace
53	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  null))  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  null))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  null))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENTENT))    {    	non-compiled	[CE]  	66	None	replace
54	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_NAME,  true))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_NAME,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_NAME,    false))    {    	non-compiled	[CE]  	40	None	replace
55	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_NAME,  false))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_NAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_NAME,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_NAME,    false))    {    	non-compiled	[CE]  	40	None	replace
56	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_NAME,  true)||  isEnabled(Feature.SINGLE_QUOTED_NAME,  true))  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_NAME,  true)||  isEnabled(Feature.SINGLE_QUOTED_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_NAME,  true)||  isEnabled(Feature.SINGLE_QUOTED_NAME,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_NAME,    false))    {    	non-compiled	[CE]  	40	None	replace
57	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_NAME,  true))  {  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (isEnabled(Feature.QUOTE_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_NAME,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_NAME,    false))    {    	non-compiled	[CE]  	40	None	replace
58	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_NAME,  true)||  isEnabled(Feature.QUOTE_NULL,  false))  {  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_NAME,  true)||  isEnabled(Feature.QUOTE_NULL,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_NAME,  true)||  isEnabled(Feature.QUOTE_NULL,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_NAME,    false))    {    	non-compiled	[CE]  	40	None	replace
59	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH,  PEEKED_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH,  PEEKED_DOUBLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH,  PEEKED_DOUBLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENGTH))    {    	non-compiled	[CE]  	65	None	replace
60	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENGTH))    {    	non-compiled	[CE]  	65	None	replace
61	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LENGTH))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LENGTH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTED_LENGTH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENGTH))    {    	non-compiled	[CE]  	65	None	replace
62	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH  +  1))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH  +  1))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH  +  1))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENGTH))    {    	non-compiled	[CE]  	65	None	replace
63	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH,  PEEKED_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH,  PEEKED_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH,  PEEKED_SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENGTH))    {    	non-compiled	[CE]  	65	None	replace
64	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.QUOTED_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.QUOTED_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.QUOTED_SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENGTH))    {    	non-compiled	[CE]  	65	None	replace
65	[BUG]  [BUGGY]  if(buffer  ==  null  &&!lenient  &&  buffer.isLenient())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  &&!lenient  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  &&!lenient  &&  buffer.isLenient())  {	  if(buffer!=    null    &&!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	73	None	replace
66	[BUG]  [BUGGY]  if(buffer  ==  null  ||!lenient  &&  buffer.isLenient())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  ||!lenient  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  ||!lenient  &&  buffer.isLenient())  {	  if(buffer!=    null    &&!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	73	None	replace
67	[BUG]  [BUGGY]  if(buffer!=  null  &&!lenient  &&  buffer.getLenient())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&!lenient  &&  buffer.getLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  &&!lenient  &&  buffer.getLenient())  {	  if(buffer!=    null    &&!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	73	None	replace
68	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	21	None	replace
69	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LITERAL_NAME))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LITERAL_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LITERAL_NAME))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	21	None	replace
70	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	21	None	replace
71	[BUG]  [BUGGY]  if(!lenient  ||  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	21	None	replace
72	[BUG]  [BUGGY]  if(!lenient  &&  buffer.getLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.getLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.getLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	21	None	replace
73	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LENAME))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LENAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LENAME))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	21	None	replace
74	[BUG]  [BUGGY]  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
75	[BUG]  [BUGGY]  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
76	[BUG]  [BUGGY]  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
77	[BUG]  [BUGGY]  reader.checkLenient( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  reader.checkLenient( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	reader.checkLenient( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
78	[BUG]  [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
79	[BUG]  [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON "));  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON "));  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	hingeg.report(JSError.make( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON "));	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
80	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.isLenient())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  ||  buffer.isLenient())  {	  if(!lenient    ||    buffer.isLenient())    {    	non-compiled	[CE]  	20	None	replace
81	[BUG]  [BUGGY]  if(buffer.isLenient())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer.isLenient())  {	  if(!lenient    ||    buffer.isLenient())    {    	non-compiled	[CE]  	20	None	replace
82	[BUG]  [BUGGY]  if(isLenient()  ||  buffer.isLenient())  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isLenient()  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isLenient()  ||  buffer.isLenient())  {	  if(!lenient    ||    buffer.isLenient())    {    	non-compiled	[CE]  	20	None	replace
83	[BUG]  [BUGGY]  if(buffer.isLenient()  ||!lenient)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer.isLenient()  ||!lenient)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer.isLenient()  ||!lenient)  {	  if(!lenient    ||    buffer.isLenient())    {    	non-compiled	[CE]  	20	None	replace
84	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING_NAMES))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING_NAMES))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NAMES))    {    	non-compiled	[CE]  	46	None	replace
85	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_KEY))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_KEY))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_KEY))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NAMES))    {    	non-compiled	[CE]  	46	None	replace
86	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LENIER))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LENIER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTED_LENIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENIER))    {    	non-compiled	[CE]  	64	None	replace
87	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LEAN))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LEAN))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LEAN))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENIER))    {    	non-compiled	[CE]  	64	None	replace
88	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENIER))    {    	non-compiled	[CE]  	64	None	replace
89	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENEMY))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENEMY))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENEMY))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENIER))    {    	non-compiled	[CE]  	64	None	replace
90	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING))  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING))    {    	non-compiled	[CE]  	45	None	replace
91	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING))    {    	non-compiled	[CE]  	45	None	replace
92	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  	23	None	replace
93	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTE_NULL,  false))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTE_NULL,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTE_NULL,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  	23	None	replace
94	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENIER,  false))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENIER,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENIER,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  	23	None	replace
95	[BUG]  [BUGGY]  if  (!lenient  ||  stack.size()  ==  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  stack.size()  ==  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  stack.size()  ==  0)  {	  if    (!lenient    ||    stack.size()    >    0)    {    	non-compiled	[CE]  	13	None	replace
96	[BUG]  [BUGGY]  if(buffer  ==  null  &&  buffer.isLenient())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  &&  buffer.isLenient())  {	  if(buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	74	None	replace
97	[BUG]  [BUGGY]  if(stack.isEmpty()  ||  buffer!=  null  &&  buffer.isLenient())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.isEmpty()  ||  buffer!=  null  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.isEmpty()  ||  buffer!=  null  &&  buffer.isLenient())  {	  if(buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	74	None	replace
98	[BUG]  [BUGGY]  if(stack.size()  ==  0  ||  buffer!=  null  &&  buffer.isLenient())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()  ==  0  ||  buffer!=  null  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  ==  0  ||  buffer!=  null  &&  buffer.isLenient())  {	  if(buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	74	None	replace
99	[BUG]  [BUGGY]  if(stack.size()  ==  0  ||  buffer!=  null  &&  stack.isLenient())  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()  ==  0  ||  buffer!=  null  &&  stack.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  ==  0  ||  buffer!=  null  &&  stack.isLenient())  {	  if(buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	74	None	replace
100	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LEAN,  false))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LEAN,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LEAN,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENIER,    true))    {    	non-compiled	[CE]  	37	None	replace
101	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	5	None	replace
102	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	5	None	replace
103	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	5	None	replace
104	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	5	None	replace
105	[BUG]  [BUGGY]  if  (isLenient(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (isLenient(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isLenient(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	5	None	replace
106	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAMES,  true))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAMES,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAMES,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAMES,    false))    {    	non-compiled	[CE]  	26	None	replace
107	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LITERAL_NAMES,  false))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LITERAL_NAMES,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_LITERAL_NAMES,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAMES,    false))    {    	non-compiled	[CE]  	26	None	replace
108	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_LITERAL_NAMES,  true))  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (isEnabled(Feature.QUOTE_LITERAL_NAMES,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_LITERAL_NAMES,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAMES,    false))    {    	non-compiled	[CE]  	26	None	replace
109	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAMES,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  false))  {  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAMES,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAMES,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAMES,    false))    {    	non-compiled	[CE]  	26	None	replace
110	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LONG))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LONG))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LONG))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_FALSE))    {    	non-compiled	[CE]  	6	None	replace
111	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_NULL))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_NULL))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_NULL))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_FALSE))    {    	non-compiled	[CE]  	6	None	replace
112	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FALSE,  JSON_LONG))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FALSE,  JSON_LONG))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FALSE,  JSON_LONG))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_FALSE))    {    	non-compiled	[CE]  	6	None	replace
113	[BUG]  [BUGGY]  if(buffer!=  null  ||!lenient  &&  buffer.getLenient())  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||!lenient  &&  buffer.getLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||!lenient  &&  buffer.getLenient())  {	  if(buffer!=    null    ||!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	54	None	replace
114	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME,  true))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME,  true))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_NAME))    {    	non-compiled	[CE]  	68	None	replace
115	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME,  PEEKED_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME,  PEEKED_DOUBLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME,  PEEKED_DOUBLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_NAME))    {    	non-compiled	[CE]  	68	None	replace
116	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LONG_NAME))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LONG_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTED_LONG_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_NAME))    {    	non-compiled	[CE]  	68	None	replace
117	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_NAME))    {    	non-compiled	[CE]  	68	None	replace
118	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME,  false))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME,  false))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_NAME))    {    	non-compiled	[CE]  	68	None	replace
119	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME)||  isEnabled(Feature.QUOTED_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME)||  isEnabled(Feature.QUOTED_DOUBLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME)||  isEnabled(Feature.QUOTED_DOUBLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_NAME))    {    	non-compiled	[CE]  	68	None	replace
120	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENIER)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENIER)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENIER)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||    isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))    {    	non-compiled	[CE]  	4	None	replace
121	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_LOAD_QUOTED_NAME))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_LOAD_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_LOAD_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||    isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))    {    	non-compiled	[CE]  	4	None	replace
122	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length()  ==  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.length()  ==  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||  buffer.length()  ==  0)  {	  if(buffer!=    null    ||    buffer.isLenient())    {    	non-compiled	[CE]  	22	None	replace
123	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.getLenient())  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.getLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||  buffer.getLenient())  {	  if(buffer!=    null    ||    buffer.isLenient())    {    	non-compiled	[CE]  	22	None	replace
124	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length()  ==  0)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length()  ==  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  ||  buffer.length()  ==  0)  {	  if(buffer!=    null    ||    buffer.isLenient())    {    	non-compiled	[CE]  	22	None	replace
125	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length()  <  =  0)  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.length()  <  =  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||  buffer.length()  <  =  0)  {	  if(buffer!=    null    ||    buffer.isLenient())    {    	non-compiled	[CE]  	22	None	replace
126	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!lenient    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	41	None	replace
127	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LENING_NAMES))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LENING_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_LENING_NAMES))  {	  if    (!lenient    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	41	None	replace
128	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENAME,  false))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENAME,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENAME,    true))    {    	non-compiled	[CE]  	39	None	replace
129	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENGTH))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENGTH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTE_LENGTH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH))    {    	non-compiled	[CE]  	59	None	replace
130	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH))    {    	non-compiled	[CE]  	59	None	replace
131	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH))    {    	non-compiled	[CE]  	59	None	replace
132	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH  +  1))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH  +  1))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH  +  1))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH))    {    	non-compiled	[CE]  	59	None	replace
133	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH,  MIN_INCOMPLETE_INTEGER))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH,  MIN_INCOMPLETE_INTEGER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH,  MIN_INCOMPLETE_INTEGER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH))    {    	non-compiled	[CE]  	59	None	replace
134	[BUG]  [BUGGY]  if  (!lenient  &&  buffer.length  ==  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  buffer.length  ==  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  buffer.length  ==  0)  {	  if    (!lenient    &&    buffer    ==    null)    {    	non-compiled	[CE]  	43	None	replace
135	[BUG]  [BUGGY]  if  (!lenient  ||  buffer  ==  null)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  buffer  ==  null)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  buffer  ==  null)  {	  if    (!lenient    &&    buffer    ==    null)    {    	non-compiled	[CE]  	43	None	replace
136	[BUG]  [BUGGY]  aughtException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtException( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	52	None	replace
137	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(JsonReader.class.getClassLoader());  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(JsonReader.class.getClassLoader());  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	Thread.currentThread().setContextClassLoader(JsonReader.class.getClassLoader());	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	52	None	replace
138	[BUG]  [BUGGY]  aughtExceptionHandler(JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtExceptionHandler(JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtExceptionHandler(JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	52	None	replace
139	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LITERAL_NAME,  false))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LITERAL_NAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_LITERAL_NAME,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAME,    false))    {    	non-compiled	[CE]  	27	None	replace
140	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  true))  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAME,    false))    {    	non-compiled	[CE]  	27	None	replace
141	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_LITERAL_NAME,  true))  {  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (isEnabled(Feature.QUOTE_LITERAL_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_LITERAL_NAME,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAME,    false))    {    	non-compiled	[CE]  	27	None	replace
142	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  false))  {  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LITERAL_NAME,  true)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAME,    false))    {    	non-compiled	[CE]  	27	None	replace
143	[BUG]  [BUGGY]  if  (!lenient  &&  stack.length  >  1)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  stack.length  >  1)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  stack.length  >  1)  {	  if    (!lenient    &&    stack.length    >    0)    {    	non-compiled	[CE]  	44	None	replace
144	[BUG]  [BUGGY]  if(stack.length  >  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.length  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.length  >  0)  {	  if    (!lenient    &&    stack.length    >    0)    {    	non-compiled	[CE]  	44	None	replace
145	[BUG]  [BUGGY]  if  (!lenient  ||  stack.length  >  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  stack.length  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  stack.length  >  0)  {	  if    (!lenient    &&    stack.length    >    0)    {    	non-compiled	[CE]  	44	None	replace
146	[BUG]  [BUGGY]  if  (!lenient  &&  stackSize  >  0)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  stackSize  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  stackSize  >  0)  {	  if    (!lenient    &&    stack.length    >    0)    {    	non-compiled	[CE]  	44	None	replace
147	[BUG]  [BUGGY]  if  (!lenient  ||  buffer.length  <  =  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  buffer.length  <  =  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  buffer.length  <  =  0)  {	  if    (!lenient    &&    buffer.length    <    =    0)    {    	non-compiled	[CE]  	31	None	replace
148	[BUG]  [BUGGY]  if  (!lenient  &&  buffer.length  >=  0)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  buffer.length  >=  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  buffer.length  >=  0)  {	  if    (!lenient    &&    buffer.length    <    =    0)    {    	non-compiled	[CE]  	31	None	replace
149	[BUG]  [BUGGY]  if  (!lenient  &&  buffer.length  <  =  1)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  buffer.length  <  =  1)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  buffer.length  <  =  1)  {	  if    (!lenient    &&    buffer.length    <    =    0)    {    	non-compiled	[CE]  	31	None	replace
150	[BUG]  [BUGGY]  if  (!lenient  ||  buffer.length  ==  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  buffer.length  ==  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  buffer.length  ==  0)  {	  if    (!lenient    ||    buffer.length    >    0)    {    	non-compiled	[CE]  	29	None	replace
151	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LENEMIER))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LENEMIER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTED_LENEMIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENEMIER))    {    	non-compiled	[CE]  	67	None	replace
152	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENING))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENING))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENING))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENEMIER))    {    	non-compiled	[CE]  	67	None	replace
153	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LONG_VALUE))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LONG_VALUE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTED_LONG_VALUE))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_VALUE))    {    	non-compiled	[CE]  	76	None	replace
154	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_VALUE))    {    	non-compiled	[CE]  	76	None	replace
155	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE,  true))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE,  true))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_VALUE))    {    	non-compiled	[CE]  	76	None	replace
156	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH_VALUE))  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH_VALUE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH_VALUE))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_VALUE))    {    	non-compiled	[CE]  	76	None	replace
157	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE)||  isEnabled(Feature.QUOTED_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE)||  isEnabled(Feature.QUOTED_DOUBLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE)||  isEnabled(Feature.QUOTED_DOUBLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_VALUE))    {    	non-compiled	[CE]  	76	None	replace
158	[BUG]  [BUGGY]  if(stack.isEmpty()  ||!lenient  &&  stack.isEmpty())  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.isEmpty()  ||!lenient  &&  stack.isEmpty())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.isEmpty()  ||!lenient  &&  stack.isEmpty())  {	  if(!lenient    &&    stack.isEmpty())    {    	non-compiled	[CE]  	71	None	replace
159	[BUG]  [BUGGY]  if(stack.isEmpty())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.isEmpty())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.isEmpty())  {	  if(!lenient    &&    stack.isEmpty())    {    	non-compiled	[CE]  	71	None	replace
160	[BUG]  [BUGGY]  if(!lenient  &&  stackSize.isEmpty())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  stackSize.isEmpty())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  stackSize.isEmpty())  {	  if(!lenient    &&    stack.isEmpty())    {    	non-compiled	[CE]  	71	None	replace
161	[BUG]  [BUGGY]  if(!lenient  ||  stack.isEmpty())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  stack.isEmpty())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  stack.isEmpty())  {	  if(!lenient    &&    stack.isEmpty())    {    	non-compiled	[CE]  	71	None	replace
162	[BUG]  [BUGGY]  if(!lenient  &&  stack.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  stack.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  stack.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!lenient    &&    stack.isEmpty())    {    	non-compiled	[CE]  	71	None	replace
163	[BUG]  [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
164	[BUG]  [BUGGY]  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
165	[BUG]  [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtInternalException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
166	[BUG]  [BUGGY]  aughtExceptionHandler.handleError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtExceptionHandler.handleError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtExceptionHandler.handleError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
167	[BUG]  [BUGGY]  aughtExceptionHandler.handleError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtExceptionHandler.handleError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtExceptionHandler.handleError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
168	[BUG]  [BUGGY]  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
169	[BUG]  [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
170	[BUG]  [BUGGY]  if(stack.size()  ==  1)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()  ==  1)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  ==  1)  {	  if(stack.size()    ==    0)    {    	non-compiled	[CE]  	50	None	replace
171	[BUG]  [BUGGY]  if(stack.size()  <  =  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()  <  =  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  <  =  0)  {	  if(stack.size()    ==    0)    {    	non-compiled	[CE]  	50	None	replace
172	[BUG]  [BUGGY]  if(stack.size()  ==  2)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()  ==  2)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  ==  2)  {	  if(stack.size()    ==    0)    {    	non-compiled	[CE]  	50	None	replace
173	[BUG]  [BUGGY]  if(stack.size()!=  1)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()!=  1)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()!=  1)  {	  if(stack.size()    ==    0)    {    	non-compiled	[CE]  	50	None	replace
174	[BUG]  [BUGGY]  if(stack.size()  >=  1)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()  >=  1)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  >=  1)  {	  if(stack.size()    ==    0)    {    	non-compiled	[CE]  	50	None	replace
175	[BUG]  [BUGGY]  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	16	None	replace
176	[BUG]  [BUGGY]  attern( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  attern( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	attern( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	16	None	replace
177	[BUG]  [BUGGY]  attern( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  attern( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	attern( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	16	None	replace
178	[BUG]  [BUGGY]  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	16	None	replace
179	[BUG]  [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.size()  ==  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.size()  ==  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack!=  null  ||!lenient  &&  stack.size()  ==  0)  {	  if(stack!=    null    ||!lenient    &&    stack.size()    >    0)    {    	non-compiled	[CE]  	49	None	replace
180	[BUG]  [BUGGY]  if(stack  ==  null  ||!lenient  &&  stack.size()  >  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack  ==  null  ||!lenient  &&  stack.size()  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack  ==  null  ||!lenient  &&  stack.size()  >  0)  {	  if(stack!=    null    ||!lenient    &&    stack.size()    >    0)    {    	non-compiled	[CE]  	49	None	replace
181	[BUG]  [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.size()  <  =  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.size()  <  =  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack!=  null  ||!lenient  &&  stack.size()  <  =  0)  {	  if(stack!=    null    ||!lenient    &&    stack.size()    >    0)    {    	non-compiled	[CE]  	49	None	replace
182	[BUG]  [BUGGY]  if(stack!=  null  &&!lenient  &&  stack.size()  >  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack!=  null  &&!lenient  &&  stack.size()  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack!=  null  &&!lenient  &&  stack.size()  >  0)  {	  if(stack!=    null    ||!lenient    &&    stack.size()    >    0)    {    	non-compiled	[CE]  	49	None	replace
183	[BUG]  [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.size()  >=  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.size()  >=  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack!=  null  ||!lenient  &&  stack.size()  >=  0)  {	  if(stack!=    null    ||!lenient    &&    stack.size()    >    0)    {    	non-compiled	[CE]  	49	None	replace
184	[BUG]  [BUGGY]  if  (!lenient  ||  stack.size()  >  1)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  stack.size()  >  1)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  stack.size()  >  1)  {	  if    (!lenient    &&    stack.size()    >    1)    {    	non-compiled	[CE]  	10	None	replace
185	[BUG]  [BUGGY]  if  (!lenient  &&  stack.size()  <  =  1)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  stack.size()  <  =  1)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  stack.size()  <  =  1)  {	  if    (!lenient    &&    stack.size()    >    1)    {    	non-compiled	[CE]  	10	None	replace
186	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LIST)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LIST)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LIST)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LIST))    {    	non-compiled	[CE]  	57	None	replace
187	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LIST))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LIST))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTE_LIST))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LIST))    {    	non-compiled	[CE]  	57	None	replace
188	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_NAME))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LIST))    {    	non-compiled	[CE]  	57	None	replace
189	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))    {    	non-compiled	[CE]  	56	None	replace
190	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))    {    	non-compiled	[CE]  	56	None	replace
191	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))    {    	non-compiled	[CE]  	56	None	replace
192	[BUG]  [BUGGY]  if(stack.size()  >  1)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()  >  1)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  >  1)  {	  if(stack.size()    >    0)    {    	non-compiled	[CE]  	11	None	replace
193	[BUG]  [BUGGY]  if(stack.size()!=  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()!=  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()!=  0)  {	  if(stack.size()    >    0)    {    	non-compiled	[CE]  	11	None	replace
194	[BUG]  [BUGGY]  if(stack.size()  >=  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()  >=  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  >=  0)  {	  if(stack.size()    >    0)    {    	non-compiled	[CE]  	11	None	replace
195	[BUG]  [BUGGY]  if(!stack.isEmpty())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!stack.isEmpty())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!stack.isEmpty())  {	  if(stack.size()    >    0)    {    	non-compiled	[CE]  	11	None	replace
196	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  0)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  ||  buffer.length  <  =  0)  {	  if(buffer!=    null    ||    buffer.length    >    0)    {    	non-compiled	[CE]  	32	None	replace
197	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  >  0)  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  ||  buffer.length  >  0)  {	  if(buffer!=    null    ||    buffer.length    >    0)    {    	non-compiled	[CE]  	32	None	replace
198	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  <  =  0)  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.length  <  =  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||  buffer.length  <  =  0)  {	  if(buffer!=    null    ||    buffer.length    >    0)    {    	non-compiled	[CE]  	32	None	replace
199	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  ==  0)  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.length  ==  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||  buffer.length  ==  0)  {	  if(buffer!=    null    ||    buffer.length    >    0)    {    	non-compiled	[CE]  	32	None	replace
200	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length!=  0)  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length!=  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  ||  buffer.length!=  0)  {	  if(buffer!=    null    ||    buffer.length    >    0)    {    	non-compiled	[CE]  	32	None	replace
201	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  >=  0)  {  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  >=  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  ||  buffer.length  >=  0)  {	  if(buffer!=    null    ||    buffer.length    >    0)    {    	non-compiled	[CE]  	32	None	replace
202	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_LONG,  false))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_LONG,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTED_LONG,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTED_LONG,    true))    {    	non-compiled	[CE]  	78	None	replace
203	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTED_LONG,  true))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTED_LONG,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTED_LONG,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTED_LONG,    true))    {    	non-compiled	[CE]  	78	None	replace
204	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_NULL,  false))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_NULL,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTED_NULL,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTED_LONG,    true))    {    	non-compiled	[CE]  	78	None	replace
205	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_NAME,  true))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTED_NAME,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTED_LONG,    true))    {    	non-compiled	[CE]  	78	None	replace
206	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENEMIER))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENEMIER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTE_LENEMIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENEMIER))    {    	non-compiled	[CE]  	9	None	replace
207	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY,  true))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY,  true))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
208	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY,  false))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY,  false))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
209	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY,  PEEKED_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY,  PEEKED_DOUBLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY,  PEEKED_DOUBLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
210	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENTRY))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENTRY))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTE_LENTRY))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
211	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
212	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
213	[BUG]  [BUGGY]  if(buffer  ==  null  &&  buffer.length  >  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  &&  buffer.length  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  &&  buffer.length  >  0)  {	  if(buffer!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	69	None	replace
214	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  <  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.length  <  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||  buffer.length  <  0)  {	  if(buffer!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	69	None	replace
215	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  ||  buffer.length  <  0)  {	  if(buffer!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	69	None	replace
216	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG))    {    	non-compiled	[CE]  	62	None	replace
217	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LONG))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_LONG))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTED_LONG))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG))    {    	non-compiled	[CE]  	62	None	replace
218	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_NAME,  false))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTED_NAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTED_NAME,  false))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_NAME,    false))    {    	non-compiled	[CE]  	77	None	replace
219	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_NAME,  true)||  isEnabled(Feature.SINGLE_QUOTED_NAME,  true))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_NAME,  true)||  isEnabled(Feature.SINGLE_QUOTED_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_NAME,  true)||  isEnabled(Feature.SINGLE_QUOTED_NAME,  true))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_NAME,    false))    {    	non-compiled	[CE]  	77	None	replace
220	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_SINGLE_QUOTED_NAME,  true))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_SINGLE_QUOTED_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_SINGLE_QUOTED_NAME,  true))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_NAME,    false))    {    	non-compiled	[CE]  	77	None	replace
221	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_NAME,  true)||  isEnabled(Feature.QUOTED_NULL,  false))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_NAME,  true)||  isEnabled(Feature.QUOTED_NULL,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_NAME,  true)||  isEnabled(Feature.QUOTED_NULL,  false))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_NAME,    false))    {    	non-compiled	[CE]  	77	None	replace
222	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_ARRAY))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_ARRAY))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_ARRAY))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_ARRAY))    {    	non-compiled	[CE]  	47	None	replace
223	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_ARRAY)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_ARRAY)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_ARRAY)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_ARRAY))    {    	non-compiled	[CE]  	47	None	replace
224	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	75	None	replace
225	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON	  if(!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	75	None	replace
226	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON	  if(!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	75	None	replace
227	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE,  false))  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE,  false))  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE,  false))  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	75	None	replace
228	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LTENIER))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LTENIER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTE_LTENIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LTENIER))    {    	non-compiled	[CE]  	8	None	replace
229	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LTENIER)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LTENIER)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LTENIER)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LTENIER))    {    	non-compiled	[CE]  	8	None	replace
230	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LTENIER)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LTENIER)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LTENIER)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LTENIER))    {    	non-compiled	[CE]  	8	None	replace
231	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LEAN))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LEAN))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTE_LEAN))  {	  if(!lenient    ||    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	7	None	replace
232	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENED))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENED))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTE_LENED))  {	  if(!lenient    ||    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	7	None	replace
233	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LONG))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LONG))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTE_LONG))  {	  if(!lenient    ||    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	7	None	replace
234	[BUG]  [BUGGY]  if(!lenient  &&  buffer.getLenient()  >  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.getLenient()  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.getLenient()  >  0)  {	  if(!lenient    &&    buffer.getLenient())    {    	non-compiled	[CE]  	18	None	replace
235	[BUG]  [BUGGY]  if(!lenient  &&  buffer.getLenient()  instanceof  JSON)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.getLenient()  instanceof  JSON)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.getLenient()  instanceof  JSON)  {	  if(!lenient    &&    buffer.getLenient())    {    	non-compiled	[CE]  	18	None	replace
236	[BUG]  [BUGGY]  if(!lenient  &&  buffer.hasLenient())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.hasLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.hasLenient())  {	  if(!lenient    &&    buffer.getLenient())    {    	non-compiled	[CE]  	18	None	replace
237	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isEmpty())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isEmpty())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isEmpty())  {	  if(!lenient    &&    buffer.getLenient())    {    	non-compiled	[CE]  	18	None	replace
238	[BUG]  [BUGGY]  if(!lenient  &&  buffer.getLenient()  instanceof  JsonReader)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.getLenient()  instanceof  JsonReader)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.getLenient()  instanceof  JsonReader)  {	  if(!lenient    &&    buffer.getLenient())    {    	non-compiled	[CE]  	18	None	replace
239	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||    isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	35	None	replace
240	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||    isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	35	None	replace
241	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_LENIER))  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_LENIER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_LENIER))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||    isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	35	None	replace
242	[BUG]  [BUGGY]  if  (!lenient  &&  stack.size()  <  =  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  stack.size()  <  =  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  stack.size()  <  =  0)  {	  if    (!lenient    &&    stack.size()    ==    0)    {    	non-compiled	[CE]  	12	None	replace
243	[BUG]  [BUGGY]  if(!lenient  &&  buffer!=  null  &&  buffer.length()  >  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer!=  null  &&  buffer.length()  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer!=  null  &&  buffer.length()  >  0)  {	  if(!lenient    &&    buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	17	None	replace
244	[BUG]  [BUGGY]  if(!lenient  &&  buffer!=  null  &&  buffer.getLenient())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer!=  null  &&  buffer.getLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer!=  null  &&  buffer.getLenient())  {	  if(!lenient    &&    buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	17	None	replace
245	[BUG]  [BUGGY]  if(!lenient  &&  buffer  ==  null  &&  buffer.isLenient())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer  ==  null  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer  ==  null  &&  buffer.isLenient())  {	  if(!lenient    &&    buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	17	None	replace
246	[BUG]  [BUGGY]  if(!lenient  ||  buffer!=  null  ||  buffer.isLenient())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  buffer!=  null  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  buffer!=  null  ||  buffer.isLenient())  {	  if(!lenient    &&    buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	17	None	replace
247	[BUG]  [BUGGY]  if(!lenient  &&  buffer!=  null  ||  buffer.isLenient())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer!=  null  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer!=  null  ||  buffer.isLenient())  {	  if(!lenient    &&    buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	17	None	replace
248	[BUG]  [BUGGY]  if(!lenient  &&  buffer!=  null  &&  buffer.size()  >  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer!=  null  &&  buffer.size()  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer!=  null  &&  buffer.size()  >  0)  {	  if(!lenient    &&    buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	17	None	replace
249	[BUG]  [BUGGY]  if  (!lenient  ||  buffer!=  null)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  buffer!=  null)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  buffer!=  null)  {	  if    (!lenient    &&    buffer!=    null)    {    	non-compiled	[CE]  	30	None	replace
250	[BUG]  [BUGGY]  if  (!lenient  &&  buffer.length!=  0)  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  buffer.length!=  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  buffer.length!=  0)  {	  if    (!lenient    &&    buffer!=    null)    {    	non-compiled	[CE]  	30	None	replace
251	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  true))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  true))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH_EXPECTED))    {    	non-compiled	[CE]  	60	None	replace
252	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENGTH_EXPECTED))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENGTH_EXPECTED))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTE_LENGTH_EXPECTED))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH_EXPECTED))    {    	non-compiled	[CE]  	60	None	replace
253	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_SIGN))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_SIGN))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_SIGN))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH_EXPECTED))    {    	non-compiled	[CE]  	60	None	replace
254	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  null))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  null))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  null))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH_EXPECTED))    {    	non-compiled	[CE]  	60	None	replace
255	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  NUMBER_CHAR_EXP_E))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  NUMBER_CHAR_EXP_E))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  NUMBER_CHAR_EXP_E))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH_EXPECTED))    {    	non-compiled	[CE]  	60	None	replace
256	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  PEEKED_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  PEEKED_DOUBLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  PEEKED_DOUBLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH_EXPECTED))    {    	non-compiled	[CE]  	60	None	replace
257	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LENAME))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LENAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_LENAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENAME))    {    	non-compiled	[CE]  	2	None	replace
258	[BUG]  [BUGGY]  if(stack.isLenient()  ||!lenient  &&  stack.isLenient())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.isLenient()  ||!lenient  &&  stack.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.isLenient()  ||!lenient  &&  stack.isLenient())  {	  if(!lenient    &&    stack.isLenient())    {    	non-compiled	[CE]  	55	None	replace
259	[BUG]  [BUGGY]  if(stack.isLenient())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.isLenient())  {	  if(!lenient    &&    stack.isLenient())    {    	non-compiled	[CE]  	55	None	replace
260	[BUG]  [BUGGY]  if(!lenient  &&  stack.getLenient())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  stack.getLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  stack.getLenient())  {	  if(!lenient    &&    stack.isLenient())    {    	non-compiled	[CE]  	55	None	replace
261	[BUG]  [BUGGY]  if(!lenient  &&  stack.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  stack.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  stack.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!lenient    &&    stack.isLenient())    {    	non-compiled	[CE]  	55	None	replace
262	[BUG]  [BUGGY]  if  (!lenient  &&  buffer  ==  null  &&  buffer.length  >  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  buffer  ==  null  &&  buffer.length  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  buffer  ==  null  &&  buffer.length  >  0)  {	  if    (!lenient    &&    buffer!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	28	None	replace
263	[BUG]  [BUGGY]  if  (!lenient  ||  buffer!=  null  &&  buffer.length  >  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  buffer!=  null  &&  buffer.length  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  buffer!=  null  &&  buffer.length  >  0)  {	  if    (!lenient    &&    buffer!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	28	None	replace
264	[BUG]  [BUGGY]  if  (!lenient  ||  buffer!=  null  ||  buffer.length  >  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  buffer!=  null  ||  buffer.length  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  buffer!=  null  ||  buffer.length  >  0)  {	  if    (!lenient    &&    buffer!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	28	None	replace
265	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))    {    	non-compiled	[CE]  	48	None	replace
266	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))    {    	non-compiled	[CE]  	48	None	replace
267	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))    {    	non-compiled	[CE]  	48	None	replace
268	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||    isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))    {    	non-compiled	[CE]  	4	None	replace
269	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENAME)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENAME)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENAME)||  isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||    isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))    {    	non-compiled	[CE]  	4	None	replace
270	[BUG]  [BUGGY]  if  ((!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  ||(!stack.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  ((!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  ||(!stack.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  ((!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  ||(!stack.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {	  if    (!lenient    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	41	None	replace
271	[BUG]  [BUGGY]  if  ((!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  ||(!stack.isEmpty()  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  ((!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  ||(!stack.isEmpty()  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  ((!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  ||(!stack.isEmpty()  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)))  {	  if    (!lenient    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	41	None	replace
272	[BUG]  [BUGGY]  if  ((!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  ||(!loadMore()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  ((!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  ||(!loadMore()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  ((!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  ||(!loadMore()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {	  if    (!lenient    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	41	None	replace
273	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LENING_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LENING_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LENING_NAME))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	21	None	replace
274	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LENIER))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LENIER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LENIER))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	21	None	replace
275	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  =  false)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	70	None	replace
276	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  =  false)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  =  false)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	70	None	replace
277	[BUG]  [BUGGY]  readers.add(JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  readers.add(JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	readers.add(JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	70	None	replace
278	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPLICIT))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPLICIT))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPLICIT))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH_EXPECTED))    {    	non-compiled	[CE]  	60	None	replace
279	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPLICTED))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPLICTED))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPLICTED))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH_EXPECTED))    {    	non-compiled	[CE]  	60	None	replace
280	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  NUMBER_CHAR_EXP_SIGN))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  NUMBER_CHAR_EXP_SIGN))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXPECTED,  NUMBER_CHAR_EXP_SIGN))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH_EXPECTED))    {    	non-compiled	[CE]  	60	None	replace
281	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LONG)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LONG)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LONG)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	42	None	replace
282	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	42	None	replace
283	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	42	None	replace
284	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||!lenient)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||!lenient)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||!lenient)  {	  if    (!lenient    ||    isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	3	None	replace
285	[BUG]  [BUGGY]  if  (!lenient  &&  stack!=  null)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  stack!=  null)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  stack!=  null)  {	  if    (!lenient    &&    buffer    ==    null)    {    	non-compiled	[CE]  	43	None	replace
286	[BUG]  [BUGGY]  if  (!lenient  &&  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if    (!lenient    &&    buffer    ==    null)    {    	non-compiled	[CE]  	43	None	replace
287	[BUG]  [BUGGY]  if  (!lenient  &&  buffer!=  null  &&  buffer.length  <  =  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  buffer!=  null  &&  buffer.length  <  =  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  buffer!=  null  &&  buffer.length  <  =  0)  {	  if    (!lenient    &&    buffer!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	28	None	replace
288	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_LENIER,  false))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (isEnabled(Feature.QUOTE_LENIER,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (isEnabled(Feature.QUOTE_LENIER,  false))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  	25	None	replace
289	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
290	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY)||  isEnabled(Feature.VERSION_CODES[0]))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY)||  isEnabled(Feature.VERSION_CODES[0]))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY)||  isEnabled(Feature.VERSION_CODES[0]))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
291	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY,  JSON_FALSE))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY,  JSON_FALSE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY,  JSON_FALSE))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
292	[BUG]  [BUGGY]  if(!lenient  &&  stack.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  stack.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  stack.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!lenient    &&    stack.isEmpty())    {    	non-compiled	[CE]  	71	None	replace
293	[BUG]  [BUGGY]  if  (!lenient  &&  stack.size()  ==  1)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  stack.size()  ==  1)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  stack.size()  ==  1)  {	  if    (!lenient    &&    stack.size()    ==    0)    {    	non-compiled	[CE]  	12	None	replace
294	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_VALUE))    {    	non-compiled	[CE]  	76	None	replace
295	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_VALUE))    {    	non-compiled	[CE]  	76	None	replace
296	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_LENIER))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_LENIER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_LENIER))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	5	None	replace
297	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	5	None	replace
298	[BUG]  [BUGGY]  if(value!=  null  &&!lenient  &&  buffer.isLenient())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(value!=  null  &&!lenient  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(value!=  null  &&!lenient  &&  buffer.isLenient())  {	  if(buffer!=    null    &&!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	73	None	replace
299	[BUG]  [BUGGY]  safeThan  <  JsonReader.ISO_8859_1)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JsonReader.ISO_8859_1)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JsonReader.ISO_8859_1)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	16	None	replace
300	[BUG]  [BUGGY]  safeThan  <  JsonReader.ISO_8859_1)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JsonReader.ISO_8859_1)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JsonReader.ISO_8859_1)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	16	None	replace
301	[BUG]  [BUGGY]  safeThan  <  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	16	None	replace
302	[BUG]  [BUGGY]  safeThan  <  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JsonReader.JSON_LENING)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	16	None	replace
303	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  JSON_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  JSON_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT,  JSON_SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENTENT))    {    	non-compiled	[CE]  	66	None	replace
304	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENTENT))    {    	non-compiled	[CE]  	66	None	replace
305	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT)||  isEnabled(Feature.VERSION_CODES[0]))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT)||  isEnabled(Feature.VERSION_CODES[0]))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT)||  isEnabled(Feature.VERSION_CODES[0]))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENTENT))    {    	non-compiled	[CE]  	66	None	replace
306	[BUG]  [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LENAME,  true))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  ||  isEnabled(Feature.QUOTE_LENAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  ||  isEnabled(Feature.QUOTE_LENAME,  true))  {	  if    (!lenient    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  	38	None	replace
307	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_NULL,  true))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_NULL,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTED_NULL,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTED_LONG,    true))    {    	non-compiled	[CE]  	78	None	replace
308	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.SINGLE_QUOTED_NAME,  true))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.SINGLE_QUOTED_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.SINGLE_QUOTED_NAME,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTED_LONG,    true))    {    	non-compiled	[CE]  	78	None	replace
309	[BUG]  [BUGGY]  if(buffer  >=  null  ||  buffer.isLenient())  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  >=  null  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  >=  null  ||  buffer.isLenient())  {	  if(buffer!=    null    ||    buffer.isLenient())    {    	non-compiled	[CE]  	22	None	replace
310	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.hasLenient())  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.hasLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||  buffer.hasLenient())  {	  if(buffer!=    null    ||    buffer.isLenient())    {    	non-compiled	[CE]  	22	None	replace
311	[BUG]  [BUGGY]  if(buffer!=  null  ||!lenient  ||  buffer.length  >  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||!lenient  ||  buffer.length  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||!lenient  ||  buffer.length  >  0)  {	  if    (!lenient    ||    buffer.length    >    0)    {    	non-compiled	[CE]  	29	None	replace
312	[BUG]  [BUGGY]  if(buffer  ==  null  ||!lenient  ||  buffer.length  >  0)  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  ||!lenient  ||  buffer.length  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  ||!lenient  ||  buffer.length  >  0)  {	  if    (!lenient    ||    buffer.length    >    0)    {    	non-compiled	[CE]  	29	None	replace
313	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||    isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	35	None	replace
314	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_VALUE)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_VALUE)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_VALUE)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||    isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	35	None	replace
315	[BUG]  [BUGGY]  safeThan  <  JsonReader.ISO_8859_1)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JsonReader.ISO_8859_1)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JsonReader.ISO_8859_1)  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	52	None	replace
316	[BUG]  [BUGGY]  safeThan  <  JsonReader.ISO_8859_1)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JsonReader.ISO_8859_1)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JsonReader.ISO_8859_1)  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	52	None	replace
317	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	19	None	replace
318	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  buffer.isLenient())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  buffer.isLenient())  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	19	None	replace
319	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LENING_NAMES))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LENING_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_LENING_NAMES))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	19	None	replace
320	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG))    {    	non-compiled	[CE]  	62	None	replace
321	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG))    {    	non-compiled	[CE]  	62	None	replace
322	[BUG]  [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.size()  >  1)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.size()  >  1)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack!=  null  ||!lenient  &&  stack.size()  >  1)  {	  if    (!lenient    &&    stack.size()    >    1)    {    	non-compiled	[CE]  	10	None	replace
323	[BUG]  [BUGGY]  if  (!lenient  &&  stack.size()  >  1  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  stack.size()  >  1  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  stack.size()  >  1  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!lenient    &&    stack.size()    >    1)    {    	non-compiled	[CE]  	10	None	replace
324	[BUG]  [BUGGY]  if(stack.size()  ==  =  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()  ==  =  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  ==  =  0)  {	  if(stack.size()    ==    0)    {    	non-compiled	[CE]  	50	None	replace
325	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH_NAME))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_NAME))    {    	non-compiled	[CE]  	68	None	replace
326	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_NAME))    {    	non-compiled	[CE]  	68	None	replace
327	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME,  JSON_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME,  JSON_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_NAME,  JSON_SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_NAME))    {    	non-compiled	[CE]  	68	None	replace
328	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
329	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
330	[BUG]  [BUGGY]  safeThan  <  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JSON_SYNTHETIC_ERROR)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
331	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
332	[BUG]  [BUGGY]  safeThan  <  JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JSON_SYNTHETIC)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
333	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JSON_NUMBER_OF_RANGE)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
334	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.SINGLE_QUOTED_NAME,  false))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.SINGLE_QUOTED_NAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.SINGLE_QUOTED_NAME,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_NAME,    false))    {    	non-compiled	[CE]  	40	None	replace
335	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  >=  0)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.length  >=  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||  buffer.length  >=  0)  {	  if(buffer!=    null    ||    buffer.length    >    0)    {    	non-compiled	[CE]  	32	None	replace
336	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	14	None	replace
337	[BUG]  [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JSON_NUMBER_FALSE)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	14	None	replace
338	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH)||  isEnabled(Feature.VERSION_CODES[0]))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH)||  isEnabled(Feature.VERSION_CODES[0]))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH)||  isEnabled(Feature.VERSION_CODES[0]))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH))    {    	non-compiled	[CE]  	59	None	replace
339	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH))    {    	non-compiled	[CE]  	59	None	replace
340	[BUG]  [BUGGY]  safeThan  <  JSON_DOUBLE_QUOTED)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JSON_DOUBLE_QUOTED)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JSON_DOUBLE_QUOTED)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
341	[BUG]  [BUGGY]  safeThan  <  JSON_DOUBLE_QUOTED)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JSON_DOUBLE_QUOTED)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JSON_DOUBLE_QUOTED)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
342	[BUG]  [BUGGY]  safeThan  <  JsonTree.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JsonTree.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JsonTree.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
343	[BUG]  [BUGGY]  safeThan  <  JsonTree.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JsonTree.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JsonTree.UNKNOWN_SYNTHETIC)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
344	[BUG]  [BUGGY]  safeThan  <  JsonTree.UNKNOWN_SYNCHRONIZED)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  safeThan  <  JsonTree.UNKNOWN_SYNCHRONIZED)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	safeThan  <  JsonTree.UNKNOWN_SYNCHRONIZED)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
345	[BUG]  [BUGGY]  if(buffer!=  null  ||!lenient  ||  buffer.isLenient())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||!lenient  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||!lenient  ||  buffer.isLenient())  {	  if(!lenient    ||    buffer.isLenient())    {    	non-compiled	[CE]  	20	None	replace
346	[BUG]  [BUGGY]  if(stack.isEmpty()  ||!lenient  ||  buffer.isLenient())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.isEmpty()  ||!lenient  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.isEmpty()  ||!lenient  ||  buffer.isLenient())  {	  if(!lenient    ||    buffer.isLenient())    {    	non-compiled	[CE]  	20	None	replace
347	[BUG]  [BUGGY]  if(buffer  ==  null  ||!lenient  ||  buffer.isLenient())  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  ||!lenient  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  ||!lenient  ||  buffer.isLenient())  {	  if(!lenient    ||    buffer.isLenient())    {    	non-compiled	[CE]  	20	None	replace
348	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length()  >  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&  buffer.length()  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  &&  buffer.length()  >  0)  {	  if(buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	74	None	replace
349	[BUG]  [BUGGY]  if(stack!=  null  &&  buffer.isLenient())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack!=  null  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack!=  null  &&  buffer.isLenient())  {	  if(buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	74	None	replace
350	[BUG]  [BUGGY]  if(value!=  null  &&  buffer.isLenient())  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(value!=  null  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(value!=  null  &&  buffer.isLenient())  {	  if(buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	74	None	replace
351	[BUG]  [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENE))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  ||  isEnabled(Feature.QUOTE_LENE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  ||  isEnabled(Feature.QUOTE_LENE))  {	  if(!lenient    ||    isEnabled(Feature.QUOTE_LENIER))    {    	non-compiled	[CE]  	7	None	replace
352	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LTENIER))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LTENIER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LTENIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENEMIER))    {    	non-compiled	[CE]  	67	None	replace
353	[BUG]  [BUGGY]  if(!lenient  &&  buffer.length  >  0  ||  buffer.length()  >  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.length  >  0  ||  buffer.length()  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.length  >  0  ||  buffer.length()  >  0)  {	  if(!lenient    &&    buffer.isLenient()    ||    buffer.isLenient())    {    	non-compiled	[CE]  	72	None	replace
354	[BUG]  [BUGGY]  if(!lenient  &&  buffer.length  >  0  ||  buffer.length  >  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.length  >  0  ||  buffer.length  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.length  >  0  ||  buffer.length  >  0)  {	  if(!lenient    &&    buffer.isLenient()    ||    buffer.isLenient())    {    	non-compiled	[CE]  	72	None	replace
355	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENGTH))    {    	non-compiled	[CE]  	65	None	replace
356	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.VERSION_CODES[0]))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.VERSION_CODES[0]))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.VERSION_CODES[0]))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENGTH))    {    	non-compiled	[CE]  	65	None	replace
357	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LTENER))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LTENER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LTENER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LTENIER))    {    	non-compiled	[CE]  	8	None	replace
358	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LTENIER)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LTENIER)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LTENIER)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LTENIER))    {    	non-compiled	[CE]  	8	None	replace
359	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENE,  false))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENE,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENE,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENIER,    true))    {    	non-compiled	[CE]  	37	None	replace
360	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENENING,  false))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENENING,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENENING,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING,    true))    {    	non-compiled	[CE]  	53	None	replace
361	[BUG]  [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.isLenient())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack!=  null  ||!lenient  &&  stack.isLenient())  {	  if(!lenient    &&    stack.isLenient())    {    	non-compiled	[CE]  	55	None	replace
362	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING_NON_NULL_VALUE))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING_NON_NULL_VALUE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LEANING_NON_NULL_VALUE))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))    {    	non-compiled	[CE]  	56	None	replace
363	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NON_NULL))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NON_NULL))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENING_NON_NULL))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))    {    	non-compiled	[CE]  	56	None	replace
364	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENEMING))  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENEMING))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENEMING))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING))    {    	non-compiled	[CE]  	45	None	replace
365	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENED))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTE_LENED))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTE_LENED))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING))    {    	non-compiled	[CE]  	45	None	replace
366	[BUG]  [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.length  >  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack!=  null  ||!lenient  &&  stack.length  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack!=  null  ||!lenient  &&  stack.length  >  0)  {	  if    (!lenient    &&    stack.length    >    0)    {    	non-compiled	[CE]  	44	None	replace
367	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.LONG_QUOTED_NAME,  false))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.LONG_QUOTED_NAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.LONG_QUOTED_NAME,  false))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_NAME,    false))    {    	non-compiled	[CE]  	77	None	replace
368	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.LONG_NAME,  false))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.LONG_NAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.LONG_NAME,  false))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_NAME,    false))    {    	non-compiled	[CE]  	77	None	replace
369	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.LITERAL_QUOTED_NAME,  true))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.LITERAL_QUOTED_NAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.LITERAL_QUOTED_NAME,  true))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_NAME,    false))    {    	non-compiled	[CE]  	77	None	replace
370	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LIST)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LIST))    {    	non-compiled	[CE]  	63	None	replace
371	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_FALSE))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_FALSE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_FALSE))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LIST))    {    	non-compiled	[CE]  	63	None	replace
372	[BUG]  [BUGGY]  if(value  ==  null  ||!lenient  &&  buffer.isLenient())  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(value  ==  null  ||!lenient  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(value  ==  null  ||!lenient  &&  buffer.isLenient())  {	  if(buffer!=    null    ||!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	54	None	replace
373	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	75	None	replace
374	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(tru  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(tru  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLenient(tru	  if(!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	75	None	replace
375	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	75	None	replace
376	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLen  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLen  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),  throw  syntaxError( "Use  JsonReader.setLen	  if(!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	75	None	replace
377	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENIER)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENIER)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENIER)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||    isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	35	None	replace
378	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENAME)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENAME)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENAME)||  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||    isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	35	None	replace
379	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_LONG_QUOTED_NAME))  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_LONG_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME)||  isEnabled(Feature.QUOTE_LONG_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||    isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	35	None	replace
380	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||    isEnabled(Feature.QUOTE_SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	35	None	replace
381	[BUG]  [BUGGY]  reader()  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  reader()  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	reader()  {  throw  syntaxError( "JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	70	None	replace
382	[BUG]  [BUGGY]  reader()  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  reader()  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	reader()  {  throw  syntaxError( "JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(false)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	70	None	replace
383	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST  ||  isEnabled(Feature.QUOTED_LIST))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST  ||  isEnabled(Feature.QUOTED_LIST))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LIST  ||  isEnabled(Feature.QUOTED_LIST))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LIST))    {    	non-compiled	[CE]  	57	None	replace
384	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST)||  isEnabled(Feature.QUOTED_LIST))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST)||  isEnabled(Feature.QUOTED_LIST))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LIST)||  isEnabled(Feature.QUOTED_LIST))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LIST))    {    	non-compiled	[CE]  	57	None	replace
385	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST  ||  isEnabled(Feature.QUOTED_LIST)))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST  ||  isEnabled(Feature.QUOTED_LIST)))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LIST  ||  isEnabled(Feature.QUOTED_LIST)))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LIST))    {    	non-compiled	[CE]  	57	None	replace
386	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(JsonReader.VALUE_LENIER))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(JsonReader.VALUE_LENIER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(JsonReader.VALUE_LENIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LIST))    {    	non-compiled	[CE]  	57	None	replace
387	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(JsonReader.UNQUOTED_NAME))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(JsonReader.UNQUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(JsonReader.UNQUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LIST))    {    	non-compiled	[CE]  	57	None	replace
388	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  <  2)  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.length  <  2)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  ||  buffer.length  <  2)  {	  if(buffer!=    null    ||    buffer.length    >    0)    {    	non-compiled	[CE]  	32	None	replace
389	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENAME))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENAME))    {    	non-compiled	[CE]  	2	None	replace
390	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  &&  buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {	  if(buffer!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	69	None	replace
391	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  'n')  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  'n')  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  &&  buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  'n')  {	  if(buffer!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  	69	None	replace
392	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	5	None	replace
393	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.DEFAULT_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.DEFAULT_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.DEFAULT_SINGLE_QUOTED_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	5	None	replace
394	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.VERSION_CODES[0]))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.VERSION_CODES[0]))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.VERSION_CODES[0]))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	5	None	replace
395	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTED_LENIER))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTED_LENIER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTED_LENIER))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))    {    	non-compiled	[CE]  	5	None	replace
396	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTIAL_NAME))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTIAL_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTIAL_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAME))    {    	non-compiled	[CE]  	1	None	replace
397	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST_NAME))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LIST_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAME))    {    	non-compiled	[CE]  	1	None	replace
398	[BUG]  [BUGGY]  if(buffer!=  null  &&!lenient  &&  buffer!=  null  &&  buffer.isLenient())  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&!lenient  &&  buffer!=  null  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  &&!lenient  &&  buffer!=  null  &&  buffer.isLenient())  {	  if(!lenient    &&    buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	17	None	replace
399	[BUG]  [BUGGY]  if(!lenient  &&  buffer!=  null  &&  buffer.isLenient()  ||  buffer.isLenient())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer!=  null  &&  buffer.isLenient()  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer!=  null  &&  buffer.isLenient()  ||  buffer.isLenient())  {	  if(!lenient    &&    buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	17	None	replace
400	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTED_LENAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTED_LENAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTED_LENAME))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	21	None	replace
401	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTED_LONG_NAME))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTED_LONG_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTED_LONG_NAME))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	21	None	replace
402	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTED_LONG))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTED_LONG))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTED_LONG))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  	21	None	replace
403	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	52	None	replace
404	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	52	None	replace
405	[BUG]  [BUGGY]  if(stack.size()  >  0  ||  stack.size()  >  0)  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()  >  0  ||  stack.size()  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  >  0  ||  stack.size()  >  0)  {	  if(stack.size()    >    0)    {    	non-compiled	[CE]  	11	None	replace
406	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENEMING))  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENEMING))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENEMING))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING))    {    	non-compiled	[CE]  	45	None	replace
407	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.getLenient())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&  buffer.getLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  &&  buffer.getLenient())  {	  if(!lenient    &&    buffer.getLenient())    {    	non-compiled	[CE]  	18	None	replace
408	[BUG]  [BUGGY]  if(!lenient  &&  buffer.size()  >  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  buffer.size()  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  buffer.size()  >  0)  {	  if(!lenient    &&    buffer.getLenient())    {    	non-compiled	[CE]  	18	None	replace
409	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
410	[BUG]  [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
411	[BUG]  [BUGGY]  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtInternalException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
412	[BUG]  [BUGGY]  aughtInternalException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtInternalException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtInternalException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
413	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	51	None	replace
414	[BUG]  [BUGGY]  if(stack!=  null  &&  stack.size()  >  0)  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack!=  null  &&  stack.size()  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack!=  null  &&  stack.size()  >  0)  {	  if(stack!=    null    ||!lenient    &&    stack.size()    >    0)    {    	non-compiled	[CE]  	49	None	replace
415	[BUG]  [BUGGY]  if(buffer  ==  null  &&  buffer!=  null  &&  buffer.isLenient())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  &&  buffer!=  null  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer  ==  null  &&  buffer!=  null  &&  buffer.isLenient())  {	  if(buffer!=    null    &&!lenient    &&    buffer.isLenient())    {    	non-compiled	[CE]  	73	None	replace
416	[BUG]  [BUGGY]  if(lenient  ==  false  ||  buffer.length  >  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(lenient  ==  false  ||  buffer.length  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(lenient  ==  false  ||  buffer.length  >  0)  {	  if    (!lenient    ||    buffer.length    >    0)    {    	non-compiled	[CE]  	29	None	replace
417	[BUG]  [BUGGY]  if(!lenient  &&  stack.isEmpty()  ||  stack.isEmpty())  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  stack.isEmpty()  ||  stack.isEmpty())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  stack.isEmpty()  ||  stack.isEmpty())  {	  if(!lenient    &&    stack.isEmpty())    {    	non-compiled	[CE]  	71	None	replace
418	[BUG]  [BUGGY]  if(!lenient  &&  stack.isEmpty()  &&!stack.isEmpty())  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  stack.isEmpty()  &&!stack.isEmpty())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  stack.isEmpty()  &&!stack.isEmpty())  {	  if(!lenient    &&    stack.isEmpty())    {    	non-compiled	[CE]  	71	None	replace
419	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(JsonReader.VALUE_LENTENT))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(JsonReader.VALUE_LENTENT))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(JsonReader.VALUE_LENTENT))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_FALSE))    {    	non-compiled	[CE]  	6	None	replace
420	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(JsonReader.NULL_VALUE))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(JsonReader.NULL_VALUE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(JsonReader.NULL_VALUE))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_FALSE))    {    	non-compiled	[CE]  	6	None	replace
421	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(JsonReader.USE_LENIER))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(JsonReader.USE_LENIER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(JsonReader.USE_LENIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_FALSE))    {    	non-compiled	[CE]  	6	None	replace
422	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(JsonReader.UNQUOTED_LONG))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(JsonReader.UNQUOTED_LONG))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(JsonReader.UNQUOTED_LONG))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_FALSE))    {    	non-compiled	[CE]  	6	None	replace
423	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	34	None	replace
424	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.DEFAULT_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.DEFAULT_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||  isEnabled(Feature.DEFAULT_SINGLE_QUOTED_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	34	None	replace
425	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT  ||  isEnabled(Feature.QUOTED_LENTENT))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT  ||  isEnabled(Feature.QUOTED_LENTENT))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTENT  ||  isEnabled(Feature.QUOTED_LENTENT))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENTENT))    {    	non-compiled	[CE]  	66	None	replace
426	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
427	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	parent  ==  null  ||!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
428	[BUG]  [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtInternalException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
429	[BUG]  [BUGGY]  aughtInternalException( "Use  JsonReader  setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtInternalException( "Use  JsonReader  setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtInternalException( "Use  JsonReader  setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    else    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	15	None	replace
430	[BUG]  [BUGGY]  atterns.add( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  atterns.add( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	atterns.add( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(false)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	16	None	replace
431	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY  ||  isEnabled(Feature.QUOTED_LENTRY))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY  ||  isEnabled(Feature.QUOTED_LENTRY))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY  ||  isEnabled(Feature.QUOTED_LENTRY))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
432	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY,  true))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY,  true))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
433	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY,  false))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY,  false))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
434	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY  ||  isEnabled(Feature.QUOTED_LENTRY))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY  ||  isEnabled(Feature.QUOTED_LENTRY))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENTRY  ||  isEnabled(Feature.QUOTED_LENTRY))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
435	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
436	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENTRY)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENTRY))    {    	non-compiled	[CE]  	58	None	replace
437	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST,  false))  {  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LIST,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAME,    false))    {    	non-compiled	[CE]  	27	None	replace
438	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENAME,  true))  {  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENAME,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENAME,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAME,    false))    {    	non-compiled	[CE]  	27	None	replace
439	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST,  true))  {  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LIST,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LIST,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAME,    false))    {    	non-compiled	[CE]  	27	None	replace
440	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENING_NAMES))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENING_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENING_NAMES))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NAMES))    {    	non-compiled	[CE]  	46	None	replace
441	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENED_NAMES))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENED_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENED_NAMES))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NAMES))    {    	non-compiled	[CE]  	46	None	replace
442	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_AS_NULL))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_AS_NULL))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_AS_NULL))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NAMES))    {    	non-compiled	[CE]  	46	None	replace
443	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENIER_NON_NULL_VALUE))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENIER_NON_NULL_VALUE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENIER_NON_NULL_VALUE))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING_NON_NULL_VALUE))    {    	non-compiled	[CE]  	56	None	replace
444	[BUG]  [BUGGY]  if(buffer!=  null  &&!lenient  ||  buffer.isLenient())  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&!lenient  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  &&!lenient  ||  buffer.isLenient())  {	  if(!lenient    ||    buffer.isLenient())    {    	non-compiled	[CE]  	20	None	replace
445	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTED_LONG,  false))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTED_LONG,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTED_LONG,  false))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  	25	None	replace
446	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTE_LENIER,  false))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTE_LENIER,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  isEnabled(Feature.QUOTE_LENIER,  false))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  	25	None	replace
447	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXP_E))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXP_E))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXP_E))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH_EXPECTED))    {    	non-compiled	[CE]  	60	None	replace
448	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH_EXP_E))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH_EXP_E))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH_EXP_E))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH_EXPECTED))    {    	non-compiled	[CE]  	60	None	replace
449	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_ESCAPE))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_ESCAPE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_ESCAPE))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH_EXPECTED))    {    	non-compiled	[CE]  	60	None	replace
450	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXP)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXP)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH_EXP)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH_EXPECTED))    {    	non-compiled	[CE]  	60	None	replace
451	[BUG]  [BUGGY]  if(buffered!=  null  &&  buffer.isLenient())  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffered!=  null  &&  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffered!=  null  &&  buffer.isLenient())  {	  if(buffer!=    null    ||    buffer.isLenient())    {    	non-compiled	[CE]  	22	None	replace
452	[BUG]  [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	14	None	replace
453	[BUG]  [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	parent  ==  null  &&!lenient)  {  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  }	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	14	None	replace
454	[BUG]  [BUGGY]  aughtInvalidEOF( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  aughtInvalidEOF( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	aughtInvalidEOF( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient)    {    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    }    	non-compiled	[CE]  	14	None	replace
455	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_NAME,  true)||  isEnabled(Feature.QUOTED_LONG,  false))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_NAME,  true)||  isEnabled(Feature.QUOTED_LONG,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_NAME,  true)||  isEnabled(Feature.QUOTED_LONG,  false))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_NAME,    false))    {    	non-compiled	[CE]  	77	None	replace
456	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  }	  if(!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	75	None	replace
457	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  if(!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE),    throw    syntaxError(   "Use    JsonReader.setLenient(true)    to    accept    malformed    JSON   ");    	non-compiled	[CE]  	75	None	replace
458	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_LENIER,  false))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_LENIER,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTED_LENIER,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENIER,    true))    {    	non-compiled	[CE]  	37	None	replace
459	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_LENING,  false))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_LENING,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTED_LENING,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENING,    true))    {    	non-compiled	[CE]  	53	None	replace
460	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH  ||  isEnabled(Feature.QUOTED_LENGTH))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH  ||  isEnabled(Feature.QUOTED_LENGTH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH  ||  isEnabled(Feature.QUOTED_LENGTH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENGTH))    {    	non-compiled	[CE]  	65	None	replace
461	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH,  JSON_SINGLE_QUOTED_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH,  JSON_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH,  JSON_SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENGTH))    {    	non-compiled	[CE]  	65	None	replace
462	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH,  true))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH,  true))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LENGTH))    {    	non-compiled	[CE]  	65	None	replace
463	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH  ||  isEnabled(Feature.QUOTED_LENGTH))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH  ||  isEnabled(Feature.QUOTED_LENGTH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH  ||  isEnabled(Feature.QUOTED_LENGTH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH))    {    	non-compiled	[CE]  	59	None	replace
464	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH  ||  isEnabled(Feature.QUOTE_LENGTH))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH  ||  isEnabled(Feature.QUOTE_LENGTH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH  ||  isEnabled(Feature.QUOTE_LENGTH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH))    {    	non-compiled	[CE]  	59	None	replace
465	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.QUOTED_LENGTH))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.QUOTED_LENGTH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LENGTH)||  isEnabled(Feature.QUOTED_LENGTH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH))    {    	non-compiled	[CE]  	59	None	replace
466	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH  ||  isEnabled(Feature.QUOTE_LENGTH))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH  ||  isEnabled(Feature.QUOTE_LENGTH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENGTH  ||  isEnabled(Feature.QUOTE_LENGTH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LENGTH))    {    	non-compiled	[CE]  	59	None	replace
467	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG_VALUE)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG_VALUE))    {    	non-compiled	[CE]  	76	None	replace
468	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.isLenient()  ||  buffer.isLenient())  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&  buffer.isLenient()  ||  buffer.isLenient())  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  &&  buffer.isLenient()  ||  buffer.isLenient())  {	  if(buffer!=    null    &&    buffer.isLenient())    {    	non-compiled	[CE]  	74	None	replace
469	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LTENER))  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LTENER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LTENER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LTENIER))    {    	non-compiled	[CE]  	8	None	replace
470	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LTENIER  ||  isEnabled(Feature.QUOTED_LTENIER))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LTENIER  ||  isEnabled(Feature.QUOTED_LTENIER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LTENIER  ||  isEnabled(Feature.QUOTED_LTENIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LTENIER))    {    	non-compiled	[CE]  	8	None	replace
471	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LTENIER)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LTENIER)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LTENIER)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LTENIER))    {    	non-compiled	[CE]  	8	None	replace
472	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LTENIER  ||  isEnabled(Feature.QUOTE_LTENIER))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LTENIER  ||  isEnabled(Feature.QUOTE_LTENIER))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LTENIER  ||  isEnabled(Feature.QUOTE_LTENIER))  {	  if(!lenient    &&    isEnabled(Feature.QUOTE_LTENIER))    {    	non-compiled	[CE]  	8	None	replace
473	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)||!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if    (!lenient    ||    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  	33	None	replace
474	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_BOOLEAN_QUOTED_NAME))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_BOOLEAN_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||  isEnabled(Feature.QUOTE_BOOLEAN_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)||    isEnabled(Feature.QUOTE_DOUBLE_QUOTED_NAME))    {    	non-compiled	[CE]  	4	None	replace
475	[BUG]  [BUGGY]  if(!lenient  &&  stack.isLenient()  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  stack.isLenient()  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  stack.isLenient()  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(!lenient    &&    stack.isLenient())    {    	non-compiled	[CE]  	55	None	replace
476	[BUG]  [BUGGY]  if(stack.size()  ==  1  ||!lenient  &&  stack.size()  ==  0)  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()  ==  1  ||!lenient  &&  stack.size()  ==  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  ==  1  ||!lenient  &&  stack.size()  ==  0)  {	  if    (!lenient    &&    stack.size()    ==    0)    {    	non-compiled	[CE]  	12	None	replace
477	[BUG]  [BUGGY]  if(stack.size()  ==  1  ||!lenient  &&  stack.size()  ==  1)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(stack.size()  ==  1  ||!lenient  &&  stack.size()  ==  1)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(stack.size()  ==  1  ||!lenient  &&  stack.size()  ==  1)  {	  if    (!lenient    &&    stack.size()    ==    0)    {    	non-compiled	[CE]  	12	None	replace
478	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG,  JSON_SINGLE_QUOTED_NAME))  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG,  JSON_SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG,  JSON_SINGLE_QUOTED_NAME))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG))    {    	non-compiled	[CE]  	62	None	replace
479	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG,  JSON_NULL))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LONG,  JSON_NULL))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LONG,  JSON_NULL))  {	  if(!lenient    &&    isEnabled(Feature.QUOTED_LONG))    {    	non-compiled	[CE]  	62	None	replace
480	[BUG]  [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_LENAME,  false))  {  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if  (!lenient  &&  isEnabled(Feature.QUOTED_LENAME,  false))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if  (!lenient  &&  isEnabled(Feature.QUOTED_LENAME,  false))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LENAME,    true))    {    	non-compiled	[CE]  	39	None	replace
481	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))    {    	non-compiled	[CE]  	48	None	replace
482	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_KEY))    {    	non-compiled	[CE]  	48	None	replace
483	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LITERAL_NAMES,  true))  {  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTED_LITERAL_NAMES,  true))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTED_LITERAL_NAMES,  true))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_LITERAL_NAMES,    false))    {    	non-compiled	[CE]  	26	None	replace
484	[BUG]  [BUGGY]  if(!lenient  &&  stack.size  >  0)  {  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  stack.size  >  0)  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  stack.size  >  0)  {	  if    (!lenient    &&    stack.length    >    0)    {    	non-compiled	[CE]  	44	None	replace
485	[BUG]  [BUGGY]  if(buffer!=  null  &&!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(buffer!=  null  &&!lenient  &&  buffer.isLenient()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!lenient    &&    buffer.isLenient()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  	19	None	replace
486	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENAME)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENAME)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {  [BUGGY]      throw  syntaxError(     "Use  JsonReader.setLenient(true)  to  accept  malformed  JSON     ");  }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.20701966780270628	1415	1415	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENAME)||  isEnabled(Feature.SINGLE_QUOTED_NAME))  {	  if    (!lenient    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.SINGLE_QUOTED_NAME))    {    	non-compiled	[CE]  	42	None	replace
