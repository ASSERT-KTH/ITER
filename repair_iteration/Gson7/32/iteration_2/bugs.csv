bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  switch(pathTypes[i])  {  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  switch(pathTypes[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  switch(pathTypes[i])  {	  switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  pathIndices[i];  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathEntries[i])    {    	non-compiled	[CE]  	5	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	  switch(pathEntries[i])    {    	non-compiled	[CE]  	5	None	replace
7	[BUG]  [BUGGY]  Switch(pathNames[i])  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  Switch(pathNames[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathNames[i])  {	  Switch(pathIndices[i])    {    	non-compiled	[CE]  	7	None	replace
8	[BUG]  [BUGGY]  Switch(newPathIndices[i])  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  Switch(newPathIndices[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newPathIndices[i])  {	  Switch(pathIndices[i])    {    	non-compiled	[CE]  	7	None	replace
9	[BUG]  [BUGGY]  Switch(result,  pathIndices[i])  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  Switch(result,  pathIndices[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(result,  pathIndices[i])  {	  Switch(pathIndices[i])    {    	non-compiled	[CE]  	7	None	replace
10	[BUG]  [BUGGY]  Switch(i,  pathIndices[i])  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  Switch(i,  pathIndices[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(i,  pathIndices[i])  {	  Switch(pathIndices[i])    {    	non-compiled	[CE]  	7	None	replace
11	[BUG]  [BUGGY]  Switch(newStack[pathIndices[i])  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  Switch(newStack[pathIndices[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newStack[pathIndices[i])  {	  Switch(pathIndices[i])    {    	non-compiled	[CE]  	7	None	replace
12	[BUG]  [BUGGY]  Switch(newPathIndices[i],  newStack[pathNames[i])  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  Switch(newPathIndices[i],  newStack[pathNames[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(newPathIndices[i],  newStack[pathNames[i])  {	  Switch(pathIndices[i])    {    	non-compiled	[CE]  	7	None	replace
13	[BUG]  [BUGGY]  switch(pathNames[i].toString())  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i].toString())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].toString())  {	  switch(pathIndices[i].toString())    {    	non-compiled	[CE]  	8	None	replace
14	[BUG]  [BUGGY]  switch(pathIndices[i].getPath())  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i].getPath())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getPath())  {	  switch(pathIndices[i].toString())    {    	non-compiled	[CE]  	8	None	replace
15	[BUG]  [BUGGY]  switch(pathIndices[i]).toString())  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i]).toString())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i]).toString())  {	  switch(pathIndices[i].toString())    {    	non-compiled	[CE]  	8	None	replace
16	[BUG]  [BUGGY]  switch(pathIndices[i].toString().trim())  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i].toString().trim())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].toString().trim())  {	  switch(pathIndices[i].toString())    {    	non-compiled	[CE]  	8	None	replace
17	[BUG]  [BUGGY]  result.append('[').append(pathNames[i]).append(']');  break;  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  result.append('[').append(pathNames[i]).append(']');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathNames[i]).append(']');  break;	      	non-compiled	[CE]  	6	None	replace
18	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  result.append('[').append(pathIndices[i]).append(']');  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i]).append(']');	      	non-compiled	[CE]  	6	None	replace
19	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].append(']');  break;  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  result.append('[').append(pathIndices[i].append(']');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].append(']');  break;	      	non-compiled	[CE]  	6	None	replace
20	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].toString());  break;  [CE]  [FE]                        JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  result.append('[').append(pathIndices[i].toString());  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].toString());  break;	      	non-compiled	[CE]  	6	None	replace
21	[BUG]  [BUGGY]  String  pathIndices[]  =  getPathIndices(i);  break;  [CE]  [FE]                          JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  String  pathIndices[]  =  getPathIndices(i);  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	String  pathIndices[]  =  getPathIndices(i);  break;	      	non-compiled	[CE]  	6	None	replace
22	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i]).append('].');  break;  [CE]  [FE]                            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  result.append('[').append(pathIndices[i]).append('].');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i]).append('].');  break;	      	non-compiled	[CE]  	6	None	replace
23	[BUG]  [BUGGY]  switch(pathNames[i]).toString()  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i]).toString()  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]).toString()  {	  switch(pathNames[i])    {    	non-compiled	[CE]  	2	None	replace
24	[BUG]  [BUGGY]  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:	  switch(pathNames[i])    {    	non-compiled	[CE]  	2	None	replace
25	[BUG]  [BUGGY]  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:	  switch(pathNames[i])    {    	non-compiled	[CE]  	2	None	replace
26	[BUG]  [BUGGY]  switch(newPathIndices[i])  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(newPathIndices[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(newPathIndices[i])  {	  switch(pathIndices[i])    {    	non-compiled	[CE]  	1	None	replace
27	[BUG]  [BUGGY]  switch(pathIndices[i]),  case  JsonScope.EMPTY_ARRAY:  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i]),  case  JsonScope.EMPTY_ARRAY:  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i]),  case  JsonScope.EMPTY_ARRAY:	  switch(pathIndices[i])    {    	non-compiled	[CE]  	1	None	replace
28	[BUG]  [BUGGY]  switch(pathNames[i].getValue())  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i].getValue())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getValue())  {	  switch(pathIndices[i].getValue())    {    	non-compiled	[CE]  	9	None	replace
29	[BUG]  [BUGGY]  switch(pathIndices[i].getKey())  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i].getKey())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getKey())  {	  switch(pathIndices[i].getValue())    {    	non-compiled	[CE]  	9	None	replace
30	[BUG]  [BUGGY]  switch(pathIndices[i].getName())  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i].getName())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getName())  {	  switch(pathIndices[i].getValue())    {    	non-compiled	[CE]  	9	None	replace
31	[BUG]  [BUGGY]  switch(pathIndices[i].getValue()).toString()  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i].getValue()).toString()  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getValue()).toString()  {	  switch(pathIndices[i].getValue())    {    	non-compiled	[CE]  	9	None	replace
32	[BUG]  [BUGGY]  switch(pathIndices[i].getValue().toString())  {  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i].getValue().toString())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getValue().toString())  {	  switch(pathIndices[i].getValue())    {    	non-compiled	[CE]  	9	None	replace
33	[BUG]  [BUGGY]  switch(pathTypes[i]),  case  JsonScope.EMPTY_OBJECT:  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathTypes[i]),  case  JsonScope.EMPTY_OBJECT:  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i]),  case  JsonScope.EMPTY_OBJECT:	  switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
34	[BUG]  [BUGGY]  switch(pathTypes[i]),  case  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathTypes[i]),  case  JsonScope.EMPTY_OBJECT)  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i]),  case  JsonScope.EMPTY_OBJECT)  {	  switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
35	[BUG]  [BUGGY]  switch(pathTypes[i]),  case  JsonScope.EMPTY_ARRAY:  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathTypes[i]),  case  JsonScope.EMPTY_ARRAY:  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i]),  case  JsonScope.EMPTY_ARRAY:	  switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
36	[BUG]  [BUGGY]  switch(pathTypes[i]),  case  JsonScope.EMPTY_ARRAY)  {  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathTypes[i]),  case  JsonScope.EMPTY_ARRAY)  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i]),  case  JsonScope.EMPTY_ARRAY)  {	  switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
37	[BUG]  [BUGGY]  switch(pathIndices[i].getString())  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i].getString())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getString())  {	  switch(pathIndices[i].getValue())    {    	non-compiled	[CE]  	9	None	replace
38	[BUG]  [BUGGY]  switch(pathNames[i].getKey())  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i].getKey())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].getKey())  {	  switch(pathIndices[i].getValue())    {    	non-compiled	[CE]  	9	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathEntries[i])    {    	non-compiled	[CE]  	5	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  }	  switch(pathEntries[i])    {    	non-compiled	[CE]  	5	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathIndices[i]).append(']');	  switch(pathEntries[i])    {    	non-compiled	[CE]  	5	None	replace
42	[BUG]  [BUGGY]  Switch(stack,  pathIndices[i])  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  Switch(stack,  pathIndices[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(stack,  pathIndices[i])  {	  Switch(pathIndices[i])    {    	non-compiled	[CE]  	7	None	replace
43	[BUG]  [BUGGY]  Switch(pathIndices[i],  stack[i])  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  Switch(pathIndices[i],  stack[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices[i],  stack[i])  {	  Switch(pathIndices[i])    {    	non-compiled	[CE]  	7	None	replace
44	[BUG]  [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getPath());  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  Path  pathIndices[i]  =  new  Path(pathNames[i].getPath());  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Path  pathIndices[i]  =  new  Path(pathNames[i].getPath());	  Switch(pathIndices[i])    {    	non-compiled	[CE]  	7	None	replace
45	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i].getLength());  break;  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  result.append('[').append(pathIndices[i].getLength());  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i].getLength());  break;	      	non-compiled	[CE]  	6	None	replace
46	[BUG]  [BUGGY]  result.append('[').append(pathIndices[i]).append(')');  break;  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  result.append('[').append(pathIndices[i]).append(')');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append('[').append(pathIndices[i]).append(')');  break;	      	non-compiled	[CE]  	6	None	replace
47	[BUG]  [BUGGY]  result.append(']');  break;  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  result.append(']');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	result.append(']');  break;	      	non-compiled	[CE]  	6	None	replace
48	[BUG]  [BUGGY]  switch(pathIndices[i]),  case  JsonScope.EMPTY_OBJECT:  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i]),  case  JsonScope.EMPTY_OBJECT:  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i]),  case  JsonScope.EMPTY_OBJECT:	  switch(pathIndices[i])    {    	non-compiled	[CE]  	1	None	replace
49	[BUG]  [BUGGY]  switch(pathIndices[i]),  case  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i]),  case  JsonScope.EMPTY_OBJECT)  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i]),  case  JsonScope.EMPTY_OBJECT)  {	  switch(pathIndices[i])    {    	non-compiled	[CE]  	1	None	replace
50	[BUG]  [BUGGY]  switch(pathIndices[i],  stack[i])  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i],  stack[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i],  stack[i])  {	  switch(pathIndices[i])    {    	non-compiled	[CE]  	1	None	replace
51	[BUG]  [BUGGY]  switch(pathNames[i],  pathIndices[i])  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i],  pathIndices[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i],  pathIndices[i])  {	  switch(pathNames[i])    {    	non-compiled	[CE]  	2	None	replace
52	[BUG]  [BUGGY]  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT)  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT)  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT)  {	  switch(pathNames[i])    {    	non-compiled	[CE]  	2	None	replace
53	[BUG]  [BUGGY]  switch(pathNames[i]).toLowerCase()  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i]).toLowerCase()  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]).toLowerCase()  {	  switch(pathNames[i])    {    	non-compiled	[CE]  	2	None	replace
54	[BUG]  [BUGGY]  switch(pathIndices[i].getLength())  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i].getLength())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getLength())  {	  switch(pathIndices[i].toString())    {    	non-compiled	[CE]  	8	None	replace
55	[BUG]  [BUGGY]  switch(pathNames[i].toPath())  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i].toPath())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i].toPath())  {	  switch(pathIndices[i].toString())    {    	non-compiled	[CE]  	8	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	for(int  i  =  0,  stackSize  =  stackSize;  i  <  stackSize;  i++)  {  result.append('[').append(pathNames[i]).append(']');  break;	  switch(paths[i])    {    	non-compiled	[CE]  	3	None	replace
57	[BUG]  [BUGGY]  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i])    {    	non-compiled	[CE]  	2	None	replace
58	[BUG]  [BUGGY]  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]),  case  JsonScope.EMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');	  switch(pathNames[i])    {    	non-compiled	[CE]  	2	None	replace
59	[BUG]  [BUGGY]  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]),  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i])    {    	non-compiled	[CE]  	2	None	replace
60	[BUG]  [BUGGY]  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]),  case  JsonScope.EMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i])    {    	non-compiled	[CE]  	2	None	replace
61	[BUG]  [BUGGY]  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathNames[i]),  case  JsonScope.NONEMPTY_OBJECT:  result.append('[').append(pathIndices[i]).append(']');  break;	  switch(pathNames[i])    {    	non-compiled	[CE]  	2	None	replace
62	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]);  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]);  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]);	  Switch(pathIndices[i])    {    	non-compiled	[CE]  	7	None	replace
63	[BUG]  [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getPath());  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getPath());  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	PathIndices  pathIndices[i]  =  new  PathIndices(pathNames[i].getPath());	  Switch(pathIndices[i])    {    	non-compiled	[CE]  	7	None	replace
64	[BUG]  [BUGGY]  Switch(pathIndices[i],  newStack[pathNames[i])  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  Switch(pathIndices[i],  newStack[pathNames[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	Switch(pathIndices[i],  newStack[pathNames[i])  {	  Switch(pathIndices[i])    {    	non-compiled	[CE]  	7	None	replace
65	[BUG]  [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]);  break;  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]);  break;  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	CharSequence  pathIndices[i]  =  CharacterSequence.toLowerCase(pathNames[i]);  break;	  Switch(pathIndices[i])    {    	non-compiled	[CE]  	7	None	replace
66	[BUG]  [BUGGY]  switch(pathIndices[i].getLongValue())  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i].getLongValue())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].getLongValue())  {	  switch(pathIndices[i].toString())    {    	non-compiled	[CE]  	8	None	replace
67	[BUG]  [BUGGY]  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  break;  }	      	non-compiled	[CE]  	6	None	replace
68	[BUG]  [BUGGY]  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i]).append(']');  }	      	non-compiled	[CE]  	6	None	replace
69	[BUG]  [BUGGY]  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [CE]  [FE]                      JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathIndices[i]!=  null)  {  result.append('[').append(pathIndices[i].toString());  break;  }	      	non-compiled	[CE]  	6	None	replace
70	[BUG]  [BUGGY]  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [CE]  [FE]                        JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathIndices[i]!=  null)  {  result.append('[').append(pathNames[i]).append(']');  break;  }	      	non-compiled	[CE]  	6	None	replace
71	[BUG]  [BUGGY]  switch(pathIndices[i],  pathEntries[i])  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i],  pathEntries[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i],  pathEntries[i])  {	  switch(pathEntries[i])    {    	non-compiled	[CE]  	5	None	replace
72	[BUG]  [BUGGY]  switch(pathIndices[i],  pathNames[i])  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i],  pathNames[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i],  pathNames[i])  {	  switch(pathIndices[i])    {    	non-compiled	[CE]  	1	None	replace
73	[BUG]  [BUGGY]  switch(pathIndices[i].trim())  {  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathIndices[i].trim())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathIndices[i].trim())  {	  switch(pathIndices[i])    {    	non-compiled	[CE]  	1	None	replace
74	[BUG]  [BUGGY]  if(pathIndices[i]!=  null)  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  if(pathIndices[i]!=  null)  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	if(pathIndices[i]!=  null)  {	  switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
75	[BUG]  [BUGGY]  switch(pathTypes[i].toString())  {  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathTypes[i].toString())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i].toString())  {	  switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
76	[BUG]  [BUGGY]  switch(pathTypes[i]).toString()  {  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(pathTypes[i]).toString()  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(pathTypes[i]).toString()  {	  switch(pathTypes[i])    {    	non-compiled	[CE]  	4	None	replace
77	[BUG]  [BUGGY]  switch(paths[i],  pathIndices[i])  {  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(paths[i],  pathIndices[i])  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i],  pathIndices[i])  {	  switch(paths[i])    {    	non-compiled	[CE]  	3	None	replace
78	[BUG]  [BUGGY]  switch(paths[i].toString())  {  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    public  String  getPath()  {  StringBuilder  result  =  new  StringBuilder().append('$');  for  (int  i  =  0,  size  =  stackSize;  i  <  size;  i++)  {    [BUGGY]  switch(paths[i].toString())  {  [BUGGY]    case  JsonScope.EMPTY_ARRAY:  case  JsonScope.NONEMPTY_ARRAY:  result.append('[').append(pathIndices[i]).append(']');  break;  case  JsonScope.EMPTY_OBJECT:  case  JsonScope.DANGLING_NAME:  case  JsonScope.NONEMPTY_OBJECT:  result.append('.');  if  (pathNames[i]  !=  null)  {  [CLASS]  JsonReader  1  [METHOD]  getPath  [RETURN_TYPE]  String  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  StringBuilder  result  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  toFind  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  size  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson7/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.21650635094610968	1471	1471	3	replace	switch(paths[i].toString())  {	  switch(paths[i])    {    	non-compiled	[CE]  	3	None	replace
